var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AddUserInterViewDto.html",[0,0.249,1,3.029]],["body/classes/AddUserInterViewDto.html",[0,0.433,1,5.273,2,1.113,3,0.132,4,0.118,5,0.118,6,5.551,7,0.353,8,1.516,9,7.136,10,0.37,11,0.009,12,0.808,13,0.977,14,2.133,15,0.422,16,6.3,17,0.132,18,1.295,19,0.132,20,0.008,21,0.008]],["title/classes/AddgroupDto.html",[0,0.249,22,3.029]],["body/classes/AddgroupDto.html",[0,0.431,2,1.105,3,0.132,4,0.117,5,0.117,7,0.35,8,1.509,10,0.367,11,0.009,12,0.805,13,0.971,14,2.126,15,0.419,17,0.132,18,1.286,19,0.132,20,0.008,21,0.008,22,5.251,23,5.512,24,6.482,25,6.257,26,2.378]],["title/classes/AllExceptionsFilter.html",[0,0.249,27,3.486]],["body/classes/AllExceptionsFilter.html",[0,0.218,2,0.672,3,0.08,4,0.071,5,0.071,7,0.213,10,0.371,11,0.01,15,0.363,17,0.168,19,0.08,20,0.006,21,0.006,27,4.356,28,3.353,29,2.968,30,4.165,31,1.326,32,4.11,33,1.533,34,3.806,35,7.577,36,3.806,37,1.294,38,0.82,39,1.294,40,3.574,41,5.135,42,4.54,43,3.806,44,4.165,45,0.908,46,3.574,47,3.785,48,5.534,49,5.572,50,0.575,51,2.507,52,5.572,53,3.055,54,2.832,55,3.806,56,2.832,57,3.806,58,2.832,59,3.806,60,2.832,61,3.806,62,5.572,63,5.572,64,2.507,65,1.137,66,3.353,67,1.166,68,2.152,69,3.806,70,3.806,71,2.507,72,2.507,73,2.507,74,3.055,75,3.806,76,7.577,77,5.426,78,2.062,79,2.507,80,2.507,81,2.507,82,3.438,83,3.806,84,1.957,85,3.806,86,3.806,87,3.806,88,3.806,89,2.476,90,3.806,91,5.426,92,3.055,93,3.353,94,3.353,95,3.055,96,3.055,97,3.353,98,3.353,99,3.353,100,3.353,101,3.353,102,1.261,103,2.832,104,2.507,105,2.507,106,2.507,107,3.806,108,3.806]],["title/controllers/AppController.html",[109,1.264,110,3.486]],["body/controllers/AppController.html",[0,0.382,3,0.14,4,0.125,5,0.125,11,0.009,17,0.14,19,0.14,20,0.008,21,0.008,50,1.008,109,2.278,110,6.28,111,1.943,112,5.881]],["title/modules/AppModule.html",[113,1.202,114,3.232]],["body/modules/AppModule.html",[0,0.212,3,0.078,4,0.069,5,0.069,11,0.01,17,0.183,19,0.078,20,0.006,21,0.006,50,0.561,111,1.081,113,1.726,114,6.687,115,1.495,116,1.495,117,1.589,118,1.589,119,1.495,120,2.281,121,1.589,122,3.27,123,3.27,124,5.24,125,5.24,126,5.24,127,5.24,128,5.24,129,5.24,130,5.24,131,5.24,132,5.24,133,5.24,134,5.24,135,5.24,136,4.948,137,2.281,138,1.589,139,1.589,140,3.712,141,2.432,142,2.321,143,3.712,144,3.712,145,2.589,146,3.712,147,2.589,148,3.712,149,2.321,150,3.712,151,3.712,152,3.712,153,3.712,154,3.712,155,3.712,156,3.712,157,3.712,158,3.712,159,3.712,160,3.712,161,3.712,162,3.712]],["title/injectables/AppService.html",[163,1.088,164,3.486]],["body/injectables/AppService.html",[0,0.381,3,0.14,4,0.125,5,0.125,11,0.009,17,0.14,19,0.14,20,0.008,21,0.008,50,1.004,163,1.956,164,6.266,165,2.76,166,5.859]],["title/controllers/AuthController.html",[109,1.264,167,3.232]],["body/controllers/AuthController.html",[0,0.234,3,0.086,4,0.077,5,0.077,7,0.229,10,0.386,11,0.01,13,1.104,15,0.477,17,0.167,19,0.086,20,0.006,21,0.006,31,1.396,37,1.569,38,0.994,39,1.569,45,1.698,48,3.285,50,0.618,65,1.222,67,1.254,78,2.706,84,2.126,109,1.191,111,1.191,167,4.25,168,3.605,169,1.93,170,4.092,171,5.711,172,6.272,173,5.031,174,1.965,175,5.031,176,4.092,177,4.092,178,4.092,179,4.092,180,3.103,181,6.578,182,4.092,183,4.092,184,4.092,185,4.965,186,4.092,187,4.092,188,5.711,189,4.092,190,5.298,191,4.092,192,4.092,193,5.711,194,1.512,195,4.092,196,1.999,197,1.93,198,1.93,199,5.715,200,3.605,201,4.332,202,3.605,203,2.854,204,3.605,205,4.092,206,3.205,207,1.867,208,1.93,209,3.605,210,4.092,211,6.578,212,3.359,213,4.092,214,4.092,215,4.092,216,4.092,217,4.092,218,4.092,219,4.092,220,4.092,221,4.092,222,4.092,223,4.092,224,4.092,225,4.092,226,4.092]],["title/guards/AuthGuard.html",[203,3.029,227,3.486]],["body/guards/AuthGuard.html",[0,0.222,3,0.081,4,0.072,5,0.072,7,0.217,10,0.43,11,0.01,12,0.587,15,0.428,17,0.16,19,0.081,20,0.006,21,0.006,29,2.117,31,1.343,32,2.308,33,1.559,37,1.522,38,0.964,39,1.522,45,1.31,50,0.585,51,2.55,65,1.156,68,2.057,78,2.978,82,2.591,84,1.812,163,1.376,174,1.906,200,3.411,203,3.831,228,3.108,229,3.108,230,6.121,231,6.121,232,5.493,233,3.411,234,6.713,235,6.904,236,3.871,237,4.839,238,6.121,239,3.871,240,3.411,241,2.683,242,5.493,243,3.871,244,5.124,245,5.124,246,2.881,247,1.559,248,3.108,249,3.871,250,3.108,251,4.088,252,3.108,253,4.839,254,3.871,255,3.411,256,3.411,257,3.871,258,3.871,259,2.28,260,3.411,261,6.121,262,3.871,263,4.088,264,3.411,265,5.624,266,1.96,267,3.871,268,3.108,269,3.871,270,3.871,271,3.108,272,3.411,273,3.871,274,3.871,275,3.871,276,3.871,277,3.871,278,3.871]],["title/modules/AuthModule.html",[113,1.202,124,3.029]],["body/modules/AuthModule.html",[0,0.273,3,0.1,4,0.089,5,0.089,11,0.01,17,0.174,19,0.1,20,0.007,21,0.007,50,0.72,51,3.138,68,1.286,111,1.844,113,1.97,115,1.919,116,1.919,117,2.039,118,2.039,119,1.919,120,3.046,121,3.046,124,5.941,136,5.347,137,2.711,138,2.039,139,2.039,141,2.89,167,5.296,201,5.752,202,4.198,203,4.418,204,4.198,246,3.546,251,3.546,252,3.824,259,1.977,268,3.824,279,4.198,280,4.198,281,4.764,282,4.198,283,3.824,284,5.581,285,4.764,286,4.764,287,4.764,288,4.764,289,3.824,290,4.764,291,4.764,292,4.764,293,4.198,294,4.764,295,4.198,296,4.198]],["title/injectables/AuthService.html",[163,1.088,201,2.86]],["body/injectables/AuthService.html",[0,0.155,3,0.057,4,0.051,5,0.051,7,0.152,10,0.342,11,0.01,12,0.809,15,0.423,17,0.147,19,0.057,20,0.004,21,0.004,31,1.03,32,1.616,33,1.697,37,1.389,38,0.953,39,1.389,45,1.389,50,0.409,67,1.583,68,2.113,73,1.785,82,2.749,84,1.654,102,1.931,163,1.055,165,1.125,172,5.134,173,4.552,174,2.338,175,3.711,185,4.064,201,2.774,209,2.388,231,3.711,233,2.388,234,5.886,241,2.057,245,2.175,246,2.017,259,3.073,261,5.134,263,4.336,264,2.388,265,4.552,266,3.963,293,3.711,297,2.388,298,4.212,299,2.081,300,2.279,301,2.71,302,2.71,303,4.212,304,2.71,305,2.59,306,4.212,307,2.71,308,4.212,309,4.552,310,2.71,311,1.236,312,3.711,313,2.71,314,2.71,315,4.336,316,2.71,317,5.827,318,2.71,319,4.156,320,5.134,321,2.71,322,4.552,323,1.931,324,4.552,325,1.74,326,5.166,327,5.166,328,2.71,329,2.71,330,2.71,331,2.388,332,2.71,333,4.212,334,4.552,335,5.827,336,3.135,337,2.71,338,4.212,339,2.71,340,2.71,341,5.827,342,2.71,343,2.71,344,2.71,345,2.71,346,2.71,347,2.71,348,2.71,349,2.175,350,2.71,351,2.71,352,2.71,353,2.71,354,2.388,355,2.71,356,2.71,357,2.71,358,2.71,359,2.71,360,2.71,361,2.71,362,2.71,363,2.71,364,2.71,365,2.71,366,2.71,367,5.166,368,5.166,369,4.212,370,2.71,371,2.71,372,1.616,373,1.279,374,1.06,375,0.948,376,1.616,377,2.175]],["title/controllers/CallUserHistoryController.html",[109,1.264,378,3.232]],["body/controllers/CallUserHistoryController.html",[0,0.245,3,0.09,4,0.08,5,0.08,7,0.239,10,0.345,11,0.01,12,0.841,13,0.913,15,0.394,17,0.173,19,0.09,20,0.006,21,0.006,31,1.439,37,1.404,38,0.889,39,1.404,45,1.404,50,0.646,65,1.277,67,1.31,84,1.672,89,3.31,109,1.245,111,1.245,169,2.018,174,2.349,194,2.176,196,2.089,197,2.018,198,2.018,206,2.882,207,1.951,208,2.018,212,3.423,241,2.876,323,1.417,378,4.382,379,3.768,380,4.277,381,5.188,382,5.188,383,3.768,384,5.061,385,5.188,386,3.541,387,4.277,388,4.277,389,5.4,390,3.768,391,4.697,392,4.277,393,4.277,394,2.089,395,1.83,396,2.089,397,3.878,398,3.768,399,0.995,400,1.889,401,2.089,402,3.183,403,4.277,404,3.768,405,4.277,406,3.183,407,3.768,408,3.768,409,4.277,410,4.277,411,4.277,412,4.277,413,4.277,414,4.277,415,2.089,416,4.277,417,3.358,418,4.277,419,4.277,420,4.277,421,4.277,422,4.277,423,4.277]],["title/modules/CallUserHistoryModule.html",[113,1.202,125,3.029]],["body/modules/CallUserHistoryModule.html",[0,0.329,3,0.121,4,0.108,5,0.108,11,0.01,17,0.164,19,0.121,20,0.008,21,0.008,50,0.869,111,2.083,113,2.155,115,2.318,116,2.318,117,2.463,118,2.463,119,2.318,120,3.332,121,2.463,125,5.954,137,3.062,138,2.463,139,2.463,141,2.626,378,5.793,397,5.622,398,5.071,424,5.071,425,5.071,426,5.756,427,5.756]],["title/injectables/CallUserHistoryService.html",[163,1.088,397,2.86]],["body/injectables/CallUserHistoryService.html",[0,0.26,3,0.096,4,0.085,5,0.085,7,0.254,10,0.408,11,0.01,12,0.856,15,0.466,17,0.146,19,0.096,20,0.007,21,0.007,31,1.501,33,1.832,37,1.658,38,1.05,39,1.658,45,1.464,50,0.687,65,1.358,67,1.881,68,1.228,84,1.743,89,3.396,102,2.035,163,1.538,165,1.887,174,2.392,259,2.885,299,2.473,300,2.911,311,2.075,319,3.66,373,2.145,381,5.41,382,5.41,383,5.41,384,5.192,389,5.539,390,5.41,397,4.044,404,4.006,428,4.006,429,2.221,430,4.547,431,4.547,432,4.547,433,4.547,434,4.282,435,4.929,436,4.929,437,2.801,438,4.547,439,4.547,440,4.547,441,4.547,442,2.593]],["title/controllers/ContactController.html",[109,1.264,443,3.232]],["body/controllers/ContactController.html",[0,0.19,3,0.07,4,0.062,5,0.062,7,0.186,10,0.379,11,0.01,12,0.916,13,1.003,15,0.433,17,0.168,19,0.07,20,0.005,21,0.005,31,1.201,37,1.542,38,0.977,39,1.542,45,1.542,50,0.502,65,0.992,67,1.506,68,1.579,78,3.032,84,1.835,109,0.967,111,0.967,169,1.567,174,2.446,180,3.904,194,2.99,196,1.622,197,1.567,198,1.567,206,2.954,207,1.515,208,1.567,212,3.622,241,3.158,247,1.338,323,1.1,325,2.158,386,3.076,394,1.622,395,1.421,396,1.622,399,0.773,400,1.467,401,1.622,415,1.622,417,1.894,443,3.657,444,2.926,445,2.926,446,2.242,447,2.488,448,2.688,449,2.688,450,1.894,451,4.51,452,3.2,453,2.471,454,3.321,455,3.503,456,2.316,457,5.697,458,4.51,459,3.321,460,3.321,461,1.816,462,3.321,463,3.321,464,1.894,465,3.321,466,3.321,467,1.681,468,3.853,469,2.926,470,2.471,471,3.321,472,2.926,473,2.926,474,3.321,475,3.321,476,2.316,477,3.321,478,3.2,479,3.321,480,2.471,481,3.2,482,3.321,483,2.316,484,2.471,485,3.321,486,3.321,487,2.926,488,3.321,489,3.321]],["title/modules/ContactModule.html",[113,1.202,126,3.029]],["body/modules/ContactModule.html",[0,0.314,3,0.115,4,0.103,5,0.103,11,0.01,17,0.168,19,0.115,20,0.007,21,0.007,50,0.829,111,2.022,113,2.109,115,2.212,116,2.212,117,2.351,118,2.351,119,2.212,120,3.261,121,2.351,126,6.046,137,2.973,138,2.351,139,2.351,141,3.169,443,5.67,468,5.556,469,4.839,490,4.839,491,4.839,492,4.839,493,4.12,494,5.492,495,3.132,496,5.492]],["title/controllers/ContactPersonController.html",[109,1.264,497,3.232]],["body/controllers/ContactPersonController.html",[0,0.191,3,0.07,4,0.062,5,0.062,7,0.187,10,0.38,11,0.01,12,0.912,13,1.005,15,0.434,17,0.168,19,0.07,20,0.005,21,0.005,31,1.205,37,1.545,38,0.978,39,1.545,45,1.545,50,0.503,65,0.995,67,1.51,68,1.583,78,3.035,84,1.839,109,0.97,111,0.97,169,1.572,174,2.448,180,3.907,194,2.992,196,1.628,197,1.572,198,1.572,206,2.958,207,1.521,208,1.572,212,3.626,241,3.164,247,1.343,323,1.105,325,2.161,386,3.082,394,1.628,395,1.427,396,1.628,399,0.775,400,1.472,401,1.628,415,1.628,417,1.901,446,2.248,447,2.495,448,2.695,449,2.695,450,1.901,452,3.207,453,2.48,455,3.302,461,1.823,464,1.901,467,1.688,476,2.325,478,3.207,480,2.48,481,3.207,483,2.325,484,2.48,497,3.667,498,2.937,499,2.937,500,4.518,501,3.333,502,2.937,503,3.207,504,4.518,505,3.333,506,3.333,507,4.342,508,2.937,509,3.333,510,2.937,511,3.333,512,3.861,513,2.937,514,2.48,515,3.333,516,2.937,517,2.937,518,3.333,519,2.937,520,3.333,521,2.937,522,3.333,523,3.333,524,3.333,525,3.333,526,3.333,527,3.333]],["title/modules/ContactPersonModule.html",[113,1.202,127,3.029]],["body/modules/ContactPersonModule.html",[0,0.313,3,0.115,4,0.103,5,0.103,11,0.01,17,0.168,19,0.115,20,0.007,21,0.007,50,0.827,111,2.019,113,2.106,115,2.205,116,2.205,117,2.343,118,2.343,119,2.205,120,3.256,121,2.343,127,6.042,137,2.967,138,2.343,139,2.343,141,3.163,493,4.117,495,3.122,497,5.662,512,5.552,513,4.824,528,4.824,529,5.475,530,4.824,531,5.475,532,4.824,533,5.475]],["title/injectables/ContactPersonService.html",[163,1.088,512,2.86]],["body/injectables/ContactPersonService.html",[0,0.193,3,0.071,4,0.063,5,0.063,7,0.189,10,0.407,11,0.01,12,0.94,15,0.465,17,0.137,19,0.071,20,0.005,21,0.005,31,1.214,33,1.358,37,1.656,38,1.165,39,1.656,45,1.553,50,0.509,65,1.007,67,1.996,68,0.91,84,1.849,89,2.693,102,2.301,163,1.245,165,1.399,174,2.453,194,2.776,259,3.323,266,1.707,299,2.001,300,2.548,305,1.905,311,1.538,325,2.478,373,2.344,374,2.308,375,2.064,429,1.646,442,1.922,446,2.267,447,2.516,448,2.718,449,2.718,450,2.833,455,3.168,461,2.718,464,2.833,499,2.97,500,4.543,502,4.378,503,3.798,504,4.543,507,4.378,512,3.272,516,2.97,517,2.97,534,2.97,535,3.371,536,3.371,537,3.371,538,3.371,539,3.371,540,4.969,541,2.612,542,3.371,543,3.371,544,3.371,545,2.706,546,2.97,547,2.706,548,2.706,549,3.107,550,2.351,551,2.22,552,2.351,553,3.371]],["title/injectables/ContactService.html",[163,1.088,468,2.86]],["body/injectables/ContactService.html",[0,0.194,3,0.071,4,0.063,5,0.063,7,0.19,10,0.408,11,0.01,12,0.94,15,0.466,17,0.137,19,0.071,20,0.005,21,0.005,31,1.22,33,1.365,37,1.66,38,1.051,39,1.66,45,1.557,50,0.512,65,1.012,67,2.001,68,0.915,84,1.854,89,2.701,102,2.413,163,1.25,165,1.407,174,2.456,194,2.781,259,3.022,266,1.716,299,2.01,300,2.554,311,1.547,325,2.522,373,2.354,429,1.656,437,2.701,442,1.933,445,2.986,446,2.276,447,2.526,448,2.729,449,2.729,450,2.845,451,4.555,455,3.524,456,3.48,457,6.133,458,4.555,461,2.729,464,2.845,468,3.286,472,2.986,473,2.986,503,1.854,541,2.623,549,3.12,550,2.364,551,2.232,552,2.364,554,2.986,555,3.39,556,3.39,557,3.39,558,3.39,559,3.39,560,4.989,561,4.406,562,3.39,563,3.39,564,2.986,565,2.986,566,2.986]],["title/classes/CreateCallUserDto.html",[0,0.249,384,3.029]],["body/classes/CreateCallUserDto.html",[0,0.403,2,0.992,3,0.118,4,0.105,5,0.105,7,0.314,8,1.412,10,0.451,11,0.009,12,0.753,13,1.194,14,1.854,15,0.515,17,0.118,18,1.153,19,0.118,20,0.007,21,0.007,384,4.912,435,6.177,436,6.177,437,3.511,567,4.944,568,4.086,569,4.176,570,5.612,571,4.505,572,5.612,573,5.612,574,5.612,575,3.696,576,4.015,577,5.367,578,2.077,579,5.612]],["title/classes/CreateContactDto.html",[0,0.249,451,3.029]],["body/classes/CreateContactDto.html",[0,0.415,2,1.04,3,0.124,4,0.11,5,0.11,7,0.329,8,1.454,10,0.426,11,0.009,12,0.776,13,1.125,14,1.91,15,0.486,17,0.124,18,1.21,19,0.124,20,0.008,21,0.008,26,2.238,437,3.588,451,5.06,561,5.852,568,3.673,569,4.382,576,4.137,577,5.06,578,1.959,580,5.187,581,3.878,582,5.888,583,5.888]],["title/classes/CreateContactPersontDto.html",[0,0.249,500,3.029]],["body/classes/CreateContactPersontDto.html",[0,0.39,2,0.942,3,0.112,4,0.1,5,0.1,7,0.298,8,1.366,10,0.465,11,0.009,12,0.921,13,1.228,14,1.978,15,0.53,17,0.112,18,1.095,19,0.112,20,0.007,21,0.007,26,2.025,38,1.135,305,2.425,374,2.939,375,2.627,500,4.753,578,2.028,584,4.695,585,3.039,586,5.329,587,3.329,588,4.261,589,5.329,590,2.915,591,5.329,592,5.329,593,2.829,594,2.431,595,3.109,596,3.109,597,2.698]],["title/classes/CreateDirectorDto.html",[0,0.249,598,3.029]],["body/classes/CreateDirectorDto.html",[0,0.39,2,0.942,3,0.112,4,0.1,5,0.1,7,0.298,8,1.366,10,0.465,11,0.009,12,0.921,13,1.228,14,1.978,15,0.53,17,0.112,18,1.095,19,0.112,20,0.007,21,0.007,26,2.025,38,1.135,305,2.425,374,2.939,375,2.627,578,2.028,585,3.039,587,3.329,588,4.261,590,2.915,593,2.829,594,2.431,595,3.109,596,3.109,597,2.698,598,4.753,599,4.695,600,5.329,601,5.329,602,5.329,603,5.329]],["title/classes/CreateFiszkaDto.html",[0,0.249,604,3.029]],["body/classes/CreateFiszkaDto.html",[0,0.359,2,0.831,3,0.099,4,0.088,5,0.088,7,0.263,8,1.259,10,0.484,11,0.01,12,0.865,13,1.281,14,1.987,15,0.553,17,0.099,18,0.966,19,0.099,20,0.007,21,0.007,26,1.787,38,0.948,305,2.027,374,2.456,375,2.196,437,2.865,575,3.097,576,3.581,578,2.122,581,3.097,587,3.453,588,3.926,590,2.572,593,2.606,594,2.145,595,3.226,596,3.226,604,4.38,605,4.143,606,3.743,607,3.743,608,2.218,609,3.774,610,4.702,611,2.803,612,4.702,613,4.702,614,4.702,615,4.702,616,4.702,617,4.702,618,4.702,619,4.215,620,2.572,621,2.381,622,4.702,623,4.702,624,4.702,625,2.572,626,3.097,627,4.702,628,4.702,629,3.774,630,4.702,631,4.143]],["title/classes/CreateGroupDto.html",[0,0.249,632,3.029]],["body/classes/CreateGroupDto.html",[0,0.38,2,0.904,3,0.108,4,0.096,5,0.096,7,0.286,8,1.331,10,0.486,11,0.01,12,0.864,13,1.284,14,2.22,15,0.555,17,0.14,18,1.052,19,0.108,20,0.007,21,0.007,399,1.19,578,2.276,632,4.63,633,4.508,634,5.484,635,4.941,636,4.941,637,4.941,638,4.941,639,4.941,640,5.117,641,4.63,642,5.117,643,5.117,644,5.117,645,5.117,646,2.335,647,5.117,648,4.107,649,4.107,650,4.107,651,4.107,652,4.107]],["title/classes/CreateInterViewDto.html",[0,0.249,653,3.029]],["body/classes/CreateInterViewDto.html",[0,0.379,2,0.899,3,0.107,4,0.095,5,0.095,7,0.285,8,1.326,10,0.473,11,0.01,12,0.707,13,1.251,14,2.124,15,0.54,17,0.139,18,1.046,19,0.107,20,0.007,21,0.007,319,4.381,399,1.184,503,4.02,541,2.675,568,4.084,578,2.178,593,2.112,608,3.671,620,2.783,621,2.576,625,3.618,626,3.351,653,4.613,654,4.483,655,5.899,656,5.899,657,6.475,658,5.088,659,5.088,660,5.088,661,5.088,662,4.483,663,5.088,664,5.088,665,3.786,666,3.351]],["title/classes/CreateRentalCostDto.html",[0,0.249,667,3.029]],["body/classes/CreateRentalCostDto.html",[0,0.414,2,1.037,3,0.123,4,0.11,5,0.11,7,0.328,8,1.451,10,0.425,11,0.01,13,1.123,14,1.545,15,0.485,17,0.152,18,1.206,19,0.123,20,0.008,21,0.008,64,3.865,578,2.12,667,5.05,668,5.17,669,5.388,670,5.388,671,6.303,672,5.812,673,5.868,674,5.868,675,6.303,676,4.711,677,4.711]],["title/classes/CreateSchoolDto.html",[0,0.249,678,3.029]],["body/classes/CreateSchoolDto.html",[0,0.301,2,0.645,3,0.077,4,0.068,5,0.068,7,0.204,8,1.056,10,0.512,11,0.01,12,0.932,13,1.316,14,2.235,15,0.568,17,0.111,18,0.75,19,0.077,20,0.006,21,0.006,26,1.388,38,0.933,305,1.994,325,1.845,375,2.16,399,0.849,437,2.819,575,2.405,576,3.523,578,1.826,585,2.082,587,3.018,588,4.229,593,2.186,594,1.666,595,2.819,596,3.086,597,1.849,608,2.485,619,3.14,620,1.997,621,1.849,625,1.997,646,1.666,665,4.598,678,3.674,679,3.217,680,4.598,681,3.92,682,4.598,683,4.598,684,4.598,685,3.863,686,4.598,687,3.92,688,3.651,689,3.217,690,3.651,691,3.651,692,3.651,693,3.651,694,3.651,695,3.217,696,3.651,697,2.717,698,3.651,699,3.651,700,3.651,701,3.651,702,3.651,703,3.651,704,3.651,705,3.217,706,3.217,707,3.651,708,3.651,709,3.217,710,3.217,711,3.217,712,2.717,713,3.217,714,3.217,715,3.217,716,3.217,717,3.217,718,3.217,719,3.217,720,3.217]],["title/classes/CreateSheduleDaysDto.html",[0,0.249,721,3.029]],["body/classes/CreateSheduleDaysDto.html",[0,0.416,2,1.044,3,0.124,4,0.111,5,0.111,7,0.331,8,1.457,10,0.426,11,0.01,13,1.128,14,2.222,15,0.487,17,0.153,18,1.214,19,0.124,20,0.008,21,0.008,399,1.374,608,3.43,641,5.493,721,5.07,722,5.204,723,6.321,724,6.321,725,5.907,726,5.907]],["title/classes/CreateSheduleDto.html",[0,0.249,727,3.029]],["body/classes/CreateSheduleDto.html",[0,0.389,2,0.936,3,0.111,4,0.099,5,0.099,7,0.296,8,1.361,10,0.464,11,0.01,12,0.726,13,1.226,14,1.395,15,0.529,17,0.143,18,1.089,19,0.111,20,0.007,21,0.007,26,2.58,399,1.232,568,4.136,575,3.489,578,2.294,606,4.466,607,4.466,608,3.203,619,4.047,620,2.898,621,2.682,625,2.898,626,3.489,727,4.735,728,4.668,729,6.342,730,4.668,731,5.298,732,4.668,733,5.298,734,5.298,735,5.298,736,4.668]],["title/classes/CreateUserForMGTMTDto.html",[0,0.249,737,2.86]],["body/classes/CreateUserForMGTMTDto.html",[0,0.373,2,0.712,3,0.085,4,0.075,5,0.075,7,0.225,8,1.132,10,0.474,11,0.01,12,0.936,13,1.255,14,2.315,15,0.542,17,0.119,18,0.828,19,0.119,20,0.006,21,0.006,26,2.479,38,1.068,305,2.282,323,2.68,325,2.111,372,3.367,374,2.765,375,2.472,376,4.822,399,0.937,578,1.909,587,2.759,588,3.531,593,2.707,594,1.838,595,2.577,596,2.577,597,2.86,621,2.039,646,2.976,665,4.203,666,2.653,697,2.997,712,2.997,737,3.72,738,3.233,739,4.421,740,4.028,741,2.997,742,4.028,743,4.028,744,4.028,745,4.028,746,4.028,747,4.028,748,4.028,749,4.028,750,2.653,751,3.549,752,3.939,753,2.809]],["title/classes/CreateUserForRdDto.html",[0,0.249,750,2.86]],["body/classes/CreateUserForRdDto.html",[0,0.374,2,0.715,3,0.085,4,0.076,5,0.076,7,0.226,8,1.136,10,0.475,11,0.01,12,0.937,13,1.256,14,2.307,15,0.542,17,0.119,18,0.832,19,0.119,20,0.006,21,0.006,26,2.485,38,1.07,305,2.286,323,2.683,325,2.116,372,3.377,374,2.771,375,2.477,376,4.827,399,0.941,578,1.912,593,2.714,594,1.846,595,2.585,596,2.585,597,2.869,621,2.049,646,2.983,665,4.866,666,2.664,697,3.011,712,3.011,737,2.664,738,3.248,739,4.429,741,3.011,750,3.731,751,3.565,752,3.952,753,2.822,754,4.046,755,4.046,756,4.046,757,4.046,758,4.046,759,4.046,760,4.046,761,4.046,762,4.046,763,4.046,764,4.046]],["title/classes/DecodeDto.html",[0,0.249,315,3.232]],["body/classes/DecodeDto.html",[0,0.321,2,0.992,3,0.118,4,0.105,5,0.105,7,0.314,8,1.412,10,0.498,11,0.009,12,0.753,15,0.568,17,0.118,19,0.118,20,0.007,21,0.007,102,2.334,305,2.273,315,5.241,323,2.674,325,2.103,399,1.306,608,3.63,631,4.944,765,4.944,766,7.042,767,7.042,768,5.612,769,5.612,770,5.612,771,5.612,772,5.612,773,5.612,774,4.944,775,5.612,776,5.612,777,5.612,778,5.612]],["title/controllers/DirectorController.html",[109,1.264,779,3.232]],["body/controllers/DirectorController.html",[0,0.18,3,0.066,4,0.059,5,0.059,7,0.176,10,0.37,11,0.01,12,0.891,13,0.977,15,0.422,17,0.166,19,0.066,20,0.005,21,0.005,31,1.155,37,1.503,38,0.952,39,1.503,45,1.503,50,0.476,65,0.941,67,1.448,68,1.531,78,2.993,84,1.789,102,1.566,109,0.918,111,0.918,169,1.487,174,2.419,180,3.864,194,2.955,196,1.539,197,1.487,198,1.487,206,2.89,207,1.438,208,1.487,212,3.567,241,3.078,247,1.27,323,1.045,325,2.117,349,3.794,386,2.982,394,1.539,395,1.349,396,1.539,399,0.733,400,1.392,401,1.539,406,3.518,415,1.539,417,1.797,446,2.157,447,2.393,448,2.585,449,2.585,450,1.797,452,3.102,453,2.346,455,3.45,456,2.198,461,1.724,464,1.797,467,1.596,476,2.198,478,3.102,480,2.346,481,3.102,483,2.198,484,2.346,487,2.777,598,4.395,779,3.518,780,2.777,781,2.777,782,3.152,783,4.395,784,3.152,785,3.152,786,3.152,787,3.152,788,3.152,789,3.152,790,3.735,791,2.777,792,2.777,793,2.777,794,2.346,795,3.152,796,3.152,797,3.152,798,3.152,799,3.152,800,3.152,801,3.152,802,3.152,803,3.152,804,4.727,805,6.302,806,6.246,807,4.395,808,3.152,809,4.997,810,5.672,811,5.672,812,2.198,813,2.346,814,2.198]],["title/modules/DirectorModule.html",[113,1.202,128,3.029]],["body/modules/DirectorModule.html",[0,0.314,3,0.115,4,0.103,5,0.103,11,0.01,17,0.168,19,0.115,20,0.007,21,0.007,50,0.829,111,2.022,113,2.109,115,2.212,116,2.212,117,2.351,118,2.351,119,2.212,120,3.261,121,2.351,128,6.046,137,2.973,138,2.351,139,2.351,141,3.169,493,4.12,495,3.132,779,5.67,790,5.556,791,4.839,815,4.839,816,5.492,817,4.839,818,5.492,819,5.492]],["title/injectables/DirectorService.html",[163,1.088,790,2.86]],["body/injectables/DirectorService.html",[0,0.19,3,0.07,4,0.062,5,0.062,7,0.185,10,0.405,11,0.01,12,0.928,15,0.462,17,0.136,19,0.07,20,0.005,21,0.005,31,1.2,33,1.335,37,1.644,38,1.184,39,1.644,45,1.54,50,0.501,65,0.99,67,1.98,68,1.325,84,1.834,89,2.239,102,2.285,163,1.23,165,1.376,174,2.445,194,2.668,259,3.309,299,1.977,300,2.527,305,2.085,311,1.512,325,2.512,373,2.757,374,2.527,375,2.259,429,1.619,442,1.89,446,2.239,447,2.485,448,2.684,449,2.684,450,2.799,455,3.501,456,3.423,461,2.684,464,2.799,503,1.813,541,1.743,545,3.94,546,4.324,547,3.94,548,3.94,549,3.654,550,2.312,551,2.183,552,2.312,598,4.506,781,4.324,783,4.506,790,3.232,792,2.92,793,2.92,820,2.92,821,3.315,822,3.315,823,3.315,824,3.315,825,3.315,826,3.315,827,2.92,828,2.661,829,3.315,830,3.315,831,3.315]],["title/classes/EditContactDto.html",[0,0.249,458,3.029]],["body/classes/EditContactDto.html",[0,0.415,2,1.04,3,0.124,4,0.11,5,0.11,7,0.329,8,1.454,10,0.426,11,0.009,12,0.776,13,1.125,14,1.55,15,0.486,17,0.124,18,1.21,19,0.124,20,0.008,21,0.008,26,2.238,437,3.588,458,5.06,561,5.852,568,3.673,571,4.726,576,4.137,577,5.06,578,2.123,581,3.878,832,5.187,833,5.888,834,5.888]],["title/classes/EditContactPersontDto.html",[0,0.249,504,3.029]],["body/classes/EditContactPersontDto.html",[0,0.391,2,0.944,3,0.112,4,0.1,5,0.1,7,0.299,8,1.369,10,0.465,11,0.01,12,0.922,13,1.23,15,0.531,17,0.112,18,1.099,19,0.112,20,0.007,21,0.007,26,2.031,38,1.136,305,2.428,374,2.943,375,2.631,504,4.762,578,2.211,585,3.048,587,3.335,590,2.923,593,2.834,594,2.439,595,3.115,596,3.115,597,2.706,611,4.07,835,4.709,836,5.345,837,5.345,838,5.345,839,5.345]],["title/classes/EditDirectorDto.html",[0,0.249,783,3.029]],["body/classes/EditDirectorDto.html",[0,0.39,2,0.942,3,0.112,4,0.1,5,0.1,7,0.298,8,1.366,10,0.465,11,0.009,12,0.921,13,1.228,14,1.403,15,0.53,17,0.112,18,1.095,19,0.112,20,0.007,21,0.007,26,2.025,38,1.135,305,2.425,374,2.939,375,2.627,578,2.209,585,3.039,587,3.329,590,2.915,593,2.829,594,2.431,595,3.109,596,3.109,597,2.698,611,4.063,783,4.753,840,4.695,841,5.329,842,5.329,843,5.329,844,5.329]],["title/classes/EditFiszkaDto.html",[0,0.249,845,3.029]],["body/classes/EditFiszkaDto.html",[0,0.348,2,0.793,3,0.094,4,0.084,5,0.084,7,0.251,8,1.22,10,0.487,11,0.01,12,0.925,13,1.288,15,0.556,17,0.094,18,0.923,19,0.094,20,0.006,21,0.006,26,1.707,38,1.043,305,2.229,374,2.702,375,2.415,437,3.151,575,2.957,576,3.471,578,2.297,581,2.957,585,2.561,587,3.373,590,2.456,593,2.527,594,2.049,595,3.151,596,3.151,606,4.117,607,4.117,608,2.872,611,4.117,619,3.629,620,2.456,621,2.274,625,2.456,629,3.605,646,2.778,845,4.246,846,3.956,847,5.544,848,4.49,849,4.49,850,4.49,851,4.49,852,4.49,853,4.49,854,4.49,855,4.49,856,4.49,857,4.49]],["title/classes/EditGroupDto.html",[0,0.249,858,3.029]],["body/classes/EditGroupDto.html",[0,0.38,2,0.904,3,0.108,4,0.096,5,0.096,7,0.286,8,1.331,10,0.486,11,0.01,12,0.864,13,1.284,14,1.347,15,0.555,17,0.14,18,1.052,19,0.108,20,0.007,21,0.007,399,1.19,578,2.395,634,5.484,635,4.941,636,4.941,637,4.941,638,4.941,639,4.941,641,4.63,646,2.335,648,4.107,649,4.107,650,4.107,651,4.107,652,4.107,858,4.63,859,4.508,860,5.117,861,5.117,862,5.117,863,5.117,864,5.117,865,5.117]],["title/classes/EditInterViewDto.html",[0,0.249,866,3.029]],["body/classes/EditInterViewDto.html",[0,0.404,2,0.995,3,0.118,4,0.105,5,0.105,7,0.315,8,1.414,10,0.452,11,0.009,13,1.195,15,0.516,17,0.118,18,1.157,19,0.118,20,0.007,21,0.007,568,4.213,578,2.246,608,3.811,609,4.519,619,4.206,620,3.079,621,2.85,625,3.859,626,3.708,655,6.186,656,6.186,866,4.921,867,4.96,868,5.63,869,5.63,870,5.63,871,5.63]],["title/classes/EditRentalCostDto.html",[0,0.249,872,3.029]],["body/classes/EditRentalCostDto.html",[0,0.414,2,1.037,3,0.123,4,0.11,5,0.11,7,0.328,8,1.451,10,0.425,11,0.01,13,1.123,14,1.545,15,0.485,17,0.152,18,1.206,19,0.123,20,0.008,21,0.008,64,3.865,578,2.12,669,5.388,670,5.388,671,6.303,672,5.812,675,6.303,676,4.711,677,4.711,872,5.05,873,5.17,874,5.868,875,5.868]],["title/classes/EditSchoolDto.html",[0,0.249,876,3.029]],["body/classes/EditSchoolDto.html",[0,0.307,2,0.663,3,0.079,4,0.07,5,0.07,7,0.21,8,1.076,10,0.511,11,0.01,12,0.927,13,1.312,15,0.567,17,0.113,18,0.771,19,0.079,20,0.006,21,0.006,26,1.425,38,0.947,305,2.024,375,2.193,399,0.872,437,2.862,575,2.47,576,3.062,578,2.342,585,2.139,587,3.345,590,2.051,593,2.229,594,1.711,595,3.124,596,3.306,597,1.899,608,2.533,611,4.32,619,3.201,620,2.051,621,1.899,625,2.051,646,1.711,680,4.668,681,3.996,682,4.668,683,4.668,684,4.668,685,3.922,686,4.668,687,3.996,689,3.304,695,3.304,705,3.304,706,3.304,709,3.304,710,3.304,711,3.304,712,2.791,713,3.304,714,3.304,715,3.304,716,3.304,717,3.304,718,3.304,719,3.304,720,3.304,876,3.745,877,3.304,878,3.75,879,3.75,880,3.75,881,3.75,882,3.75,883,3.75,884,3.75,885,3.75,886,3.75,887,3.75,888,3.75,889,3.75,890,3.75,891,3.75]],["title/classes/EditSheduleDaysDto.html",[0,0.249,892,3.029]],["body/classes/EditSheduleDaysDto.html",[0,0.416,2,1.044,3,0.124,4,0.111,5,0.111,7,0.331,8,1.457,10,0.426,11,0.01,13,1.128,14,2.222,15,0.487,17,0.153,18,1.214,19,0.124,20,0.008,21,0.008,399,1.374,608,3.43,641,5.493,723,6.321,724,6.321,892,5.07,893,5.204,894,5.907,895,5.907]],["title/classes/EditSheduleDto.html",[0,0.249,896,3.029]],["body/classes/EditSheduleDto.html",[0,0.403,2,0.992,3,0.118,4,0.105,5,0.105,7,0.314,8,1.412,10,0.451,11,0.009,12,0.753,13,1.194,15,0.515,17,0.118,18,1.153,19,0.118,20,0.007,21,0.007,26,2.676,568,4.209,578,2.244,606,4.587,607,4.587,608,3.322,619,4.198,620,3.069,621,2.842,625,3.069,626,3.696,730,4.944,732,4.944,896,4.912,897,4.944,898,5.612,899,5.612,900,5.612]],["title/classes/EditUser.html",[0,0.249,901,2.86]],["body/classes/EditUser.html",[0,0.407,2,0.721,3,0.086,4,0.076,5,0.076,7,0.228,8,1.143,10,0.484,11,0.009,12,0.956,15,0.552,17,0.12,18,0.839,19,0.138,20,0.006,21,0.006,26,1.552,38,1.13,305,2.415,323,2.768,325,2.124,372,4.46,374,2.927,375,2.616,376,4.978,399,0.95,578,2.377,593,2.727,594,1.863,595,3.245,596,3.245,597,2.887,646,3.245,666,2.689,739,4.678,752,3.977,753,2.847,901,3.755,902,3.038,903,4.082,904,4.082,905,4.082,906,4.082,907,4.082,908,4.082,909,4.082,910,4.082,911,4.082,912,2.553,913,2.689]],["title/classes/EditUserForMGTMTDto.html",[0,0.249,913,2.86]],["body/classes/EditUserForMGTMTDto.html",[0,0.396,2,0.677,3,0.081,4,0.072,5,0.072,7,0.214,8,1.093,10,0.477,11,0.01,12,0.95,13,1.26,15,0.544,17,0.115,18,0.787,19,0.133,20,0.006,21,0.006,26,1.456,38,1.103,305,2.358,323,2.731,325,2.065,372,4.355,374,2.858,375,2.554,376,4.912,399,0.891,578,2.391,587,2.662,590,2.095,593,2.634,594,1.748,595,3.154,596,3.154,597,2.76,611,3.249,646,3.154,666,2.523,739,4.568,752,3.802,753,2.672,901,2.523,902,2.85,912,2.395,913,3.59,914,3.83,915,3.375,916,3.83,917,3.83,918,3.83,919,3.83,920,3.83,921,3.83,922,3.83,923,3.83,924,3.83]],["title/classes/EditUserForRdDto.html",[0,0.249,912,2.715]],["body/classes/EditUserForRdDto.html",[0,0.4,2,0.692,3,0.082,4,0.073,5,0.073,7,0.219,8,1.11,10,0.471,11,0.01,12,0.949,13,1.246,15,0.538,17,0.116,18,0.804,19,0.135,20,0.006,21,0.006,26,1.487,38,1.112,305,2.377,323,2.743,325,1.653,372,4.391,374,2.881,375,2.575,376,4.935,399,0.91,578,2.39,587,2.703,590,2.14,593,2.665,594,1.786,595,3.185,596,3.185,597,2.803,611,3.299,646,3.185,666,2.577,739,4.605,752,3.86,753,2.73,901,2.577,902,2.913,912,3.461,913,2.577,915,3.448,925,3.914,926,3.914,927,3.914,928,3.914,929,3.914,930,3.914,931,3.914,932,3.914,933,3.914]],["title/controllers/FiszkaController.html",[109,1.264,934,3.232]],["body/controllers/FiszkaController.html",[0,0.125,3,0.046,4,0.041,5,0.041,7,0.123,10,0.392,11,0.01,12,0.923,13,1.037,15,0.448,17,0.153,19,0.046,20,0.004,21,0.004,22,3.605,31,0.87,37,1.593,38,1.009,39,1.593,45,1.593,50,0.331,65,0.654,67,1.584,68,1.534,78,2.975,84,1.897,102,2.215,109,0.638,111,0.638,169,1.034,174,2.48,180,3.851,194,3.016,196,1.07,197,1.034,198,1.034,206,2.956,207,1,208,1.034,212,3.693,241,3.264,247,0.883,323,0.726,385,3.957,386,3.513,389,3.847,391,4.474,394,1.07,395,0.938,396,1.07,399,0.51,400,0.968,401,1.07,406,3.847,407,3.957,415,1.07,417,2.561,434,1.528,452,1.199,467,1.11,478,1.199,604,3.605,813,1.631,814,1.528,845,4.474,934,2.648,935,1.931,936,3.134,937,3.134,938,3.134,939,3.134,940,3.134,941,3.134,942,2.648,943,3.134,944,1.931,945,1.931,946,3.134,947,2.191,948,2.191,949,5.511,950,1.931,951,2.191,952,2.191,953,2.191,954,2.648,955,1.931,956,2.191,957,2.191,958,1.931,959,2.191,960,2.191,961,1.931,962,5.46,963,2.191,964,2.191,965,1.931,966,2.191,967,2.191,968,1.931,969,2.191,970,2.191,971,2.191,972,2.191,973,2.191,974,2.958,975,1.931,976,1.631,977,2.191,978,1.931,979,1.931,980,1.931,981,2.191,982,2.191,983,2.191,984,2.191,985,2.191,986,1.931,987,2.191,988,2.191,989,4.563,990,2.191,991,2.191,992,2.191,993,2.191,994,3.957,995,2.191,996,2.191,997,2.191,998,2.191,999,2.191,1000,2.191,1001,2.191,1002,2.191,1003,2.191,1004,2.191,1005,2.191,1006,2.191,1007,2.191,1008,2.191,1009,1.759,1010,2.191,1011,2.191,1012,2.191,1013,2.343,1014,3.605,1015,1.931,1016,5.364,1017,1.931,1018,5.684,1019,5.169,1020,6.414,1021,5.169,1022,4.149,1023,2.856,1024,2.191,1025,2.191,1026,2.191,1027,1.759,1028,2.191]],["title/modules/FiszkaModule.html",[113,1.202,129,3.029]],["body/modules/FiszkaModule.html",[0,0.327,3,0.12,4,0.107,5,0.107,11,0.01,17,0.163,19,0.12,20,0.008,21,0.008,50,0.864,111,2.075,113,2.149,115,2.304,116,2.304,117,2.448,118,2.448,119,2.304,120,3.322,121,2.448,129,5.944,137,3.05,138,2.448,139,2.448,141,2.609,934,5.776,974,5.613,975,5.039,1029,5.039,1030,5.039,1031,5.719,1032,5.719]],["title/injectables/FiszkaService.html",[163,1.088,974,2.86]],["body/injectables/FiszkaService.html",[0,0.12,3,0.044,4,0.039,5,0.039,7,0.117,10,0.399,11,0.01,12,0.937,15,0.455,17,0.117,19,0.044,20,0.004,21,0.004,22,3.507,31,0.837,33,0.843,37,1.62,38,1.141,39,1.62,45,1.565,50,0.316,65,0.625,67,2.011,68,1.608,82,1.616,84,1.984,89,2.718,102,2.537,163,0.858,165,0.868,174,2.461,194,2.79,259,3.619,266,2.546,299,1.38,300,1.967,305,1.79,311,0.954,319,3.307,373,2.372,374,2.17,375,1.94,389,4.433,429,1.022,434,4.578,437,2.531,442,2.48,604,3.507,606,3.307,607,3.307,845,4.387,847,4.036,936,3.018,937,3.018,938,3.018,939,3.018,940,3.018,941,3.018,942,2.549,943,3.018,944,3.018,949,5.535,950,3.018,954,2.549,955,3.018,958,3.018,961,3.018,962,5.855,965,3.018,968,3.018,974,2.256,978,1.843,979,1.843,980,1.843,1013,2.256,1033,1.843,1034,2.092,1035,2.092,1036,2.092,1037,2.092,1038,2.092,1039,2.092,1040,2.092,1041,2.092,1042,3.425,1043,2.092,1044,3.425,1045,1.679,1046,4.43,1047,3.742,1048,4.43,1049,3.742,1050,3.425,1051,3.425,1052,3.425,1053,3.425,1054,3.425,1055,3.018,1056,2.092,1057,2.092,1058,2.092,1059,2.092,1060,2.092,1061,2.092,1062,2.092,1063,2.092,1064,3.425,1065,2.092,1066,2.092,1067,3.425,1068,2.092,1069,2.092,1070,1.679]],["title/classes/GetCallUserHistoryDto.html",[0,0.249,402,3.232]],["body/classes/GetCallUserHistoryDto.html",[0,0.405,2,0.998,3,0.119,4,0.106,5,0.106,7,0.316,8,1.417,10,0.453,11,0.009,12,0.756,13,1.197,14,1.861,15,0.517,17,0.119,18,1.161,19,0.119,20,0.007,21,0.007,402,5.261,435,6.195,436,6.195,437,3.521,568,4.095,569,4.203,571,4.533,576,4.031,577,5.383,578,2.083,581,3.719,1071,4.976,1072,5.647,1073,5.647,1074,5.647]],["title/classes/GetContactDto.html",[0,0.249,470,3.232]],["body/classes/GetContactDto.html",[0,0.415,2,1.04,3,0.124,4,0.11,5,0.11,7,0.329,8,1.454,10,0.426,11,0.009,12,0.776,13,1.125,14,1.91,15,0.486,17,0.124,18,1.21,19,0.124,20,0.008,21,0.008,26,2.238,437,3.588,470,5.399,561,5.852,568,3.673,569,4.382,576,4.137,577,5.06,578,1.959,581,3.878,1075,5.187,1076,5.888,1077,5.888]],["title/classes/GetContactPersontDto.html",[0,0.249,514,3.232]],["body/classes/GetContactPersontDto.html",[0,0.389,2,0.939,3,0.112,4,0.099,5,0.099,7,0.297,8,1.364,10,0.48,11,0.01,12,0.93,13,1.268,14,2.239,15,0.548,17,0.112,18,1.092,19,0.112,20,0.007,21,0.007,38,1.133,102,2.254,305,2.422,374,2.935,375,2.623,514,5.062,578,2.207,1078,4.681,1079,5.313,1080,5.313,1081,5.313,1082,5.313,1083,5.313,1084,4.681]],["title/classes/GetDirectorDto.html",[0,0.249,794,3.232]],["body/classes/GetDirectorDto.html",[0,0.389,2,0.939,3,0.112,4,0.099,5,0.099,7,0.297,8,1.364,10,0.48,11,0.01,12,0.93,13,1.268,14,2.239,15,0.548,17,0.112,18,1.092,19,0.112,20,0.007,21,0.007,38,1.133,102,2.254,305,2.422,374,2.935,375,2.623,578,2.207,794,5.062,1084,4.681,1085,4.681,1086,5.313,1087,5.313,1088,5.313,1089,5.313,1090,5.313]],["title/classes/GetFiszkaDto.html",[0,0.249,976,3.232]],["body/classes/GetFiszkaDto.html",[0,0.332,2,0.74,3,0.088,4,0.078,5,0.078,7,0.234,8,1.163,10,0.492,11,0.01,12,0.914,13,1.302,14,2.057,15,0.562,17,0.122,18,0.861,19,0.088,20,0.006,21,0.006,26,1.591,38,1.006,305,2.149,374,2.605,375,2.329,399,0.974,437,3.038,578,2.266,585,2.388,587,3.253,588,3.628,593,2.409,594,1.91,595,3.038,596,3.038,606,3.97,607,3.97,608,2.738,609,3.361,611,2.496,619,3.459,620,2.29,621,2.12,625,2.29,626,2.758,629,3.361,646,2.648,697,3.116,847,5.346,976,4.319,1048,6.883,1049,5.351,1091,3.689,1092,4.187,1093,4.187,1094,4.187,1095,4.187,1096,4.187,1097,4.187,1098,4.187,1099,4.187,1100,4.187,1101,4.187,1102,4.187]],["title/classes/GetGroupDto.html",[0,0.249,1103,3.232]],["body/classes/GetGroupDto.html",[0,0.371,2,0.872,3,0.104,4,0.092,5,0.092,7,0.276,8,1.3,10,0.49,11,0.01,12,0.854,13,1.296,14,2.258,15,0.56,17,0.136,18,1.014,19,0.104,20,0.007,21,0.007,399,1.148,434,4.522,578,2.256,634,5.389,635,4.825,636,4.825,637,4.825,638,4.825,639,4.825,641,4.522,646,2.251,648,3.961,649,3.961,650,3.961,651,3.961,652,3.961,1013,4.27,1103,4.825,1104,4.347,1105,4.934,1106,4.934,1107,4.934,1108,4.934,1109,4.934,1110,4.934,1111,4.934,1112,4.934]],["title/classes/GetRentalCostDto.html",[0,0.249,1113,3.232]],["body/classes/GetRentalCostDto.html",[0,0.414,2,1.037,3,0.123,4,0.11,5,0.11,7,0.328,8,1.451,10,0.425,11,0.01,13,1.123,14,1.545,15,0.485,17,0.152,18,1.206,19,0.123,20,0.008,21,0.008,64,3.865,578,2.12,669,5.388,670,5.388,671,6.303,672,5.812,675,6.303,676,4.711,677,4.711,1113,5.388,1114,5.17,1115,5.868,1116,5.868]],["title/classes/GetSchoolDto.html",[0,0.249,1117,3.029]],["body/classes/GetSchoolDto.html",[0,0.309,2,0.668,3,0.08,4,0.071,5,0.071,7,0.212,8,1.083,10,0.517,11,0.01,12,0.946,13,1.333,14,2.347,15,0.575,17,0.114,18,0.777,19,0.08,20,0.006,21,0.006,38,0.952,102,2.088,305,2.034,325,1.882,375,2.203,399,0.88,437,2.875,578,2.101,608,2.548,646,2.465,680,4.69,681,4.69,682,4.69,683,4.69,684,4.69,685,4.728,686,4.69,687,4.69,1117,3.768,1118,3.332,1119,3.782,1120,3.782,1121,3.782,1122,3.782,1123,3.782,1124,3.782,1125,3.782,1126,3.782,1127,3.782,1128,3.782,1129,3.782,1130,3.782,1131,3.782,1132,3.782,1133,3.782]],["title/classes/GetSheduleDto.html",[0,0.249,1134,3.486]],["body/classes/GetSheduleDto.html",[0,0.395,2,0.962,3,0.114,4,0.102,5,0.102,7,0.305,8,1.385,10,0.468,11,0.01,12,0.853,13,1.238,14,1.998,15,0.535,17,0.145,18,1.119,19,0.114,20,0.007,21,0.007,399,1.266,568,4.17,578,2.308,606,4.523,607,4.523,729,6.406,736,4.795,1134,5.544,1135,4.795,1136,5.442,1137,5.442,1138,5.442,1139,5.442]],["title/classes/GetUserDto.html",[0,0.249,1140,3.232]],["body/classes/GetUserDto.html",[0,0.352,2,0.805,3,0.096,4,0.085,5,0.085,7,0.255,8,1.233,10,0.489,11,0.01,12,0.891,13,1.292,14,2.298,15,0.558,17,0.129,18,0.937,19,0.096,20,0.007,21,0.007,26,1.733,38,1.051,305,2.247,323,2.656,325,2.079,374,2.723,376,4.779,377,5.587,399,1.061,587,3.004,588,3.846,593,2.553,595,2.806,596,2.806,608,2.902,621,2.308,625,2.493,646,2.806,662,4.017,739,4.352,741,3.393,1140,4.577,1141,4.017,1142,4.559,1143,4.559,1144,4.559,1145,4.559,1146,4.559,1147,4.559,1148,4.559,1149,4.559]],["title/controllers/GroupController.html",[109,1.264,1150,3.232]],["body/controllers/GroupController.html",[0,0.182,3,0.067,4,0.06,5,0.06,7,0.178,10,0.372,11,0.01,12,0.911,13,0.983,15,0.424,17,0.166,19,0.067,20,0.005,21,0.005,31,1.165,37,1.511,38,0.957,39,1.511,45,1.511,50,0.481,65,0.951,67,1.46,68,1.541,78,3.001,84,1.798,109,0.927,111,0.927,169,1.503,174,2.425,180,3.48,194,2.802,196,1.556,197,1.503,198,1.503,206,2.903,207,1.453,208,1.503,212,2.989,241,3.094,247,1.283,323,1.056,325,2.203,391,3.981,394,1.556,395,1.363,396,1.556,399,0.741,400,1.407,401,1.556,415,1.556,417,1.816,446,2.174,447,2.413,448,2.606,449,2.606,455,3.657,461,1.742,467,1.613,476,2.222,481,3.122,483,2.222,632,4.419,807,4.419,812,3.981,813,2.371,814,2.222,858,4.419,954,4.714,1009,5.713,1014,2.557,1015,4.198,1049,2.371,1103,2.371,1150,3.546,1151,2.807,1152,2.807,1153,5.029,1154,3.185,1155,3.185,1156,2.807,1157,3.185,1158,3.185,1159,3.185,1160,3.185,1161,3.185,1162,3.185,1163,3.185,1164,3.185,1165,3.759,1166,2.807,1167,3.185,1168,2.807,1169,2.807,1170,3.185,1171,3.185,1172,3.185,1173,4.582,1174,3.185,1175,3.185,1176,3.185,1177,2.807,1178,3.185,1179,3.185,1180,2.807,1181,3.185,1182,3.185,1183,3.185,1184,5.029,1185,5.085,1186,4.198,1187,3.825,1188,3.185]],["title/modules/GroupModule.html",[113,1.202,130,3.029]],["body/modules/GroupModule.html",[0,0.321,3,0.118,4,0.105,5,0.105,11,0.01,17,0.162,19,0.118,20,0.007,21,0.007,50,0.848,111,2.05,113,2.13,115,2.261,116,2.261,117,2.402,118,2.402,119,2.261,120,3.294,121,2.402,130,6.205,137,3.014,138,2.402,139,2.402,141,3.213,1150,5.727,1165,5.586,1166,4.944,1189,4.944,1190,4.944,1191,5.612,1192,5.612,1193,5.612]],["title/injectables/GroupService.html",[163,1.088,1165,2.86]],["body/injectables/GroupService.html",[0,0.183,3,0.067,4,0.06,5,0.06,7,0.179,10,0.399,11,0.01,12,0.934,15,0.455,17,0.134,19,0.067,20,0.005,21,0.005,31,1.169,33,1.29,37,1.621,38,1.027,39,1.621,45,1.515,50,0.484,65,0.956,67,1.946,68,0.865,84,1.803,89,2.613,102,2.449,163,1.199,165,1.329,174,2.427,194,2.73,259,3.496,266,1.622,299,1.927,300,2.485,311,1.461,325,2.497,373,2.257,429,1.564,442,1.826,446,2.183,447,2.422,448,2.616,449,2.616,450,2.728,455,3.466,456,3.337,461,2.616,464,2.728,541,3.01,549,2.991,550,2.234,551,2.109,552,2.234,565,2.822,566,2.822,632,4.43,634,4.261,635,4.261,636,4.261,637,4.261,638,4.261,639,4.261,858,4.43,954,5.059,1013,3.15,1049,2.383,1165,3.15,1168,2.822,1169,2.822,1194,2.822,1195,3.202,1196,3.202,1197,3.202,1198,3.202,1199,3.202,1200,4.784,1201,3.202,1202,3.202,1203,3.202,1204,3.202,1205,3.202,1206,3.202,1207,3.202]],["title/classes/HttpExceptionFilter.html",[0,0.249,206,1.859]],["body/classes/HttpExceptionFilter.html",[0,0.35,2,0.799,3,0.095,4,0.085,5,0.085,7,0.253,10,0.265,11,0.01,12,0.484,15,0.303,17,0.156,18,0.93,19,0.095,20,0.006,21,0.006,29,3.347,30,4.566,31,1.496,32,4.133,37,1.079,38,0.683,39,1.079,40,4.03,41,4.566,42,4.892,44,4.03,45,1.079,46,2.98,47,5.181,50,0.683,68,2.159,71,2.98,72,2.98,73,2.98,74,3.632,78,2.326,79,2.98,80,4.892,81,2.98,82,2.135,92,4.912,95,3.632,96,3.632,103,4.554,104,4.03,105,2.98,106,4.03,206,2.619,207,2.792,247,1.822,271,5.566,299,1.822,336,5.952,399,1.053,685,4.335,1208,3.986,1209,4.524,1210,4.524,1211,3.632,1212,3.632,1213,3.632,1214,4.524,1215,4.524,1216,5.391,1217,4.268,1218,4.524,1219,4.554,1220,4.524,1221,4.524,1222,4.524,1223,4.268,1224,4.524]],["title/controllers/InterviewsController.html",[109,1.264,1225,3.232]],["body/controllers/InterviewsController.html",[0,0.153,1,5.008,3,0.056,4,0.05,5,0.05,7,0.15,10,0.421,11,0.01,12,0.897,13,1.114,15,0.481,17,0.162,19,0.056,20,0.004,21,0.004,24,3.35,31,1.02,37,1.712,38,1.084,39,1.712,45,1.712,50,0.404,65,0.8,67,2.2,68,1.127,78,2.638,84,2.038,109,0.78,111,0.78,169,1.263,174,2.553,180,3.275,194,2.139,196,1.308,197,1.263,198,1.263,206,3.157,207,1.222,208,1.263,212,3.387,247,1.079,323,0.887,391,4.842,394,1.308,395,1.146,396,1.308,399,0.623,400,1.183,401,1.308,415,1.308,455,2.641,467,1.356,653,4.636,866,5.008,942,3.105,949,4.947,962,3.576,986,4.517,989,3.35,1009,6.55,1047,1.993,1153,6.116,1225,3.105,1226,2.359,1227,3.677,1228,3.677,1229,3.677,1230,3.677,1231,3.677,1232,3.677,1233,4.173,1234,2.678,1235,2.678,1236,2.678,1237,2.678,1238,2.678,1239,2.678,1240,2.359,1241,2.678,1242,2.678,1243,2.359,1244,2.678,1245,2.678,1246,2.678,1247,2.678,1248,2.678,1249,2.359,1250,2.678,1251,2.678,1252,2.359,1253,2.678,1254,2.678,1255,2.678,1256,2.678,1257,5.008,1258,2.678,1259,2.678,1260,3.377,1261,2.359,1262,2.359,1263,2.359,1264,2.359,1265,2.359,1266,2.678,1267,2.678,1268,2.678,1269,2.678,1270,2.678,1271,2.678,1272,2.678,1273,2.678,1274,2.678,1275,2.678,1276,2.678,1277,2.678,1278,2.678,1279,2.678,1280,2.678,1281,2.678,1282,2.678,1283,2.678,1284,2.678,1285,2.678,1286,2.678,1287,2.678,1288,2.359,1289,2.678,1290,2.678]],["title/modules/InterviewsModule.html",[113,1.202,131,3.029]],["body/modules/InterviewsModule.html",[0,0.302,3,0.111,4,0.099,5,0.099,11,0.01,17,0.172,19,0.111,20,0.007,21,0.007,50,0.798,111,1.973,113,2.071,115,2.128,116,2.128,117,2.261,118,2.261,119,2.128,120,3.202,121,2.261,131,6.109,137,2.9,138,2.261,139,2.261,141,3.092,493,4.079,495,3.012,1225,5.568,1260,5.375,1261,4.654,1291,4.654,1292,5.282,1293,4.654,1294,5.103,1295,5.282,1296,5.282,1297,5.282,1298,5.282]],["title/injectables/InterviewsService.html",[163,1.088,1260,2.86]],["body/injectables/InterviewsService.html",[0,0.124,1,3.582,3,0.046,4,0.041,5,0.041,7,0.197,10,0.404,11,0.01,12,0.876,15,0.461,17,0.127,19,0.046,20,0.004,21,0.004,24,5.125,31,0.862,33,0.873,37,1.641,38,1.039,39,1.641,45,1.587,50,0.327,65,0.647,67,2.039,68,2.084,82,2.666,84,2.096,89,3.522,102,2.525,163,0.883,165,0.9,174,2.476,259,3.358,266,1.785,299,1.42,300,2.009,311,0.989,373,2.423,429,1.059,442,1.236,446,0.989,455,2.343,503,1.185,541,2.344,568,3.37,653,3.582,655,5.125,656,4.537,657,1.91,866,3.582,942,2.624,949,2.624,962,3.582,1013,2.322,1045,1.74,1047,2.624,1070,2.831,1227,3.107,1228,3.107,1229,3.107,1230,3.107,1231,3.107,1232,3.107,1240,3.107,1243,3.107,1249,1.91,1252,3.107,1257,3.582,1260,2.322,1262,1.91,1263,1.91,1264,1.91,1265,1.91,1299,1.91,1300,3.526,1301,2.168,1302,3.526,1303,2.168,1304,5.652,1305,3.526,1306,2.168,1307,2.168,1308,2.168,1309,3.526,1310,2.168,1311,2.168,1312,2.168,1313,3.526,1314,2.168,1315,5.136,1316,2.168,1317,3.526,1318,2.168,1319,6.057,1320,6.057,1321,2.168,1322,2.168,1323,3.526,1324,3.526,1325,3.526,1326,4.123,1327,3.526,1328,4.458,1329,3.526,1330,2.168,1331,2.168,1332,4.458,1333,2.168,1334,2.168,1335,2.168,1336,3.107,1337,3.107,1338,2.831,1339,2.168,1340,2.168,1341,2.168,1342,2.168,1343,2.168,1344,2.168,1345,2.168,1346,3.526,1347,2.168,1348,2.168,1349,2.168,1350,2.168,1351,2.168,1352,4.458,1353,2.168,1354,2.168,1355,2.168,1356,1.91,1357,2.168,1358,1.74,1359,2.168,1360,2.168]],["title/classes/LoginUserDto.html",[0,0.249,190,3.232]],["body/classes/LoginUserDto.html",[0,0.419,2,1.054,3,0.125,4,0.112,5,0.112,7,0.334,8,1.466,10,0.429,11,0.009,12,0.881,13,1.135,14,2.171,15,0.49,17,0.125,18,1.226,19,0.125,20,0.008,21,0.008,190,5.443,305,2.553,372,4.715,593,3.036,741,4.44,1361,5.256,1362,5.966,1363,5.966]],["title/classes/NotFoundErrorFilter.html",[0,0.249,54,3.232]],["body/classes/NotFoundErrorFilter.html",[0,0.3,2,0.925,3,0.11,4,0.098,5,0.098,7,0.293,10,0.307,11,0.01,15,0.351,17,0.157,19,0.11,20,0.007,21,0.007,29,3.685,30,4.907,31,1.647,32,4.442,37,1.249,38,0.791,39,1.249,40,4.438,41,4.907,42,5.181,44,3.448,45,1.249,46,3.448,50,0.791,52,6.931,53,4.203,54,5.015,68,2.124,71,3.448,72,3.448,78,2.561,79,3.448,80,4.907,81,3.448,82,2.47,103,3.897,104,3.448,105,3.448,106,3.448,247,2.109,685,4.213,1217,3.652,1219,3.897,1223,3.652,1364,4.613,1365,5.236,1366,5.236,1367,5.236,1368,5.236]],["title/classes/NotFoundExceptionFilter.html",[0,0.249,56,3.232]],["body/classes/NotFoundExceptionFilter.html",[0,0.291,2,0.899,3,0.107,4,0.095,5,0.095,7,0.285,10,0.298,11,0.01,15,0.341,17,0.139,19,0.107,20,0.007,21,0.007,29,3.618,30,4.84,31,1.617,32,4.381,37,1.213,38,0.768,39,1.213,40,4.356,41,4.84,42,5.125,44,3.351,45,1.213,46,3.351,49,6.856,50,0.768,56,4.922,68,2.101,71,3.351,72,3.351,74,4.084,78,2.793,79,3.351,80,4.84,81,3.351,82,2.4,92,4.084,93,4.483,94,4.483,95,4.084,96,4.084,97,4.483,98,4.483,99,4.483,100,4.483,101,4.483,102,1.686,103,3.786,104,3.351,105,3.351,106,3.351,247,2.049,685,4.136,1216,4.483,1217,3.549,1219,3.786,1223,3.549,1369,4.483,1370,5.088,1371,5.088,1372,5.088,1373,5.088]],["title/controllers/PredicteController.html",[109,1.264,1374,3.232]],["body/controllers/PredicteController.html",[0,0.216,3,0.079,4,0.071,5,0.071,7,0.211,10,0.221,11,0.01,12,0.734,13,0.585,15,0.253,17,0.164,19,0.079,20,0.006,21,0.006,31,1.318,37,0.9,38,0.57,39,0.9,45,0.9,50,0.57,65,1.127,67,1.156,68,1.019,78,2.392,84,1.071,102,1.251,109,1.099,111,1.099,169,1.78,174,1.88,180,2.969,194,2.792,197,1.78,198,1.78,206,2.308,207,1.722,208,1.78,212,2.545,323,1.251,325,1.127,386,1.984,394,1.843,395,1.615,396,1.843,399,0.878,400,1.667,401,1.843,408,3.325,415,1.843,452,2.064,455,2.872,478,2.064,481,2.064,620,2.064,809,5.545,1022,3.029,1173,3.029,1184,3.325,1185,3.029,1358,5.831,1374,4.014,1375,3.325,1376,5.545,1377,3.774,1378,4.79,1379,3.774,1380,3.774,1381,4.145,1382,3.325,1383,3.325,1384,3.774,1385,3.774,1386,8.313,1387,3.774,1388,3.774,1389,5.394,1390,3.325,1391,3.325,1392,3.774,1393,3.774,1394,3.774,1395,3.774,1396,3.774,1397,5.394,1398,3.774,1399,3.774,1400,3.774,1401,3.774,1402,3.774,1403,3.774,1404,3.774,1405,3.774,1406,5.394,1407,5.394,1408,3.774,1409,3.774,1410,3.774,1411,3.774,1412,3.774,1413,6.294,1414,3.774,1415,3.774,1416,3.774,1417,3.774,1418,3.774,1419,3.774,1420,5.394,1421,5.394,1422,3.774,1423,3.774,1424,3.774,1425,3.774,1426,3.774,1427,5.394,1428,3.774,1429,3.029,1430,3.774,1431,3.774,1432,3.774,1433,3.774,1434,3.774,1435,3.774,1436,3.774,1437,3.774,1438,3.774,1439,3.774,1440,3.774,1441,3.774,1442,3.774,1443,3.774]],["title/modules/PredicteModule.html",[113,1.202,1444,3.232]],["body/modules/PredicteModule.html",[0,0.311,3,0.114,4,0.102,5,0.102,11,0.01,17,0.168,19,0.114,20,0.007,21,0.007,50,0.822,111,2.011,113,2.1,115,2.192,116,2.192,117,2.329,118,2.329,119,2.192,120,3.247,121,2.329,137,2.956,138,2.329,139,2.329,141,3.151,493,4.111,495,3.103,532,4.795,1374,5.646,1381,5.543,1382,4.795,1444,6.439,1445,4.795,1446,4.795,1447,5.442,1448,5.442,1449,5.442]],["title/injectables/PredicteService.html",[163,1.088,1381,2.86]],["body/injectables/PredicteService.html",[0,0.192,3,0.071,4,0.063,5,0.063,7,0.188,10,0.291,11,0.01,12,0.741,15,0.332,17,0.124,19,0.071,20,0.005,21,0.005,31,1.211,33,1.353,37,1.182,38,0.748,39,1.182,45,0.801,50,0.507,65,1.003,67,1.029,68,1.755,84,0.953,102,1.642,163,1.242,165,1.394,174,1.759,259,2.057,266,1.7,299,1.996,300,2.543,311,1.532,325,1.942,373,2.338,429,1.64,503,1.837,541,1.765,1013,3.878,1046,2.959,1047,3.688,1358,2.696,1376,4.366,1378,4.534,1381,3.263,1383,2.959,1390,6.109,1391,6.109,1429,7.072,1450,2.959,1451,3.358,1452,4.955,1453,3.358,1454,3.358,1455,2.959,1456,3.358,1457,3.358,1458,3.358,1459,8.292,1460,7.166,1461,7.717,1462,6.612,1463,6.934,1464,6.934,1465,6.934,1466,6.934,1467,3.358,1468,3.358,1469,3.358,1470,3.358,1471,4.955,1472,3.358,1473,4.955,1474,3.358,1475,4.955,1476,3.358,1477,3.358]],["title/modules/PrismaModule.html",[113,1.202,493,2.121]],["body/modules/PrismaModule.html",[0,0.332,3,0.122,4,0.108,5,0.108,11,0.009,17,0.151,19,0.122,20,0.008,21,0.008,50,0.875,113,2.161,115,2.333,116,2.333,117,2.479,118,2.479,119,2.333,120,3.074,121,3.074,137,3.074,138,2.479,139,2.479,289,5.765,300,3.477,493,4.233,1478,5.104,1479,5.104,1480,5.104,1481,5.793,1482,5.793,1483,5.793,1484,5.793]],["title/classes/PrismaOtherFilter.html",[0,0.249,60,3.232]],["body/classes/PrismaOtherFilter.html",[0,0.29,2,0.896,3,0.107,4,0.095,5,0.095,7,0.284,10,0.387,11,0.01,15,0.34,17,0.163,19,0.107,20,0.007,21,0.007,29,3.611,30,4.834,31,1.614,32,4.375,37,1.21,38,0.766,39,1.21,40,4.348,41,4.834,42,5.119,44,4.348,45,1.21,46,3.341,47,3.539,50,0.766,60,4.913,63,6.849,64,3.341,68,1.981,71,3.341,72,3.341,73,3.341,78,2.509,79,3.341,80,4.834,81,3.341,82,2.394,104,3.341,105,3.341,106,3.341,247,2.044,299,2.044,336,3.776,399,1.18,1211,4.073,1212,4.073,1213,4.073,1217,3.539,1219,3.776,1223,3.539,1485,4.47,1486,5.073,1487,4.47,1488,4.47,1489,5.073]],["title/injectables/PrismaService.html",[163,1.088,300,1.699]],["body/injectables/PrismaService.html",[0,0.301,3,0.111,4,0.099,5,0.099,7,0.295,10,0.309,11,0.01,15,0.5,17,0.142,19,0.111,20,0.007,21,0.007,29,2.881,31,1.653,33,3.01,37,1.256,38,0.795,39,1.256,45,1.613,50,0.795,163,1.695,165,2.186,174,2.535,266,3.783,300,2.646,399,1.225,1490,4.64,1491,6.763,1492,6.583,1493,6.763,1494,8.345,1495,5.267,1496,6.763,1497,7.884,1498,5.267,1499,4.64,1500,5.267,1501,5.267,1502,5.267,1503,5.267,1504,5.267,1505,5.267]],["title/classes/PrismaValidationFilter.html",[0,0.249,58,3.232]],["body/classes/PrismaValidationFilter.html",[0,0.286,2,0.884,3,0.105,4,0.094,5,0.094,7,0.28,10,0.384,11,0.01,15,0.335,17,0.169,19,0.105,20,0.007,21,0.007,29,3.578,30,4.801,31,1.599,32,4.346,37,1.193,38,0.756,39,1.193,40,4.309,41,4.801,42,5.092,44,4.309,45,1.193,46,3.295,47,3.489,50,0.756,58,4.869,62,6.812,64,3.295,68,1.968,71,3.295,72,3.295,73,3.295,78,2.486,79,3.295,80,4.801,81,3.295,82,2.36,104,3.295,105,3.295,106,3.295,247,2.015,299,2.015,336,3.723,399,1.164,1211,4.016,1212,4.016,1213,4.016,1217,3.489,1223,3.489,1487,4.408,1488,4.408,1506,4.408,1507,5.003,1508,4.016,1509,5.003,1510,5.003,1511,5.003]],["title/classes/RefreshTokenDto.html",[0,0.249,185,3.029]],["body/classes/RefreshTokenDto.html",[0,0.432,2,1.109,3,0.132,4,0.118,5,0.118,7,0.351,8,1.512,10,0.368,11,0.009,12,0.806,13,0.974,14,2.13,15,0.421,17,0.132,18,1.29,19,0.132,20,0.008,21,0.008,185,5.262,334,7.126,1512,5.532,1513,6.278]],["title/classes/RemoveUserInterViewDto.html",[0,0.249,1257,3.029]],["body/classes/RemoveUserInterViewDto.html",[0,0.433,2,1.113,3,0.132,4,0.118,5,0.118,7,0.353,8,1.516,9,7.136,10,0.37,11,0.009,12,0.808,13,0.977,14,2.133,15,0.422,17,0.132,18,1.295,19,0.132,20,0.008,21,0.008,1257,5.273,1514,5.551,1515,6.3]],["title/controllers/RentalCostController.html",[109,1.264,1516,3.232]],["body/controllers/RentalCostController.html",[0,0.187,3,0.069,4,0.061,5,0.061,7,0.182,10,0.376,11,0.01,12,0.897,13,0.994,15,0.429,17,0.167,19,0.069,20,0.005,21,0.005,31,1.185,37,1.528,38,0.968,39,1.528,45,1.528,50,0.492,65,0.974,67,1.486,68,1.562,78,3.018,84,1.819,109,0.949,111,0.949,169,1.538,174,2.437,180,3.89,194,2.978,196,1.593,197,1.538,198,1.538,206,2.931,207,1.488,208,1.538,212,3.603,241,3.13,247,1.313,323,1.081,325,2.144,386,3.043,394,1.593,395,1.396,396,1.593,399,0.759,400,1.44,401,1.593,415,1.593,417,1.859,446,2.212,448,2.652,449,2.652,450,1.859,452,3.165,455,3.484,461,1.783,464,1.859,467,2.93,476,2.274,478,3.165,480,2.427,481,3.165,484,2.427,508,2.873,510,2.873,519,2.873,521,2.873,667,4.47,807,4.47,812,4.037,813,2.427,814,2.274,872,4.47,1113,2.427,1516,3.608,1517,2.873,1518,4.272,1519,3.261,1520,3.261,1521,3.261,1522,3.261,1523,2.873,1524,3.261,1525,3.261,1526,3.193,1527,2.873,1528,2.873,1529,3.261,1530,2.873,1531,3.261,1532,3.261,1533,3.261,1534,3.261,1535,3.261,1536,3.261,1537,3.261,1538,3.261,1539,4.848,1540,6.408,1541,2.427,1542,4.848]],["title/modules/RentalCostModule.html",[113,1.202,132,3.029]],["body/modules/RentalCostModule.html",[0,0.315,3,0.116,4,0.103,5,0.103,11,0.01,17,0.169,19,0.116,20,0.007,21,0.007,50,0.832,111,2.026,113,2.112,115,2.219,116,2.219,117,2.358,118,2.358,119,2.219,120,3.266,121,2.358,132,6.05,137,2.979,138,2.358,139,2.358,141,3.176,493,4.124,495,3.141,1516,5.678,1526,5.56,1527,4.854,1543,4.854,1544,5.509,1545,4.854,1546,5.509,1547,5.509]],["title/injectables/RentalCostService.html",[163,1.088,1526,2.86]],["body/injectables/RentalCostService.html",[0,0.196,3,0.072,4,0.064,5,0.064,7,0.192,10,0.41,11,0.01,12,0.932,15,0.468,17,0.138,19,0.072,20,0.005,21,0.005,31,1.23,33,1.381,37,1.668,38,1.056,39,1.668,45,1.566,50,0.518,65,1.024,67,2.012,68,1.358,84,1.864,89,2.296,102,2.176,163,1.261,165,1.423,174,2.462,194,2.701,259,2.903,299,2.027,300,2.568,311,1.564,325,2.526,373,2.812,429,1.675,442,1.955,446,2.296,448,2.752,449,2.752,450,2.869,455,3.535,461,2.752,464,2.869,467,2.548,503,1.875,541,1.803,549,3.727,550,2.391,551,2.258,552,2.391,667,4.58,669,4.887,670,4.887,827,3.021,828,2.752,872,4.58,1518,4.433,1523,4.433,1526,3.314,1528,3.021,1530,3.021,1548,3.021,1549,3.428,1550,3.428,1551,3.428,1552,3.428,1553,3.428,1554,3.428,1555,3.428,1556,3.428,1557,5.031,1558,5.031,1559,3.428]],["title/guards/RolesGuard.html",[227,3.486,395,1.859]],["body/guards/RolesGuard.html",[0,0.282,3,0.103,4,0.092,5,0.092,7,0.275,10,0.38,11,0.01,15,0.433,17,0.162,19,0.103,20,0.007,21,0.007,29,2.691,31,1.582,33,1.982,37,1.543,38,0.977,39,1.543,45,1.173,50,0.743,51,3.241,65,1.47,68,1.952,84,2.053,163,1.621,228,3.95,230,6.768,235,7.218,237,5.702,238,6.768,240,4.335,255,4.335,256,4.335,259,2.042,260,5.702,319,4.311,323,1.631,395,2.77,399,1.145,646,2.953,1560,4.335,1561,4.921,1562,4.921,1563,4.921,1564,3.95,1565,4.921,1566,6.471,1567,4.921,1568,4.921,1569,4.921,1570,4.921,1571,4.921,1572,4.921,1573,4.921]],["title/controllers/SchoolController.html",[109,1.264,1574,3.232]],["body/controllers/SchoolController.html",[0,0.155,3,0.057,4,0.051,5,0.051,7,0.151,10,0.37,11,0.01,12,0.847,13,1.035,15,0.447,17,0.159,19,0.057,20,0.004,21,0.004,31,1.027,37,1.503,38,0.952,39,1.503,45,1.591,50,0.408,65,0.807,67,1.288,68,1.57,78,3.013,84,1.894,102,1.393,109,0.787,111,0.787,169,1.275,174,2.478,180,3.74,194,2.845,196,1.32,197,1.275,198,1.275,206,2.981,207,1.233,208,1.275,212,3.69,241,3.517,245,2.169,247,1.088,323,0.895,325,1.993,349,3.373,386,3.058,394,1.32,395,1.156,396,1.32,399,0.629,400,1.193,401,1.32,415,1.32,417,2.396,452,3.182,467,1.368,478,3.182,481,3.182,503,3.649,541,1.42,678,4.057,806,3.702,807,4.654,812,4.057,814,1.884,876,4.057,1017,2.38,1022,3.373,1023,5.781,1027,4.67,1117,1.884,1187,3.373,1288,2.38,1541,3.127,1574,3.127,1575,2.38,1576,3.702,1577,3.702,1578,2.505,1579,5.125,1580,2.767,1581,3.702,1582,2.702,1583,2.702,1584,2.702,1585,2.38,1586,2.702,1587,2.702,1588,2.011,1589,2.702,1590,2.702,1591,2.702,1592,2.702,1593,2.38,1594,2.702,1595,2.702,1596,2.38,1597,2.702,1598,2.702,1599,3.396,1600,2.38,1601,2.38,1602,2.38,1603,2.38,1604,2.702,1605,2.38,1606,2.011,1607,2.702,1608,2.702,1609,2.38,1610,2.702,1611,2.702,1612,2.702,1613,2.702,1614,2.702,1615,2.702,1616,2.702,1617,2.702,1618,2.702,1619,2.702,1620,2.702,1621,4.202,1622,5.817,1623,5.817,1624,5.817,1625,4.202,1626,5.125,1627,4.202,1628,4.202,1629,4.202,1630,4.202,1631,5.157,1632,2.702]],["title/modules/SchoolModule.html",[113,1.202,133,3.029]],["body/modules/SchoolModule.html",[0,0.315,3,0.116,4,0.103,5,0.103,11,0.01,17,0.169,19,0.116,20,0.007,21,0.007,50,0.832,111,2.026,113,2.112,115,2.219,116,2.219,117,2.358,118,2.358,119,2.219,120,3.266,121,2.358,133,6.05,137,2.979,138,2.358,139,2.358,141,3.176,493,4.124,495,3.141,1574,5.678,1599,5.56,1600,4.854,1633,4.854,1634,5.509,1635,4.854,1636,5.509,1637,5.509]],["title/injectables/SchoolService.html",[163,1.088,1599,2.86]],["body/injectables/SchoolService.html",[0,0.152,3,0.056,4,0.05,5,0.05,7,0.149,10,0.45,11,0.01,12,0.901,15,0.464,17,0.132,19,0.056,20,0.004,21,0.004,31,1.014,33,1.071,37,1.58,38,1.158,39,1.58,45,1.58,50,0.401,65,0.794,67,1.271,84,1.881,89,1.893,102,2.294,163,1.039,165,1.103,174,2.471,194,2.558,241,3.498,259,3.762,299,1.671,300,2.255,305,2.018,311,1.213,325,2.502,373,2.72,375,2.187,429,1.298,437,2.853,503,3.625,545,2.134,547,2.134,548,2.134,549,2.594,551,1.75,564,2.342,678,4.022,680,4.654,681,4.654,682,4.654,683,4.654,684,4.654,685,3.91,686,4.654,687,4.654,828,3.33,876,4.022,1117,1.854,1576,3.655,1577,3.655,1578,2.473,1579,5.08,1580,2.732,1581,3.655,1585,3.655,1593,3.655,1596,3.655,1599,2.732,1601,2.342,1602,2.342,1603,2.342,1638,2.342,1639,2.658,1640,4.149,1641,2.658,1642,2.658,1643,3.655,1644,2.658,1645,2.658,1646,2.658,1647,2.658,1648,4.149,1649,2.658,1650,2.658,1651,2.658,1652,2.658,1653,2.658,1654,2.658,1655,2.658,1656,2.658,1657,2.658,1658,2.658]],["title/classes/SendFiszkiDto.html",[0,0.249,1378,3.029]],["body/classes/SendFiszkiDto.html",[0,0.42,2,1.061,3,0.126,4,0.112,5,0.112,7,0.336,8,1.472,10,0.431,11,0.009,12,0.883,13,1.139,14,2.232,15,0.492,17,0.126,18,1.234,19,0.126,20,0.008,21,0.008,102,2.629,1055,6.989,1378,5.122,1659,5.291,1660,6.006,1661,6.006]],["title/controllers/SheduleController.html",[109,1.264,147,3.029]],["body/controllers/SheduleController.html",[0,0.183,3,0.067,4,0.06,5,0.06,7,0.179,10,0.373,11,0.01,12,0.894,13,0.985,15,0.425,17,0.163,19,0.067,20,0.005,21,0.005,31,1.169,37,1.515,38,0.959,39,1.515,45,1.515,50,0.484,65,0.956,67,1.946,68,1.546,78,3.005,84,1.803,109,0.932,111,0.932,147,3.337,149,3.58,169,1.511,174,2.427,180,3.664,194,1.767,196,1.564,197,1.511,198,1.511,206,2.909,207,1.461,208,1.511,212,3.584,247,1.29,323,1.061,325,2.13,331,2.822,386,3.339,394,1.564,395,1.371,396,1.564,399,0.745,400,1.415,401,1.564,406,2.383,415,1.564,446,2.183,447,2.899,452,3.474,453,2.383,455,3.372,467,1.622,478,3.474,481,3.132,483,2.234,727,4.974,807,2.234,896,4.974,1014,2.571,1016,2.822,1023,2.571,1027,2.571,1173,3.84,1185,2.571,1186,2.822,1187,2.571,1356,2.822,1455,2.822,1541,2.383,1578,2.852,1580,3.15,1588,2.383,1606,2.383,1662,2.822,1663,2.571,1664,3.202,1665,3.202,1666,3.202,1667,5.654,1668,2.822,1669,3.202,1670,3.202,1671,3.202,1672,3.202,1673,3.202,1674,3.202,1675,2.822,1676,2.822,1677,2.822,1678,3.202,1679,3.202,1680,3.202,1681,3.202,1682,3.202,1683,3.202,1684,3.202,1685,3.202,1686,3.202,1687,3.202,1688,3.202,1689,3.202,1690,4.215,1691,3.202,1692,2.822,1693,3.202,1694,3.202,1695,3.202,1696,3.202,1697,3.202,1698,3.202,1699,3.202,1700,3.202,1701,4.784,1702,3.202,1703,3.202]],["title/controllers/SheduleDaysController.html",[109,1.264,145,3.029]],["body/controllers/SheduleDaysController.html",[0,0.209,3,0.077,4,0.068,5,0.068,7,0.204,10,0.362,11,0.01,12,0.892,13,0.958,15,0.414,17,0.169,19,0.077,20,0.006,21,0.006,31,1.287,37,1.473,38,0.933,39,1.473,45,1.473,50,0.551,65,1.09,67,1.893,68,1.668,78,3.099,84,1.754,89,3.597,109,1.063,111,1.063,142,3.863,145,3.674,169,1.723,174,2.399,180,3.634,194,2.283,196,1.783,197,1.723,198,1.723,206,2.895,207,1.666,208,1.723,212,3.525,247,1.471,323,1.21,325,2.231,386,3.248,394,1.783,395,1.563,396,1.783,399,0.849,400,1.613,401,1.783,415,1.783,446,2.403,447,2.667,452,3.379,467,1.849,478,3.379,481,3.379,721,4.718,892,4.718,1152,3.217,1156,3.217,1177,3.217,1180,3.217,1578,3.14,1588,2.717,1606,2.717,1667,5.977,1668,3.217,1690,5.444,1692,3.217,1704,3.217,1705,3.651,1706,3.651,1707,3.651,1708,3.651,1709,3.651,1710,3.651,1711,3.217,1712,3.217,1713,3.217,1714,3.651,1715,3.651,1716,3.651,1717,3.651,1718,3.651,1719,3.651]],["title/modules/SheduleDaysModule.html",[113,1.202,134,3.029]],["body/modules/SheduleDaysModule.html",[0,0.316,3,0.116,4,0.103,5,0.103,11,0.01,17,0.169,19,0.116,20,0.007,21,0.007,50,0.835,111,2.03,113,2.115,115,2.226,116,2.226,117,2.365,118,2.365,119,2.226,120,3.27,121,2.365,134,6.053,137,2.985,138,2.365,139,2.365,141,3.182,142,5.283,145,5.329,493,4.127,495,3.151,1711,4.868,1720,4.868,1721,4.868,1722,5.526,1723,5.526,1724,5.526]],["title/injectables/SheduleDaysService.html",[142,2.715,163,1.088]],["body/injectables/SheduleDaysService.html",[0,0.195,3,0.072,4,0.064,5,0.064,7,0.191,10,0.384,11,0.01,12,0.92,15,0.439,17,0.138,19,0.072,20,0.005,21,0.005,31,1.225,33,1.373,37,1.562,38,0.989,39,1.562,45,1.417,50,0.515,65,1.018,67,1.82,68,1.768,82,3.089,84,2.141,89,3.529,102,2.17,142,3.133,163,1.255,165,1.415,174,2.358,259,2.08,266,2.537,299,2.018,300,2.561,311,1.555,325,2.524,373,1.608,429,1.665,446,2.286,447,2.537,541,3.123,721,4.567,723,4.022,724,4.022,892,4.567,1045,2.736,1070,4.022,1326,4.022,1337,4.414,1338,4.022,1578,2.987,1663,5.6,1667,5.429,1712,3.003,1713,3.003,1725,3.003,1726,3.409,1727,5.01,1728,3.409,1729,5.01,1730,3.409,1731,5.01,1732,3.409,1733,3.409,1734,5.94,1735,3.409,1736,3.409,1737,3.409,1738,5.01,1739,6.548,1740,5.01,1741,5.01,1742,3.409,1743,5.01,1744,5.01,1745,5.01,1746,5.01,1747,3.409]],["title/modules/SheduleModule.html",[113,1.202,135,3.029]],["body/modules/SheduleModule.html",[0,0.315,3,0.116,4,0.103,5,0.103,11,0.01,17,0.169,19,0.116,20,0.007,21,0.007,50,0.832,111,2.026,113,2.112,115,2.219,116,2.219,117,2.358,118,2.358,119,2.219,120,3.266,121,2.358,135,6.05,137,2.979,138,2.358,139,2.358,141,3.176,147,5.322,149,5.279,493,4.124,495,3.141,1675,4.854,1748,4.854,1749,5.509,1750,4.854,1751,5.509,1752,5.509]],["title/injectables/SheduleService.html",[149,2.715,163,1.088]],["body/injectables/SheduleService.html",[0,0.191,3,0.07,4,0.063,5,0.063,7,0.187,10,0.406,11,0.01,12,0.929,15,0.464,17,0.136,19,0.07,20,0.005,21,0.005,31,1.208,33,1.348,37,1.651,38,1.046,39,1.651,45,1.547,47,2.333,48,2.685,50,0.505,65,0.999,67,1.988,68,0.903,82,1.578,84,1.842,89,2.681,102,2.294,149,3.09,163,1.238,165,1.389,174,2.45,194,1.826,259,3.317,263,2.49,299,1.99,300,2.538,311,1.526,325,2.421,373,2.772,429,1.634,442,1.908,446,2.255,447,2.502,455,3.511,541,2.598,549,2.092,568,2.975,606,3.503,607,3.503,727,4.526,729,3.967,896,4.526,1326,2.685,1578,2.946,1580,3.254,1643,4.354,1663,5.209,1667,5.578,1676,2.948,1677,2.948,1753,2.948,1754,3.345,1755,4.941,1756,3.345,1757,4.941,1758,3.345,1759,3.345,1760,4.941,1761,3.345,1762,3.345,1763,3.345,1764,3.345,1765,3.345,1766,3.345,1767,3.345,1768,3.345,1769,3.345,1770,3.345,1771,3.345,1772,3.345,1773,3.345,1774,3.345,1775,3.345,1776,3.345]],["title/injectables/UpperCasePipe.html",[163,1.088,1777,3.232]],["body/injectables/UpperCasePipe.html",[0,0.279,3,0.103,4,0.091,5,0.091,7,0.273,10,0.378,11,0.01,15,0.431,17,0.161,19,0.103,20,0.007,21,0.007,29,2.669,31,1.573,33,1.966,37,1.535,38,0.972,39,1.535,45,1.164,50,0.737,66,4.3,78,3.025,84,1.385,163,1.613,165,2.026,180,3.398,244,5.781,247,1.966,323,1.617,399,1.135,774,4.3,1777,4.79,1778,4.3,1779,6.437,1780,4.881,1781,4.881,1782,6.437,1783,6.345,1784,7.657,1785,4.881,1786,5.167,1787,6.437,1788,5.671,1789,4.881,1790,4.881,1791,4.3,1792,4.881,1793,4.881,1794,4.881,1795,4.881,1796,6.437,1797,4.881,1798,6.437,1799,4.881,1800,6.437,1801,4.881]],["title/controllers/UserController.html",[109,1.264,1802,3.232]],["body/controllers/UserController.html",[0,0.13,3,0.048,4,0.042,5,0.042,7,0.127,10,0.381,11,0.01,12,0.823,13,1.008,15,0.435,17,0.16,19,0.048,20,0.004,21,0.004,31,0.893,37,1.55,38,0.982,39,1.55,45,1.55,50,0.342,65,0.676,67,0.693,68,2.149,73,3.469,78,2.997,84,2.081,102,2.048,109,0.659,111,0.659,169,1.068,174,2.451,180,3.756,194,0.836,196,1.783,197,1.068,198,1.068,206,2.895,208,1.068,212,3.634,241,3.649,247,0.912,263,3.92,266,2.667,319,1.349,323,2.43,325,2.086,386,3.771,391,1.578,394,1.105,395,0.969,399,0.526,400,1,401,1.105,415,1.105,417,1.29,452,3.161,467,1.146,478,3.161,481,2.881,737,3.023,750,3.023,901,3.469,912,2.87,913,3.023,945,1.994,946,5.727,962,1.578,989,1.817,994,1.994,1140,1.684,1294,2.87,1578,2.177,1580,2.405,1588,1.684,1605,1.994,1606,1.684,1609,1.994,1777,1.684,1802,2.718,1803,1.994,1804,5.267,1805,3.652,1806,3.217,1807,3.217,1808,2.263,1809,2.263,1810,2.263,1811,5.267,1812,2.263,1813,5.779,1814,2.263,1815,2.263,1816,2.263,1817,2.263,1818,2.263,1819,2.263,1820,2.263,1821,1.994,1822,2.263,1823,2.263,1824,2.263,1825,2.263,1826,2.263,1827,1.994,1828,3.674,1829,2.263,1830,2.263,1831,3.217,1832,5.779,1833,1.994,1834,1.994,1835,2.263,1836,1.994,1837,2.263,1838,2.263,1839,2.263,1840,1.817,1841,2.263,1842,1.994,1843,2.263,1844,2.263,1845,2.263,1846,2.263,1847,5.267,1848,5.267,1849,2.263,1850,3.652,1851,2.263,1852,2.263,1853,2.263,1854,3.652,1855,2.263,1856,2.263,1857,2.263,1858,2.263,1859,7.472,1860,3.652,1861,2.263,1862,2.263,1863,2.263,1864,2.263,1865,2.263,1866,3.652,1867,2.263,1868,2.263]],["title/modules/UserModule.html",[113,1.202,136,2.86]],["body/modules/UserModule.html",[0,0.288,3,0.106,4,0.094,5,0.094,11,0.01,17,0.173,19,0.106,20,0.007,21,0.007,50,0.76,51,3.313,111,1.912,113,2.023,115,2.026,116,2.026,117,2.153,118,2.153,119,2.026,120,3.128,121,3.128,136,5.67,137,2.81,138,2.153,139,2.153,141,2.295,284,5.785,289,5.271,295,4.432,296,4.432,300,3.444,311,2.295,395,2.81,396,2.457,1294,5.154,1802,5.44,1833,4.432,1869,5.031,1870,5.031,1871,5.031,1872,5.031,1873,5.031]],["title/injectables/UserService.html",[163,1.088,1294,2.715]],["body/injectables/UserService.html",[0,0.117,3,0.043,4,0.038,5,0.038,7,0.114,10,0.395,11,0.01,12,0.878,15,0.464,17,0.137,19,0.043,20,0.004,21,0.004,31,0.821,33,0.823,37,1.606,38,1.133,39,1.606,45,1.606,50,0.308,65,0.61,67,2.064,68,1.918,84,2.06,89,2.261,102,2.67,163,1.072,165,0.848,174,2.488,244,2.696,259,3.572,266,3.151,299,1.353,300,1.938,305,1.901,311,0.932,319,4.536,320,2.959,322,2.959,323,2.72,324,2.959,325,2.406,372,2.002,373,2.778,374,2.142,375,2.059,376,3.265,377,3.433,399,0.475,400,2.189,429,0.997,434,1.424,737,4.099,739,3.424,750,3.264,912,4.065,1294,2.1,1578,2.954,1580,2.212,1788,1.799,1791,1.799,1806,2.959,1807,2.959,1821,2.959,1827,2.959,1828,3.456,1831,1.799,1834,1.799,1836,1.799,1842,1.799,1874,1.799,1875,3.358,1876,3.358,1877,3.358,1878,3.358,1879,3.358,1880,2.042,1881,3.358,1882,2.042,1883,3.358,1884,2.042,1885,3.358,1886,2.042,1887,3.358,1888,2.042,1889,2.042,1890,2.042,1891,3.358,1892,3.358,1893,2.042,1894,3.358,1895,2.042,1896,2.042,1897,1.639,1898,2.042,1899,1.52,1900,2.042,1901,3.358,1902,3.358,1903,3.358,1904,3.358,1905,2.042,1906,3.358,1907,3.358,1908,3.358,1909,4.955,1910,3.358,1911,2.042,1912,3.358,1913,2.042,1914,2.042,1915,2.042,1916,2.042,1917,3.358,1918,3.358,1919,4.955,1920,3.358,1921,3.358]],["title/classes/ValidationdDto.html",[0,0.249,1828,3.029]],["body/classes/ValidationdDto.html",[0,0.416,2,1.044,3,0.124,4,0.111,5,0.111,7,0.331,8,1.457,10,0.426,11,0.009,12,0.878,13,1.128,14,1.555,15,0.487,17,0.124,18,1.214,19,0.124,20,0.008,21,0.008,305,2.542,375,2.754,578,2.126,585,3.368,590,3.231,593,3.017,594,2.695,597,2.991,1828,5.07,1922,5.204,1923,5.907,1924,5.907]],["title/coverage.html",[1925,4.777]],["body/coverage.html",[0,0.505,1,1.452,5,0.039,6,1.835,10,0.122,11,0.01,20,0.004,21,0.004,22,1.452,23,1.835,27,1.671,28,1.835,54,1.55,56,1.55,58,1.55,60,1.55,82,0.982,109,2.226,110,1.671,112,1.835,119,0.839,142,1.302,145,1.452,147,1.452,149,1.302,163,1.96,164,1.671,166,1.835,167,1.55,168,1.835,185,1.452,190,1.55,199,1.671,201,1.371,203,1.452,206,0.891,207,0.95,227,2.739,229,2.739,248,1.671,250,1.671,251,2.54,283,1.671,297,1.835,299,0.839,300,0.814,315,1.55,378,1.55,379,1.835,384,1.452,395,0.891,397,1.371,400,0.92,402,1.55,428,1.835,443,1.55,444,1.835,451,1.452,458,1.452,468,1.371,470,1.55,497,1.55,498,1.835,500,1.452,504,1.452,512,1.371,514,1.55,534,1.835,554,1.835,567,1.835,580,1.835,584,1.835,598,1.452,599,1.835,604,1.452,605,1.835,632,1.452,633,1.835,653,1.452,654,1.835,667,1.452,668,1.835,678,1.452,679,1.835,721,1.452,722,1.835,727,1.452,728,1.835,737,1.371,738,2.739,750,1.371,765,1.835,779,1.55,780,1.835,783,1.452,790,1.371,794,1.55,820,1.835,832,1.835,835,1.835,840,1.835,845,1.452,846,1.835,858,1.452,859,1.835,866,1.452,867,1.835,872,1.452,873,1.835,876,1.452,877,1.835,892,1.452,893,1.835,896,1.452,897,1.835,901,1.371,902,3.227,912,1.302,913,1.371,934,1.55,935,1.835,974,1.371,976,1.55,1033,1.835,1071,1.835,1075,1.835,1078,1.835,1085,1.835,1091,1.835,1103,1.55,1104,1.835,1113,1.55,1114,1.835,1117,1.452,1118,1.835,1134,1.671,1135,1.835,1140,1.55,1141,1.835,1150,1.55,1151,1.835,1165,1.371,1194,1.835,1208,1.835,1225,1.55,1226,1.835,1257,1.452,1260,1.371,1294,1.302,1299,1.835,1336,8.041,1361,1.835,1364,1.835,1369,1.835,1374,1.55,1375,1.835,1378,1.452,1381,1.371,1450,1.835,1485,1.835,1490,1.835,1506,1.835,1508,1.671,1512,1.835,1514,1.835,1516,1.55,1517,1.835,1526,1.371,1548,1.835,1560,1.835,1564,1.671,1574,1.55,1575,1.835,1599,1.371,1638,1.835,1659,1.835,1662,1.835,1704,1.835,1725,1.835,1753,1.835,1777,1.55,1778,1.835,1802,1.55,1803,1.835,1828,1.452,1840,1.671,1874,1.835,1897,1.671,1899,1.55,1922,1.835,1925,1.671,1926,2.082,1927,2.082,1928,2.082,1929,6.552,1930,2.739,1931,6.277,1932,1.835,1933,7.897,1934,6.783,1935,7.543,1936,6.98,1937,1.835,1938,3.007,1939,3.007,1940,6.98,1941,7.738,1942,5.014,1943,1.835,1944,1.835,1945,1.835,1946,1.835,1947,1.835,1948,2.54,1949,1.835,1950,1.835,1951,5.014,1952,6.277,1953,3.412,1954,5.014,1955,2.082,1956,2.082,1957,2.082,1958,2.082,1959,2.082]],["title/dependencies.html",[116,2.106,1960,3.185]],["body/dependencies.html",[0,0.425,11,0.01,18,1.255,20,0.008,21,0.008,50,0.922,51,4.023,53,4.903,116,2.46,246,4.545,247,2.989,312,5.381,399,1.421,1783,5.381,1961,7.992,1962,6.108,1963,6.108,1964,6.108,1965,6.108,1966,6.108,1967,6.108,1968,6.108,1969,6.108,1970,6.108,1971,6.108,1972,6.108,1973,6.108,1974,6.108]],["title/miscellaneous/enumerations.html",[1975,2.381,1976,4.607]],["body/miscellaneous/enumerations.html",[7,0.364,11,0.009,20,0.008,21,0.008,319,3.878,812,4.538,1429,5.222,1460,5.222,1461,5.732,1462,5.732,1541,4.842,1626,5.732,1786,6.814,1899,5.735,1948,4.842,1975,4.285,1976,5.732,1977,5.222]],["title/miscellaneous/functions.html",[1975,2.381,1978,4.607]],["body/miscellaneous/functions.html",[7,0.305,10,0.469,11,0.009,12,0.881,20,0.007,21,0.007,37,1.905,38,1.207,39,1.905,45,1.65,119,3.06,241,2.666,309,4.809,323,2.293,1508,5.555,1840,5.555,1897,5.555,1899,5.15,1930,4.382,1932,6.694,1943,4.809,1944,4.809,1945,4.809,1946,6.694,1947,4.809,1948,4.062,1950,4.809,1975,3.595,1977,4.382,1978,4.809,1979,5.459,1980,5.459,1981,5.459,1982,5.459,1983,5.459,1984,4.809,1985,5.459,1986,6.92,1987,5.459,1988,5.459,1989,5.459,1990,5.459,1991,5.459,1992,5.459]],["title/index.html",[7,0.202,1993,3.615,1994,3.615]],["body/index.html",[4,0.097,11,0.01,20,0.007,21,0.007,272,4.587,354,5.915,1338,4.179,1499,4.587,1925,4.179,1995,5.206,1996,5.206,1997,6.713,1998,5.206,1999,5.206,2000,5.206,2001,5.206,2002,5.206,2003,5.206,2004,4.587,2005,7.43,2006,5.206,2007,5.206,2008,5.206,2009,5.206,2010,8.463,2011,5.206,2012,5.206,2013,8.319,2014,5.206,2015,5.206,2016,6.713,2017,5.206,2018,5.206,2019,5.206,2020,5.206,2021,6.713,2022,5.206,2023,5.206,2024,5.206,2025,6.713,2026,6.713,2027,5.206,2028,5.206,2029,5.206,2030,5.206,2031,5.206,2032,4.587,2033,5.206,2034,5.206,2035,5.206,2036,5.206,2037,5.206,2038,5.206,2039,5.206,2040,5.206,2041,4.587,2042,5.206,2043,5.206,2044,5.206,2045,5.206,2046,5.206,2047,5.206,2048,4.587]],["title/modules.html",[115,2.397]],["body/modules.html",[11,0.007,20,0.007,21,0.007,114,4.002,115,2.166,124,3.75,125,3.75,126,3.75,127,3.75,128,3.75,129,3.75,130,3.75,131,3.75,132,3.75,133,3.75,134,3.75,135,3.75,136,3.541,493,2.626,1444,4.002,2032,7.949,2049,9.022,2050,9.022,2051,9.022]],["title/overview.html",[2052,5.243]],["body/overview.html",[2,0.577,11,0.01,20,0.005,21,0.005,111,0.951,113,0.904,114,6.587,115,1.316,116,1.316,117,1.398,118,1.398,119,1.316,120,1.398,121,1.398,122,2.878,123,2.878,124,5.33,125,4.781,126,5.188,127,5.188,128,5.188,129,4.781,130,5.33,131,5.445,132,5.188,133,5.188,134,5.188,135,5.188,136,5.142,137,2.078,138,1.398,139,1.398,142,3.623,149,3.623,165,1.356,201,4.899,228,2.622,279,2.878,280,2.878,282,2.878,300,3.108,397,3.816,424,2.878,425,2.878,468,3.816,490,2.878,491,2.878,492,2.878,493,4.065,512,3.816,528,2.878,530,2.878,790,3.816,815,2.878,817,2.878,974,3.816,1029,2.878,1030,2.878,1165,3.816,1189,2.878,1190,2.878,1260,3.816,1291,2.878,1293,2.878,1294,4.011,1381,3.816,1444,5.346,1445,2.878,1446,2.878,1460,2.622,1478,2.878,1479,2.878,1480,2.878,1526,3.816,1543,2.878,1545,2.878,1599,3.816,1633,2.878,1635,2.878,1720,2.878,1721,2.878,1748,2.878,1750,2.878,2052,2.878,2053,3.266,2054,3.266,2055,3.266,2056,3.266]],["title/properties.html",[8,1.048,1960,3.185]],["body/properties.html",[8,1.363,11,0.009,20,0.008,21,0.008,2004,5.992,2041,5.992,2048,5.992,2057,6.801,2058,6.801,2059,6.801]],["title/miscellaneous/variables.html",[1975,2.381,2060,4.607]],["body/miscellaneous/variables.html",[7,0.29,10,0.435,11,0.01,12,0.715,20,0.007,21,0.007,82,2.442,199,5.369,229,4.155,248,5.369,250,5.369,251,5.829,252,5.369,253,4.56,259,2.148,268,5.369,271,4.155,283,4.155,299,2.694,323,2.456,400,3.46,1492,4.56,1564,5.369,1786,6.948,1930,4.155,1937,4.56,1938,4.56,1939,4.56,1948,3.852,1949,5.893,1975,3.409,1977,4.155,1984,4.56,2060,4.56,2061,6.688,2062,5.176,2063,5.176,2064,5.176,2065,6.688,2066,8.655,2067,5.176,2068,5.176,2069,5.176]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"classes/AddUserInterViewDto.html":{},"classes/AddgroupDto.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallUserHistoryController.html":{},"modules/CallUserHistoryModule.html":{},"injectables/CallUserHistoryService.html":{},"controllers/ContactController.html":{},"modules/ContactModule.html":{},"controllers/ContactPersonController.html":{},"modules/ContactPersonModule.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"classes/CreateCallUserDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateInterViewDto.html":{},"classes/CreateRentalCostDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateSheduleDaysDto.html":{},"classes/CreateSheduleDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/DecodeDto.html":{},"controllers/DirectorController.html":{},"modules/DirectorModule.html":{},"injectables/DirectorService.html":{},"classes/EditContactDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditGroupDto.html":{},"classes/EditInterViewDto.html":{},"classes/EditRentalCostDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSheduleDaysDto.html":{},"classes/EditSheduleDto.html":{},"classes/EditUser.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"controllers/FiszkaController.html":{},"modules/FiszkaModule.html":{},"injectables/FiszkaService.html":{},"classes/GetCallUserHistoryDto.html":{},"classes/GetContactDto.html":{},"classes/GetContactPersontDto.html":{},"classes/GetDirectorDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetGroupDto.html":{},"classes/GetRentalCostDto.html":{},"classes/GetSchoolDto.html":{},"classes/GetSheduleDto.html":{},"classes/GetUserDto.html":{},"controllers/GroupController.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/InterviewsController.html":{},"modules/InterviewsModule.html":{},"injectables/InterviewsService.html":{},"classes/LoginUserDto.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"controllers/PredicteController.html":{},"modules/PredicteModule.html":{},"injectables/PredicteService.html":{},"modules/PrismaModule.html":{},"classes/PrismaOtherFilter.html":{},"injectables/PrismaService.html":{},"classes/PrismaValidationFilter.html":{},"classes/RefreshTokenDto.html":{},"classes/RemoveUserInterViewDto.html":{},"controllers/RentalCostController.html":{},"modules/RentalCostModule.html":{},"injectables/RentalCostService.html":{},"guards/RolesGuard.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"classes/SendFiszkiDto.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"modules/SheduleDaysModule.html":{},"injectables/SheduleDaysService.html":{},"modules/SheduleModule.html":{},"injectables/SheduleService.html":{},"injectables/UpperCasePipe.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidationdDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1336,"title":{},"body":{"injectables/InterviewsService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":2058,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":1973,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":1970,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1969,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1933,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1954,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1953,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1956,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1955,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1957,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1940,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1941,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1929,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1935,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1936,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1942,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1951,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1952,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":1429,"title":{},"body":{"controllers/PredicteController.html":{},"injectables/PredicteService.html":{},"miscellaneous/enumerations.html":{}}}],["10",{"_index":1466,"title":{},"body":{"injectables/PredicteService.html":{}}}],["10.1.1",{"_index":1962,"title":{},"body":{"dependencies.html":{}}}],["10.2.6",{"_index":1961,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":1428,"title":{},"body":{"controllers/PredicteController.html":{}}}],["15",{"_index":2054,"title":{},"body":{"overview.html":{}}}],["16",{"_index":2053,"title":{},"body":{"overview.html":{}}}],["17",{"_index":2055,"title":{},"body":{"overview.html":{}}}],["1s",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{}}}],["2",{"_index":1460,"title":{},"body":{"injectables/PredicteService.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["3",{"_index":1461,"title":{},"body":{"injectables/PredicteService.html":{},"miscellaneous/enumerations.html":{}}}],["4",{"_index":1462,"title":{},"body":{"injectables/PredicteService.html":{},"miscellaneous/enumerations.html":{}}}],["4.18.2",{"_index":1971,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":1463,"title":{},"body":{"injectables/PredicteService.html":{}}}],["5)@isalphanumeric('pl",{"_index":706,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/EditSchoolDto.html":{}}}],["5.0.0",{"_index":1966,"title":{},"body":{"dependencies.html":{}}}],["5.1.0",{"_index":1967,"title":{},"body":{"dependencies.html":{}}}],["5.3.1",{"_index":1964,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":2056,"title":{},"body":{"overview.html":{}}}],["5000s",{"_index":294,"title":{},"body":{"modules/AuthModule.html":{}}}],["6",{"_index":1464,"title":{},"body":{"injectables/PredicteService.html":{}}}],["7",{"_index":1390,"title":{},"body":{"controllers/PredicteController.html":{},"injectables/PredicteService.html":{}}}],["7.2.0",{"_index":1974,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1465,"title":{},"body":{"injectables/PredicteService.html":{}}}],["9",{"_index":1391,"title":{},"body":{"controllers/PredicteController.html":{},"injectables/PredicteService.html":{}}}],["ac",{"_index":407,"title":{},"body":{"controllers/CallUserHistoryController.html":{},"controllers/FiszkaController.html":{}}}],["ac,mgtn",{"_index":1024,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["access",{"_index":273,"title":{},"body":{"guards/AuthGuard.html":{}}}],["access_token",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{},"classes/RefreshTokenDto.html":{}}}],["access_token:test",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{}}}],["active",{"_index":739,"title":{},"body":{"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/EditUser.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"classes/GetUserDto.html":{},"injectables/UserService.html":{}}}],["addfiszki",{"_index":936,"title":{},"body":{"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{}}}],["addfiszki(@param('idinterview",{"_index":1006,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["addfiszki(idinterview",{"_index":944,"title":{},"body":{"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{}}}],["addgroup",{"_index":937,"title":{},"body":{"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{}}}],["addgroup(@param('idgroup",{"_index":1011,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["addgroup(idgroup",{"_index":950,"title":{},"body":{"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{}}}],["addgroupdto",{"_index":22,"title":{"classes/AddgroupDto.html":{}},"body":{"classes/AddgroupDto.html":{},"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{},"coverage.html":{}}}],["addusercall",{"_index":381,"title":{},"body":{"controllers/CallUserHistoryController.html":{},"injectables/CallUserHistoryService.html":{}}}],["addusercall(@param('idfiszka",{"_index":422,"title":{},"body":{"controllers/CallUserHistoryController.html":{}}}],["addusercall(idfiszka",{"_index":383,"title":{},"body":{"controllers/CallUserHistoryController.html":{},"injectables/CallUserHistoryService.html":{}}}],["adduserids",{"_index":1333,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["adduserids.length",{"_index":1335,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["adduserinterviewdto",{"_index":1,"title":{"classes/AddUserInterViewDto.html":{}},"body":{"classes/AddUserInterViewDto.html":{},"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{},"coverage.html":{}}}],["addusertointerview",{"_index":1227,"title":{},"body":{"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{}}}],["addusertointerview(@param('idinterview",{"_index":1283,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["addusertointerview(idinterview",{"_index":1234,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["addusertointerview(interviewid",{"_index":1302,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["agent",{"_index":99,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/NotFoundExceptionFilter.html":{}}}],["aktualna",{"_index":1414,"title":{},"body":{"controllers/PredicteController.html":{}}}],["aktywny",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{}}}],["ale",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{},"controllers/SheduleController.html":{}}}],["allexceptionsfilter",{"_index":27,"title":{"classes/AllExceptionsFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["allrole",{"_index":1949,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["amazing",{"_index":2033,"title":{},"body":{"index.html":{}}}],["any).message",{"_index":90,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["app",{"_index":1499,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":1505,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app_guard",{"_index":284,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["appcontroller",{"_index":110,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["applications",{"_index":2003,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":114,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":164,"title":{"injectables/AppService.html":{}},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["argumentmetadata",{"_index":1784,"title":{},"body":{"injectables/UpperCasePipe.html":{}}}],["argumentshost",{"_index":42,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{}}}],["assigning",{"_index":270,"title":{},"body":{"guards/AuthGuard.html":{}}}],["async",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CallUserHistoryController.html":{},"injectables/CallUserHistoryService.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"controllers/DirectorController.html":{},"injectables/DirectorService.html":{},"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{},"controllers/PredicteController.html":{},"injectables/PredicteService.html":{},"injectables/PrismaService.html":{},"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"injectables/SheduleDaysService.html":{},"injectables/SheduleService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["auth",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":286,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth.service",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/roles.guard",{"_index":1835,"title":{},"body":{"controllers/UserController.html":{}}}],["authcontroller",{"_index":167,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":203,"title":{"guards/AuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authmodule",{"_index":124,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":2041,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":201,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["availableemployee",{"_index":1457,"title":{},"body":{"injectables/PredicteService.html":{}}}],["await",{"_index":266,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"injectables/FiszkaService.html":{},"injectables/GroupService.html":{},"injectables/InterviewsService.html":{},"injectables/PredicteService.html":{},"injectables/PrismaService.html":{},"injectables/SheduleDaysService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["backers",{"_index":2034,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":1832,"title":{},"body":{"controllers/UserController.html":{}}}],["bcrypt",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["bcrypt.compare(pass",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{}}}],["bearer",{"_index":278,"title":{},"body":{"guards/AuthGuard.html":{}}}],["body",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CallUserHistoryController.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"controllers/DirectorController.html":{},"injectables/DirectorService.html":{},"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"controllers/InterviewsController.html":{},"controllers/PredicteController.html":{},"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"injectables/SheduleService.html":{},"controllers/UserController.html":{}}}],["body(uppercasepipe",{"_index":1865,"title":{},"body":{"controllers/UserController.html":{}}}],["body.city",{"_index":1651,"title":{},"body":{"injectables/SchoolService.html":{}}}],["body.classdigit",{"_index":1763,"title":{},"body":{"injectables/SheduleService.html":{}}}],["body.classletter",{"_index":1764,"title":{},"body":{"injectables/SheduleService.html":{}}}],["body.classroomhour",{"_index":1557,"title":{},"body":{"injectables/RentalCostService.html":{}}}],["body.clockhour",{"_index":1558,"title":{},"body":{"injectables/RentalCostService.html":{}}}],["body.codegroup",{"_index":1202,"title":{},"body":{"injectables/GroupService.html":{}}}],["body.comments",{"_index":564,"title":{},"body":{"injectables/ContactService.html":{},"injectables/SchoolService.html":{}}}],["body.cooperation",{"_index":1653,"title":{},"body":{"injectables/SchoolService.html":{}}}],["body.date",{"_index":1765,"title":{},"body":{"injectables/SheduleService.html":{}}}],["body.dateofvisit",{"_index":563,"title":{},"body":{"injectables/ContactService.html":{}}}],["body.dayoftheweek",{"_index":1205,"title":{},"body":{"injectables/GroupService.html":{}}}],["body.email",{"_index":547,"title":{},"body":{"injectables/ContactPersonService.html":{},"injectables/DirectorService.html":{},"injectables/SchoolService.html":{}}}],["body.hour",{"_index":1206,"title":{},"body":{"injectables/GroupService.html":{}}}],["body.iduser",{"_index":1069,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["body.map((fiszka",{"_index":1056,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["body.name",{"_index":545,"title":{},"body":{"injectables/ContactPersonService.html":{},"injectables/DirectorService.html":{},"injectables/SchoolService.html":{}}}],["body.numberofclasses",{"_index":1658,"title":{},"body":{"injectables/SchoolService.html":{}}}],["body.phone",{"_index":548,"title":{},"body":{"injectables/ContactPersonService.html":{},"injectables/DirectorService.html":{},"injectables/SchoolService.html":{}}}],["body.postcode",{"_index":1657,"title":{},"body":{"injectables/SchoolService.html":{}}}],["body.province",{"_index":1654,"title":{},"body":{"injectables/SchoolService.html":{}}}],["body.status",{"_index":1650,"title":{},"body":{"injectables/SchoolService.html":{}}}],["body.street",{"_index":1655,"title":{},"body":{"injectables/SchoolService.html":{}}}],["body.subject",{"_index":1204,"title":{},"body":{"injectables/GroupService.html":{}}}],["body.suitenumber",{"_index":1656,"title":{},"body":{"injectables/SchoolService.html":{}}}],["body.surname",{"_index":546,"title":{},"body":{"injectables/ContactPersonService.html":{},"injectables/DirectorService.html":{}}}],["body.title",{"_index":1203,"title":{},"body":{"injectables/GroupService.html":{}}}],["body.trial",{"_index":1207,"title":{},"body":{"injectables/GroupService.html":{}}}],["body.type",{"_index":1652,"title":{},"body":{"injectables/SchoolService.html":{}}}],["boolean",{"_index":646,"title":{},"body":{"classes/CreateGroupDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditGroupDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditUser.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetGroupDto.html":{},"classes/GetSchoolDto.html":{},"classes/GetUserDto.html":{},"guards/RolesGuard.html":{}}}],["bootstrap",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CallUserHistoryModule.html":{},"modules/ContactModule.html":{},"modules/ContactPersonModule.html":{},"modules/DirectorModule.html":{},"modules/FiszkaModule.html":{},"modules/GroupModule.html":{},"modules/InterviewsModule.html":{},"modules/PredicteModule.html":{},"modules/PrismaModule.html":{},"modules/RentalCostModule.html":{},"modules/SchoolModule.html":{},"modules/SheduleDaysModule.html":{},"modules/SheduleModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":2051,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2049,"title":{},"body":{"modules.html":{}}}],["building",{"_index":1998,"title":{},"body":{"index.html":{}}}],["byl",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{}}}],["ca",{"_index":1626,"title":{},"body":{"controllers/SchoolController.html":{},"miscellaneous/enumerations.html":{}}}],["calldate",{"_index":435,"title":{},"body":{"injectables/CallUserHistoryService.html":{},"classes/CreateCallUserDto.html":{},"classes/GetCallUserHistoryDto.html":{}}}],["callnext",{"_index":436,"title":{},"body":{"injectables/CallUserHistoryService.html":{},"classes/CreateCallUserDto.html":{},"classes/GetCallUserHistoryDto.html":{}}}],["calluserhistory",{"_index":380,"title":{},"body":{"controllers/CallUserHistoryController.html":{}}}],["calluserhistory.controller",{"_index":427,"title":{},"body":{"modules/CallUserHistoryModule.html":{}}}],["calluserhistory.service",{"_index":398,"title":{},"body":{"controllers/CallUserHistoryController.html":{},"modules/CallUserHistoryModule.html":{}}}],["calluserhistorycontroller",{"_index":378,"title":{"controllers/CallUserHistoryController.html":{}},"body":{"controllers/CallUserHistoryController.html":{},"modules/CallUserHistoryModule.html":{},"coverage.html":{}}}],["calluserhistorymodule",{"_index":125,"title":{"modules/CallUserHistoryModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CallUserHistoryModule.html":{},"modules.html":{},"overview.html":{}}}],["calluserhistoryservice",{"_index":397,"title":{"injectables/CallUserHistoryService.html":{}},"body":{"controllers/CallUserHistoryController.html":{},"modules/CallUserHistoryModule.html":{},"injectables/CallUserHistoryService.html":{},"coverage.html":{},"overview.html":{}}}],["calluserservice",{"_index":416,"title":{},"body":{"controllers/CallUserHistoryController.html":{}}}],["canactivate",{"_index":230,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":237,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RolesGuard.html":{}}}],["catch",{"_index":32,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{}}}],["catch(exception",{"_index":40,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{}}}],["catch(httpexception",{"_index":1211,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{}}}],["catch(notfounderror",{"_index":1366,"title":{},"body":{"classes/NotFoundErrorFilter.html":{}}}],["catch(notfoundexception",{"_index":1371,"title":{},"body":{"classes/NotFoundExceptionFilter.html":{}}}],["chętne",{"_index":1441,"title":{},"body":{"controllers/PredicteController.html":{}}}],["chętnych",{"_index":1427,"title":{},"body":{"controllers/PredicteController.html":{}}}],["city",{"_index":680,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/EditSchoolDto.html":{},"classes/GetSchoolDto.html":{},"injectables/SchoolService.html":{}}}],["class",{"_index":0,"title":{"classes/AddUserInterViewDto.html":{},"classes/AddgroupDto.html":{},"classes/AllExceptionsFilter.html":{},"classes/CreateCallUserDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateInterViewDto.html":{},"classes/CreateRentalCostDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateSheduleDaysDto.html":{},"classes/CreateSheduleDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/DecodeDto.html":{},"classes/EditContactDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditGroupDto.html":{},"classes/EditInterViewDto.html":{},"classes/EditRentalCostDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSheduleDaysDto.html":{},"classes/EditSheduleDto.html":{},"classes/EditUser.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"classes/GetCallUserHistoryDto.html":{},"classes/GetContactDto.html":{},"classes/GetContactPersontDto.html":{},"classes/GetDirectorDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetGroupDto.html":{},"classes/GetRentalCostDto.html":{},"classes/GetSchoolDto.html":{},"classes/GetSheduleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/LoginUserDto.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{},"classes/RefreshTokenDto.html":{},"classes/RemoveUserInterViewDto.html":{},"classes/SendFiszkiDto.html":{},"classes/ValidationdDto.html":{}},"body":{"classes/AddUserInterViewDto.html":{},"classes/AddgroupDto.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallUserHistoryController.html":{},"modules/CallUserHistoryModule.html":{},"injectables/CallUserHistoryService.html":{},"controllers/ContactController.html":{},"modules/ContactModule.html":{},"controllers/ContactPersonController.html":{},"modules/ContactPersonModule.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"classes/CreateCallUserDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateInterViewDto.html":{},"classes/CreateRentalCostDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateSheduleDaysDto.html":{},"classes/CreateSheduleDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/DecodeDto.html":{},"controllers/DirectorController.html":{},"modules/DirectorModule.html":{},"injectables/DirectorService.html":{},"classes/EditContactDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditGroupDto.html":{},"classes/EditInterViewDto.html":{},"classes/EditRentalCostDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSheduleDaysDto.html":{},"classes/EditSheduleDto.html":{},"classes/EditUser.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"controllers/FiszkaController.html":{},"modules/FiszkaModule.html":{},"injectables/FiszkaService.html":{},"classes/GetCallUserHistoryDto.html":{},"classes/GetContactDto.html":{},"classes/GetContactPersontDto.html":{},"classes/GetDirectorDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetGroupDto.html":{},"classes/GetRentalCostDto.html":{},"classes/GetSchoolDto.html":{},"classes/GetSheduleDto.html":{},"classes/GetUserDto.html":{},"controllers/GroupController.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/InterviewsController.html":{},"modules/InterviewsModule.html":{},"injectables/InterviewsService.html":{},"classes/LoginUserDto.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"controllers/PredicteController.html":{},"modules/PredicteModule.html":{},"injectables/PredicteService.html":{},"modules/PrismaModule.html":{},"classes/PrismaOtherFilter.html":{},"injectables/PrismaService.html":{},"classes/PrismaValidationFilter.html":{},"classes/RefreshTokenDto.html":{},"classes/RemoveUserInterViewDto.html":{},"controllers/RentalCostController.html":{},"modules/RentalCostModule.html":{},"injectables/RentalCostService.html":{},"guards/RolesGuard.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"classes/SendFiszkiDto.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"modules/SheduleDaysModule.html":{},"injectables/SheduleDaysService.html":{},"modules/SheduleModule.html":{},"injectables/SheduleService.html":{},"injectables/UpperCasePipe.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidationdDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classdigit",{"_index":606,"title":{},"body":{"classes/CreateFiszkaDto.html":{},"classes/CreateSheduleDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditSheduleDto.html":{},"injectables/FiszkaService.html":{},"classes/GetFiszkaDto.html":{},"classes/GetSheduleDto.html":{},"injectables/SheduleService.html":{}}}],["classdigit:body.classdigit",{"_index":1768,"title":{},"body":{"injectables/SheduleService.html":{}}}],["classdigit:number",{"_index":627,"title":{},"body":{"classes/CreateFiszkaDto.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AddUserInterViewDto.html":{},"classes/AddgroupDto.html":{},"classes/AllExceptionsFilter.html":{},"classes/CreateCallUserDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateInterViewDto.html":{},"classes/CreateRentalCostDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateSheduleDaysDto.html":{},"classes/CreateSheduleDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/DecodeDto.html":{},"classes/EditContactDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditGroupDto.html":{},"classes/EditInterViewDto.html":{},"classes/EditRentalCostDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSheduleDaysDto.html":{},"classes/EditSheduleDto.html":{},"classes/EditUser.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"classes/GetCallUserHistoryDto.html":{},"classes/GetContactDto.html":{},"classes/GetContactPersontDto.html":{},"classes/GetDirectorDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetGroupDto.html":{},"classes/GetRentalCostDto.html":{},"classes/GetSchoolDto.html":{},"classes/GetSheduleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/LoginUserDto.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{},"classes/RefreshTokenDto.html":{},"classes/RemoveUserInterViewDto.html":{},"classes/SendFiszkiDto.html":{},"classes/ValidationdDto.html":{},"overview.html":{}}}],["classletter",{"_index":607,"title":{},"body":{"classes/CreateFiszkaDto.html":{},"classes/CreateSheduleDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditSheduleDto.html":{},"injectables/FiszkaService.html":{},"classes/GetFiszkaDto.html":{},"classes/GetSheduleDto.html":{},"injectables/SheduleService.html":{}}}],["classletter:body.classletter",{"_index":1769,"title":{},"body":{"injectables/SheduleService.html":{}}}],["classletter:string",{"_index":624,"title":{},"body":{"classes/CreateFiszkaDto.html":{}}}],["classnumber",{"_index":655,"title":{},"body":{"classes/CreateInterViewDto.html":{},"classes/EditInterViewDto.html":{},"injectables/InterviewsService.html":{}}}],["classroomhour",{"_index":669,"title":{},"body":{"classes/CreateRentalCostDto.html":{},"classes/EditRentalCostDto.html":{},"classes/GetRentalCostDto.html":{},"injectables/RentalCostService.html":{}}}],["classroomhour:decimal",{"_index":676,"title":{},"body":{"classes/CreateRentalCostDto.html":{},"classes/EditRentalCostDto.html":{},"classes/GetRentalCostDto.html":{}}}],["classvalidator",{"_index":1840,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["classvalidator(createuserdto",{"_index":1860,"title":{},"body":{"controllers/UserController.html":{}}}],["classvalidator(edituserdto",{"_index":1866,"title":{},"body":{"controllers/UserController.html":{}}}],["classvalidator(obj",{"_index":1985,"title":{},"body":{"miscellaneous/functions.html":{}}}],["clockhour",{"_index":670,"title":{},"body":{"classes/CreateRentalCostDto.html":{},"classes/EditRentalCostDto.html":{},"classes/GetRentalCostDto.html":{},"injectables/RentalCostService.html":{}}}],["clockhour:decimal",{"_index":677,"title":{},"body":{"classes/CreateRentalCostDto.html":{},"classes/EditRentalCostDto.html":{},"classes/GetRentalCostDto.html":{}}}],["cluster_appmodule",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":279,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":280,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":281,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":282,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_calluserhistorymodule",{"_index":424,"title":{},"body":{"modules/CallUserHistoryModule.html":{},"overview.html":{}}}],["cluster_calluserhistorymodule_providers",{"_index":425,"title":{},"body":{"modules/CallUserHistoryModule.html":{},"overview.html":{}}}],["cluster_contactmodule",{"_index":490,"title":{},"body":{"modules/ContactModule.html":{},"overview.html":{}}}],["cluster_contactmodule_imports",{"_index":491,"title":{},"body":{"modules/ContactModule.html":{},"overview.html":{}}}],["cluster_contactmodule_providers",{"_index":492,"title":{},"body":{"modules/ContactModule.html":{},"overview.html":{}}}],["cluster_contactpersonmodule",{"_index":528,"title":{},"body":{"modules/ContactPersonModule.html":{},"overview.html":{}}}],["cluster_contactpersonmodule_imports",{"_index":529,"title":{},"body":{"modules/ContactPersonModule.html":{}}}],["cluster_contactpersonmodule_providers",{"_index":530,"title":{},"body":{"modules/ContactPersonModule.html":{},"overview.html":{}}}],["cluster_directormodule",{"_index":815,"title":{},"body":{"modules/DirectorModule.html":{},"overview.html":{}}}],["cluster_directormodule_imports",{"_index":816,"title":{},"body":{"modules/DirectorModule.html":{}}}],["cluster_directormodule_providers",{"_index":817,"title":{},"body":{"modules/DirectorModule.html":{},"overview.html":{}}}],["cluster_fiszkamodule",{"_index":1029,"title":{},"body":{"modules/FiszkaModule.html":{},"overview.html":{}}}],["cluster_fiszkamodule_providers",{"_index":1030,"title":{},"body":{"modules/FiszkaModule.html":{},"overview.html":{}}}],["cluster_groupmodule",{"_index":1189,"title":{},"body":{"modules/GroupModule.html":{},"overview.html":{}}}],["cluster_groupmodule_imports",{"_index":1191,"title":{},"body":{"modules/GroupModule.html":{}}}],["cluster_groupmodule_providers",{"_index":1190,"title":{},"body":{"modules/GroupModule.html":{},"overview.html":{}}}],["cluster_interviewsmodule",{"_index":1291,"title":{},"body":{"modules/InterviewsModule.html":{},"overview.html":{}}}],["cluster_interviewsmodule_imports",{"_index":1292,"title":{},"body":{"modules/InterviewsModule.html":{}}}],["cluster_interviewsmodule_providers",{"_index":1293,"title":{},"body":{"modules/InterviewsModule.html":{},"overview.html":{}}}],["cluster_predictemodule",{"_index":1445,"title":{},"body":{"modules/PredicteModule.html":{},"overview.html":{}}}],["cluster_predictemodule_imports",{"_index":1447,"title":{},"body":{"modules/PredicteModule.html":{}}}],["cluster_predictemodule_providers",{"_index":1446,"title":{},"body":{"modules/PredicteModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":1478,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":1479,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":1480,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_rentalcostmodule",{"_index":1543,"title":{},"body":{"modules/RentalCostModule.html":{},"overview.html":{}}}],["cluster_rentalcostmodule_imports",{"_index":1544,"title":{},"body":{"modules/RentalCostModule.html":{}}}],["cluster_rentalcostmodule_providers",{"_index":1545,"title":{},"body":{"modules/RentalCostModule.html":{},"overview.html":{}}}],["cluster_schoolmodule",{"_index":1633,"title":{},"body":{"modules/SchoolModule.html":{},"overview.html":{}}}],["cluster_schoolmodule_imports",{"_index":1634,"title":{},"body":{"modules/SchoolModule.html":{}}}],["cluster_schoolmodule_providers",{"_index":1635,"title":{},"body":{"modules/SchoolModule.html":{},"overview.html":{}}}],["cluster_sheduledaysmodule",{"_index":1720,"title":{},"body":{"modules/SheduleDaysModule.html":{},"overview.html":{}}}],["cluster_sheduledaysmodule_imports",{"_index":1722,"title":{},"body":{"modules/SheduleDaysModule.html":{}}}],["cluster_sheduledaysmodule_providers",{"_index":1721,"title":{},"body":{"modules/SheduleDaysModule.html":{},"overview.html":{}}}],["cluster_shedulemodule",{"_index":1748,"title":{},"body":{"modules/SheduleModule.html":{},"overview.html":{}}}],["cluster_shedulemodule_imports",{"_index":1749,"title":{},"body":{"modules/SheduleModule.html":{}}}],["cluster_shedulemodule_providers",{"_index":1750,"title":{},"body":{"modules/SheduleModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":1869,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_exports",{"_index":1870,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":1871,"title":{},"body":{"modules/UserModule.html":{}}}],["co",{"_index":1423,"title":{},"body":{"controllers/PredicteController.html":{}}}],["code",{"_index":1488,"title":{},"body":{"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{}}}],["codegroup",{"_index":634,"title":{},"body":{"classes/CreateGroupDto.html":{},"classes/EditGroupDto.html":{},"classes/GetGroupDto.html":{},"injectables/GroupService.html":{}}}],["comments",{"_index":437,"title":{},"body":{"injectables/CallUserHistoryService.html":{},"injectables/ContactService.html":{},"classes/CreateCallUserDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateSchoolDto.html":{},"classes/EditContactDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditSchoolDto.html":{},"injectables/FiszkaService.html":{},"classes/GetCallUserHistoryDto.html":{},"classes/GetContactDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetSchoolDto.html":{},"injectables/SchoolService.html":{}}}],["comments:string",{"_index":628,"title":{},"body":{"classes/CreateFiszkaDto.html":{}}}],["common/helpers/hashpass",{"_index":1898,"title":{},"body":{"injectables/UserService.html":{}}}],["common/validation/http",{"_index":1838,"title":{},"body":{"controllers/UserController.html":{}}}],["condition",{"_index":258,"title":{},"body":{"guards/AuthGuard.html":{}}}],["connect",{"_index":442,"title":{},"body":{"injectables/CallUserHistoryService.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"injectables/DirectorService.html":{},"injectables/FiszkaService.html":{},"injectables/GroupService.html":{},"injectables/InterviewsService.html":{},"injectables/RentalCostService.html":{},"injectables/SheduleService.html":{}}}],["console.log(\"before",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(\"końcowy",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(\"stary",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(\"test",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(\"token",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(\"user",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(exception",{"_index":1213,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{}}}],["console.log(requiredroles",{"_index":1571,"title":{},"body":{"guards/RolesGuard.html":{}}}],["console.log(role",{"_index":1795,"title":{},"body":{"injectables/UpperCasePipe.html":{}}}],["console.log(test",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(user",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(user.role",{"_index":1570,"title":{},"body":{"guards/RolesGuard.html":{}}}],["const",{"_index":68,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CallUserHistoryService.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"controllers/DirectorController.html":{},"injectables/DirectorService.html":{},"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"controllers/PredicteController.html":{},"injectables/PredicteService.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{},"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{},"guards/RolesGuard.html":{},"controllers/SchoolController.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"injectables/SheduleDaysService.html":{},"injectables/SheduleService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["constants",{"_index":249,"title":{},"body":{"guards/AuthGuard.html":{}}}],["constructor",{"_index":33,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CallUserHistoryService.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"injectables/DirectorService.html":{},"injectables/FiszkaService.html":{},"injectables/GroupService.html":{},"injectables/InterviewsService.html":{},"injectables/PredicteService.html":{},"injectables/PrismaService.html":{},"injectables/RentalCostService.html":{},"guards/RolesGuard.html":{},"injectables/SchoolService.html":{},"injectables/SheduleDaysService.html":{},"injectables/SheduleService.html":{},"injectables/UpperCasePipe.html":{},"injectables/UserService.html":{}}}],["constructor(@inject(request",{"_index":1792,"title":{},"body":{"injectables/UpperCasePipe.html":{}}}],["constructor(httpadapterhost",{"_index":34,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["constructor(jwtservice",{"_index":233,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["constructor(prisma",{"_index":429,"title":{},"body":{"injectables/CallUserHistoryService.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"injectables/DirectorService.html":{},"injectables/FiszkaService.html":{},"injectables/GroupService.html":{},"injectables/InterviewsService.html":{},"injectables/PredicteService.html":{},"injectables/RentalCostService.html":{},"injectables/SchoolService.html":{},"injectables/SheduleDaysService.html":{},"injectables/SheduleService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":65,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"controllers/CallUserHistoryController.html":{},"injectables/CallUserHistoryService.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"controllers/DirectorController.html":{},"injectables/DirectorService.html":{},"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{},"controllers/PredicteController.html":{},"injectables/PredicteService.html":{},"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{},"guards/RolesGuard.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"injectables/SheduleDaysService.html":{},"injectables/SheduleService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["constructor(reflector",{"_index":1561,"title":{},"body":{"guards/RolesGuard.html":{}}}],["constructor(req",{"_index":1780,"title":{},"body":{"injectables/UpperCasePipe.html":{}}}],["contact",{"_index":445,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{}}}],["contact.controller",{"_index":496,"title":{},"body":{"modules/ContactModule.html":{}}}],["contact.service",{"_index":469,"title":{},"body":{"controllers/ContactController.html":{},"modules/ContactModule.html":{}}}],["contactcontroller",{"_index":443,"title":{"controllers/ContactController.html":{}},"body":{"controllers/ContactController.html":{},"modules/ContactModule.html":{},"coverage.html":{}}}],["contactmodule",{"_index":126,"title":{"modules/ContactModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ContactModule.html":{},"modules.html":{},"overview.html":{}}}],["contactperson",{"_index":499,"title":{},"body":{"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{}}}],["contactperson.controller",{"_index":533,"title":{},"body":{"modules/ContactPersonModule.html":{}}}],["contactperson.service",{"_index":513,"title":{},"body":{"controllers/ContactPersonController.html":{},"modules/ContactPersonModule.html":{}}}],["contactpersoncontroller",{"_index":497,"title":{"controllers/ContactPersonController.html":{}},"body":{"controllers/ContactPersonController.html":{},"modules/ContactPersonModule.html":{},"coverage.html":{}}}],["contactpersonmodule",{"_index":127,"title":{"modules/ContactPersonModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ContactPersonModule.html":{},"modules.html":{},"overview.html":{}}}],["contactpersonservice",{"_index":512,"title":{"injectables/ContactPersonService.html":{}},"body":{"controllers/ContactPersonController.html":{},"modules/ContactPersonModule.html":{},"injectables/ContactPersonService.html":{},"coverage.html":{},"overview.html":{}}}],["contactservice",{"_index":468,"title":{"injectables/ContactService.html":{}},"body":{"controllers/ContactController.html":{},"modules/ContactModule.html":{},"injectables/ContactService.html":{},"coverage.html":{},"overview.html":{}}}],["context",{"_index":240,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RolesGuard.html":{}}}],["context.getclass",{"_index":256,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RolesGuard.html":{}}}],["context.gethandler",{"_index":255,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RolesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":260,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RolesGuard.html":{}}}],["controller",{"_index":109,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CallUserHistoryController.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/FiszkaController.html":{},"controllers/GroupController.html":{},"controllers/InterviewsController.html":{},"controllers/PredicteController.html":{},"controllers/RentalCostController.html":{},"controllers/SchoolController.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CallUserHistoryController.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/FiszkaController.html":{},"controllers/GroupController.html":{},"controllers/InterviewsController.html":{},"controllers/PredicteController.html":{},"controllers/RentalCostController.html":{},"controllers/SchoolController.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller(\"calluserhistory",{"_index":414,"title":{},"body":{"controllers/CallUserHistoryController.html":{}}}],["controller('auth",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('contact",{"_index":474,"title":{},"body":{"controllers/ContactController.html":{}}}],["controller('contactperson",{"_index":518,"title":{},"body":{"controllers/ContactPersonController.html":{}}}],["controller('director",{"_index":796,"title":{},"body":{"controllers/DirectorController.html":{}}}],["controller('fiszka",{"_index":981,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["controller('group",{"_index":1170,"title":{},"body":{"controllers/GroupController.html":{}}}],["controller('interviews",{"_index":1266,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["controller('predicte",{"_index":1384,"title":{},"body":{"controllers/PredicteController.html":{}}}],["controller('rentalcost",{"_index":1531,"title":{},"body":{"controllers/RentalCostController.html":{}}}],["controller('school",{"_index":1604,"title":{},"body":{"controllers/SchoolController.html":{}}}],["controller('shedule",{"_index":1678,"title":{},"body":{"controllers/SheduleController.html":{}}}],["controller('sheduleday",{"_index":1714,"title":{},"body":{"controllers/SheduleDaysController.html":{}}}],["controller('user",{"_index":1843,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":111,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CallUserHistoryController.html":{},"modules/CallUserHistoryModule.html":{},"controllers/ContactController.html":{},"modules/ContactModule.html":{},"controllers/ContactPersonController.html":{},"modules/ContactPersonModule.html":{},"controllers/DirectorController.html":{},"modules/DirectorModule.html":{},"controllers/FiszkaController.html":{},"modules/FiszkaModule.html":{},"controllers/GroupController.html":{},"modules/GroupModule.html":{},"controllers/InterviewsController.html":{},"modules/InterviewsModule.html":{},"controllers/PredicteController.html":{},"modules/PredicteModule.html":{},"controllers/RentalCostController.html":{},"modules/RentalCostModule.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"modules/SheduleDaysModule.html":{},"modules/SheduleModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["cooperation",{"_index":681,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/EditSchoolDto.html":{},"classes/GetSchoolDto.html":{},"injectables/SchoolService.html":{}}}],["cooperation:boolean",{"_index":714,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/EditSchoolDto.html":{}}}],["correct",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{}}}],["coverage",{"_index":1925,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":446,"title":{},"body":{"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"controllers/DirectorController.html":{},"injectables/DirectorService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"injectables/InterviewsService.html":{},"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"injectables/SheduleDaysService.html":{},"injectables/SheduleService.html":{}}}],["create(@body",{"_index":1694,"title":{},"body":{"controllers/SheduleController.html":{}}}],["create(@param('idschool",{"_index":484,"title":{},"body":{"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/RentalCostController.html":{}}}],["create(@req",{"_index":1177,"title":{},"body":{"controllers/GroupController.html":{},"controllers/SheduleDaysController.html":{}}}],["create(body",{"_index":1755,"title":{},"body":{"injectables/SheduleService.html":{}}}],["create(createsheduledto",{"_index":1664,"title":{},"body":{"controllers/SheduleController.html":{}}}],["create(idschool",{"_index":450,"title":{},"body":{"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"controllers/DirectorController.html":{},"injectables/DirectorService.html":{},"injectables/GroupService.html":{},"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{}}}],["create(idshedule",{"_index":1727,"title":{},"body":{"injectables/SheduleDaysService.html":{}}}],["create(req",{"_index":1152,"title":{},"body":{"controllers/GroupController.html":{},"controllers/SheduleDaysController.html":{}}}],["createcalluserdto",{"_index":384,"title":{"classes/CreateCallUserDto.html":{}},"body":{"controllers/CallUserHistoryController.html":{},"injectables/CallUserHistoryService.html":{},"classes/CreateCallUserDto.html":{},"coverage.html":{}}}],["createcontactdto",{"_index":451,"title":{"classes/CreateContactDto.html":{}},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{},"classes/CreateContactDto.html":{},"coverage.html":{}}}],["createcontactpersontdto",{"_index":500,"title":{"classes/CreateContactPersontDto.html":{}},"body":{"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{},"classes/CreateContactPersontDto.html":{},"coverage.html":{}}}],["createdfiszkas",{"_index":1064,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["createdirectordto",{"_index":598,"title":{"classes/CreateDirectorDto.html":{}},"body":{"classes/CreateDirectorDto.html":{},"controllers/DirectorController.html":{},"injectables/DirectorService.html":{},"coverage.html":{}}}],["createfiszkadto",{"_index":604,"title":{"classes/CreateFiszkaDto.html":{}},"body":{"classes/CreateFiszkaDto.html":{},"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{},"coverage.html":{}}}],["creategroupdto",{"_index":632,"title":{"classes/CreateGroupDto.html":{}},"body":{"classes/CreateGroupDto.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"coverage.html":{}}}],["createinterview",{"_index":1228,"title":{},"body":{"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{}}}],["createinterview(@body",{"_index":1289,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["createinterview(createinterviewdto",{"_index":1237,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["createinterview(data",{"_index":1305,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["createinterviewdto",{"_index":653,"title":{"classes/CreateInterViewDto.html":{}},"body":{"classes/CreateInterViewDto.html":{},"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{},"coverage.html":{}}}],["createrentalcostdto",{"_index":667,"title":{"classes/CreateRentalCostDto.html":{}},"body":{"classes/CreateRentalCostDto.html":{},"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{},"coverage.html":{}}}],["createschool",{"_index":1576,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["createschool(@req",{"_index":1619,"title":{},"body":{"controllers/SchoolController.html":{}}}],["createschool(region",{"_index":1640,"title":{},"body":{"injectables/SchoolService.html":{}}}],["createschool(req",{"_index":1582,"title":{},"body":{"controllers/SchoolController.html":{}}}],["createschooldto",{"_index":678,"title":{"classes/CreateSchoolDto.html":{}},"body":{"classes/CreateSchoolDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"coverage.html":{}}}],["createsheduledaysdto",{"_index":721,"title":{"classes/CreateSheduleDaysDto.html":{}},"body":{"classes/CreateSheduleDaysDto.html":{},"controllers/SheduleDaysController.html":{},"injectables/SheduleDaysService.html":{},"coverage.html":{}}}],["createsheduledto",{"_index":727,"title":{"classes/CreateSheduleDto.html":{}},"body":{"classes/CreateSheduleDto.html":{},"controllers/SheduleController.html":{},"injectables/SheduleService.html":{},"coverage.html":{}}}],["createuser",{"_index":1804,"title":{},"body":{"controllers/UserController.html":{}}}],["createuser(@body(uppercasepipe",{"_index":1858,"title":{},"body":{"controllers/UserController.html":{}}}],["createuser(createuserdto",{"_index":1808,"title":{},"body":{"controllers/UserController.html":{}}}],["createuserdto",{"_index":1811,"title":{},"body":{"controllers/UserController.html":{}}}],["createuserformgtmt",{"_index":1875,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserformgtmt(user",{"_index":1881,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserformgtmtdto",{"_index":737,"title":{"classes/CreateUserForMGTMTDto.html":{}},"body":{"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["createuserforrd",{"_index":1876,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserforrd(user",{"_index":1883,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserforrddto",{"_index":750,"title":{"classes/CreateUserForRdDto.html":{}},"body":{"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["ctx",{"_index":71,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{}}}],["ctx.getrequest",{"_index":79,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{}}}],["ctx.getresponse",{"_index":81,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{}}}],["cuttextfromunique",{"_index":1508,"title":{},"body":{"classes/PrismaValidationFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["cuttextfromunique(exception.message",{"_index":1510,"title":{},"body":{"classes/PrismaValidationFilter.html":{}}}],["cuttextfromunique(text",{"_index":1988,"title":{},"body":{"miscellaneous/functions.html":{}}}],["czeka",{"_index":1407,"title":{},"body":{"controllers/PredicteController.html":{}}}],["czenie",{"_index":1415,"title":{},"body":{"controllers/PredicteController.html":{}}}],["czy",{"_index":1358,"title":{},"body":{"injectables/InterviewsService.html":{},"controllers/PredicteController.html":{},"injectables/PredicteService.html":{}}}],["czyli",{"_index":411,"title":{},"body":{"controllers/CallUserHistoryController.html":{}}}],["dane",{"_index":1436,"title":{},"body":{"controllers/PredicteController.html":{}}}],["danego",{"_index":1027,"title":{},"body":{"controllers/FiszkaController.html":{},"controllers/SchoolController.html":{},"controllers/SheduleController.html":{}}}],["danej",{"_index":1014,"title":{},"body":{"controllers/FiszkaController.html":{},"controllers/GroupController.html":{},"controllers/SheduleController.html":{}}}],["dany",{"_index":1699,"title":{},"body":{"controllers/SheduleController.html":{}}}],["danych",{"_index":1697,"title":{},"body":{"controllers/SheduleController.html":{}}}],["danym",{"_index":810,"title":{},"body":{"controllers/DirectorController.html":{}}}],["data",{"_index":89,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/CallUserHistoryController.html":{},"injectables/CallUserHistoryService.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"injectables/DirectorService.html":{},"injectables/FiszkaService.html":{},"injectables/GroupService.html":{},"injectables/InterviewsService.html":{},"injectables/RentalCostService.html":{},"injectables/SchoolService.html":{},"controllers/SheduleDaysController.html":{},"injectables/SheduleDaysService.html":{},"injectables/SheduleService.html":{},"injectables/UserService.html":{}}}],["data.calldate",{"_index":439,"title":{},"body":{"injectables/CallUserHistoryService.html":{}}}],["data.callnext",{"_index":440,"title":{},"body":{"injectables/CallUserHistoryService.html":{}}}],["data.comments",{"_index":441,"title":{},"body":{"injectables/CallUserHistoryService.html":{}}}],["data.iduserlist",{"_index":1323,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["data.map(item",{"_index":1743,"title":{},"body":{"injectables/SheduleDaysService.html":{}}}],["date",{"_index":568,"title":{},"body":{"classes/CreateCallUserDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateInterViewDto.html":{},"classes/CreateSheduleDto.html":{},"classes/EditContactDto.html":{},"classes/EditInterViewDto.html":{},"classes/EditSheduleDto.html":{},"classes/GetCallUserHistoryDto.html":{},"classes/GetContactDto.html":{},"classes/GetSheduleDto.html":{},"injectables/InterviewsService.html":{},"injectables/SheduleService.html":{}}}],["date().todatestring",{"_index":1222,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["date().toisostring",{"_index":105,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{}}}],["date().tolocaletimestring(),date:new",{"_index":1221,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["date:body.date",{"_index":1770,"title":{},"body":{"injectables/SheduleService.html":{}}}],["dateofvisit",{"_index":561,"title":{},"body":{"injectables/ContactService.html":{},"classes/CreateContactDto.html":{},"classes/EditContactDto.html":{},"classes/GetContactDto.html":{}}}],["day",{"_index":723,"title":{},"body":{"classes/CreateSheduleDaysDto.html":{},"classes/EditSheduleDaysDto.html":{},"injectables/SheduleDaysService.html":{}}}],["day:true",{"_index":1735,"title":{},"body":{"injectables/SheduleDaysService.html":{}}}],["dayoftheweek",{"_index":635,"title":{},"body":{"classes/CreateGroupDto.html":{},"classes/EditGroupDto.html":{},"classes/GetGroupDto.html":{},"injectables/GroupService.html":{}}}],["dayoftheweek:daysoftheweek",{"_index":650,"title":{},"body":{"classes/CreateGroupDto.html":{},"classes/EditGroupDto.html":{},"classes/GetGroupDto.html":{}}}],["daysoftheweek",{"_index":641,"title":{},"body":{"classes/CreateGroupDto.html":{},"classes/CreateSheduleDaysDto.html":{},"classes/EditGroupDto.html":{},"classes/EditSheduleDaysDto.html":{},"classes/GetGroupDto.html":{}}}],["dałem",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{}}}],["decimal",{"_index":671,"title":{},"body":{"classes/CreateRentalCostDto.html":{},"classes/EditRentalCostDto.html":{},"classes/GetRentalCostDto.html":{}}}],["declarations",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CallUserHistoryModule.html":{},"modules/ContactModule.html":{},"modules/ContactPersonModule.html":{},"modules/DirectorModule.html":{},"modules/FiszkaModule.html":{},"modules/GroupModule.html":{},"modules/InterviewsModule.html":{},"modules/PredicteModule.html":{},"modules/PrismaModule.html":{},"modules/RentalCostModule.html":{},"modules/SchoolModule.html":{},"modules/SheduleDaysModule.html":{},"modules/SheduleModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decoded",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{}}}],["decoded.email",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{}}}],["decodeddata",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{}}}],["decodeddata.email",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{}}}],["decodedto",{"_index":315,"title":{"classes/DecodeDto.html":{}},"body":{"injectables/AuthService.html":{},"classes/DecodeDto.html":{},"coverage.html":{}}}],["decorators",{"_index":13,"title":{},"body":{"classes/AddUserInterViewDto.html":{},"classes/AddgroupDto.html":{},"controllers/AuthController.html":{},"controllers/CallUserHistoryController.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"classes/CreateCallUserDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateInterViewDto.html":{},"classes/CreateRentalCostDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateSheduleDaysDto.html":{},"classes/CreateSheduleDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"controllers/DirectorController.html":{},"classes/EditContactDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditGroupDto.html":{},"classes/EditInterViewDto.html":{},"classes/EditRentalCostDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSheduleDaysDto.html":{},"classes/EditSheduleDto.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"controllers/FiszkaController.html":{},"classes/GetCallUserHistoryDto.html":{},"classes/GetContactDto.html":{},"classes/GetContactPersontDto.html":{},"classes/GetDirectorDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetGroupDto.html":{},"classes/GetRentalCostDto.html":{},"classes/GetSchoolDto.html":{},"classes/GetSheduleDto.html":{},"classes/GetUserDto.html":{},"controllers/GroupController.html":{},"controllers/InterviewsController.html":{},"classes/LoginUserDto.html":{},"controllers/PredicteController.html":{},"classes/RefreshTokenDto.html":{},"classes/RemoveUserInterViewDto.html":{},"controllers/RentalCostController.html":{},"controllers/SchoolController.html":{},"classes/SendFiszkiDto.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"controllers/UserController.html":{},"classes/ValidationdDto.html":{}}}],["decorators/public.decorator",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{}}}],["decorators/roles.decorator",{"_index":1565,"title":{},"body":{"guards/RolesGuard.html":{}}}],["default",{"_index":2066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":15,"title":{},"body":{"classes/AddUserInterViewDto.html":{},"classes/AddgroupDto.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CallUserHistoryController.html":{},"injectables/CallUserHistoryService.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"classes/CreateCallUserDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateInterViewDto.html":{},"classes/CreateRentalCostDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateSheduleDaysDto.html":{},"classes/CreateSheduleDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/DecodeDto.html":{},"controllers/DirectorController.html":{},"injectables/DirectorService.html":{},"classes/EditContactDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditGroupDto.html":{},"classes/EditInterViewDto.html":{},"classes/EditRentalCostDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSheduleDaysDto.html":{},"classes/EditSheduleDto.html":{},"classes/EditUser.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{},"classes/GetCallUserHistoryDto.html":{},"classes/GetContactDto.html":{},"classes/GetContactPersontDto.html":{},"classes/GetDirectorDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetGroupDto.html":{},"classes/GetRentalCostDto.html":{},"classes/GetSchoolDto.html":{},"classes/GetSheduleDto.html":{},"classes/GetUserDto.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{},"classes/LoginUserDto.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"controllers/PredicteController.html":{},"injectables/PredicteService.html":{},"classes/PrismaOtherFilter.html":{},"injectables/PrismaService.html":{},"classes/PrismaValidationFilter.html":{},"classes/RefreshTokenDto.html":{},"classes/RemoveUserInterViewDto.html":{},"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{},"guards/RolesGuard.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/SendFiszkiDto.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"injectables/SheduleDaysService.html":{},"injectables/SheduleService.html":{},"injectables/UpperCasePipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/ValidationdDto.html":{}}}],["dependencies",{"_index":116,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CallUserHistoryModule.html":{},"modules/ContactModule.html":{},"modules/ContactPersonModule.html":{},"modules/DirectorModule.html":{},"modules/FiszkaModule.html":{},"modules/GroupModule.html":{},"modules/InterviewsModule.html":{},"modules/PredicteModule.html":{},"modules/PrismaModule.html":{},"modules/RentalCostModule.html":{},"modules/SchoolModule.html":{},"modules/SheduleDaysModule.html":{},"modules/SheduleModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":2004,"title":{},"body":{"index.html":{},"properties.html":{}}}],["development",{"_index":2012,"title":{},"body":{"index.html":{}}}],["director",{"_index":781,"title":{},"body":{"controllers/DirectorController.html":{},"injectables/DirectorService.html":{}}}],["director.controller",{"_index":819,"title":{},"body":{"modules/DirectorModule.html":{}}}],["director.service",{"_index":791,"title":{},"body":{"controllers/DirectorController.html":{},"modules/DirectorModule.html":{}}}],["directorcontroller",{"_index":779,"title":{"controllers/DirectorController.html":{}},"body":{"controllers/DirectorController.html":{},"modules/DirectorModule.html":{},"coverage.html":{}}}],["directormodule",{"_index":128,"title":{"modules/DirectorModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DirectorModule.html":{},"modules.html":{},"overview.html":{}}}],["directorservice",{"_index":790,"title":{"injectables/DirectorService.html":{}},"body":{"controllers/DirectorController.html":{},"modules/DirectorModule.html":{},"injectables/DirectorService.html":{},"coverage.html":{},"overview.html":{}}}],["dla",{"_index":807,"title":{},"body":{"controllers/DirectorController.html":{},"controllers/GroupController.html":{},"controllers/RentalCostController.html":{},"controllers/SchoolController.html":{},"controllers/SheduleController.html":{}}}],["dni",{"_index":1394,"title":{},"body":{"controllers/PredicteController.html":{}}}],["documentation",{"_index":1926,"title":{},"body":{"coverage.html":{}}}],["dodanie",{"_index":813,"title":{},"body":{"controllers/DirectorController.html":{},"controllers/FiszkaController.html":{},"controllers/GroupController.html":{},"controllers/RentalCostController.html":{}}}],["dodawa",{"_index":409,"title":{},"body":{"controllers/CallUserHistoryController.html":{}}}],["dodawanie",{"_index":1183,"title":{},"body":{"controllers/GroupController.html":{}}}],["dr",{"_index":406,"title":{},"body":{"controllers/CallUserHistoryController.html":{},"controllers/DirectorController.html":{},"controllers/FiszkaController.html":{},"controllers/SheduleController.html":{}}}],["druga",{"_index":1431,"title":{},"body":{"controllers/PredicteController.html":{}}}],["dto",{"_index":1986,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dto/addgroup.dto",{"_index":980,"title":{},"body":{"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{}}}],["dto/adduserinterview.dto",{"_index":1263,"title":{},"body":{"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{}}}],["dto/createcalluser.dto",{"_index":404,"title":{},"body":{"controllers/CallUserHistoryController.html":{},"injectables/CallUserHistoryService.html":{}}}],["dto/createcontact.dto",{"_index":472,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{}}}],["dto/createcontactperson.dto",{"_index":516,"title":{},"body":{"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{}}}],["dto/createdirector.dto",{"_index":793,"title":{},"body":{"controllers/DirectorController.html":{},"injectables/DirectorService.html":{}}}],["dto/createfiszka.dto",{"_index":979,"title":{},"body":{"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{}}}],["dto/creategroup.dto",{"_index":1168,"title":{},"body":{"controllers/GroupController.html":{},"injectables/GroupService.html":{}}}],["dto/createinterview.dto",{"_index":1262,"title":{},"body":{"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{}}}],["dto/createrentalcost.dto",{"_index":1528,"title":{},"body":{"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{}}}],["dto/createschool.dto",{"_index":1602,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["dto/createshedule.dto",{"_index":1676,"title":{},"body":{"controllers/SheduleController.html":{},"injectables/SheduleService.html":{}}}],["dto/createsheduledays.dto",{"_index":1712,"title":{},"body":{"controllers/SheduleDaysController.html":{},"injectables/SheduleDaysService.html":{}}}],["dto/createuser.dto",{"_index":1834,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/decode.dto",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{}}}],["dto/editcontact.dto",{"_index":473,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{}}}],["dto/editcontactperson.dto",{"_index":517,"title":{},"body":{"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{}}}],["dto/editdirector.dto",{"_index":792,"title":{},"body":{"controllers/DirectorController.html":{},"injectables/DirectorService.html":{}}}],["dto/editfiszka.dto",{"_index":978,"title":{},"body":{"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{}}}],["dto/editgroup.dto",{"_index":1169,"title":{},"body":{"controllers/GroupController.html":{},"injectables/GroupService.html":{}}}],["dto/editinterview.dto",{"_index":1264,"title":{},"body":{"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{}}}],["dto/editrentalcost.dto",{"_index":1530,"title":{},"body":{"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{}}}],["dto/editschool.dto",{"_index":1601,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["dto/editshedule.dto",{"_index":1677,"title":{},"body":{"controllers/SheduleController.html":{},"injectables/SheduleService.html":{}}}],["dto/editsheduledays.dto",{"_index":1713,"title":{},"body":{"controllers/SheduleDaysController.html":{},"injectables/SheduleDaysService.html":{}}}],["dto/edituser.dto",{"_index":1836,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/getcalluserhistory.dto",{"_index":403,"title":{},"body":{"controllers/CallUserHistoryController.html":{}}}],["dto/getclassfromfiszki.dto",{"_index":1383,"title":{},"body":{"controllers/PredicteController.html":{},"injectables/PredicteService.html":{}}}],["dto/getcontact.dto",{"_index":471,"title":{},"body":{"controllers/ContactController.html":{}}}],["dto/getcontactperson.dto",{"_index":515,"title":{},"body":{"controllers/ContactPersonController.html":{}}}],["dto/getdirector.dto",{"_index":795,"title":{},"body":{"controllers/DirectorController.html":{}}}],["dto/getfiszka.dto",{"_index":977,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["dto/getgroup.dto",{"_index":1167,"title":{},"body":{"controllers/GroupController.html":{}}}],["dto/getrentalcost.dto",{"_index":1529,"title":{},"body":{"controllers/RentalCostController.html":{}}}],["dto/getschool.dto",{"_index":1603,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["dto/getuser.dto",{"_index":1837,"title":{},"body":{"controllers/UserController.html":{}}}],["dto/removeuserinterview.dto",{"_index":1265,"title":{},"body":{"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{}}}],["dto/validation.dto",{"_index":1842,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dyrektora",{"_index":805,"title":{},"body":{"controllers/DirectorController.html":{}}}],["działa",{"_index":1359,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["dzieci",{"_index":1386,"title":{},"body":{"controllers/PredicteController.html":{}}}],["dzwoni",{"_index":412,"title":{},"body":{"controllers/CallUserHistoryController.html":{}}}],["e",{"_index":1426,"title":{},"body":{"controllers/PredicteController.html":{}}}],["e2e",{"_index":2022,"title":{},"body":{"index.html":{}}}],["edit",{"_index":447,"title":{},"body":{"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"controllers/DirectorController.html":{},"injectables/DirectorService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"injectables/SheduleDaysService.html":{},"injectables/SheduleService.html":{}}}],["edit(@param('idcontactperson",{"_index":525,"title":{},"body":{"controllers/ContactPersonController.html":{}}}],["edit(@param('idschool",{"_index":487,"title":{},"body":{"controllers/ContactController.html":{},"controllers/DirectorController.html":{}}}],["edit(@req",{"_index":1180,"title":{},"body":{"controllers/GroupController.html":{},"controllers/SheduleDaysController.html":{}}}],["edit(body",{"_index":1757,"title":{},"body":{"injectables/SheduleService.html":{}}}],["edit(editsheduledto",{"_index":1666,"title":{},"body":{"controllers/SheduleController.html":{}}}],["edit(idcontactperson",{"_index":502,"title":{},"body":{"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{}}}],["edit(idschool",{"_index":456,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{},"controllers/DirectorController.html":{},"injectables/DirectorService.html":{},"injectables/GroupService.html":{}}}],["edit(idshedule",{"_index":1729,"title":{},"body":{"injectables/SheduleDaysService.html":{}}}],["edit(req",{"_index":1156,"title":{},"body":{"controllers/GroupController.html":{},"controllers/SheduleDaysController.html":{}}}],["editcontactdto",{"_index":458,"title":{"classes/EditContactDto.html":{}},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{},"classes/EditContactDto.html":{},"coverage.html":{}}}],["editcontactpersontdto",{"_index":504,"title":{"classes/EditContactPersontDto.html":{}},"body":{"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{},"classes/EditContactPersontDto.html":{},"coverage.html":{}}}],["editdirectordto",{"_index":783,"title":{"classes/EditDirectorDto.html":{}},"body":{"controllers/DirectorController.html":{},"injectables/DirectorService.html":{},"classes/EditDirectorDto.html":{},"coverage.html":{}}}],["editfiszkadto",{"_index":845,"title":{"classes/EditFiszkaDto.html":{}},"body":{"classes/EditFiszkaDto.html":{},"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{},"coverage.html":{}}}],["editfiszkard",{"_index":938,"title":{},"body":{"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{}}}],["editfiszkard(@param('idfiszka",{"_index":999,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["editfiszkard(idfiszka",{"_index":955,"title":{},"body":{"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{}}}],["editfiszkauser",{"_index":939,"title":{},"body":{"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{}}}],["editfiszkauser(@param('idfiszka",{"_index":1002,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["editfiszkauser(idfiszka",{"_index":958,"title":{},"body":{"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{}}}],["editgroupdto",{"_index":858,"title":{"classes/EditGroupDto.html":{}},"body":{"classes/EditGroupDto.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"coverage.html":{}}}],["editinterview",{"_index":1229,"title":{},"body":{"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{}}}],["editinterview(@param('idinterview",{"_index":1280,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["editinterview(idinterview",{"_index":1240,"title":{},"body":{"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{}}}],["editinterviewdto",{"_index":866,"title":{"classes/EditInterViewDto.html":{}},"body":{"classes/EditInterViewDto.html":{},"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{},"coverage.html":{}}}],["editrentalcostdto",{"_index":872,"title":{"classes/EditRentalCostDto.html":{}},"body":{"classes/EditRentalCostDto.html":{},"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{},"coverage.html":{}}}],["editschool",{"_index":1577,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["editschool(@param('id",{"_index":1617,"title":{},"body":{"controllers/SchoolController.html":{}}}],["editschool(schoolid",{"_index":1585,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["editschooldto",{"_index":876,"title":{"classes/EditSchoolDto.html":{}},"body":{"classes/EditSchoolDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"coverage.html":{}}}],["editsheduledaysdto",{"_index":892,"title":{"classes/EditSheduleDaysDto.html":{}},"body":{"classes/EditSheduleDaysDto.html":{},"controllers/SheduleDaysController.html":{},"injectables/SheduleDaysService.html":{},"coverage.html":{}}}],["editsheduledto",{"_index":896,"title":{"classes/EditSheduleDto.html":{}},"body":{"classes/EditSheduleDto.html":{},"controllers/SheduleController.html":{},"injectables/SheduleService.html":{},"coverage.html":{}}}],["edituser",{"_index":901,"title":{"classes/EditUser.html":{}},"body":{"classes/EditUser.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["edituser(@param('id",{"_index":1864,"title":{},"body":{"controllers/UserController.html":{}}}],["edituser(id",{"_index":1812,"title":{},"body":{"controllers/UserController.html":{}}}],["edituserdto",{"_index":1813,"title":{},"body":{"controllers/UserController.html":{}}}],["edituserformgtmt",{"_index":1877,"title":{},"body":{"injectables/UserService.html":{}}}],["edituserformgtmt(edituserforrddto",{"_index":1885,"title":{},"body":{"injectables/UserService.html":{}}}],["edituserformgtmtdto",{"_index":913,"title":{"classes/EditUserForMGTMTDto.html":{}},"body":{"classes/EditUser.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["edituserforrd",{"_index":1878,"title":{},"body":{"injectables/UserService.html":{}}}],["edituserforrd(edituserforrddto",{"_index":1887,"title":{},"body":{"injectables/UserService.html":{}}}],["edituserforrddto",{"_index":912,"title":{"classes/EditUserForRdDto.html":{}},"body":{"classes/EditUser.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["edycja",{"_index":814,"title":{},"body":{"controllers/DirectorController.html":{},"controllers/FiszkaController.html":{},"controllers/GroupController.html":{},"controllers/RentalCostController.html":{},"controllers/SchoolController.html":{}}}],["efficient",{"_index":1999,"title":{},"body":{"index.html":{}}}],["email",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ContactPersonService.html":{},"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/DecodeDto.html":{},"injectables/DirectorService.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditUser.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"injectables/FiszkaService.html":{},"classes/GetContactPersontDto.html":{},"classes/GetDirectorDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetSchoolDto.html":{},"classes/GetUserDto.html":{},"classes/LoginUserDto.html":{},"injectables/SchoolService.html":{},"injectables/UserService.html":{},"classes/ValidationdDto.html":{}}}],["email:string",{"_index":631,"title":{},"body":{"classes/CreateFiszkaDto.html":{},"classes/DecodeDto.html":{}}}],["enableshutdownhooks",{"_index":1493,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":1496,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enumerations",{"_index":1976,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{}}}],["errorobj",{"_index":1215,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["errorobj.message",{"_index":1218,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["etapu",{"_index":1438,"title":{},"body":{"controllers/PredicteController.html":{}}}],["exception",{"_index":44,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{}}}],["exception.clientversion",{"_index":1489,"title":{},"body":{"classes/PrismaOtherFilter.html":{}}}],["exception.code",{"_index":1511,"title":{},"body":{"classes/PrismaValidationFilter.html":{}}}],["exception.constructor.name",{"_index":77,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.filter",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CallUserHistoryController.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/FiszkaController.html":{},"controllers/GroupController.html":{},"controllers/InterviewsController.html":{},"controllers/PredicteController.html":{},"controllers/RentalCostController.html":{},"controllers/SchoolController.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"controllers/UserController.html":{}}}],["exception.filter.ts",{"_index":1208,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:9",{"_index":1209,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.getresponse",{"_index":1214,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.getstatus",{"_index":74,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotFoundExceptionFilter.html":{}}}],["exception.message",{"_index":1219,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/PrismaOtherFilter.html":{}}}],["exceptionfilter",{"_index":30,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{}}}],["executioncontext",{"_index":238,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RolesGuard.html":{}}}],["existinguserids",{"_index":1327,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["existinguserids.includes(id",{"_index":1332,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["existinguserids.includes(userinterviewids[index",{"_index":1348,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["exp",{"_index":766,"title":{},"body":{"classes/DecodeDto.html":{}}}],["exp:number",{"_index":778,"title":{},"body":{"classes/DecodeDto.html":{}}}],["expired",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresin",{"_index":293,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":19,"title":{},"body":{"classes/AddUserInterViewDto.html":{},"classes/AddgroupDto.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallUserHistoryController.html":{},"modules/CallUserHistoryModule.html":{},"injectables/CallUserHistoryService.html":{},"controllers/ContactController.html":{},"modules/ContactModule.html":{},"controllers/ContactPersonController.html":{},"modules/ContactPersonModule.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"classes/CreateCallUserDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateInterViewDto.html":{},"classes/CreateRentalCostDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateSheduleDaysDto.html":{},"classes/CreateSheduleDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/DecodeDto.html":{},"controllers/DirectorController.html":{},"modules/DirectorModule.html":{},"injectables/DirectorService.html":{},"classes/EditContactDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditGroupDto.html":{},"classes/EditInterViewDto.html":{},"classes/EditRentalCostDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSheduleDaysDto.html":{},"classes/EditSheduleDto.html":{},"classes/EditUser.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"controllers/FiszkaController.html":{},"modules/FiszkaModule.html":{},"injectables/FiszkaService.html":{},"classes/GetCallUserHistoryDto.html":{},"classes/GetContactDto.html":{},"classes/GetContactPersontDto.html":{},"classes/GetDirectorDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetGroupDto.html":{},"classes/GetRentalCostDto.html":{},"classes/GetSchoolDto.html":{},"classes/GetSheduleDto.html":{},"classes/GetUserDto.html":{},"controllers/GroupController.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/InterviewsController.html":{},"modules/InterviewsModule.html":{},"injectables/InterviewsService.html":{},"classes/LoginUserDto.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"controllers/PredicteController.html":{},"modules/PredicteModule.html":{},"injectables/PredicteService.html":{},"modules/PrismaModule.html":{},"classes/PrismaOtherFilter.html":{},"injectables/PrismaService.html":{},"classes/PrismaValidationFilter.html":{},"classes/RefreshTokenDto.html":{},"classes/RemoveUserInterViewDto.html":{},"controllers/RentalCostController.html":{},"modules/RentalCostModule.html":{},"injectables/RentalCostService.html":{},"guards/RolesGuard.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"classes/SendFiszkiDto.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"modules/SheduleDaysModule.html":{},"injectables/SheduleDaysService.html":{},"modules/SheduleModule.html":{},"injectables/SheduleService.html":{},"injectables/UpperCasePipe.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidationdDto.html":{}}}],["exports",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CallUserHistoryModule.html":{},"modules/ContactModule.html":{},"modules/ContactPersonModule.html":{},"modules/DirectorModule.html":{},"modules/FiszkaModule.html":{},"modules/GroupModule.html":{},"modules/InterviewsModule.html":{},"modules/PredicteModule.html":{},"modules/PrismaModule.html":{},"modules/RentalCostModule.html":{},"modules/SchoolModule.html":{},"modules/SheduleDaysModule.html":{},"modules/SheduleModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["exports:[prismaservice",{"_index":1484,"title":{},"body":{"modules/PrismaModule.html":{}}}],["express",{"_index":247,"title":{},"body":{"guards/AuthGuard.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/FiszkaController.html":{},"controllers/GroupController.html":{},"classes/HttpExceptionFilter.html":{},"controllers/InterviewsController.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{},"controllers/RentalCostController.html":{},"controllers/SchoolController.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"injectables/UpperCasePipe.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["extends",{"_index":1491,"title":{},"body":{"injectables/PrismaService.html":{}}}],["extracttokenfromheader",{"_index":232,"title":{},"body":{"guards/AuthGuard.html":{}}}],["extracttokenfromheader(request",{"_index":242,"title":{},"body":{"guards/AuthGuard.html":{}}}],["false",{"_index":1920,"title":{},"body":{"injectables/UserService.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AddUserInterViewDto.html":{},"classes/AddgroupDto.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallUserHistoryController.html":{},"modules/CallUserHistoryModule.html":{},"injectables/CallUserHistoryService.html":{},"controllers/ContactController.html":{},"modules/ContactModule.html":{},"controllers/ContactPersonController.html":{},"modules/ContactPersonModule.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"classes/CreateCallUserDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateInterViewDto.html":{},"classes/CreateRentalCostDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateSheduleDaysDto.html":{},"classes/CreateSheduleDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/DecodeDto.html":{},"controllers/DirectorController.html":{},"modules/DirectorModule.html":{},"injectables/DirectorService.html":{},"classes/EditContactDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditGroupDto.html":{},"classes/EditInterViewDto.html":{},"classes/EditRentalCostDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSheduleDaysDto.html":{},"classes/EditSheduleDto.html":{},"classes/EditUser.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"controllers/FiszkaController.html":{},"modules/FiszkaModule.html":{},"injectables/FiszkaService.html":{},"classes/GetCallUserHistoryDto.html":{},"classes/GetContactDto.html":{},"classes/GetContactPersontDto.html":{},"classes/GetDirectorDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetGroupDto.html":{},"classes/GetRentalCostDto.html":{},"classes/GetSchoolDto.html":{},"classes/GetSheduleDto.html":{},"classes/GetUserDto.html":{},"controllers/GroupController.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/InterviewsController.html":{},"modules/InterviewsModule.html":{},"injectables/InterviewsService.html":{},"classes/LoginUserDto.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"controllers/PredicteController.html":{},"modules/PredicteModule.html":{},"injectables/PredicteService.html":{},"modules/PrismaModule.html":{},"classes/PrismaOtherFilter.html":{},"injectables/PrismaService.html":{},"classes/PrismaValidationFilter.html":{},"classes/RefreshTokenDto.html":{},"classes/RemoveUserInterViewDto.html":{},"controllers/RentalCostController.html":{},"modules/RentalCostModule.html":{},"injectables/RentalCostService.html":{},"guards/RolesGuard.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"classes/SendFiszkiDto.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"modules/SheduleDaysModule.html":{},"injectables/SheduleDaysService.html":{},"modules/SheduleModule.html":{},"injectables/SheduleService.html":{},"injectables/UpperCasePipe.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidationdDto.html":{},"coverage.html":{}}}],["find",{"_index":827,"title":{},"body":{"injectables/DirectorService.html":{},"injectables/RentalCostService.html":{}}}],["find.director",{"_index":829,"title":{},"body":{"injectables/DirectorService.html":{}}}],["find.rentalcost",{"_index":1555,"title":{},"body":{"injectables/RentalCostService.html":{}}}],["findall",{"_index":1578,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"injectables/SheduleDaysService.html":{},"injectables/SheduleService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findall(@req",{"_index":1606,"title":{},"body":{"controllers/SchoolController.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"controllers/UserController.html":{}}}],["findall(idshedule",{"_index":1731,"title":{},"body":{"injectables/SheduleDaysService.html":{}}}],["findall(region",{"_index":1643,"title":{},"body":{"injectables/SchoolService.html":{},"injectables/SheduleService.html":{}}}],["findall(req",{"_index":1588,"title":{},"body":{"controllers/SchoolController.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"controllers/UserController.html":{}}}],["findallbyinterview",{"_index":940,"title":{},"body":{"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{}}}],["findallbyinterview(@param('idinterview",{"_index":983,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["findallbyinterview(idinterview",{"_index":961,"title":{},"body":{"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{}}}],["findallbyme",{"_index":941,"title":{},"body":{"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{}}}],["findallbyme(@param('idinterview",{"_index":996,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["findallbyme(idinterview",{"_index":965,"title":{},"body":{"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{}}}],["findallbyschool",{"_index":1230,"title":{},"body":{"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{}}}],["findallbyschool(@param('idschool",{"_index":1274,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["findallbyschool(idschool",{"_index":1243,"title":{},"body":{"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{}}}],["findallbyuser",{"_index":942,"title":{},"body":{"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{},"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{}}}],["findallbyuser(@param('idinterview",{"_index":988,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["findallbyuser(@req",{"_index":1268,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["findallbyuser(idinterview",{"_index":968,"title":{},"body":{"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{}}}],["findallbyuser(iduser",{"_index":1309,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["findallbyuser(req",{"_index":1246,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["findallformgtm",{"_index":1579,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["findallforuser",{"_index":943,"title":{},"body":{"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{}}}],["findallforuser(@param('idemployee",{"_index":992,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["findallforuser(idemployee",{"_index":1042,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["findallforuser(userid",{"_index":971,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["findallregion",{"_index":1805,"title":{},"body":{"controllers/UserController.html":{}}}],["findallregion(@param('region",{"_index":1852,"title":{},"body":{"controllers/UserController.html":{}}}],["findallregion(region",{"_index":1818,"title":{},"body":{"controllers/UserController.html":{}}}],["findbyid",{"_index":1580,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/SheduleController.html":{},"injectables/SheduleService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findbyid(@param('id",{"_index":1609,"title":{},"body":{"controllers/SchoolController.html":{},"controllers/UserController.html":{}}}],["findbyid(@req",{"_index":1689,"title":{},"body":{"controllers/SheduleController.html":{}}}],["findbyid(id",{"_index":1821,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findbyid(region",{"_index":1760,"title":{},"body":{"injectables/SheduleService.html":{}}}],["findbyid(req",{"_index":1672,"title":{},"body":{"controllers/SheduleController.html":{}}}],["findbyid(schoolid",{"_index":1593,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["findbyidformgtm",{"_index":1581,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["findbyidformgtm(@param('id",{"_index":1614,"title":{},"body":{"controllers/SchoolController.html":{}}}],["findbyidformgtm(schoolid",{"_index":1596,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["findbyregion",{"_index":1879,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyregion(region",{"_index":1892,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyuser",{"_index":1231,"title":{},"body":{"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{}}}],["findbyuser(@param('iduser",{"_index":1277,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["findbyuser(iduser",{"_index":1249,"title":{},"body":{"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{}}}],["findbyuser(iduser:string",{"_index":1318,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["findmybyschool",{"_index":1232,"title":{},"body":{"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{}}}],["findmybyschool(@param('idschool",{"_index":1271,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["findmybyschool(idschool",{"_index":1252,"title":{},"body":{"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{}}}],["findtotalbyid",{"_index":1806,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findtotalbyid(@req",{"_index":1856,"title":{},"body":{"controllers/UserController.html":{}}}],["findtotalbyid(id",{"_index":1894,"title":{},"body":{"injectables/UserService.html":{}}}],["findtotalbyid(req",{"_index":1824,"title":{},"body":{"controllers/UserController.html":{}}}],["fiszek",{"_index":1018,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["fiszka",{"_index":434,"title":{},"body":{"injectables/CallUserHistoryService.html":{},"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{},"classes/GetGroupDto.html":{},"injectables/UserService.html":{}}}],["fiszka.classdigit",{"_index":1060,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["fiszka.classletter",{"_index":1059,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["fiszka.comments",{"_index":1061,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["fiszka.controller",{"_index":1032,"title":{},"body":{"modules/FiszkaModule.html":{}}}],["fiszka.email",{"_index":1063,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["fiszka.id",{"_index":1473,"title":{},"body":{"injectables/PredicteService.html":{}}}],["fiszka.interviews?.schoolid",{"_index":1477,"title":{},"body":{"injectables/PredicteService.html":{}}}],["fiszka.name",{"_index":1057,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["fiszka.phone",{"_index":1062,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["fiszka.service",{"_index":975,"title":{},"body":{"controllers/FiszkaController.html":{},"modules/FiszkaModule.html":{}}}],["fiszka.surname",{"_index":1058,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["fiszkacontroller",{"_index":934,"title":{"controllers/FiszkaController.html":{}},"body":{"controllers/FiszkaController.html":{},"modules/FiszkaModule.html":{},"coverage.html":{}}}],["fiszkamodule",{"_index":129,"title":{"modules/FiszkaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FiszkaModule.html":{},"modules.html":{},"overview.html":{}}}],["fiszkaservice",{"_index":974,"title":{"injectables/FiszkaService.html":{}},"body":{"controllers/FiszkaController.html":{},"modules/FiszkaModule.html":{},"injectables/FiszkaService.html":{},"coverage.html":{},"overview.html":{}}}],["fiszki",{"_index":1013,"title":{},"body":{"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{},"classes/GetGroupDto.html":{},"injectables/GroupService.html":{},"injectables/InterviewsService.html":{},"injectables/PredicteService.html":{}}}],["fiszki.map((fiszka",{"_index":1472,"title":{},"body":{"injectables/PredicteService.html":{}}}],["fiszki:fiszka",{"_index":1112,"title":{},"body":{"classes/GetGroupDto.html":{}}}],["fiszkiids",{"_index":1471,"title":{},"body":{"injectables/PredicteService.html":{}}}],["fiszkischooldata",{"_index":1475,"title":{},"body":{"injectables/PredicteService.html":{}}}],["forbiddenexception",{"_index":1045,"title":{},"body":{"injectables/FiszkaService.html":{},"injectables/InterviewsService.html":{},"injectables/SheduleDaysService.html":{}}}],["forbiddenexception(`bad",{"_index":1741,"title":{},"body":{"injectables/SheduleDaysService.html":{}}}],["forbiddenexception(`interview(id:${interviewid",{"_index":1325,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["forbiddenexception(`one",{"_index":1337,"title":{},"body":{"injectables/InterviewsService.html":{},"injectables/SheduleDaysService.html":{}}}],["forbiddenexception(`this",{"_index":1052,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["found",{"_index":1326,"title":{},"body":{"injectables/InterviewsService.html":{},"injectables/SheduleDaysService.html":{},"injectables/SheduleService.html":{}}}],["framework",{"_index":1997,"title":{},"body":{"index.html":{}}}],["friday",{"_index":1470,"title":{},"body":{"injectables/PredicteService.html":{}}}],["function",{"_index":1931,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1978,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":1853,"title":{},"body":{"controllers/UserController.html":{}}}],["get('find/:idshedule",{"_index":1688,"title":{},"body":{"controllers/SheduleController.html":{}}}],["get('findall",{"_index":1605,"title":{},"body":{"controllers/SchoolController.html":{},"controllers/UserController.html":{}}}],["get('findall/:idinterview",{"_index":987,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["get('findall/:idinterview/:idemployee",{"_index":982,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["get('findall/:idschool",{"_index":1686,"title":{},"body":{"controllers/SheduleController.html":{}}}],["get('findall/mgtmt",{"_index":1611,"title":{},"body":{"controllers/SchoolController.html":{}}}],["get('findallbyme/:idinterview",{"_index":995,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["get('findallbyschool/:idschool",{"_index":1270,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["get('findallbyschool/rd/:idschool",{"_index":1273,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["get('findallbyuser",{"_index":1267,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["get('findallbyuser/rd/:iduser",{"_index":1276,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["get('findallforuser/:idemployee",{"_index":991,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["get('findbyid/:id",{"_index":1608,"title":{},"body":{"controllers/SchoolController.html":{}}}],["get('findbyid/mgtmt/:id",{"_index":1613,"title":{},"body":{"controllers/SchoolController.html":{}}}],["get('get/mgtmt/:idschool",{"_index":519,"title":{},"body":{"controllers/ContactPersonController.html":{},"controllers/RentalCostController.html":{}}}],["get('get/rd/:idschool",{"_index":521,"title":{},"body":{"controllers/ContactPersonController.html":{},"controllers/RentalCostController.html":{}}}],["get('getallhistory/:idfiszka",{"_index":418,"title":{},"body":{"controllers/CallUserHistoryController.html":{}}}],["get('getcontact/mgtmt/:idschool",{"_index":475,"title":{},"body":{"controllers/ContactController.html":{}}}],["get('getcontact/rd/:idschool",{"_index":479,"title":{},"body":{"controllers/ContactController.html":{}}}],["get('getdirector/mgtmt/:idschool",{"_index":797,"title":{},"body":{"controllers/DirectorController.html":{}}}],["get('getdirector/rd/:idschool",{"_index":799,"title":{},"body":{"controllers/DirectorController.html":{}}}],["get('getgroups/mgtmt/:idschool",{"_index":1175,"title":{},"body":{"controllers/GroupController.html":{}}}],["get('getgroups/rd/:idschool",{"_index":1171,"title":{},"body":{"controllers/GroupController.html":{}}}],["get('group/:idschool",{"_index":1432,"title":{},"body":{"controllers/PredicteController.html":{}}}],["get('profile",{"_index":223,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('region/:region",{"_index":1851,"title":{},"body":{"controllers/UserController.html":{}}}],["get('total",{"_index":1855,"title":{},"body":{"controllers/UserController.html":{}}}],["getallhistory",{"_index":382,"title":{},"body":{"controllers/CallUserHistoryController.html":{},"injectables/CallUserHistoryService.html":{}}}],["getallhistory(@param('idfiszka",{"_index":419,"title":{},"body":{"controllers/CallUserHistoryController.html":{}}}],["getallhistory(idfiszka",{"_index":390,"title":{},"body":{"controllers/CallUserHistoryController.html":{},"injectables/CallUserHistoryService.html":{}}}],["getbyidformgtmt",{"_index":448,"title":{},"body":{"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"controllers/DirectorController.html":{},"injectables/DirectorService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{}}}],["getbyidformgtmt(@param('idschool",{"_index":476,"title":{},"body":{"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/GroupController.html":{},"controllers/RentalCostController.html":{}}}],["getbyidformgtmt(idschool",{"_index":461,"title":{},"body":{"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"controllers/DirectorController.html":{},"injectables/DirectorService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{}}}],["getbyidforrd",{"_index":449,"title":{},"body":{"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"controllers/DirectorController.html":{},"injectables/DirectorService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{}}}],["getbyidforrd(@param('idschool",{"_index":480,"title":{},"body":{"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/RentalCostController.html":{}}}],["getbyidforrd(@req",{"_index":1172,"title":{},"body":{"controllers/GroupController.html":{}}}],["getbyidforrd(idschool",{"_index":464,"title":{},"body":{"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"controllers/DirectorController.html":{},"injectables/DirectorService.html":{},"injectables/GroupService.html":{},"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{}}}],["getbyidforrd(req",{"_index":1162,"title":{},"body":{"controllers/GroupController.html":{}}}],["getcalluserhistorydto",{"_index":402,"title":{"classes/GetCallUserHistoryDto.html":{}},"body":{"controllers/CallUserHistoryController.html":{},"classes/GetCallUserHistoryDto.html":{},"coverage.html":{}}}],["getcontactdto",{"_index":470,"title":{"classes/GetContactDto.html":{}},"body":{"controllers/ContactController.html":{},"classes/GetContactDto.html":{},"coverage.html":{}}}],["getcontactpersontdto",{"_index":514,"title":{"classes/GetContactPersontDto.html":{}},"body":{"controllers/ContactPersonController.html":{},"classes/GetContactPersontDto.html":{},"coverage.html":{}}}],["getdirectordto",{"_index":794,"title":{"classes/GetDirectorDto.html":{}},"body":{"controllers/DirectorController.html":{},"classes/GetDirectorDto.html":{},"coverage.html":{}}}],["getfiszkadto",{"_index":976,"title":{"classes/GetFiszkaDto.html":{}},"body":{"controllers/FiszkaController.html":{},"classes/GetFiszkaDto.html":{},"coverage.html":{}}}],["getgroupdto",{"_index":1103,"title":{"classes/GetGroupDto.html":{}},"body":{"classes/GetGroupDto.html":{},"controllers/GroupController.html":{},"coverage.html":{}}}],["getprofile",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprofile(@req",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprofile(req",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{}}}],["getrentalcostdto",{"_index":1113,"title":{"classes/GetRentalCostDto.html":{}},"body":{"classes/GetRentalCostDto.html":{},"controllers/RentalCostController.html":{},"coverage.html":{}}}],["getschooldto",{"_index":1117,"title":{"classes/GetSchoolDto.html":{}},"body":{"classes/GetSchoolDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"coverage.html":{}}}],["getsheduledto",{"_index":1134,"title":{"classes/GetSheduleDto.html":{}},"body":{"classes/GetSheduleDto.html":{},"coverage.html":{}}}],["getting",{"_index":1993,"title":{"index.html":{}},"body":{}}],["getuserdto",{"_index":1140,"title":{"classes/GetUserDto.html":{}},"body":{"classes/GetUserDto.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["global",{"_index":289,"title":{},"body":{"modules/AuthModule.html":{},"modules/PrismaModule.html":{},"modules/UserModule.html":{}}}],["godzinie",{"_index":1404,"title":{},"body":{"controllers/PredicteController.html":{}}}],["group",{"_index":1049,"title":{},"body":{"injectables/FiszkaService.html":{},"classes/GetFiszkaDto.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{}}}],["group.controller",{"_index":1193,"title":{},"body":{"modules/GroupModule.html":{}}}],["group.service",{"_index":1166,"title":{},"body":{"controllers/GroupController.html":{},"modules/GroupModule.html":{}}}],["group:group",{"_index":1102,"title":{},"body":{"classes/GetFiszkaDto.html":{}}}],["groupcontroller",{"_index":1150,"title":{"controllers/GroupController.html":{}},"body":{"controllers/GroupController.html":{},"modules/GroupModule.html":{},"coverage.html":{}}}],["groupmodule",{"_index":130,"title":{"modules/GroupModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GroupModule.html":{},"modules.html":{},"overview.html":{}}}],["groupservice",{"_index":1165,"title":{"injectables/GroupService.html":{}},"body":{"controllers/GroupController.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"coverage.html":{},"overview.html":{}}}],["grow",{"_index":2029,"title":{},"body":{"index.html":{}}}],["grup",{"_index":1184,"title":{},"body":{"controllers/GroupController.html":{},"controllers/PredicteController.html":{}}}],["grupa=9",{"_index":1430,"title":{},"body":{"controllers/PredicteController.html":{}}}],["grupach",{"_index":1412,"title":{},"body":{"controllers/PredicteController.html":{}}}],["grupie",{"_index":1389,"title":{},"body":{"controllers/PredicteController.html":{}}}],["grupy",{"_index":1015,"title":{},"body":{"controllers/FiszkaController.html":{},"controllers/GroupController.html":{}}}],["guard",{"_index":227,"title":{"guards/AuthGuard.html":{},"guards/RolesGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":228,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RolesGuard.html":{},"overview.html":{}}}],["handlers",{"_index":275,"title":{},"body":{"guards/AuthGuard.html":{}}}],["hashpassword",{"_index":1897,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["hashpassword(pass",{"_index":1990,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hashpassword(user.name",{"_index":1908,"title":{},"body":{"injectables/UserService.html":{}}}],["headers",{"_index":95,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotFoundExceptionFilter.html":{}}}],["helpers/cuterrormsg",{"_index":1509,"title":{},"body":{"classes/PrismaValidationFilter.html":{}}}],["here",{"_index":272,"title":{},"body":{"guards/AuthGuard.html":{},"index.html":{}}}],["host",{"_index":41,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{}}}],["host.switchtohttp",{"_index":72,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{}}}],["hour",{"_index":636,"title":{},"body":{"classes/CreateGroupDto.html":{},"classes/EditGroupDto.html":{},"classes/GetGroupDto.html":{},"injectables/GroupService.html":{}}}],["hour:string",{"_index":651,"title":{},"body":{"classes/CreateGroupDto.html":{},"classes/EditGroupDto.html":{},"classes/GetGroupDto.html":{}}}],["httpadapter",{"_index":69,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapter.getrequesturl(ctx.getrequest",{"_index":107,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapter.reply(ctx.getresponse",{"_index":108,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapterhost",{"_index":35,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpcode",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpexception",{"_index":47,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{},"injectables/SheduleService.html":{}}}],["httpexception(\"not",{"_index":1774,"title":{},"body":{"injectables/SheduleService.html":{}}}],["httpexceptionfilter",{"_index":206,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"controllers/AuthController.html":{},"controllers/CallUserHistoryController.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/FiszkaController.html":{},"controllers/GroupController.html":{},"classes/HttpExceptionFilter.html":{},"controllers/InterviewsController.html":{},"controllers/PredicteController.html":{},"controllers/RentalCostController.html":{},"controllers/SchoolController.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["httpexceptionfilter())@get('findallbyschool/:idschool",{"_index":1254,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["httpexceptionfilter())@get('findallbyschool/rd/:idschool",{"_index":1244,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["httpexceptionfilter())@get('findallbyuser",{"_index":1247,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["httpexceptionfilter())@get('findallbyuser/rd/:iduser",{"_index":1250,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["httpexceptionfilter())@get('getgroups/mgtmt/:idschool",{"_index":1160,"title":{},"body":{"controllers/GroupController.html":{}}}],["httpexceptionfilter())@get('getgroups/rd/:idschool",{"_index":1163,"title":{},"body":{"controllers/GroupController.html":{}}}],["httpexceptionfilter())@get('profile",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpexceptionfilter())@patch('adduser/:idinterview",{"_index":1235,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["httpexceptionfilter())@patch('edit/:idinterview",{"_index":1241,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["httpexceptionfilter())@patch('edit/:idschool/:idgroup",{"_index":1157,"title":{},"body":{"controllers/GroupController.html":{}}}],["httpexceptionfilter())@patch('removeuser/:idinterview",{"_index":1258,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["httpexceptionfilter())@post('create",{"_index":1238,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["httpexceptionfilter())@post('create/:idschool",{"_index":1154,"title":{},"body":{"controllers/GroupController.html":{}}}],["httpexceptionfilter())@post('login",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpexceptionfilter())@post('logout",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpexceptionfilter())@post('refreshtoken",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpexceptionfilter())@roles(role.ca",{"_index":951,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["httpexceptionfilter())@roles(role.mgtmt",{"_index":385,"title":{},"body":{"controllers/CallUserHistoryController.html":{},"controllers/FiszkaController.html":{}}}],["httpexceptionfilter())@roles(role.mgtmt)@get('findall/mgtmt",{"_index":1591,"title":{},"body":{"controllers/SchoolController.html":{}}}],["httpexceptionfilter())@roles(role.mgtmt)@get('findbyid/mgtmt/:id",{"_index":1597,"title":{},"body":{"controllers/SchoolController.html":{}}}],["httpexceptionfilter())@roles(role.mgtmt)@get('get/mgtmt/:idschool",{"_index":508,"title":{},"body":{"controllers/ContactPersonController.html":{},"controllers/RentalCostController.html":{}}}],["httpexceptionfilter())@roles(role.mgtmt)@get('getcontact/mgtmt/:idschool",{"_index":462,"title":{},"body":{"controllers/ContactController.html":{}}}],["httpexceptionfilter())@roles(role.mgtmt)@get('getdirector/mgtmt/:idschool",{"_index":786,"title":{},"body":{"controllers/DirectorController.html":{}}}],["httpexceptionfilter())@roles(role.mgtmt)@get('region/:region",{"_index":1819,"title":{},"body":{"controllers/UserController.html":{}}}],["httpexceptionfilter())@roles(role.rd",{"_index":452,"title":{},"body":{"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/FiszkaController.html":{},"controllers/PredicteController.html":{},"controllers/RentalCostController.html":{},"controllers/SchoolController.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"controllers/UserController.html":{}}}],["httpexceptionfilter())@roles(role.user",{"_index":945,"title":{},"body":{"controllers/FiszkaController.html":{},"controllers/UserController.html":{}}}],["httpexceptionfilter())@roles(role.user)@get('findallbyme/:idinterview",{"_index":966,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["httpexceptionfilter())@roles(role.user)@patch('editfiszka/:idfiszka/:idinterview",{"_index":959,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["https://docs.nestjs.com/modules",{"_index":532,"title":{},"body":{"modules/ContactPersonModule.html":{},"modules/PredicteModule.html":{}}}],["https://nestjs.com",{"_index":2045,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":48,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"injectables/SheduleService.html":{}}}],["httpstatus.internal_server_error",{"_index":75,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["iat",{"_index":767,"title":{},"body":{"classes/DecodeDto.html":{}}}],["iat:number",{"_index":777,"title":{},"body":{"classes/DecodeDto.html":{}}}],["id",{"_index":102,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthService.html":{},"injectables/CallUserHistoryService.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"classes/DecodeDto.html":{},"controllers/DirectorController.html":{},"injectables/DirectorService.html":{},"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{},"classes/GetContactPersontDto.html":{},"classes/GetDirectorDto.html":{},"classes/GetSchoolDto.html":{},"injectables/GroupService.html":{},"injectables/InterviewsService.html":{},"classes/NotFoundExceptionFilter.html":{},"controllers/PredicteController.html":{},"injectables/PredicteService.html":{},"injectables/RentalCostService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/SendFiszkiDto.html":{},"injectables/SheduleDaysService.html":{},"injectables/SheduleService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["id\",httpstatus.not_found",{"_index":1775,"title":{},"body":{"injectables/SheduleService.html":{}}}],["id:idschool",{"_index":543,"title":{},"body":{"injectables/ContactPersonService.html":{}}}],["id:idshedule",{"_index":1767,"title":{},"body":{"injectables/SheduleService.html":{}}}],["id:number",{"_index":776,"title":{},"body":{"classes/DecodeDto.html":{}}}],["id:schoolid",{"_index":1360,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["id:string",{"_index":1084,"title":{},"body":{"classes/GetContactPersontDto.html":{},"classes/GetDirectorDto.html":{}}}],["id:true",{"_index":1737,"title":{},"body":{"injectables/SheduleDaysService.html":{}}}],["idcontact",{"_index":457,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{}}}],["idcontactperson",{"_index":507,"title":{},"body":{"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{}}}],["idemployee",{"_index":1044,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["identifier",{"_index":1927,"title":{},"body":{"coverage.html":{}}}],["idfiszka",{"_index":389,"title":{},"body":{"controllers/CallUserHistoryController.html":{},"injectables/CallUserHistoryService.html":{},"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{}}}],["idgroup",{"_index":954,"title":{},"body":{"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{}}}],["idinterview",{"_index":949,"title":{},"body":{"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{},"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{}}}],["ids",{"_index":1322,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["ids.filter((id",{"_index":1331,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["idschool",{"_index":455,"title":{},"body":{"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"controllers/DirectorController.html":{},"injectables/DirectorService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{},"controllers/PredicteController.html":{},"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{},"controllers/SheduleController.html":{},"injectables/SheduleService.html":{}}}],["idshedule",{"_index":1667,"title":{},"body":{"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"injectables/SheduleDaysService.html":{},"injectables/SheduleService.html":{}}}],["iduser",{"_index":24,"title":{},"body":{"classes/AddgroupDto.html":{},"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{}}}],["iduser:string",{"_index":1316,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["iduserlist",{"_index":9,"title":{},"body":{"classes/AddUserInterViewDto.html":{},"classes/RemoveUserInterViewDto.html":{}}}],["if\",decoded",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{}}}],["if((await",{"_index":1772,"title":{},"body":{"injectables/SheduleService.html":{}}}],["ilo",{"_index":1411,"title":{},"body":{"controllers/PredicteController.html":{}}}],["implements",{"_index":29,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"guards/AuthGuard.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/PrismaOtherFilter.html":{},"injectables/PrismaService.html":{},"classes/PrismaValidationFilter.html":{},"guards/RolesGuard.html":{},"injectables/UpperCasePipe.html":{}}}],["import",{"_index":17,"title":{},"body":{"classes/AddUserInterViewDto.html":{},"classes/AddgroupDto.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallUserHistoryController.html":{},"modules/CallUserHistoryModule.html":{},"injectables/CallUserHistoryService.html":{},"controllers/ContactController.html":{},"modules/ContactModule.html":{},"controllers/ContactPersonController.html":{},"modules/ContactPersonModule.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"classes/CreateCallUserDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateInterViewDto.html":{},"classes/CreateRentalCostDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateSheduleDaysDto.html":{},"classes/CreateSheduleDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/DecodeDto.html":{},"controllers/DirectorController.html":{},"modules/DirectorModule.html":{},"injectables/DirectorService.html":{},"classes/EditContactDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditGroupDto.html":{},"classes/EditInterViewDto.html":{},"classes/EditRentalCostDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSheduleDaysDto.html":{},"classes/EditSheduleDto.html":{},"classes/EditUser.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"controllers/FiszkaController.html":{},"modules/FiszkaModule.html":{},"injectables/FiszkaService.html":{},"classes/GetCallUserHistoryDto.html":{},"classes/GetContactDto.html":{},"classes/GetContactPersontDto.html":{},"classes/GetDirectorDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetGroupDto.html":{},"classes/GetRentalCostDto.html":{},"classes/GetSchoolDto.html":{},"classes/GetSheduleDto.html":{},"classes/GetUserDto.html":{},"controllers/GroupController.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/InterviewsController.html":{},"modules/InterviewsModule.html":{},"injectables/InterviewsService.html":{},"classes/LoginUserDto.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"controllers/PredicteController.html":{},"modules/PredicteModule.html":{},"injectables/PredicteService.html":{},"modules/PrismaModule.html":{},"classes/PrismaOtherFilter.html":{},"injectables/PrismaService.html":{},"classes/PrismaValidationFilter.html":{},"classes/RefreshTokenDto.html":{},"classes/RemoveUserInterViewDto.html":{},"controllers/RentalCostController.html":{},"modules/RentalCostModule.html":{},"injectables/RentalCostService.html":{},"guards/RolesGuard.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"classes/SendFiszkiDto.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"modules/SheduleDaysModule.html":{},"injectables/SheduleDaysService.html":{},"modules/SheduleModule.html":{},"injectables/SheduleService.html":{},"injectables/UpperCasePipe.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidationdDto.html":{}}}],["imports",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CallUserHistoryModule.html":{},"modules/ContactModule.html":{},"modules/ContactPersonModule.html":{},"modules/DirectorModule.html":{},"modules/FiszkaModule.html":{},"modules/GroupModule.html":{},"modules/InterviewsModule.html":{},"modules/PredicteModule.html":{},"modules/RentalCostModule.html":{},"modules/SchoolModule.html":{},"modules/SheduleDaysModule.html":{},"modules/SheduleModule.html":{},"modules/UserModule.html":{}}}],["include",{"_index":1070,"title":{},"body":{"injectables/FiszkaService.html":{},"injectables/InterviewsService.html":{},"injectables/SheduleDaysService.html":{}}}],["indatabase",{"_index":1919,"title":{},"body":{"injectables/UserService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/AddUserInterViewDto.html":{},"classes/AddgroupDto.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CallUserHistoryController.html":{},"injectables/CallUserHistoryService.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"classes/CreateCallUserDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateInterViewDto.html":{},"classes/CreateRentalCostDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateSheduleDaysDto.html":{},"classes/CreateSheduleDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/DecodeDto.html":{},"controllers/DirectorController.html":{},"injectables/DirectorService.html":{},"classes/EditContactDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditGroupDto.html":{},"classes/EditInterViewDto.html":{},"classes/EditRentalCostDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSheduleDaysDto.html":{},"classes/EditSheduleDto.html":{},"classes/EditUser.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{},"classes/GetCallUserHistoryDto.html":{},"classes/GetContactDto.html":{},"classes/GetContactPersontDto.html":{},"classes/GetDirectorDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetGroupDto.html":{},"classes/GetRentalCostDto.html":{},"classes/GetSchoolDto.html":{},"classes/GetSheduleDto.html":{},"classes/GetUserDto.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{},"classes/LoginUserDto.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"controllers/PredicteController.html":{},"injectables/PredicteService.html":{},"classes/PrismaOtherFilter.html":{},"injectables/PrismaService.html":{},"classes/PrismaValidationFilter.html":{},"classes/RefreshTokenDto.html":{},"classes/RemoveUserInterViewDto.html":{},"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{},"guards/RolesGuard.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/SendFiszkiDto.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"injectables/SheduleDaysService.html":{},"injectables/SheduleService.html":{},"injectables/UpperCasePipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/ValidationdDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indywidualne",{"_index":1419,"title":{},"body":{"controllers/PredicteController.html":{}}}],["inestapplication",{"_index":1497,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AddUserInterViewDto.html":{},"classes/AddgroupDto.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallUserHistoryController.html":{},"modules/CallUserHistoryModule.html":{},"injectables/CallUserHistoryService.html":{},"controllers/ContactController.html":{},"modules/ContactModule.html":{},"controllers/ContactPersonController.html":{},"modules/ContactPersonModule.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"classes/CreateCallUserDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateInterViewDto.html":{},"classes/CreateRentalCostDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateSheduleDaysDto.html":{},"classes/CreateSheduleDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/DecodeDto.html":{},"controllers/DirectorController.html":{},"modules/DirectorModule.html":{},"injectables/DirectorService.html":{},"classes/EditContactDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditGroupDto.html":{},"classes/EditInterViewDto.html":{},"classes/EditRentalCostDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSheduleDaysDto.html":{},"classes/EditSheduleDto.html":{},"classes/EditUser.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"controllers/FiszkaController.html":{},"modules/FiszkaModule.html":{},"injectables/FiszkaService.html":{},"classes/GetCallUserHistoryDto.html":{},"classes/GetContactDto.html":{},"classes/GetContactPersontDto.html":{},"classes/GetDirectorDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetGroupDto.html":{},"classes/GetRentalCostDto.html":{},"classes/GetSchoolDto.html":{},"classes/GetSheduleDto.html":{},"classes/GetUserDto.html":{},"controllers/GroupController.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/InterviewsController.html":{},"modules/InterviewsModule.html":{},"injectables/InterviewsService.html":{},"classes/LoginUserDto.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"controllers/PredicteController.html":{},"modules/PredicteModule.html":{},"injectables/PredicteService.html":{},"modules/PrismaModule.html":{},"classes/PrismaOtherFilter.html":{},"injectables/PrismaService.html":{},"classes/PrismaValidationFilter.html":{},"classes/RefreshTokenDto.html":{},"classes/RemoveUserInterViewDto.html":{},"controllers/RentalCostController.html":{},"modules/RentalCostModule.html":{},"injectables/RentalCostService.html":{},"guards/RolesGuard.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"classes/SendFiszkiDto.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"modules/SheduleDaysModule.html":{},"injectables/SheduleDaysService.html":{},"modules/SheduleModule.html":{},"injectables/SheduleService.html":{},"injectables/UpperCasePipe.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidationdDto.html":{}}}],["inject",{"_index":1789,"title":{},"body":{"injectables/UpperCasePipe.html":{}}}],["injectable",{"_index":163,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CallUserHistoryService.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"injectables/DirectorService.html":{},"injectables/FiszkaService.html":{},"injectables/GroupService.html":{},"injectables/InterviewsService.html":{},"injectables/PredicteService.html":{},"injectables/PrismaService.html":{},"injectables/RentalCostService.html":{},"injectables/SchoolService.html":{},"injectables/SheduleDaysService.html":{},"injectables/SheduleService.html":{},"injectables/UpperCasePipe.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CallUserHistoryService.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"injectables/DirectorService.html":{},"injectables/FiszkaService.html":{},"injectables/GroupService.html":{},"injectables/InterviewsService.html":{},"injectables/PredicteService.html":{},"injectables/PrismaService.html":{},"injectables/RentalCostService.html":{},"guards/RolesGuard.html":{},"injectables/SchoolService.html":{},"injectables/SheduleDaysService.html":{},"injectables/SheduleService.html":{},"injectables/UpperCasePipe.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":165,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CallUserHistoryService.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"injectables/DirectorService.html":{},"injectables/FiszkaService.html":{},"injectables/GroupService.html":{},"injectables/InterviewsService.html":{},"injectables/PredicteService.html":{},"injectables/PrismaService.html":{},"injectables/RentalCostService.html":{},"injectables/SchoolService.html":{},"injectables/SheduleDaysService.html":{},"injectables/SheduleService.html":{},"injectables/UpperCasePipe.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["installation",{"_index":2009,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":2011,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":73,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{},"controllers/UserController.html":{}}}],["interview",{"_index":1320,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["interview.userinterviews.map((ui",{"_index":1328,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["interviewid",{"_index":1304,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["interviews",{"_index":1047,"title":{},"body":{"injectables/FiszkaService.html":{},"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{},"injectables/PredicteService.html":{}}}],["interviews.controller",{"_index":1297,"title":{},"body":{"modules/InterviewsModule.html":{}}}],["interviews.service",{"_index":1261,"title":{},"body":{"controllers/InterviewsController.html":{},"modules/InterviewsModule.html":{}}}],["interviewscontroller",{"_index":1225,"title":{"controllers/InterviewsController.html":{}},"body":{"controllers/InterviewsController.html":{},"modules/InterviewsModule.html":{},"coverage.html":{}}}],["interviewsid",{"_index":1055,"title":{},"body":{"injectables/FiszkaService.html":{},"classes/SendFiszkiDto.html":{}}}],["interviewsmodule",{"_index":131,"title":{"modules/InterviewsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/InterviewsModule.html":{},"modules.html":{},"overview.html":{}}}],["interviewsservice",{"_index":1260,"title":{"injectables/InterviewsService.html":{}},"body":{"controllers/InterviewsController.html":{},"modules/InterviewsModule.html":{},"injectables/InterviewsService.html":{},"coverage.html":{},"overview.html":{}}}],["interviewtotalfiszki",{"_index":1317,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["interviewusers",{"_index":1352,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["is_public_key",{"_index":250,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isalpha",{"_index":26,"title":{},"body":{"classes/AddgroupDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateSheduleDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/EditContactDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSheduleDto.html":{},"classes/EditUser.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"classes/GetContactDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetUserDto.html":{}}}],["isalpha(\"pl",{"_index":595,"title":{},"body":{"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditUser.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetUserDto.html":{}}}],["isalpha('pl",{"_index":587,"title":{},"body":{"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetUserDto.html":{}}}],["isalpha()@isnotempty",{"_index":763,"title":{},"body":{"classes/CreateUserForRdDto.html":{}}}],["isalpha()@isoptional",{"_index":732,"title":{},"body":{"classes/CreateSheduleDto.html":{},"classes/EditSheduleDto.html":{}}}],["isalpha()@minlength(3)@isnotempty",{"_index":757,"title":{},"body":{"classes/CreateUserForRdDto.html":{}}}],["isalphanumeric",{"_index":575,"title":{},"body":{"classes/CreateCallUserDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateSheduleDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditSchoolDto.html":{}}}],["isalphanumeric(\"pl",{"_index":716,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/EditSchoolDto.html":{}}}],["isascii",{"_index":576,"title":{},"body":{"classes/CreateCallUserDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateSchoolDto.html":{},"classes/EditContactDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditSchoolDto.html":{},"classes/GetCallUserHistoryDto.html":{},"classes/GetContactDto.html":{}}}],["isascii()@isnotempty",{"_index":693,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["isascii()@isoptional",{"_index":581,"title":{},"body":{"classes/CreateContactDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/EditContactDto.html":{},"classes/EditFiszkaDto.html":{},"classes/GetCallUserHistoryDto.html":{},"classes/GetContactDto.html":{}}}],["isdate",{"_index":577,"title":{},"body":{"classes/CreateCallUserDto.html":{},"classes/CreateContactDto.html":{},"classes/EditContactDto.html":{},"classes/GetCallUserHistoryDto.html":{},"classes/GetContactDto.html":{}}}],["isdate()@isnotempty",{"_index":569,"title":{},"body":{"classes/CreateCallUserDto.html":{},"classes/CreateContactDto.html":{},"classes/GetCallUserHistoryDto.html":{},"classes/GetContactDto.html":{}}}],["isdate()@isoptional",{"_index":571,"title":{},"body":{"classes/CreateCallUserDto.html":{},"classes/EditContactDto.html":{},"classes/GetCallUserHistoryDto.html":{}}}],["isdecimal",{"_index":675,"title":{},"body":{"classes/CreateRentalCostDto.html":{},"classes/EditRentalCostDto.html":{},"classes/GetRentalCostDto.html":{}}}],["isdecimal()@isoptional",{"_index":672,"title":{},"body":{"classes/CreateRentalCostDto.html":{},"classes/EditRentalCostDto.html":{},"classes/GetRentalCostDto.html":{}}}],["isemail",{"_index":593,"title":{},"body":{"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateInterViewDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditUser.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetUserDto.html":{},"classes/LoginUserDto.html":{},"classes/ValidationdDto.html":{}}}],["isemail()@isnotempty",{"_index":614,"title":{},"body":{"classes/CreateFiszkaDto.html":{}}}],["isemail()@isoptional",{"_index":585,"title":{},"body":{"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateSchoolDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditSchoolDto.html":{},"classes/GetFiszkaDto.html":{},"classes/ValidationdDto.html":{}}}],["isempty",{"_index":665,"title":{},"body":{"classes/CreateInterViewDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{}}}],["isnotempty",{"_index":14,"title":{},"body":{"classes/AddUserInterViewDto.html":{},"classes/AddgroupDto.html":{},"classes/CreateCallUserDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateInterViewDto.html":{},"classes/CreateRentalCostDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateSheduleDaysDto.html":{},"classes/CreateSheduleDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/EditContactDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditGroupDto.html":{},"classes/EditRentalCostDto.html":{},"classes/EditSheduleDaysDto.html":{},"classes/GetCallUserHistoryDto.html":{},"classes/GetContactDto.html":{},"classes/GetContactPersontDto.html":{},"classes/GetDirectorDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetGroupDto.html":{},"classes/GetRentalCostDto.html":{},"classes/GetSchoolDto.html":{},"classes/GetSheduleDto.html":{},"classes/GetUserDto.html":{},"classes/LoginUserDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RemoveUserInterViewDto.html":{},"classes/SendFiszkiDto.html":{},"classes/ValidationdDto.html":{}}}],["isnotempty()@isemail",{"_index":741,"title":{},"body":{"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/GetUserDto.html":{},"classes/LoginUserDto.html":{}}}],["isnotempty()@notcontains('mgtmt",{"_index":747,"title":{},"body":{"classes/CreateUserForMGTMTDto.html":{}}}],["isnotempty()@notcontains('mgtmt')@notcontains('rd",{"_index":761,"title":{},"body":{"classes/CreateUserForRdDto.html":{}}}],["isnumber",{"_index":619,"title":{},"body":{"classes/CreateFiszkaDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateSheduleDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditInterViewDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSheduleDto.html":{},"classes/GetFiszkaDto.html":{}}}],["isnumber()@min(0)@max(7)@isoptional",{"_index":848,"title":{},"body":{"classes/EditFiszkaDto.html":{}}}],["isnumber()@min(0)@max(8)@isoptional",{"_index":609,"title":{},"body":{"classes/CreateFiszkaDto.html":{},"classes/EditInterViewDto.html":{},"classes/GetFiszkaDto.html":{}}}],["isoptional",{"_index":578,"title":{},"body":{"classes/CreateCallUserDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateInterViewDto.html":{},"classes/CreateRentalCostDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateSheduleDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/EditContactDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditGroupDto.html":{},"classes/EditInterViewDto.html":{},"classes/EditRentalCostDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSheduleDto.html":{},"classes/EditUser.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"classes/GetCallUserHistoryDto.html":{},"classes/GetContactDto.html":{},"classes/GetContactPersontDto.html":{},"classes/GetDirectorDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetGroupDto.html":{},"classes/GetRentalCostDto.html":{},"classes/GetSchoolDto.html":{},"classes/GetSheduleDto.html":{},"classes/ValidationdDto.html":{}}}],["isoptional()@isascii",{"_index":573,"title":{},"body":{"classes/CreateCallUserDto.html":{}}}],["isoptional()@isemail",{"_index":915,"title":{},"body":{"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{}}}],["isoptional()@notcontains('mgtmt",{"_index":922,"title":{},"body":{"classes/EditUserForMGTMTDto.html":{}}}],["isoptional()@notcontains('mgtmt')@notcontains('rd",{"_index":931,"title":{},"body":{"classes/EditUserForRdDto.html":{}}}],["isphonenumber",{"_index":594,"title":{},"body":{"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditUser.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"classes/GetFiszkaDto.html":{},"classes/ValidationdDto.html":{}}}],["isphonenumber(\"pl",{"_index":597,"title":{},"body":{"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditUser.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"classes/ValidationdDto.html":{}}}],["isphonenumber('pl",{"_index":629,"title":{},"body":{"classes/CreateFiszkaDto.html":{},"classes/EditFiszkaDto.html":{},"classes/GetFiszkaDto.html":{}}}],["isphonenumber('pl')@isnotempty",{"_index":697,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/GetFiszkaDto.html":{}}}],["isphonenumber('pl')@isoptional",{"_index":590,"title":{},"body":{"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"classes/ValidationdDto.html":{}}}],["ispostalcode",{"_index":710,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/EditSchoolDto.html":{}}}],["ispostalcode(\"pl",{"_index":718,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/EditSchoolDto.html":{}}}],["ispostalcode('pl')@isnotempty",{"_index":699,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["ispostalcode('pl')@isoptional",{"_index":885,"title":{},"body":{"classes/EditSchoolDto.html":{}}}],["ispublic",{"_index":253,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["isstring",{"_index":579,"title":{},"body":{"classes/CreateCallUserDto.html":{}}}],["item.day",{"_index":1744,"title":{},"body":{"injectables/SheduleDaysService.html":{}}}],["item.numberlesson",{"_index":1745,"title":{},"body":{"injectables/SheduleDaysService.html":{}}}],["jak",{"_index":1683,"title":{},"body":{"controllers/SheduleController.html":{}}}],["jej",{"_index":1630,"title":{},"body":{"controllers/SchoolController.html":{}}}],["jest",{"_index":1413,"title":{},"body":{"controllers/PredicteController.html":{}}}],["jeszcze",{"_index":1680,"title":{},"body":{"controllers/SheduleController.html":{}}}],["jeśli",{"_index":1424,"title":{},"body":{"controllers/PredicteController.html":{}}}],["job",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/EditUser.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"classes/GetUserDto.html":{},"injectables/UserService.html":{}}}],["join",{"_index":2036,"title":{},"body":{"index.html":{}}}],["json",{"_index":1217,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{}}}],["json.parse(decoded",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{}}}],["jsonwebtoken",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwt",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwt.tokenexpirederror",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtconstants",{"_index":248,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.secret",{"_index":291,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule",{"_index":285,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":288,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtsecretkey",{"_index":251,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtservice",{"_index":234,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["kamil",{"_index":2042,"title":{},"body":{"index.html":{}}}],["kandydatów",{"_index":413,"title":{},"body":{"controllers/CallUserHistoryController.html":{}}}],["kiedy",{"_index":1395,"title":{},"body":{"controllers/PredicteController.html":{}}}],["klasami",{"_index":1417,"title":{},"body":{"controllers/PredicteController.html":{}}}],["klasy",{"_index":1399,"title":{},"body":{"controllers/PredicteController.html":{}}}],["konkretna",{"_index":1627,"title":{},"body":{"controllers/SchoolController.html":{}}}],["konkretnych",{"_index":1387,"title":{},"body":{"controllers/PredicteController.html":{}}}],["koszty",{"_index":1539,"title":{},"body":{"controllers/RentalCostController.html":{}}}],["kosztów",{"_index":1542,"title":{},"body":{"controllers/RentalCostController.html":{}}}],["kończ",{"_index":1400,"title":{},"body":{"controllers/PredicteController.html":{}}}],["które",{"_index":1439,"title":{},"body":{"controllers/PredicteController.html":{}}}],["legend",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CallUserHistoryModule.html":{},"modules/ContactModule.html":{},"modules/ContactPersonModule.html":{},"modules/DirectorModule.html":{},"modules/FiszkaModule.html":{},"modules/GroupModule.html":{},"modules/InterviewsModule.html":{},"modules/PredicteModule.html":{},"modules/PrismaModule.html":{},"modules/RentalCostModule.html":{},"modules/SchoolModule.html":{},"modules/SheduleDaysModule.html":{},"modules/SheduleModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["length",{"_index":711,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/EditSchoolDto.html":{}}}],["length(1",{"_index":705,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/EditSchoolDto.html":{}}}],["length(1,5",{"_index":715,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/EditSchoolDto.html":{}}}],["license",{"_index":2048,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":2026,"title":{},"body":{"index.html":{}}}],["lista",{"_index":1022,"title":{},"body":{"controllers/FiszkaController.html":{},"controllers/PredicteController.html":{},"controllers/SchoolController.html":{}}}],["loginuserdto",{"_index":190,"title":{"classes/LoginUserDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginUserDto.html":{},"coverage.html":{}}}],["logout",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["lub",{"_index":1625,"title":{},"body":{"controllers/SchoolController.html":{}}}],["ma",{"_index":1684,"title":{},"body":{"controllers/SheduleController.html":{}}}],["match",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{}}}],["matching",{"_index":21,"title":{},"body":{"classes/AddUserInterViewDto.html":{},"classes/AddgroupDto.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallUserHistoryController.html":{},"modules/CallUserHistoryModule.html":{},"injectables/CallUserHistoryService.html":{},"controllers/ContactController.html":{},"modules/ContactModule.html":{},"controllers/ContactPersonController.html":{},"modules/ContactPersonModule.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"classes/CreateCallUserDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateInterViewDto.html":{},"classes/CreateRentalCostDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateSheduleDaysDto.html":{},"classes/CreateSheduleDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/DecodeDto.html":{},"controllers/DirectorController.html":{},"modules/DirectorModule.html":{},"injectables/DirectorService.html":{},"classes/EditContactDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditGroupDto.html":{},"classes/EditInterViewDto.html":{},"classes/EditRentalCostDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSheduleDaysDto.html":{},"classes/EditSheduleDto.html":{},"classes/EditUser.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"controllers/FiszkaController.html":{},"modules/FiszkaModule.html":{},"injectables/FiszkaService.html":{},"classes/GetCallUserHistoryDto.html":{},"classes/GetContactDto.html":{},"classes/GetContactPersontDto.html":{},"classes/GetDirectorDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetGroupDto.html":{},"classes/GetRentalCostDto.html":{},"classes/GetSchoolDto.html":{},"classes/GetSheduleDto.html":{},"classes/GetUserDto.html":{},"controllers/GroupController.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/InterviewsController.html":{},"modules/InterviewsModule.html":{},"injectables/InterviewsService.html":{},"classes/LoginUserDto.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"controllers/PredicteController.html":{},"modules/PredicteModule.html":{},"injectables/PredicteService.html":{},"modules/PrismaModule.html":{},"classes/PrismaOtherFilter.html":{},"injectables/PrismaService.html":{},"classes/PrismaValidationFilter.html":{},"classes/RefreshTokenDto.html":{},"classes/RemoveUserInterViewDto.html":{},"controllers/RentalCostController.html":{},"modules/RentalCostModule.html":{},"injectables/RentalCostService.html":{},"guards/RolesGuard.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"classes/SendFiszkiDto.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"modules/SheduleDaysModule.html":{},"injectables/SheduleDaysService.html":{},"modules/SheduleModule.html":{},"injectables/SheduleService.html":{},"injectables/UpperCasePipe.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidationdDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":620,"title":{},"body":{"classes/CreateFiszkaDto.html":{},"classes/CreateInterViewDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateSheduleDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditInterViewDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSheduleDto.html":{},"classes/GetFiszkaDto.html":{},"controllers/PredicteController.html":{}}}],["max(50",{"_index":719,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/EditSchoolDto.html":{}}}],["max(7",{"_index":857,"title":{},"body":{"classes/EditFiszkaDto.html":{}}}],["max(8",{"_index":626,"title":{},"body":{"classes/CreateFiszkaDto.html":{},"classes/CreateInterViewDto.html":{},"classes/CreateSheduleDto.html":{},"classes/EditInterViewDto.html":{},"classes/EditSheduleDto.html":{},"classes/GetFiszkaDto.html":{}}}],["max(8)@min(0)@isnumber()@isoptional",{"_index":730,"title":{},"body":{"classes/CreateSheduleDto.html":{},"classes/EditSheduleDto.html":{}}}],["metadata",{"_index":1783,"title":{},"body":{"injectables/UpperCasePipe.html":{},"dependencies.html":{}}}],["method",{"_index":93,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/NotFoundExceptionFilter.html":{}}}],["methods",{"_index":31,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CallUserHistoryController.html":{},"injectables/CallUserHistoryService.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"controllers/DirectorController.html":{},"injectables/DirectorService.html":{},"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"controllers/PredicteController.html":{},"injectables/PredicteService.html":{},"classes/PrismaOtherFilter.html":{},"injectables/PrismaService.html":{},"classes/PrismaValidationFilter.html":{},"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{},"guards/RolesGuard.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"injectables/SheduleDaysService.html":{},"injectables/SheduleService.html":{},"injectables/UpperCasePipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["mgtm",{"_index":1188,"title":{},"body":{"controllers/GroupController.html":{}}}],["mgtmt",{"_index":1541,"title":{},"body":{"controllers/RentalCostController.html":{},"controllers/SchoolController.html":{},"controllers/SheduleController.html":{},"miscellaneous/enumerations.html":{}}}],["min",{"_index":621,"title":{},"body":{"classes/CreateFiszkaDto.html":{},"classes/CreateInterViewDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateSheduleDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditInterViewDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSheduleDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetUserDto.html":{}}}],["min(0",{"_index":625,"title":{},"body":{"classes/CreateFiszkaDto.html":{},"classes/CreateInterViewDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateSheduleDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditInterViewDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSheduleDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetUserDto.html":{}}}],["min(0)@isnotempty",{"_index":662,"title":{},"body":{"classes/CreateInterViewDto.html":{},"classes/GetUserDto.html":{}}}],["min(0)@isoptional",{"_index":870,"title":{},"body":{"classes/EditInterViewDto.html":{}}}],["min(0)@max(50)@isnumber()@isoptional",{"_index":695,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/EditSchoolDto.html":{}}}],["min(0)@max(8)@isnotempty",{"_index":658,"title":{},"body":{"classes/CreateInterViewDto.html":{}}}],["minlength",{"_index":712,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/EditSchoolDto.html":{}}}],["minlength(1",{"_index":720,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/EditSchoolDto.html":{}}}],["minlength(1)@isascii()@isoptional",{"_index":689,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/EditSchoolDto.html":{}}}],["minlength(3",{"_index":751,"title":{},"body":{"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{}}}],["minnimum",{"_index":1388,"title":{},"body":{"controllers/PredicteController.html":{}}}],["miscellaneous",{"_index":1975,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":2025,"title":{},"body":{"index.html":{}}}],["między",{"_index":1416,"title":{},"body":{"controllers/PredicteController.html":{}}}],["mngmt",{"_index":808,"title":{},"body":{"controllers/DirectorController.html":{}}}],["mode",{"_index":2016,"title":{},"body":{"index.html":{}}}],["models/calluserhistory/calluserhistory.module",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["models/contact/contact.module",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["models/director/director.module",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["models/fiszka/fiszka.module",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["models/group/group.module",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["models/interviews/interviews.module",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["models/personcontact/contactperson.module",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["models/rentalcost/rentalcost.module",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["models/school/school.module",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["models/shedule/shedule.controller",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["models/shedule/shedule.module",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["models/shedule/shedule.service",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["models/sheduledays/sheduledays.controller",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["models/sheduledays/sheduledays.module",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["models/sheduledays/sheduledays.service",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["models/user/user.module",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["module",{"_index":113,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CallUserHistoryModule.html":{},"modules/ContactModule.html":{},"modules/ContactPersonModule.html":{},"modules/DirectorModule.html":{},"modules/FiszkaModule.html":{},"modules/GroupModule.html":{},"modules/InterviewsModule.html":{},"modules/PredicteModule.html":{},"modules/PrismaModule.html":{},"modules/RentalCostModule.html":{},"modules/SchoolModule.html":{},"modules/SheduleDaysModule.html":{},"modules/SheduleModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CallUserHistoryModule.html":{},"modules/ContactModule.html":{},"modules/ContactPersonModule.html":{},"modules/DirectorModule.html":{},"modules/FiszkaModule.html":{},"modules/GroupModule.html":{},"modules/InterviewsModule.html":{},"modules/PredicteModule.html":{},"modules/PrismaModule.html":{},"modules/RentalCostModule.html":{},"modules/SchoolModule.html":{},"modules/SheduleDaysModule.html":{},"modules/SheduleModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":115,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CallUserHistoryModule.html":{},"modules/ContactModule.html":{},"modules/ContactPersonModule.html":{},"modules/DirectorModule.html":{},"modules/FiszkaModule.html":{},"modules/GroupModule.html":{},"modules/InterviewsModule.html":{},"modules/PredicteModule.html":{},"modules/PrismaModule.html":{},"modules/RentalCostModule.html":{},"modules/SchoolModule.html":{},"modules/SheduleDaysModule.html":{},"modules/SheduleModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["modyfikacja",{"_index":1702,"title":{},"body":{"controllers/SheduleController.html":{}}}],["mog",{"_index":1406,"title":{},"body":{"controllers/PredicteController.html":{}}}],["monday",{"_index":1458,"title":{},"body":{"injectables/PredicteService.html":{}}}],["more",{"_index":1338,"title":{},"body":{"injectables/InterviewsService.html":{},"injectables/SheduleDaysService.html":{},"index.html":{}}}],["może",{"_index":408,"title":{},"body":{"controllers/CallUserHistoryController.html":{},"controllers/PredicteController.html":{}}}],["msg",{"_index":92,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotFoundExceptionFilter.html":{}}}],["myśliwiec",{"_index":2043,"title":{},"body":{"index.html":{}}}],["na",{"_index":1397,"title":{},"body":{"controllers/PredicteController.html":{}}}],["najmu",{"_index":1540,"title":{},"body":{"controllers/RentalCostController.html":{}}}],["name",{"_index":38,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CallUserHistoryController.html":{},"injectables/CallUserHistoryService.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"controllers/DirectorController.html":{},"injectables/DirectorService.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditUser.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{},"classes/GetContactPersontDto.html":{},"classes/GetDirectorDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetSchoolDto.html":{},"classes/GetUserDto.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"controllers/PredicteController.html":{},"injectables/PredicteService.html":{},"classes/PrismaOtherFilter.html":{},"injectables/PrismaService.html":{},"classes/PrismaValidationFilter.html":{},"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{},"guards/RolesGuard.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"injectables/SheduleDaysService.html":{},"injectables/SheduleService.html":{},"injectables/UpperCasePipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["name:exception.name",{"_index":1373,"title":{},"body":{"classes/NotFoundExceptionFilter.html":{}}}],["name:string",{"_index":622,"title":{},"body":{"classes/CreateFiszkaDto.html":{}}}],["nameerror",{"_index":76,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["narazie",{"_index":1681,"title":{},"body":{"controllers/SheduleController.html":{}}}],["nest",{"_index":2005,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":2047,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":50,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallUserHistoryController.html":{},"modules/CallUserHistoryModule.html":{},"injectables/CallUserHistoryService.html":{},"controllers/ContactController.html":{},"modules/ContactModule.html":{},"controllers/ContactPersonController.html":{},"modules/ContactPersonModule.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"controllers/DirectorController.html":{},"modules/DirectorModule.html":{},"injectables/DirectorService.html":{},"controllers/FiszkaController.html":{},"modules/FiszkaModule.html":{},"injectables/FiszkaService.html":{},"controllers/GroupController.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/InterviewsController.html":{},"modules/InterviewsModule.html":{},"injectables/InterviewsService.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"controllers/PredicteController.html":{},"modules/PredicteModule.html":{},"injectables/PredicteService.html":{},"modules/PrismaModule.html":{},"classes/PrismaOtherFilter.html":{},"injectables/PrismaService.html":{},"classes/PrismaValidationFilter.html":{},"controllers/RentalCostController.html":{},"modules/RentalCostModule.html":{},"injectables/RentalCostService.html":{},"guards/RolesGuard.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"modules/SheduleDaysModule.html":{},"injectables/SheduleDaysService.html":{},"modules/SheduleModule.html":{},"injectables/SheduleService.html":{},"injectables/UpperCasePipe.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":51,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"guards/RolesGuard.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestjs/core/router",{"_index":1790,"title":{},"body":{"injectables/UpperCasePipe.html":{}}}],["nestjs/jwt",{"_index":246,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1963,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":82,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/FiszkaService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/InterviewsService.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{},"injectables/SheduleDaysService.html":{},"injectables/SheduleService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newuserids",{"_index":1330,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["newuserids.filter((id",{"_index":1334,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["newuserids.map((userid",{"_index":1339,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["nie",{"_index":1356,"title":{},"body":{"injectables/InterviewsService.html":{},"controllers/SheduleController.html":{}}}],["node.js",{"_index":1996,"title":{},"body":{"index.html":{}}}],["notcontains",{"_index":666,"title":{},"body":{"classes/CreateInterViewDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/EditUser.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{}}}],["notcontains(\"mgtmt",{"_index":752,"title":{},"body":{"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/EditUser.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{}}}],["notcontains(\"rd",{"_index":753,"title":{},"body":{"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/EditUser.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{}}}],["notfounderror",{"_index":52,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/NotFoundErrorFilter.html":{}}}],["notfounderrorfilter",{"_index":54,"title":{"classes/NotFoundErrorFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"classes/NotFoundErrorFilter.html":{},"coverage.html":{}}}],["notfounderrorfilter().catch(exception",{"_index":83,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["notfounderrorfilter.filter",{"_index":55,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["notfoundexception",{"_index":49,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/NotFoundExceptionFilter.html":{}}}],["notfoundexception.filter",{"_index":57,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["notfoundexceptionfilter",{"_index":56,"title":{"classes/NotFoundExceptionFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"coverage.html":{}}}],["notfoundexceptionfilter().catch(exception",{"_index":85,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["nowego",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{}}}],["nowej",{"_index":1632,"title":{},"body":{"controllers/SchoolController.html":{}}}],["np.1",{"_index":1408,"title":{},"body":{"controllers/PredicteController.html":{}}}],["npm",{"_index":2010,"title":{},"body":{"index.html":{}}}],["null",{"_index":1459,"title":{},"body":{"injectables/PredicteService.html":{}}}],["number",{"_index":608,"title":{},"body":{"classes/CreateFiszkaDto.html":{},"classes/CreateInterViewDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateSheduleDaysDto.html":{},"classes/CreateSheduleDto.html":{},"classes/DecodeDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditInterViewDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSheduleDaysDto.html":{},"classes/EditSheduleDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetSchoolDto.html":{},"classes/GetUserDto.html":{}}}],["numberlesson",{"_index":724,"title":{},"body":{"classes/CreateSheduleDaysDto.html":{},"classes/EditSheduleDaysDto.html":{},"injectables/SheduleDaysService.html":{}}}],["numberlesson:true",{"_index":1736,"title":{},"body":{"injectables/SheduleDaysService.html":{}}}],["numberofclasses",{"_index":682,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/EditSchoolDto.html":{},"classes/GetSchoolDto.html":{},"injectables/SchoolService.html":{}}}],["o",{"_index":1401,"title":{},"body":{"controllers/PredicteController.html":{}}}],["obj",{"_index":1987,"title":{},"body":{"miscellaneous/functions.html":{}}}],["object",{"_index":271,"title":{},"body":{"guards/AuthGuard.html":{},"classes/HttpExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["object.keys(rolevalue",{"_index":2067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["oldtoken",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{}}}],["onmoduleinit",{"_index":1494,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":2027,"title":{},"body":{"index.html":{}}}],["optional",{"_index":39,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CallUserHistoryController.html":{},"injectables/CallUserHistoryService.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"controllers/DirectorController.html":{},"injectables/DirectorService.html":{},"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"controllers/PredicteController.html":{},"injectables/PredicteService.html":{},"classes/PrismaOtherFilter.html":{},"injectables/PrismaService.html":{},"classes/PrismaValidationFilter.html":{},"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{},"guards/RolesGuard.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"injectables/SheduleDaysService.html":{},"injectables/SheduleService.html":{},"injectables/UpperCasePipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["otrzymujemy",{"_index":1442,"title":{},"body":{"controllers/PredicteController.html":{}}}],["out",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CallUserHistoryModule.html":{},"modules/ContactModule.html":{},"modules/ContactPersonModule.html":{},"modules/DirectorModule.html":{},"modules/FiszkaModule.html":{},"modules/GroupModule.html":{},"modules/InterviewsModule.html":{},"modules/PredicteModule.html":{},"modules/PrismaModule.html":{},"modules/RentalCostModule.html":{},"modules/SchoolModule.html":{},"modules/SheduleDaysModule.html":{},"modules/SheduleModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":2052,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1960,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":394,"title":{},"body":{"controllers/CallUserHistoryController.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/FiszkaController.html":{},"controllers/GroupController.html":{},"controllers/InterviewsController.html":{},"controllers/PredicteController.html":{},"controllers/RentalCostController.html":{},"controllers/SchoolController.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"controllers/UserController.html":{}}}],["param('idcontact",{"_index":488,"title":{},"body":{"controllers/ContactController.html":{}}}],["param('idemployee",{"_index":984,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["param('idgroup",{"_index":1181,"title":{},"body":{"controllers/GroupController.html":{}}}],["param('idinterview",{"_index":1003,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["param('idschool",{"_index":1173,"title":{},"body":{"controllers/GroupController.html":{},"controllers/PredicteController.html":{},"controllers/SheduleController.html":{}}}],["param('idshedule",{"_index":1690,"title":{},"body":{"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{}}}],["parameters",{"_index":37,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CallUserHistoryController.html":{},"injectables/CallUserHistoryService.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"controllers/DirectorController.html":{},"injectables/DirectorService.html":{},"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"controllers/PredicteController.html":{},"injectables/PredicteService.html":{},"classes/PrismaOtherFilter.html":{},"injectables/PrismaService.html":{},"classes/PrismaValidationFilter.html":{},"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{},"guards/RolesGuard.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"injectables/SheduleDaysService.html":{},"injectables/SheduleService.html":{},"injectables/UpperCasePipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["pass",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/functions.html":{}}}],["password",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/EditUser.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"classes/LoginUserDto.html":{},"injectables/UserService.html":{}}}],["patch",{"_index":467,"title":{},"body":{"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/FiszkaController.html":{},"controllers/GroupController.html":{},"controllers/InterviewsController.html":{},"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{},"controllers/SchoolController.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"controllers/UserController.html":{}}}],["patch(':id",{"_index":1863,"title":{},"body":{"controllers/UserController.html":{}}}],["patch('addgroup/:idgroup",{"_index":1010,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["patch('adduser/:idinterview",{"_index":1282,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["patch('edit/:id",{"_index":1616,"title":{},"body":{"controllers/SchoolController.html":{}}}],["patch('edit/:idinterview",{"_index":1279,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["patch('edit/:idschool",{"_index":802,"title":{},"body":{"controllers/DirectorController.html":{}}}],["patch('edit/:idschool/:idcontact",{"_index":486,"title":{},"body":{"controllers/ContactController.html":{}}}],["patch('edit/:idschool/:idgroup",{"_index":1179,"title":{},"body":{"controllers/GroupController.html":{}}}],["patch('edit/:idshedule",{"_index":1692,"title":{},"body":{"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{}}}],["patch('edit/:schoolid/:idcontactperson",{"_index":524,"title":{},"body":{"controllers/ContactPersonController.html":{}}}],["patch('edit/rd/:idschool",{"_index":1536,"title":{},"body":{"controllers/RentalCostController.html":{}}}],["patch('editfiszka/:idfiszka",{"_index":998,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["patch('editfiszka/:idfiszka/:idinterview",{"_index":1001,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["patch('removeuser/:idinterview",{"_index":1285,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["patch(@param('idschool",{"_index":1537,"title":{},"body":{"controllers/RentalCostController.html":{}}}],["patch(idschool",{"_index":1523,"title":{},"body":{"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{}}}],["path",{"_index":106,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{}}}],["payload",{"_index":265,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["payload\",payload",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{}}}],["per",{"_index":1025,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["phone",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ContactPersonService.html":{},"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"injectables/DirectorService.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditUser.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"injectables/FiszkaService.html":{},"classes/GetContactPersontDto.html":{},"classes/GetDirectorDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetSchoolDto.html":{},"injectables/SchoolService.html":{},"injectables/UserService.html":{},"classes/ValidationdDto.html":{}}}],["phone:string",{"_index":630,"title":{},"body":{"classes/CreateFiszkaDto.html":{}}}],["phonecalls",{"_index":1048,"title":{},"body":{"injectables/FiszkaService.html":{},"classes/GetFiszkaDto.html":{}}}],["pierwszego",{"_index":1437,"title":{},"body":{"controllers/PredicteController.html":{}}}],["pipetransform",{"_index":1787,"title":{},"body":{"injectables/UpperCasePipe.html":{}}}],["pl",{"_index":596,"title":{},"body":{"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditUser.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetUserDto.html":{}}}],["pl')@isnotempty",{"_index":588,"title":{},"body":{"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetUserDto.html":{}}}],["pl')@isoptional",{"_index":611,"title":{},"body":{"classes/CreateFiszkaDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"classes/GetFiszkaDto.html":{}}}],["placówek",{"_index":1621,"title":{},"body":{"controllers/SchoolController.html":{}}}],["placówka",{"_index":1628,"title":{},"body":{"controllers/SchoolController.html":{}}}],["placówki",{"_index":806,"title":{},"body":{"controllers/DirectorController.html":{},"controllers/SchoolController.html":{}}}],["planu",{"_index":1703,"title":{},"body":{"controllers/SheduleController.html":{}}}],["plany",{"_index":1420,"title":{},"body":{"controllers/PredicteController.html":{}}}],["planów",{"_index":1700,"title":{},"body":{"controllers/SheduleController.html":{}}}],["please",{"_index":2037,"title":{},"body":{"index.html":{}}}],["po",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{},"controllers/DirectorController.html":{},"controllers/SchoolController.html":{}}}],["podaniu",{"_index":1629,"title":{},"body":{"controllers/SchoolController.html":{}}}],["podstawie",{"_index":1398,"title":{},"body":{"controllers/PredicteController.html":{}}}],["podzia",{"_index":1443,"title":{},"body":{"controllers/PredicteController.html":{}}}],["pokaza",{"_index":1392,"title":{},"body":{"controllers/PredicteController.html":{}}}],["post",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CallUserHistoryController.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/FiszkaController.html":{},"controllers/GroupController.html":{},"controllers/InterviewsController.html":{},"controllers/RentalCostController.html":{},"controllers/SchoolController.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"controllers/UserController.html":{}}}],["post('addcalluser/:idfiszka",{"_index":421,"title":{},"body":{"controllers/CallUserHistoryController.html":{}}}],["post('addfiszki/:idinterview",{"_index":1005,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["post('create",{"_index":1288,"title":{},"body":{"controllers/InterviewsController.html":{},"controllers/SchoolController.html":{}}}],["post('create/:idschool",{"_index":483,"title":{},"body":{"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/GroupController.html":{},"controllers/SheduleController.html":{}}}],["post('create/:idshedule",{"_index":1717,"title":{},"body":{"controllers/SheduleDaysController.html":{}}}],["post('create/rd/:idschool",{"_index":1534,"title":{},"body":{"controllers/RentalCostController.html":{}}}],["post('findall/:idshedule",{"_index":1715,"title":{},"body":{"controllers/SheduleDaysController.html":{}}}],["post('login",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('logout",{"_index":220,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('refreshtoken",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('validation",{"_index":1844,"title":{},"body":{"controllers/UserController.html":{}}}],["postcode",{"_index":683,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/EditSchoolDto.html":{},"classes/GetSchoolDto.html":{},"injectables/SchoolService.html":{}}}],["potrzebne",{"_index":1435,"title":{},"body":{"controllers/PredicteController.html":{}}}],["pr",{"_index":1019,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["pracownika",{"_index":1021,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["predicte",{"_index":1376,"title":{},"body":{"controllers/PredicteController.html":{},"injectables/PredicteService.html":{}}}],["predicte(@req",{"_index":1433,"title":{},"body":{"controllers/PredicteController.html":{}}}],["predicte(region",{"_index":1452,"title":{},"body":{"injectables/PredicteService.html":{}}}],["predicte(req",{"_index":1377,"title":{},"body":{"controllers/PredicteController.html":{}}}],["predicte.controller",{"_index":1449,"title":{},"body":{"modules/PredicteModule.html":{}}}],["predicte.service",{"_index":1382,"title":{},"body":{"controllers/PredicteController.html":{},"modules/PredicteModule.html":{}}}],["predictecontroller",{"_index":1374,"title":{"controllers/PredicteController.html":{}},"body":{"controllers/PredicteController.html":{},"modules/PredicteModule.html":{},"coverage.html":{}}}],["predictemodule",{"_index":1444,"title":{"modules/PredicteModule.html":{}},"body":{"modules/PredicteModule.html":{},"modules.html":{},"overview.html":{}}}],["predicteservice",{"_index":1381,"title":{"injectables/PredicteService.html":{}},"body":{"controllers/PredicteController.html":{},"modules/PredicteModule.html":{},"injectables/PredicteService.html":{},"coverage.html":{},"overview.html":{}}}],["predictesheduleschool",{"_index":1946,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["prefix",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CallUserHistoryController.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/FiszkaController.html":{},"controllers/GroupController.html":{},"controllers/InterviewsController.html":{},"controllers/PredicteController.html":{},"controllers/RentalCostController.html":{},"controllers/SchoolController.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"controllers/UserController.html":{}}}],["prisma",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CallUserHistoryService.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"injectables/DirectorService.html":{},"injectables/FiszkaService.html":{},"injectables/GroupService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/InterviewsService.html":{},"injectables/PredicteService.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{},"injectables/RentalCostService.html":{},"injectables/SchoolService.html":{},"injectables/SheduleDaysService.html":{},"injectables/SheduleService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["prisma.prismaclientknownrequesterror",{"_index":1212,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{}}}],["prisma.service",{"_index":1482,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/.../seed.ts",{"_index":1984,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["prisma/client",{"_index":399,"title":{},"body":{"controllers/CallUserHistoryController.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"classes/CreateGroupDto.html":{},"classes/CreateInterViewDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateSheduleDaysDto.html":{},"classes/CreateSheduleDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/DecodeDto.html":{},"controllers/DirectorController.html":{},"classes/EditGroupDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSheduleDaysDto.html":{},"classes/EditUser.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"controllers/FiszkaController.html":{},"classes/GetFiszkaDto.html":{},"classes/GetGroupDto.html":{},"classes/GetSchoolDto.html":{},"classes/GetSheduleDto.html":{},"classes/GetUserDto.html":{},"controllers/GroupController.html":{},"classes/HttpExceptionFilter.html":{},"controllers/InterviewsController.html":{},"controllers/PredicteController.html":{},"classes/PrismaOtherFilter.html":{},"injectables/PrismaService.html":{},"classes/PrismaValidationFilter.html":{},"controllers/RentalCostController.html":{},"guards/RolesGuard.html":{},"controllers/SchoolController.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"injectables/UpperCasePipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["prisma/client/runtime/library",{"_index":64,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/CreateRentalCostDto.html":{},"classes/EditRentalCostDto.html":{},"classes/GetRentalCostDto.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{}}}],["prisma/prisma.module",{"_index":495,"title":{},"body":{"modules/ContactModule.html":{},"modules/ContactPersonModule.html":{},"modules/DirectorModule.html":{},"modules/InterviewsModule.html":{},"modules/PredicteModule.html":{},"modules/RentalCostModule.html":{},"modules/SchoolModule.html":{},"modules/SheduleDaysModule.html":{},"modules/SheduleModule.html":{}}}],["prisma/prisma.module.ts",{"_index":1481,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma/prisma.service",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CallUserHistoryService.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"injectables/DirectorService.html":{},"injectables/FiszkaService.html":{},"injectables/GroupService.html":{},"injectables/InterviewsService.html":{},"injectables/PredicteService.html":{},"injectables/RentalCostService.html":{},"injectables/SchoolService.html":{},"injectables/SheduleDaysService.html":{},"injectables/SheduleService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["prisma/prisma.service.ts",{"_index":1490,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["prisma/prisma.service.ts:10",{"_index":1500,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prisma/prisma.service.ts:14",{"_index":1498,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prisma/prisma.service.ts:6",{"_index":1495,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prisma/seed.ts",{"_index":1930,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["prismaclient",{"_index":1492,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["prismaclientknownrequesterror",{"_index":62,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/PrismaValidationFilter.html":{}}}],["prismaclientunknownrequesterror",{"_index":63,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/PrismaOtherFilter.html":{}}}],["prismaclientvalidationerror",{"_index":87,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["prismaclientvalidationerror.filter",{"_index":59,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["prismaerror",{"_index":1487,"title":{},"body":{"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{}}}],["prismamodule",{"_index":493,"title":{"modules/PrismaModule.html":{}},"body":{"modules/ContactModule.html":{},"modules/ContactPersonModule.html":{},"modules/DirectorModule.html":{},"modules/InterviewsModule.html":{},"modules/PredicteModule.html":{},"modules/PrismaModule.html":{},"modules/RentalCostModule.html":{},"modules/SchoolModule.html":{},"modules/SheduleDaysModule.html":{},"modules/SheduleModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaothererror.filter",{"_index":61,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["prismaotherfilter",{"_index":60,"title":{"classes/PrismaOtherFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"classes/PrismaOtherFilter.html":{},"coverage.html":{}}}],["prismaotherfilter().catch(exception",{"_index":88,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["prismaservice",{"_index":300,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/CallUserHistoryService.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"injectables/DirectorService.html":{},"injectables/FiszkaService.html":{},"injectables/GroupService.html":{},"injectables/InterviewsService.html":{},"injectables/PredicteService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/RentalCostService.html":{},"injectables/SchoolService.html":{},"injectables/SheduleDaysService.html":{},"injectables/SheduleService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["prismavalidationfilter",{"_index":58,"title":{"classes/PrismaValidationFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"classes/PrismaValidationFilter.html":{},"coverage.html":{}}}],["prismavalidationfilter().catch(exception",{"_index":86,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["private",{"_index":231,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["process.env.jwt_secret",{"_index":252,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["process.on('beforeexit",{"_index":1503,"title":{},"body":{"injectables/PrismaService.html":{}}}],["production",{"_index":2018,"title":{},"body":{"index.html":{}}}],["profile",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["profile(email",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{}}}],["progressive",{"_index":1995,"title":{},"body":{"index.html":{}}}],["project",{"_index":2028,"title":{},"body":{"index.html":{}}}],["promise",{"_index":241,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CallUserHistoryController.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/FiszkaController.html":{},"controllers/GroupController.html":{},"controllers/RentalCostController.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/UserController.html":{},"miscellaneous/functions.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"classes/AddUserInterViewDto.html":{},"classes/AddgroupDto.html":{},"classes/CreateCallUserDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateInterViewDto.html":{},"classes/CreateRentalCostDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateSheduleDaysDto.html":{},"classes/CreateSheduleDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/DecodeDto.html":{},"classes/EditContactDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditGroupDto.html":{},"classes/EditInterViewDto.html":{},"classes/EditRentalCostDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSheduleDaysDto.html":{},"classes/EditSheduleDto.html":{},"classes/EditUser.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"classes/GetCallUserHistoryDto.html":{},"classes/GetContactDto.html":{},"classes/GetContactPersontDto.html":{},"classes/GetDirectorDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetGroupDto.html":{},"classes/GetRentalCostDto.html":{},"classes/GetSchoolDto.html":{},"classes/GetSheduleDto.html":{},"classes/GetUserDto.html":{},"classes/LoginUserDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RemoveUserInterViewDto.html":{},"classes/SendFiszkiDto.html":{},"classes/ValidationdDto.html":{},"properties.html":{}}}],["protected",{"_index":1793,"title":{},"body":{"injectables/UpperCasePipe.html":{}}}],["provide",{"_index":295,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["providers",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CallUserHistoryModule.html":{},"modules/ContactModule.html":{},"modules/ContactPersonModule.html":{},"modules/DirectorModule.html":{},"modules/FiszkaModule.html":{},"modules/GroupModule.html":{},"modules/InterviewsModule.html":{},"modules/PredicteModule.html":{},"modules/PrismaModule.html":{},"modules/RentalCostModule.html":{},"modules/SchoolModule.html":{},"modules/SheduleDaysModule.html":{},"modules/SheduleModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["providers:[prismaservice",{"_index":1483,"title":{},"body":{"modules/PrismaModule.html":{}}}],["province",{"_index":684,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/EditSchoolDto.html":{},"classes/GetSchoolDto.html":{},"injectables/SchoolService.html":{}}}],["przez",{"_index":1698,"title":{},"body":{"controllers/SheduleController.html":{}}}],["przyjmujemy",{"_index":1418,"title":{},"body":{"controllers/PredicteController.html":{}}}],["public",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@httpcode(httpstatus.ok)@usefilters(new",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{}}}],["rd",{"_index":812,"title":{},"body":{"controllers/DirectorController.html":{},"controllers/GroupController.html":{},"controllers/RentalCostController.html":{},"controllers/SchoolController.html":{},"miscellaneous/enumerations.html":{}}}],["read",{"_index":2038,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":66,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/UpperCasePipe.html":{}}}],["reflect",{"_index":1972,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":235,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RolesGuard.html":{}}}],["refresh",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtoken",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["refreshtoken(@body",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshtoken(oldtoken",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshtoken(refreshtoken",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtoken.access_token",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtokendto",{"_index":185,"title":{"classes/RefreshTokenDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/RefreshTokenDto.html":{},"coverage.html":{}}}],["region",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/DecodeDto.html":{},"controllers/DirectorController.html":{},"injectables/DirectorService.html":{},"classes/EditUser.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"classes/GetSchoolDto.html":{},"classes/GetUserDto.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"controllers/PredicteController.html":{},"injectables/PredicteService.html":{},"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"injectables/SheduleDaysService.html":{},"injectables/SheduleService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["region.touppercase",{"_index":1911,"title":{},"body":{"injectables/UserService.html":{}}}],["region:region",{"_index":542,"title":{},"body":{"injectables/ContactPersonService.html":{}}}],["region:string",{"_index":775,"title":{},"body":{"classes/DecodeDto.html":{}}}],["regionie",{"_index":811,"title":{},"body":{"controllers/DirectorController.html":{}}}],["regionu",{"_index":1622,"title":{},"body":{"controllers/SchoolController.html":{}}}],["removeduserids",{"_index":1344,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["removeduserids.length",{"_index":1349,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["removeduserinterviewids",{"_index":1346,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["removeuserfrominterview",{"_index":1300,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["removeuserfrominterview(interviewid",{"_index":1313,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["removeuserinterviewdto",{"_index":1257,"title":{"classes/RemoveUserInterViewDto.html":{}},"body":{"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{},"classes/RemoveUserInterViewDto.html":{},"coverage.html":{}}}],["removeusertointerview",{"_index":1233,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["removeusertointerview(@param('idinterview",{"_index":1286,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["removeusertointerview(idinterview",{"_index":1256,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["rentalcost",{"_index":1518,"title":{},"body":{"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{}}}],["rentalcost.controller",{"_index":1547,"title":{},"body":{"modules/RentalCostModule.html":{}}}],["rentalcost.service",{"_index":1527,"title":{},"body":{"controllers/RentalCostController.html":{},"modules/RentalCostModule.html":{}}}],["rentalcostcontroller",{"_index":1516,"title":{"controllers/RentalCostController.html":{}},"body":{"controllers/RentalCostController.html":{},"modules/RentalCostModule.html":{},"coverage.html":{}}}],["rentalcostmodule",{"_index":132,"title":{"modules/RentalCostModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RentalCostModule.html":{},"modules.html":{},"overview.html":{}}}],["rentalcostservice",{"_index":1526,"title":{"injectables/RentalCostService.html":{}},"body":{"controllers/RentalCostController.html":{},"modules/RentalCostModule.html":{},"injectables/RentalCostService.html":{},"coverage.html":{},"overview.html":{}}}],["repository",{"_index":2008,"title":{},"body":{"index.html":{}}}],["req",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/FiszkaController.html":{},"controllers/GroupController.html":{},"controllers/InterviewsController.html":{},"controllers/PredicteController.html":{},"controllers/RentalCostController.html":{},"controllers/SchoolController.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"injectables/UpperCasePipe.html":{},"controllers/UserController.html":{}}}],["req['user",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{}}}],["req['user'].id",{"_index":989,"title":{},"body":{"controllers/FiszkaController.html":{},"controllers/InterviewsController.html":{},"controllers/UserController.html":{}}}],["req['user'].region",{"_index":481,"title":{},"body":{"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/GroupController.html":{},"controllers/PredicteController.html":{},"controllers/RentalCostController.html":{},"controllers/SchoolController.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"controllers/UserController.html":{}}}],["req['user'].role",{"_index":1847,"title":{},"body":{"controllers/UserController.html":{}}}],["request",{"_index":78,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/FiszkaController.html":{},"controllers/GroupController.html":{},"classes/HttpExceptionFilter.html":{},"controllers/InterviewsController.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"controllers/PredicteController.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{},"controllers/RentalCostController.html":{},"controllers/SchoolController.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"injectables/UpperCasePipe.html":{},"controllers/UserController.html":{}}}],["request.headers",{"_index":96,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotFoundExceptionFilter.html":{}}}],["request.headers.authorization?.split",{"_index":277,"title":{},"body":{"guards/AuthGuard.html":{}}}],["request.headers['user",{"_index":98,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/NotFoundExceptionFilter.html":{}}}],["request.method",{"_index":94,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/NotFoundExceptionFilter.html":{}}}],["request.url",{"_index":1223,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{}}}],["request['user",{"_index":276,"title":{},"body":{"guards/AuthGuard.html":{}}}],["requestid",{"_index":100,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/NotFoundExceptionFilter.html":{}}}],["requiredroles",{"_index":1566,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requiredroles.some((role",{"_index":1572,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requiredroles.some((role)=>user.role.includes(role",{"_index":1569,"title":{},"body":{"guards/RolesGuard.html":{}}}],["reset",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CallUserHistoryModule.html":{},"modules/ContactModule.html":{},"modules/ContactPersonModule.html":{},"modules/DirectorModule.html":{},"modules/FiszkaModule.html":{},"modules/GroupModule.html":{},"modules/InterviewsModule.html":{},"modules/PredicteModule.html":{},"modules/PrismaModule.html":{},"modules/RentalCostModule.html":{},"modules/SchoolModule.html":{},"modules/SheduleDaysModule.html":{},"modules/SheduleModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resignation",{"_index":847,"title":{},"body":{"classes/EditFiszkaDto.html":{},"injectables/FiszkaService.html":{},"classes/GetFiszkaDto.html":{}}}],["response",{"_index":80,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{}}}],["response.getheaders()['x",{"_index":101,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/NotFoundExceptionFilter.html":{}}}],["responsebody",{"_index":91,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["result",{"_index":1474,"title":{},"body":{"injectables/PredicteService.html":{}}}],["result.map((fiszka",{"_index":1476,"title":{},"body":{"injectables/PredicteService.html":{}}}],["results",{"_index":20,"title":{},"body":{"classes/AddUserInterViewDto.html":{},"classes/AddgroupDto.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallUserHistoryController.html":{},"modules/CallUserHistoryModule.html":{},"injectables/CallUserHistoryService.html":{},"controllers/ContactController.html":{},"modules/ContactModule.html":{},"controllers/ContactPersonController.html":{},"modules/ContactPersonModule.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"classes/CreateCallUserDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateInterViewDto.html":{},"classes/CreateRentalCostDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateSheduleDaysDto.html":{},"classes/CreateSheduleDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/DecodeDto.html":{},"controllers/DirectorController.html":{},"modules/DirectorModule.html":{},"injectables/DirectorService.html":{},"classes/EditContactDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditGroupDto.html":{},"classes/EditInterViewDto.html":{},"classes/EditRentalCostDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSheduleDaysDto.html":{},"classes/EditSheduleDto.html":{},"classes/EditUser.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"controllers/FiszkaController.html":{},"modules/FiszkaModule.html":{},"injectables/FiszkaService.html":{},"classes/GetCallUserHistoryDto.html":{},"classes/GetContactDto.html":{},"classes/GetContactPersontDto.html":{},"classes/GetDirectorDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetGroupDto.html":{},"classes/GetRentalCostDto.html":{},"classes/GetSchoolDto.html":{},"classes/GetSheduleDto.html":{},"classes/GetUserDto.html":{},"controllers/GroupController.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/InterviewsController.html":{},"modules/InterviewsModule.html":{},"injectables/InterviewsService.html":{},"classes/LoginUserDto.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"controllers/PredicteController.html":{},"modules/PredicteModule.html":{},"injectables/PredicteService.html":{},"modules/PrismaModule.html":{},"classes/PrismaOtherFilter.html":{},"injectables/PrismaService.html":{},"classes/PrismaValidationFilter.html":{},"classes/RefreshTokenDto.html":{},"classes/RemoveUserInterViewDto.html":{},"controllers/RentalCostController.html":{},"modules/RentalCostModule.html":{},"injectables/RentalCostService.html":{},"guards/RolesGuard.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"classes/SendFiszkiDto.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"modules/SheduleDaysModule.html":{},"injectables/SheduleDaysService.html":{},"modules/SheduleModule.html":{},"injectables/SheduleService.html":{},"injectables/UpperCasePipe.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidationdDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":84,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CallUserHistoryController.html":{},"injectables/CallUserHistoryService.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"controllers/DirectorController.html":{},"injectables/DirectorService.html":{},"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{},"controllers/PredicteController.html":{},"injectables/PredicteService.html":{},"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{},"guards/RolesGuard.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"injectables/SheduleDaysService.html":{},"injectables/SheduleService.html":{},"injectables/UpperCasePipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":45,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CallUserHistoryController.html":{},"injectables/CallUserHistoryService.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"controllers/DirectorController.html":{},"injectables/DirectorService.html":{},"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"controllers/PredicteController.html":{},"injectables/PredicteService.html":{},"classes/PrismaOtherFilter.html":{},"injectables/PrismaService.html":{},"classes/PrismaValidationFilter.html":{},"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{},"guards/RolesGuard.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"injectables/SheduleDaysService.html":{},"injectables/SheduleService.html":{},"injectables/UpperCasePipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["rol",{"_index":1624,"title":{},"body":{"controllers/SchoolController.html":{}}}],["role",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CallUserHistoryController.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/DecodeDto.html":{},"controllers/DirectorController.html":{},"classes/EditUser.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"controllers/FiszkaController.html":{},"classes/GetUserDto.html":{},"controllers/GroupController.html":{},"controllers/InterviewsController.html":{},"controllers/PredicteController.html":{},"controllers/RentalCostController.html":{},"guards/RolesGuard.html":{},"controllers/SchoolController.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"injectables/UpperCasePipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["role.ca",{"_index":386,"title":{},"body":{"controllers/CallUserHistoryController.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/FiszkaController.html":{},"controllers/PredicteController.html":{},"controllers/RentalCostController.html":{},"controllers/SchoolController.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"controllers/UserController.html":{}}}],["role.ca)@get('find/:idshedule",{"_index":1673,"title":{},"body":{"controllers/SheduleController.html":{}}}],["role.ca)@get('findall",{"_index":1589,"title":{},"body":{"controllers/SchoolController.html":{}}}],["role.ca)@get('findall/:idinterview/:idemployee",{"_index":963,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["role.ca)@get('findall/:idschool",{"_index":1670,"title":{},"body":{"controllers/SheduleController.html":{}}}],["role.ca)@get('findallforuser/:idemployee",{"_index":972,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["role.ca)@get('findbyid/:id",{"_index":1594,"title":{},"body":{"controllers/SchoolController.html":{}}}],["role.ca)@get('get/rd/:idschool",{"_index":510,"title":{},"body":{"controllers/ContactPersonController.html":{},"controllers/RentalCostController.html":{}}}],["role.ca)@get('getallhistory/:idfiszka",{"_index":392,"title":{},"body":{"controllers/CallUserHistoryController.html":{}}}],["role.ca)@get('getcontact/rd/:idschool",{"_index":465,"title":{},"body":{"controllers/ContactController.html":{}}}],["role.ca)@get('getdirector/rd/:idschool",{"_index":788,"title":{},"body":{"controllers/DirectorController.html":{}}}],["role.ca)@get('group/:idschool",{"_index":1379,"title":{},"body":{"controllers/PredicteController.html":{}}}],["role.ca)@patch('edit/:id",{"_index":1586,"title":{},"body":{"controllers/SchoolController.html":{}}}],["role.ca)@patch('edit/:idschool",{"_index":784,"title":{},"body":{"controllers/DirectorController.html":{}}}],["role.ca)@patch('edit/:idschool/:idcontact",{"_index":459,"title":{},"body":{"controllers/ContactController.html":{}}}],["role.ca)@patch('edit/:idshedule",{"_index":1668,"title":{},"body":{"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{}}}],["role.ca)@patch('edit/:schoolid/:idcontactperson",{"_index":505,"title":{},"body":{"controllers/ContactPersonController.html":{}}}],["role.ca)@patch('edit/rd/:idschool",{"_index":1524,"title":{},"body":{"controllers/RentalCostController.html":{}}}],["role.ca)@post('create",{"_index":1583,"title":{},"body":{"controllers/SchoolController.html":{}}}],["role.ca)@post('create/:idschool",{"_index":453,"title":{},"body":{"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/SheduleController.html":{}}}],["role.ca)@post('create/:idshedule",{"_index":1706,"title":{},"body":{"controllers/SheduleDaysController.html":{}}}],["role.ca)@post('create/rd/:idschool",{"_index":1519,"title":{},"body":{"controllers/RentalCostController.html":{}}}],["role.ca)@post('findall/:idshedule",{"_index":1709,"title":{},"body":{"controllers/SheduleDaysController.html":{}}}],["role.match(role.mgtmt",{"_index":1848,"title":{},"body":{"controllers/UserController.html":{}}}],["role.mgtmt",{"_index":946,"title":{},"body":{"controllers/FiszkaController.html":{},"controllers/UserController.html":{}}}],["role.mgtmt)@get(':id",{"_index":1822,"title":{},"body":{"controllers/UserController.html":{}}}],["role.mgtmt)@get('findall",{"_index":1816,"title":{},"body":{"controllers/UserController.html":{}}}],["role.mgtmt)@patch(':id",{"_index":1814,"title":{},"body":{"controllers/UserController.html":{}}}],["role.mgtmt)@post",{"_index":1809,"title":{},"body":{"controllers/UserController.html":{}}}],["role.mgtmt)@post('validation",{"_index":1829,"title":{},"body":{"controllers/UserController.html":{}}}],["role.rd",{"_index":391,"title":{},"body":{"controllers/CallUserHistoryController.html":{},"controllers/FiszkaController.html":{},"controllers/GroupController.html":{},"controllers/InterviewsController.html":{},"controllers/UserController.html":{}}}],["role.rd)@get('total",{"_index":1825,"title":{},"body":{"controllers/UserController.html":{}}}],["role.rd)@patch('addgroup/:idgroup",{"_index":952,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["role.rd)@patch('editfiszka/:idfiszka",{"_index":956,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["role.rd)@post('addcalluser/:idfiszka",{"_index":387,"title":{},"body":{"controllers/CallUserHistoryController.html":{}}}],["role.rd)@post('addfiszki/:idinterview",{"_index":947,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["role.rd)@usefilters(new",{"_index":1153,"title":{},"body":{"controllers/GroupController.html":{},"controllers/InterviewsController.html":{}}}],["role.tostring",{"_index":1904,"title":{},"body":{"injectables/UserService.html":{}}}],["role.user",{"_index":986,"title":{},"body":{"controllers/FiszkaController.html":{},"controllers/InterviewsController.html":{}}}],["role.user)@get('findall/:idinterview",{"_index":969,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["role.user)@usefilters(new",{"_index":1253,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["role:role",{"_index":774,"title":{},"body":{"classes/DecodeDto.html":{},"injectables/UpperCasePipe.html":{}}}],["role?.map(role",{"_index":1903,"title":{},"body":{"injectables/UserService.html":{}}}],["roles",{"_index":400,"title":{},"body":{"controllers/CallUserHistoryController.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/FiszkaController.html":{},"controllers/GroupController.html":{},"controllers/InterviewsController.html":{},"controllers/PredicteController.html":{},"controllers/RentalCostController.html":{},"controllers/SchoolController.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles(role.ca",{"_index":1009,"title":{},"body":{"controllers/FiszkaController.html":{},"controllers/GroupController.html":{},"controllers/InterviewsController.html":{}}}],["roles(role.mgtmt",{"_index":417,"title":{},"body":{"controllers/CallUserHistoryController.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/FiszkaController.html":{},"controllers/GroupController.html":{},"controllers/RentalCostController.html":{},"controllers/SchoolController.html":{},"controllers/UserController.html":{}}}],["roles(role.mgtmt)@usefilters(new",{"_index":1159,"title":{},"body":{"controllers/GroupController.html":{}}}],["roles(role.rd",{"_index":478,"title":{},"body":{"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/FiszkaController.html":{},"controllers/PredicteController.html":{},"controllers/RentalCostController.html":{},"controllers/SchoolController.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"controllers/UserController.html":{}}}],["roles(role.user",{"_index":994,"title":{},"body":{"controllers/FiszkaController.html":{},"controllers/UserController.html":{}}}],["roles_key",{"_index":1564,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rolesguard",{"_index":395,"title":{"guards/RolesGuard.html":{}},"body":{"controllers/CallUserHistoryController.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/FiszkaController.html":{},"controllers/GroupController.html":{},"controllers/InterviewsController.html":{},"controllers/PredicteController.html":{},"controllers/RentalCostController.html":{},"guards/RolesGuard.html":{},"controllers/SchoolController.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["rolevalue",{"_index":1899,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["rolevalue(role",{"_index":1902,"title":{},"body":{"injectables/UserService.html":{}}}],["rolevalue(yourrole",{"_index":1991,"title":{},"body":{"miscellaneous/functions.html":{}}}],["route",{"_index":274,"title":{},"body":{"guards/AuthGuard.html":{}}}],["rozmowy",{"_index":410,"title":{},"body":{"controllers/CallUserHistoryController.html":{}}}],["run",{"_index":2013,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":53,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/NotFoundErrorFilter.html":{},"dependencies.html":{}}}],["s",{"_index":1440,"title":{},"body":{"controllers/PredicteController.html":{}}}],["samej",{"_index":1403,"title":{},"body":{"controllers/PredicteController.html":{}}}],["scalable",{"_index":2000,"title":{},"body":{"index.html":{}}}],["school",{"_index":541,"title":{},"body":{"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"classes/CreateInterViewDto.html":{},"injectables/DirectorService.html":{},"injectables/GroupService.html":{},"injectables/InterviewsService.html":{},"injectables/PredicteService.html":{},"injectables/RentalCostService.html":{},"controllers/SchoolController.html":{},"injectables/SheduleDaysService.html":{},"injectables/SheduleService.html":{}}}],["school.controller",{"_index":1637,"title":{},"body":{"modules/SchoolModule.html":{}}}],["school.service",{"_index":1600,"title":{},"body":{"controllers/SchoolController.html":{},"modules/SchoolModule.html":{}}}],["schoolcontroller",{"_index":1574,"title":{"controllers/SchoolController.html":{}},"body":{"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"coverage.html":{}}}],["schoolid",{"_index":503,"title":{},"body":{"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"classes/CreateInterViewDto.html":{},"injectables/DirectorService.html":{},"injectables/InterviewsService.html":{},"injectables/PredicteService.html":{},"injectables/RentalCostService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["schoolmodule",{"_index":133,"title":{"modules/SchoolModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SchoolModule.html":{},"modules.html":{},"overview.html":{}}}],["schoolregion",{"_index":1739,"title":{},"body":{"injectables/SheduleDaysService.html":{}}}],["schoolservice",{"_index":1599,"title":{"injectables/SchoolService.html":{}},"body":{"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"coverage.html":{},"overview.html":{}}}],["scope",{"_index":1788,"title":{},"body":{"injectables/UpperCasePipe.html":{},"injectables/UserService.html":{}}}],["scope.request",{"_index":1791,"title":{},"body":{"injectables/UpperCasePipe.html":{},"injectables/UserService.html":{}}}],["secret",{"_index":268,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["secret:jwtsecretkey",{"_index":290,"title":{},"body":{"modules/AuthModule.html":{}}}],["see",{"_index":257,"title":{},"body":{"guards/AuthGuard.html":{}}}],["seed",{"_index":1932,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["select",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CallUserHistoryService.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"injectables/DirectorService.html":{},"injectables/FiszkaService.html":{},"injectables/GroupService.html":{},"injectables/InterviewsService.html":{},"injectables/PredicteService.html":{},"injectables/RentalCostService.html":{},"injectables/SchoolService.html":{},"injectables/SheduleDaysService.html":{},"injectables/SheduleService.html":{},"injectables/UserService.html":{}}}],["sendfiszkidto",{"_index":1378,"title":{"classes/SendFiszkiDto.html":{}},"body":{"controllers/PredicteController.html":{},"injectables/PredicteService.html":{},"classes/SendFiszkiDto.html":{},"coverage.html":{}}}],["server",{"_index":2001,"title":{},"body":{"index.html":{}}}],["setmetadata(is_public_key",{"_index":2068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(roles_key",{"_index":2069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shedule",{"_index":1663,"title":{},"body":{"controllers/SheduleController.html":{},"injectables/SheduleDaysService.html":{},"injectables/SheduleService.html":{}}}],["shedule).length===0",{"_index":1773,"title":{},"body":{"injectables/SheduleService.html":{}}}],["shedule.controller",{"_index":1752,"title":{},"body":{"modules/SheduleModule.html":{}}}],["shedule.id",{"_index":1746,"title":{},"body":{"injectables/SheduleDaysService.html":{}}}],["shedule.school?.region",{"_index":1740,"title":{},"body":{"injectables/SheduleDaysService.html":{}}}],["shedule.service",{"_index":1675,"title":{},"body":{"controllers/SheduleController.html":{},"modules/SheduleModule.html":{}}}],["shedulecontroller",{"_index":147,"title":{"controllers/SheduleController.html":{}},"body":{"modules/AppModule.html":{},"controllers/SheduleController.html":{},"modules/SheduleModule.html":{},"coverage.html":{}}}],["sheduleday",{"_index":1705,"title":{},"body":{"controllers/SheduleDaysController.html":{}}}],["sheduledays",{"_index":729,"title":{},"body":{"classes/CreateSheduleDto.html":{},"classes/GetSheduleDto.html":{},"injectables/SheduleService.html":{}}}],["sheduledays.controller",{"_index":1724,"title":{},"body":{"modules/SheduleDaysModule.html":{}}}],["sheduledays.service",{"_index":1711,"title":{},"body":{"controllers/SheduleDaysController.html":{},"modules/SheduleDaysModule.html":{}}}],["sheduledays:sheduledays",{"_index":736,"title":{},"body":{"classes/CreateSheduleDto.html":{},"classes/GetSheduleDto.html":{}}}],["sheduledayscontroller",{"_index":145,"title":{"controllers/SheduleDaysController.html":{}},"body":{"modules/AppModule.html":{},"controllers/SheduleDaysController.html":{},"modules/SheduleDaysModule.html":{},"coverage.html":{}}}],["sheduledaysmodule",{"_index":134,"title":{"modules/SheduleDaysModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SheduleDaysModule.html":{},"modules.html":{},"overview.html":{}}}],["sheduledaysservice",{"_index":142,"title":{"injectables/SheduleDaysService.html":{}},"body":{"modules/AppModule.html":{},"controllers/SheduleDaysController.html":{},"modules/SheduleDaysModule.html":{},"injectables/SheduleDaysService.html":{},"coverage.html":{},"overview.html":{}}}],["sheduleid",{"_index":1734,"title":{},"body":{"injectables/SheduleDaysService.html":{}}}],["shedulemodule",{"_index":135,"title":{"modules/SheduleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SheduleModule.html":{},"modules.html":{},"overview.html":{}}}],["sheduleservice",{"_index":149,"title":{"injectables/SheduleService.html":{}},"body":{"modules/AppModule.html":{},"controllers/SheduleController.html":{},"modules/SheduleModule.html":{},"injectables/SheduleService.html":{},"coverage.html":{},"overview.html":{}}}],["si",{"_index":1455,"title":{},"body":{"injectables/PredicteService.html":{},"controllers/SheduleController.html":{}}}],["side",{"_index":2002,"title":{},"body":{"index.html":{}}}],["signin",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signin(@body",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(email",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["signin(signindto",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{}}}],["signindto",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{}}}],["signindto.password",{"_index":216,"title":{},"body":{"controllers/AuthController.html":{}}}],["signoptions",{"_index":292,"title":{},"body":{"modules/AuthModule.html":{}}}],["skipduplicates",{"_index":1066,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AddUserInterViewDto.html":{},"classes/AddgroupDto.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallUserHistoryController.html":{},"modules/CallUserHistoryModule.html":{},"injectables/CallUserHistoryService.html":{},"controllers/ContactController.html":{},"modules/ContactModule.html":{},"controllers/ContactPersonController.html":{},"modules/ContactPersonModule.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"classes/CreateCallUserDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateInterViewDto.html":{},"classes/CreateRentalCostDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateSheduleDaysDto.html":{},"classes/CreateSheduleDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/DecodeDto.html":{},"controllers/DirectorController.html":{},"modules/DirectorModule.html":{},"injectables/DirectorService.html":{},"classes/EditContactDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditGroupDto.html":{},"classes/EditInterViewDto.html":{},"classes/EditRentalCostDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSheduleDaysDto.html":{},"classes/EditSheduleDto.html":{},"classes/EditUser.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"controllers/FiszkaController.html":{},"modules/FiszkaModule.html":{},"injectables/FiszkaService.html":{},"classes/GetCallUserHistoryDto.html":{},"classes/GetContactDto.html":{},"classes/GetContactPersontDto.html":{},"classes/GetDirectorDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetGroupDto.html":{},"classes/GetRentalCostDto.html":{},"classes/GetSchoolDto.html":{},"classes/GetSheduleDto.html":{},"classes/GetUserDto.html":{},"controllers/GroupController.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/InterviewsController.html":{},"modules/InterviewsModule.html":{},"injectables/InterviewsService.html":{},"classes/LoginUserDto.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"controllers/PredicteController.html":{},"modules/PredicteModule.html":{},"injectables/PredicteService.html":{},"modules/PrismaModule.html":{},"classes/PrismaOtherFilter.html":{},"injectables/PrismaService.html":{},"classes/PrismaValidationFilter.html":{},"classes/RefreshTokenDto.html":{},"classes/RemoveUserInterViewDto.html":{},"controllers/RentalCostController.html":{},"modules/RentalCostModule.html":{},"injectables/RentalCostService.html":{},"guards/RolesGuard.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"classes/SendFiszkiDto.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"modules/SheduleDaysModule.html":{},"injectables/SheduleDaysService.html":{},"modules/SheduleModule.html":{},"injectables/SheduleService.html":{},"injectables/UpperCasePipe.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidationdDto.html":{},"index.html":{}}}],["sponsors",{"_index":2031,"title":{},"body":{"index.html":{}}}],["sprawdzałem",{"_index":1357,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["sprawdzenie",{"_index":1454,"title":{},"body":{"injectables/PredicteService.html":{}}}],["src/.../auth.guard.ts",{"_index":2063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.module.ts",{"_index":2064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../classvalidator.ts",{"_index":1980,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../constants.ts",{"_index":2062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cuterrormsg.ts",{"_index":1981,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../hashpass.ts",{"_index":1982,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":1979,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../predictesheduleinschool.ts",{"_index":1983,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../public.decorator.ts",{"_index":2061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../roles.decorator.ts",{"_index":2065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../rolevalue.ts",{"_index":1977,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":112,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":166,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:32",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:40",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:48",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:55",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.guard.ts",{"_index":229,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/auth.guard.ts:15",{"_index":236,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/auth/auth.guard.ts:18",{"_index":239,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/auth/auth.guard.ts:49",{"_index":243,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/auth/auth.module.ts",{"_index":283,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/auth.service.ts",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:10",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:16",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:65",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:70",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:96",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/constants.ts",{"_index":1937,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/decorators/public.decorator.ts",{"_index":1938,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/decorators/roles.decorator",{"_index":401,"title":{},"body":{"controllers/CallUserHistoryController.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/FiszkaController.html":{},"controllers/GroupController.html":{},"controllers/InterviewsController.html":{},"controllers/PredicteController.html":{},"controllers/RentalCostController.html":{},"controllers/SchoolController.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"controllers/UserController.html":{}}}],["src/auth/decorators/roles.decorator.ts",{"_index":1939,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/dto/authrefreshtoken.dto",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["src/auth/dto/authrefreshtoken.dto.ts",{"_index":1512,"title":{},"body":{"classes/RefreshTokenDto.html":{},"coverage.html":{}}}],["src/auth/dto/authrefreshtoken.dto.ts:6",{"_index":1513,"title":{},"body":{"classes/RefreshTokenDto.html":{}}}],["src/auth/dto/authuser.dto",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/dto/authuser.dto.ts",{"_index":1361,"title":{},"body":{"classes/LoginUserDto.html":{},"coverage.html":{}}}],["src/auth/dto/authuser.dto.ts:10",{"_index":1363,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["src/auth/dto/authuser.dto.ts:7",{"_index":1362,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["src/auth/dto/decode.dto.ts",{"_index":765,"title":{},"body":{"classes/DecodeDto.html":{},"coverage.html":{}}}],["src/auth/dto/decode.dto.ts:11",{"_index":771,"title":{},"body":{"classes/DecodeDto.html":{}}}],["src/auth/dto/decode.dto.ts:13",{"_index":770,"title":{},"body":{"classes/DecodeDto.html":{}}}],["src/auth/dto/decode.dto.ts:15",{"_index":769,"title":{},"body":{"classes/DecodeDto.html":{}}}],["src/auth/dto/decode.dto.ts:5",{"_index":768,"title":{},"body":{"classes/DecodeDto.html":{}}}],["src/auth/dto/decode.dto.ts:7",{"_index":773,"title":{},"body":{"classes/DecodeDto.html":{}}}],["src/auth/dto/decode.dto.ts:9",{"_index":772,"title":{},"body":{"classes/DecodeDto.html":{}}}],["src/auth/roles.guard",{"_index":396,"title":{},"body":{"controllers/CallUserHistoryController.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/FiszkaController.html":{},"controllers/GroupController.html":{},"controllers/InterviewsController.html":{},"controllers/PredicteController.html":{},"controllers/RentalCostController.html":{},"controllers/SchoolController.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"modules/UserModule.html":{}}}],["src/auth/roles.guard.ts",{"_index":1560,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/auth/roles.guard.ts:10",{"_index":1563,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/roles.guard.ts:7",{"_index":1562,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/common/helpers/classvalidator",{"_index":1841,"title":{},"body":{"controllers/UserController.html":{}}}],["src/common/helpers/classvalidator.ts",{"_index":1943,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/common/helpers/cuterrormsg.ts",{"_index":1944,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/common/helpers/hashpass.ts",{"_index":1947,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/common/helpers/predictesheduleinschool.ts",{"_index":1945,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/common/helpers/rolevalue",{"_index":1900,"title":{},"body":{"injectables/UserService.html":{}}}],["src/common/helpers/rolevalue.ts",{"_index":1948,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/common/validation/allexceptionsfilter.filter.ts",{"_index":28,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["src/common/validation/allexceptionsfilter.filter.ts:21",{"_index":36,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["src/common/validation/allexceptionsfilter.filter.ts:25",{"_index":43,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["src/common/validation/http",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CallUserHistoryController.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/FiszkaController.html":{},"controllers/GroupController.html":{},"classes/HttpExceptionFilter.html":{},"controllers/InterviewsController.html":{},"controllers/PredicteController.html":{},"controllers/RentalCostController.html":{},"controllers/SchoolController.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"coverage.html":{}}}],["src/common/validation/notfounderrorfilter.filter.ts",{"_index":1364,"title":{},"body":{"classes/NotFoundErrorFilter.html":{},"coverage.html":{}}}],["src/common/validation/notfounderrorfilter.filter.ts:7",{"_index":1365,"title":{},"body":{"classes/NotFoundErrorFilter.html":{}}}],["src/common/validation/notfoundexception.filter.ts",{"_index":1369,"title":{},"body":{"classes/NotFoundExceptionFilter.html":{},"coverage.html":{}}}],["src/common/validation/notfoundexception.filter.ts:7",{"_index":1370,"title":{},"body":{"classes/NotFoundExceptionFilter.html":{}}}],["src/common/validation/prismaclientvalidationerror.filter.ts",{"_index":1506,"title":{},"body":{"classes/PrismaValidationFilter.html":{},"coverage.html":{}}}],["src/common/validation/prismaclientvalidationerror.filter.ts:10",{"_index":1507,"title":{},"body":{"classes/PrismaValidationFilter.html":{}}}],["src/common/validation/prismaothererror.filter.ts",{"_index":1485,"title":{},"body":{"classes/PrismaOtherFilter.html":{},"coverage.html":{}}}],["src/common/validation/prismaothererror.filter.ts:10",{"_index":1486,"title":{},"body":{"classes/PrismaOtherFilter.html":{}}}],["src/main.ts",{"_index":1950,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/models/calluserhistory/calluserhistory.controller.ts",{"_index":379,"title":{},"body":{"controllers/CallUserHistoryController.html":{},"coverage.html":{}}}],["src/models/calluserhistory/calluserhistory.controller.ts:23",{"_index":393,"title":{},"body":{"controllers/CallUserHistoryController.html":{}}}],["src/models/calluserhistory/calluserhistory.controller.ts:29",{"_index":388,"title":{},"body":{"controllers/CallUserHistoryController.html":{}}}],["src/models/calluserhistory/calluserhistory.module.ts",{"_index":426,"title":{},"body":{"modules/CallUserHistoryModule.html":{}}}],["src/models/calluserhistory/calluserhistory.service.ts",{"_index":428,"title":{},"body":{"injectables/CallUserHistoryService.html":{},"coverage.html":{}}}],["src/models/calluserhistory/calluserhistory.service.ts:10",{"_index":432,"title":{},"body":{"injectables/CallUserHistoryService.html":{}}}],["src/models/calluserhistory/calluserhistory.service.ts:25",{"_index":431,"title":{},"body":{"injectables/CallUserHistoryService.html":{}}}],["src/models/calluserhistory/calluserhistory.service.ts:7",{"_index":430,"title":{},"body":{"injectables/CallUserHistoryService.html":{}}}],["src/models/calluserhistory/dto/createcalluser.dto.ts",{"_index":567,"title":{},"body":{"classes/CreateCallUserDto.html":{},"coverage.html":{}}}],["src/models/calluserhistory/dto/createcalluser.dto.ts:11",{"_index":572,"title":{},"body":{"classes/CreateCallUserDto.html":{}}}],["src/models/calluserhistory/dto/createcalluser.dto.ts:15",{"_index":574,"title":{},"body":{"classes/CreateCallUserDto.html":{}}}],["src/models/calluserhistory/dto/createcalluser.dto.ts:7",{"_index":570,"title":{},"body":{"classes/CreateCallUserDto.html":{}}}],["src/models/calluserhistory/dto/getcalluserhistory.dto.ts",{"_index":1071,"title":{},"body":{"classes/GetCallUserHistoryDto.html":{},"coverage.html":{}}}],["src/models/calluserhistory/dto/getcalluserhistory.dto.ts:11",{"_index":1073,"title":{},"body":{"classes/GetCallUserHistoryDto.html":{}}}],["src/models/calluserhistory/dto/getcalluserhistory.dto.ts:15",{"_index":1074,"title":{},"body":{"classes/GetCallUserHistoryDto.html":{}}}],["src/models/calluserhistory/dto/getcalluserhistory.dto.ts:7",{"_index":1072,"title":{},"body":{"classes/GetCallUserHistoryDto.html":{}}}],["src/models/contact/contact.controller.ts",{"_index":444,"title":{},"body":{"controllers/ContactController.html":{},"coverage.html":{}}}],["src/models/contact/contact.controller.ts:20",{"_index":463,"title":{},"body":{"controllers/ContactController.html":{}}}],["src/models/contact/contact.controller.ts:26",{"_index":466,"title":{},"body":{"controllers/ContactController.html":{}}}],["src/models/contact/contact.controller.ts:33",{"_index":454,"title":{},"body":{"controllers/ContactController.html":{}}}],["src/models/contact/contact.controller.ts:40",{"_index":460,"title":{},"body":{"controllers/ContactController.html":{}}}],["src/models/contact/contact.module.ts",{"_index":494,"title":{},"body":{"modules/ContactModule.html":{}}}],["src/models/contact/contact.service.ts",{"_index":554,"title":{},"body":{"injectables/ContactService.html":{},"coverage.html":{}}}],["src/models/contact/contact.service.ts:10",{"_index":558,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/models/contact/contact.service.ts:22",{"_index":559,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/models/contact/contact.service.ts:39",{"_index":556,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/models/contact/contact.service.ts:56",{"_index":557,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/models/contact/contact.service.ts:7",{"_index":555,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/models/contact/dto/createcontact.dto.ts",{"_index":580,"title":{},"body":{"classes/CreateContactDto.html":{},"coverage.html":{}}}],["src/models/contact/dto/createcontact.dto.ts:10",{"_index":582,"title":{},"body":{"classes/CreateContactDto.html":{}}}],["src/models/contact/dto/createcontact.dto.ts:6",{"_index":583,"title":{},"body":{"classes/CreateContactDto.html":{}}}],["src/models/contact/dto/editcontact.dto.ts",{"_index":832,"title":{},"body":{"classes/EditContactDto.html":{},"coverage.html":{}}}],["src/models/contact/dto/editcontact.dto.ts:10",{"_index":833,"title":{},"body":{"classes/EditContactDto.html":{}}}],["src/models/contact/dto/editcontact.dto.ts:6",{"_index":834,"title":{},"body":{"classes/EditContactDto.html":{}}}],["src/models/contact/dto/getcontact.dto.ts",{"_index":1075,"title":{},"body":{"classes/GetContactDto.html":{},"coverage.html":{}}}],["src/models/contact/dto/getcontact.dto.ts:10",{"_index":1076,"title":{},"body":{"classes/GetContactDto.html":{}}}],["src/models/contact/dto/getcontact.dto.ts:6",{"_index":1077,"title":{},"body":{"classes/GetContactDto.html":{}}}],["src/models/director/director.controller.ts",{"_index":780,"title":{},"body":{"controllers/DirectorController.html":{},"coverage.html":{}}}],["src/models/director/director.controller.ts:21",{"_index":787,"title":{},"body":{"controllers/DirectorController.html":{}}}],["src/models/director/director.controller.ts:28",{"_index":789,"title":{},"body":{"controllers/DirectorController.html":{}}}],["src/models/director/director.controller.ts:35",{"_index":782,"title":{},"body":{"controllers/DirectorController.html":{}}}],["src/models/director/director.controller.ts:42",{"_index":785,"title":{},"body":{"controllers/DirectorController.html":{}}}],["src/models/director/director.module.ts",{"_index":818,"title":{},"body":{"modules/DirectorModule.html":{}}}],["src/models/director/director.service.ts",{"_index":820,"title":{},"body":{"injectables/DirectorService.html":{},"coverage.html":{}}}],["src/models/director/director.service.ts:12",{"_index":824,"title":{},"body":{"injectables/DirectorService.html":{}}}],["src/models/director/director.service.ts:27",{"_index":825,"title":{},"body":{"injectables/DirectorService.html":{}}}],["src/models/director/director.service.ts:53",{"_index":822,"title":{},"body":{"injectables/DirectorService.html":{}}}],["src/models/director/director.service.ts:75",{"_index":823,"title":{},"body":{"injectables/DirectorService.html":{}}}],["src/models/director/director.service.ts:9",{"_index":821,"title":{},"body":{"injectables/DirectorService.html":{}}}],["src/models/director/dto/createdirector.dto.ts",{"_index":599,"title":{},"body":{"classes/CreateDirectorDto.html":{},"coverage.html":{}}}],["src/models/director/dto/createdirector.dto.ts:11",{"_index":603,"title":{},"body":{"classes/CreateDirectorDto.html":{}}}],["src/models/director/dto/createdirector.dto.ts:15",{"_index":600,"title":{},"body":{"classes/CreateDirectorDto.html":{}}}],["src/models/director/dto/createdirector.dto.ts:19",{"_index":602,"title":{},"body":{"classes/CreateDirectorDto.html":{}}}],["src/models/director/dto/createdirector.dto.ts:7",{"_index":601,"title":{},"body":{"classes/CreateDirectorDto.html":{}}}],["src/models/director/dto/editdirector.dto.ts",{"_index":840,"title":{},"body":{"classes/EditDirectorDto.html":{},"coverage.html":{}}}],["src/models/director/dto/editdirector.dto.ts:10",{"_index":844,"title":{},"body":{"classes/EditDirectorDto.html":{}}}],["src/models/director/dto/editdirector.dto.ts:14",{"_index":841,"title":{},"body":{"classes/EditDirectorDto.html":{}}}],["src/models/director/dto/editdirector.dto.ts:18",{"_index":843,"title":{},"body":{"classes/EditDirectorDto.html":{}}}],["src/models/director/dto/editdirector.dto.ts:6",{"_index":842,"title":{},"body":{"classes/EditDirectorDto.html":{}}}],["src/models/director/dto/getdirector.dto.ts",{"_index":1085,"title":{},"body":{"classes/GetDirectorDto.html":{},"coverage.html":{}}}],["src/models/director/dto/getdirector.dto.ts:12",{"_index":1090,"title":{},"body":{"classes/GetDirectorDto.html":{}}}],["src/models/director/dto/getdirector.dto.ts:15",{"_index":1086,"title":{},"body":{"classes/GetDirectorDto.html":{}}}],["src/models/director/dto/getdirector.dto.ts:18",{"_index":1089,"title":{},"body":{"classes/GetDirectorDto.html":{}}}],["src/models/director/dto/getdirector.dto.ts:6",{"_index":1087,"title":{},"body":{"classes/GetDirectorDto.html":{}}}],["src/models/director/dto/getdirector.dto.ts:9",{"_index":1088,"title":{},"body":{"classes/GetDirectorDto.html":{}}}],["src/models/fiszka/dto/addgroup.dto.ts",{"_index":23,"title":{},"body":{"classes/AddgroupDto.html":{},"coverage.html":{}}}],["src/models/fiszka/dto/addgroup.dto.ts:6",{"_index":25,"title":{},"body":{"classes/AddgroupDto.html":{}}}],["src/models/fiszka/dto/createfiszka.dto.ts",{"_index":605,"title":{},"body":{"classes/CreateFiszkaDto.html":{},"coverage.html":{}}}],["src/models/fiszka/dto/createfiszka.dto.ts:11",{"_index":618,"title":{},"body":{"classes/CreateFiszkaDto.html":{}}}],["src/models/fiszka/dto/createfiszka.dto.ts:15",{"_index":612,"title":{},"body":{"classes/CreateFiszkaDto.html":{}}}],["src/models/fiszka/dto/createfiszka.dto.ts:21",{"_index":610,"title":{},"body":{"classes/CreateFiszkaDto.html":{}}}],["src/models/fiszka/dto/createfiszka.dto.ts:25",{"_index":613,"title":{},"body":{"classes/CreateFiszkaDto.html":{}}}],["src/models/fiszka/dto/createfiszka.dto.ts:29",{"_index":617,"title":{},"body":{"classes/CreateFiszkaDto.html":{}}}],["src/models/fiszka/dto/createfiszka.dto.ts:33",{"_index":615,"title":{},"body":{"classes/CreateFiszkaDto.html":{}}}],["src/models/fiszka/dto/createfiszka.dto.ts:7",{"_index":616,"title":{},"body":{"classes/CreateFiszkaDto.html":{}}}],["src/models/fiszka/dto/editfiszka.dto.ts",{"_index":846,"title":{},"body":{"classes/EditFiszkaDto.html":{},"coverage.html":{}}}],["src/models/fiszka/dto/editfiszka.dto.ts:11",{"_index":856,"title":{},"body":{"classes/EditFiszkaDto.html":{}}}],["src/models/fiszka/dto/editfiszka.dto.ts:15",{"_index":850,"title":{},"body":{"classes/EditFiszkaDto.html":{}}}],["src/models/fiszka/dto/editfiszka.dto.ts:21",{"_index":849,"title":{},"body":{"classes/EditFiszkaDto.html":{}}}],["src/models/fiszka/dto/editfiszka.dto.ts:25",{"_index":851,"title":{},"body":{"classes/EditFiszkaDto.html":{}}}],["src/models/fiszka/dto/editfiszka.dto.ts:29",{"_index":854,"title":{},"body":{"classes/EditFiszkaDto.html":{}}}],["src/models/fiszka/dto/editfiszka.dto.ts:33",{"_index":852,"title":{},"body":{"classes/EditFiszkaDto.html":{}}}],["src/models/fiszka/dto/editfiszka.dto.ts:36",{"_index":855,"title":{},"body":{"classes/EditFiszkaDto.html":{}}}],["src/models/fiszka/dto/editfiszka.dto.ts:7",{"_index":853,"title":{},"body":{"classes/EditFiszkaDto.html":{}}}],["src/models/fiszka/dto/getfiszka.dto.ts",{"_index":1091,"title":{},"body":{"classes/GetFiszkaDto.html":{},"coverage.html":{}}}],["src/models/fiszka/dto/getfiszka.dto.ts:11",{"_index":1101,"title":{},"body":{"classes/GetFiszkaDto.html":{}}}],["src/models/fiszka/dto/getfiszka.dto.ts:15",{"_index":1093,"title":{},"body":{"classes/GetFiszkaDto.html":{}}}],["src/models/fiszka/dto/getfiszka.dto.ts:21",{"_index":1092,"title":{},"body":{"classes/GetFiszkaDto.html":{}}}],["src/models/fiszka/dto/getfiszka.dto.ts:24",{"_index":1094,"title":{},"body":{"classes/GetFiszkaDto.html":{}}}],["src/models/fiszka/dto/getfiszka.dto.ts:28",{"_index":1098,"title":{},"body":{"classes/GetFiszkaDto.html":{}}}],["src/models/fiszka/dto/getfiszka.dto.ts:32",{"_index":1095,"title":{},"body":{"classes/GetFiszkaDto.html":{}}}],["src/models/fiszka/dto/getfiszka.dto.ts:35",{"_index":1100,"title":{},"body":{"classes/GetFiszkaDto.html":{}}}],["src/models/fiszka/dto/getfiszka.dto.ts:38",{"_index":1099,"title":{},"body":{"classes/GetFiszkaDto.html":{}}}],["src/models/fiszka/dto/getfiszka.dto.ts:41",{"_index":1096,"title":{},"body":{"classes/GetFiszkaDto.html":{}}}],["src/models/fiszka/dto/getfiszka.dto.ts:7",{"_index":1097,"title":{},"body":{"classes/GetFiszkaDto.html":{}}}],["src/models/fiszka/fiszka.controller.ts",{"_index":935,"title":{},"body":{"controllers/FiszkaController.html":{},"coverage.html":{}}}],["src/models/fiszka/fiszka.controller.ts:23",{"_index":964,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["src/models/fiszka/fiszka.controller.ts:30",{"_index":970,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["src/models/fiszka/fiszka.controller.ts:38",{"_index":973,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["src/models/fiszka/fiszka.controller.ts:44",{"_index":967,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["src/models/fiszka/fiszka.controller.ts:51",{"_index":957,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["src/models/fiszka/fiszka.controller.ts:58",{"_index":960,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["src/models/fiszka/fiszka.controller.ts:65",{"_index":948,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["src/models/fiszka/fiszka.controller.ts:74",{"_index":953,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["src/models/fiszka/fiszka.module.ts",{"_index":1031,"title":{},"body":{"modules/FiszkaModule.html":{}}}],["src/models/fiszka/fiszka.service.ts",{"_index":1033,"title":{},"body":{"injectables/FiszkaService.html":{},"coverage.html":{}}}],["src/models/fiszka/fiszka.service.ts:107",{"_index":1037,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["src/models/fiszka/fiszka.service.ts:12",{"_index":1039,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["src/models/fiszka/fiszka.service.ts:126",{"_index":1038,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["src/models/fiszka/fiszka.service.ts:147",{"_index":1035,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["src/models/fiszka/fiszka.service.ts:172",{"_index":1036,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["src/models/fiszka/fiszka.service.ts:37",{"_index":1041,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["src/models/fiszka/fiszka.service.ts:62",{"_index":1043,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["src/models/fiszka/fiszka.service.ts:83",{"_index":1040,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["src/models/fiszka/fiszka.service.ts:9",{"_index":1034,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["src/models/group/dto/creategroup.dto.ts",{"_index":633,"title":{},"body":{"classes/CreateGroupDto.html":{},"coverage.html":{}}}],["src/models/group/dto/creategroup.dto.ts:10",{"_index":645,"title":{},"body":{"classes/CreateGroupDto.html":{}}}],["src/models/group/dto/creategroup.dto.ts:13",{"_index":644,"title":{},"body":{"classes/CreateGroupDto.html":{}}}],["src/models/group/dto/creategroup.dto.ts:16",{"_index":642,"title":{},"body":{"classes/CreateGroupDto.html":{}}}],["src/models/group/dto/creategroup.dto.ts:19",{"_index":643,"title":{},"body":{"classes/CreateGroupDto.html":{}}}],["src/models/group/dto/creategroup.dto.ts:22",{"_index":647,"title":{},"body":{"classes/CreateGroupDto.html":{}}}],["src/models/group/dto/creategroup.dto.ts:7",{"_index":640,"title":{},"body":{"classes/CreateGroupDto.html":{}}}],["src/models/group/dto/editgroup.dto.ts",{"_index":859,"title":{},"body":{"classes/EditGroupDto.html":{},"coverage.html":{}}}],["src/models/group/dto/editgroup.dto.ts:10",{"_index":864,"title":{},"body":{"classes/EditGroupDto.html":{}}}],["src/models/group/dto/editgroup.dto.ts:13",{"_index":863,"title":{},"body":{"classes/EditGroupDto.html":{}}}],["src/models/group/dto/editgroup.dto.ts:16",{"_index":861,"title":{},"body":{"classes/EditGroupDto.html":{}}}],["src/models/group/dto/editgroup.dto.ts:19",{"_index":862,"title":{},"body":{"classes/EditGroupDto.html":{}}}],["src/models/group/dto/editgroup.dto.ts:22",{"_index":865,"title":{},"body":{"classes/EditGroupDto.html":{}}}],["src/models/group/dto/editgroup.dto.ts:7",{"_index":860,"title":{},"body":{"classes/EditGroupDto.html":{}}}],["src/models/group/dto/getgroup.dto.ts",{"_index":1104,"title":{},"body":{"classes/GetGroupDto.html":{},"coverage.html":{}}}],["src/models/group/dto/getgroup.dto.ts:10",{"_index":1110,"title":{},"body":{"classes/GetGroupDto.html":{}}}],["src/models/group/dto/getgroup.dto.ts:13",{"_index":1109,"title":{},"body":{"classes/GetGroupDto.html":{}}}],["src/models/group/dto/getgroup.dto.ts:16",{"_index":1106,"title":{},"body":{"classes/GetGroupDto.html":{}}}],["src/models/group/dto/getgroup.dto.ts:19",{"_index":1108,"title":{},"body":{"classes/GetGroupDto.html":{}}}],["src/models/group/dto/getgroup.dto.ts:22",{"_index":1111,"title":{},"body":{"classes/GetGroupDto.html":{}}}],["src/models/group/dto/getgroup.dto.ts:25",{"_index":1107,"title":{},"body":{"classes/GetGroupDto.html":{}}}],["src/models/group/dto/getgroup.dto.ts:7",{"_index":1105,"title":{},"body":{"classes/GetGroupDto.html":{}}}],["src/models/group/group.controller.ts",{"_index":1151,"title":{},"body":{"controllers/GroupController.html":{},"coverage.html":{}}}],["src/models/group/group.controller.ts:21",{"_index":1164,"title":{},"body":{"controllers/GroupController.html":{}}}],["src/models/group/group.controller.ts:29",{"_index":1161,"title":{},"body":{"controllers/GroupController.html":{}}}],["src/models/group/group.controller.ts:35",{"_index":1155,"title":{},"body":{"controllers/GroupController.html":{}}}],["src/models/group/group.controller.ts:42",{"_index":1158,"title":{},"body":{"controllers/GroupController.html":{}}}],["src/models/group/group.module.ts",{"_index":1192,"title":{},"body":{"modules/GroupModule.html":{}}}],["src/models/group/group.service.ts",{"_index":1194,"title":{},"body":{"injectables/GroupService.html":{},"coverage.html":{}}}],["src/models/group/group.service.ts:10",{"_index":1199,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/models/group/group.service.ts:30",{"_index":1198,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/models/group/group.service.ts:50",{"_index":1196,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/models/group/group.service.ts:7",{"_index":1195,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/models/group/group.service.ts:70",{"_index":1197,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/models/interviews/dto/adduserinterview.dto.ts",{"_index":6,"title":{},"body":{"classes/AddUserInterViewDto.html":{},"coverage.html":{}}}],["src/models/interviews/dto/adduserinterview.dto.ts:6",{"_index":16,"title":{},"body":{"classes/AddUserInterViewDto.html":{}}}],["src/models/interviews/dto/createinterview.dto.ts",{"_index":654,"title":{},"body":{"classes/CreateInterViewDto.html":{},"coverage.html":{}}}],["src/models/interviews/dto/createinterview.dto.ts:13",{"_index":663,"title":{},"body":{"classes/CreateInterViewDto.html":{}}}],["src/models/interviews/dto/createinterview.dto.ts:16",{"_index":661,"title":{},"body":{"classes/CreateInterViewDto.html":{}}}],["src/models/interviews/dto/createinterview.dto.ts:19",{"_index":664,"title":{},"body":{"classes/CreateInterViewDto.html":{}}}],["src/models/interviews/dto/createinterview.dto.ts:22",{"_index":660,"title":{},"body":{"classes/CreateInterViewDto.html":{}}}],["src/models/interviews/dto/createinterview.dto.ts:9",{"_index":659,"title":{},"body":{"classes/CreateInterViewDto.html":{}}}],["src/models/interviews/dto/editinterview.dto.ts",{"_index":867,"title":{},"body":{"classes/EditInterViewDto.html":{},"coverage.html":{}}}],["src/models/interviews/dto/editinterview.dto.ts:13",{"_index":871,"title":{},"body":{"classes/EditInterViewDto.html":{}}}],["src/models/interviews/dto/editinterview.dto.ts:16",{"_index":869,"title":{},"body":{"classes/EditInterViewDto.html":{}}}],["src/models/interviews/dto/editinterview.dto.ts:9",{"_index":868,"title":{},"body":{"classes/EditInterViewDto.html":{}}}],["src/models/interviews/dto/removeuserinterview.dto.ts",{"_index":1514,"title":{},"body":{"classes/RemoveUserInterViewDto.html":{},"coverage.html":{}}}],["src/models/interviews/dto/removeuserinterview.dto.ts:6",{"_index":1515,"title":{},"body":{"classes/RemoveUserInterViewDto.html":{}}}],["src/models/interviews/interviews.controller.ts",{"_index":1226,"title":{},"body":{"controllers/InterviewsController.html":{},"coverage.html":{}}}],["src/models/interviews/interviews.controller.ts:23",{"_index":1248,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["src/models/interviews/interviews.controller.ts:31",{"_index":1255,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["src/models/interviews/interviews.controller.ts:39",{"_index":1245,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["src/models/interviews/interviews.controller.ts:46",{"_index":1251,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["src/models/interviews/interviews.controller.ts:53",{"_index":1242,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["src/models/interviews/interviews.controller.ts:59",{"_index":1236,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["src/models/interviews/interviews.controller.ts:65",{"_index":1259,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["src/models/interviews/interviews.controller.ts:71",{"_index":1239,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["src/models/interviews/interviews.module.ts",{"_index":1295,"title":{},"body":{"modules/InterviewsModule.html":{}}}],["src/models/interviews/interviews.service.ts",{"_index":1299,"title":{},"body":{"injectables/InterviewsService.html":{},"coverage.html":{}}}],["src/models/interviews/interviews.service.ts:104",{"_index":1303,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["src/models/interviews/interviews.service.ts:11",{"_index":1301,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["src/models/interviews/interviews.service.ts:131",{"_index":1314,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["src/models/interviews/interviews.service.ts:15",{"_index":1310,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["src/models/interviews/interviews.service.ts:159",{"_index":1306,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["src/models/interviews/interviews.service.ts:33",{"_index":1312,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["src/models/interviews/interviews.service.ts:56",{"_index":1308,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["src/models/interviews/interviews.service.ts:73",{"_index":1311,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["src/models/interviews/interviews.service.ts:92",{"_index":1307,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["src/models/personcontact/contactperson.controller.ts",{"_index":498,"title":{},"body":{"controllers/ContactPersonController.html":{},"coverage.html":{}}}],["src/models/personcontact/contactperson.controller.ts:21",{"_index":509,"title":{},"body":{"controllers/ContactPersonController.html":{}}}],["src/models/personcontact/contactperson.controller.ts:28",{"_index":511,"title":{},"body":{"controllers/ContactPersonController.html":{}}}],["src/models/personcontact/contactperson.controller.ts:36",{"_index":501,"title":{},"body":{"controllers/ContactPersonController.html":{}}}],["src/models/personcontact/contactperson.controller.ts:44",{"_index":506,"title":{},"body":{"controllers/ContactPersonController.html":{}}}],["src/models/personcontact/contactperson.module.ts",{"_index":531,"title":{},"body":{"modules/ContactPersonModule.html":{}}}],["src/models/personcontact/contactperson.service.ts",{"_index":534,"title":{},"body":{"injectables/ContactPersonService.html":{},"coverage.html":{}}}],["src/models/personcontact/contactperson.service.ts:11",{"_index":538,"title":{},"body":{"injectables/ContactPersonService.html":{}}}],["src/models/personcontact/contactperson.service.ts:26",{"_index":539,"title":{},"body":{"injectables/ContactPersonService.html":{}}}],["src/models/personcontact/contactperson.service.ts:46",{"_index":536,"title":{},"body":{"injectables/ContactPersonService.html":{}}}],["src/models/personcontact/contactperson.service.ts:68",{"_index":537,"title":{},"body":{"injectables/ContactPersonService.html":{}}}],["src/models/personcontact/contactperson.service.ts:8",{"_index":535,"title":{},"body":{"injectables/ContactPersonService.html":{}}}],["src/models/personcontact/dto/createcontactperson.dto.ts",{"_index":584,"title":{},"body":{"classes/CreateContactPersontDto.html":{},"coverage.html":{}}}],["src/models/personcontact/dto/createcontactperson.dto.ts:11",{"_index":592,"title":{},"body":{"classes/CreateContactPersontDto.html":{}}}],["src/models/personcontact/dto/createcontactperson.dto.ts:15",{"_index":586,"title":{},"body":{"classes/CreateContactPersontDto.html":{}}}],["src/models/personcontact/dto/createcontactperson.dto.ts:19",{"_index":591,"title":{},"body":{"classes/CreateContactPersontDto.html":{}}}],["src/models/personcontact/dto/createcontactperson.dto.ts:7",{"_index":589,"title":{},"body":{"classes/CreateContactPersontDto.html":{}}}],["src/models/personcontact/dto/editcontactperson.dto.ts",{"_index":835,"title":{},"body":{"classes/EditContactPersontDto.html":{},"coverage.html":{}}}],["src/models/personcontact/dto/editcontactperson.dto.ts:11",{"_index":839,"title":{},"body":{"classes/EditContactPersontDto.html":{}}}],["src/models/personcontact/dto/editcontactperson.dto.ts:15",{"_index":836,"title":{},"body":{"classes/EditContactPersontDto.html":{}}}],["src/models/personcontact/dto/editcontactperson.dto.ts:19",{"_index":838,"title":{},"body":{"classes/EditContactPersontDto.html":{}}}],["src/models/personcontact/dto/editcontactperson.dto.ts:7",{"_index":837,"title":{},"body":{"classes/EditContactPersontDto.html":{}}}],["src/models/personcontact/dto/getcontactperson.dto.ts",{"_index":1078,"title":{},"body":{"classes/GetContactPersontDto.html":{},"coverage.html":{}}}],["src/models/personcontact/dto/getcontactperson.dto.ts:12",{"_index":1083,"title":{},"body":{"classes/GetContactPersontDto.html":{}}}],["src/models/personcontact/dto/getcontactperson.dto.ts:15",{"_index":1079,"title":{},"body":{"classes/GetContactPersontDto.html":{}}}],["src/models/personcontact/dto/getcontactperson.dto.ts:18",{"_index":1082,"title":{},"body":{"classes/GetContactPersontDto.html":{}}}],["src/models/personcontact/dto/getcontactperson.dto.ts:6",{"_index":1080,"title":{},"body":{"classes/GetContactPersontDto.html":{}}}],["src/models/personcontact/dto/getcontactperson.dto.ts:9",{"_index":1081,"title":{},"body":{"classes/GetContactPersontDto.html":{}}}],["src/models/predicte/dto/getclassfromfiszki.dto.ts",{"_index":1659,"title":{},"body":{"classes/SendFiszkiDto.html":{},"coverage.html":{}}}],["src/models/predicte/dto/getclassfromfiszki.dto.ts:6",{"_index":1660,"title":{},"body":{"classes/SendFiszkiDto.html":{}}}],["src/models/predicte/dto/getclassfromfiszki.dto.ts:9",{"_index":1661,"title":{},"body":{"classes/SendFiszkiDto.html":{}}}],["src/models/predicte/predicte.controller.ts",{"_index":1375,"title":{},"body":{"controllers/PredicteController.html":{},"coverage.html":{}}}],["src/models/predicte/predicte.controller.ts:21",{"_index":1380,"title":{},"body":{"controllers/PredicteController.html":{}}}],["src/models/predicte/predicte.module.ts",{"_index":1448,"title":{},"body":{"modules/PredicteModule.html":{}}}],["src/models/predicte/predicte.service.ts",{"_index":1450,"title":{},"body":{"injectables/PredicteService.html":{},"coverage.html":{}}}],["src/models/predicte/predicte.service.ts:6",{"_index":1451,"title":{},"body":{"injectables/PredicteService.html":{}}}],["src/models/predicte/predicte.service.ts:9",{"_index":1453,"title":{},"body":{"injectables/PredicteService.html":{}}}],["src/models/rentalcost/dto/createrentalcost.dto.ts",{"_index":668,"title":{},"body":{"classes/CreateRentalCostDto.html":{},"coverage.html":{}}}],["src/models/rentalcost/dto/createrentalcost.dto.ts:13",{"_index":674,"title":{},"body":{"classes/CreateRentalCostDto.html":{}}}],["src/models/rentalcost/dto/createrentalcost.dto.ts:9",{"_index":673,"title":{},"body":{"classes/CreateRentalCostDto.html":{}}}],["src/models/rentalcost/dto/editrentalcost.dto.ts",{"_index":873,"title":{},"body":{"classes/EditRentalCostDto.html":{},"coverage.html":{}}}],["src/models/rentalcost/dto/editrentalcost.dto.ts:12",{"_index":875,"title":{},"body":{"classes/EditRentalCostDto.html":{}}}],["src/models/rentalcost/dto/editrentalcost.dto.ts:8",{"_index":874,"title":{},"body":{"classes/EditRentalCostDto.html":{}}}],["src/models/rentalcost/dto/getrentalcost.dto.ts",{"_index":1114,"title":{},"body":{"classes/GetRentalCostDto.html":{},"coverage.html":{}}}],["src/models/rentalcost/dto/getrentalcost.dto.ts:12",{"_index":1116,"title":{},"body":{"classes/GetRentalCostDto.html":{}}}],["src/models/rentalcost/dto/getrentalcost.dto.ts:8",{"_index":1115,"title":{},"body":{"classes/GetRentalCostDto.html":{}}}],["src/models/rentalcost/rentalcost.controller.ts",{"_index":1517,"title":{},"body":{"controllers/RentalCostController.html":{},"coverage.html":{}}}],["src/models/rentalcost/rentalcost.controller.ts:21",{"_index":1521,"title":{},"body":{"controllers/RentalCostController.html":{}}}],["src/models/rentalcost/rentalcost.controller.ts:28",{"_index":1522,"title":{},"body":{"controllers/RentalCostController.html":{}}}],["src/models/rentalcost/rentalcost.controller.ts:36",{"_index":1520,"title":{},"body":{"controllers/RentalCostController.html":{}}}],["src/models/rentalcost/rentalcost.controller.ts:43",{"_index":1525,"title":{},"body":{"controllers/RentalCostController.html":{}}}],["src/models/rentalcost/rentalcost.module.ts",{"_index":1546,"title":{},"body":{"modules/RentalCostModule.html":{}}}],["src/models/rentalcost/rentalcost.service.ts",{"_index":1548,"title":{},"body":{"injectables/RentalCostService.html":{},"coverage.html":{}}}],["src/models/rentalcost/rentalcost.service.ts:11",{"_index":1551,"title":{},"body":{"injectables/RentalCostService.html":{}}}],["src/models/rentalcost/rentalcost.service.ts:22",{"_index":1552,"title":{},"body":{"injectables/RentalCostService.html":{}}}],["src/models/rentalcost/rentalcost.service.ts:43",{"_index":1550,"title":{},"body":{"injectables/RentalCostService.html":{}}}],["src/models/rentalcost/rentalcost.service.ts:60",{"_index":1553,"title":{},"body":{"injectables/RentalCostService.html":{}}}],["src/models/rentalcost/rentalcost.service.ts:8",{"_index":1549,"title":{},"body":{"injectables/RentalCostService.html":{}}}],["src/models/school/dto/createschool.dto.ts",{"_index":679,"title":{},"body":{"classes/CreateSchoolDto.html":{},"coverage.html":{}}}],["src/models/school/dto/createschool.dto.ts:13",{"_index":688,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["src/models/school/dto/createschool.dto.ts:16",{"_index":703,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["src/models/school/dto/createschool.dto.ts:19",{"_index":708,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["src/models/school/dto/createschool.dto.ts:22",{"_index":691,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["src/models/school/dto/createschool.dto.ts:26",{"_index":698,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["src/models/school/dto/createschool.dto.ts:30",{"_index":701,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["src/models/school/dto/createschool.dto.ts:34",{"_index":692,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["src/models/school/dto/createschool.dto.ts:37",{"_index":702,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["src/models/school/dto/createschool.dto.ts:41",{"_index":704,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["src/models/school/dto/createschool.dto.ts:46",{"_index":707,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["src/models/school/dto/createschool.dto.ts:50",{"_index":700,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["src/models/school/dto/createschool.dto.ts:56",{"_index":696,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["src/models/school/dto/createschool.dto.ts:61",{"_index":690,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["src/models/school/dto/createschool.dto.ts:9",{"_index":694,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["src/models/school/dto/editschool.dto.ts",{"_index":877,"title":{},"body":{"classes/EditSchoolDto.html":{},"coverage.html":{}}}],["src/models/school/dto/editschool.dto.ts:13",{"_index":878,"title":{},"body":{"classes/EditSchoolDto.html":{}}}],["src/models/school/dto/editschool.dto.ts:16",{"_index":888,"title":{},"body":{"classes/EditSchoolDto.html":{}}}],["src/models/school/dto/editschool.dto.ts:19",{"_index":891,"title":{},"body":{"classes/EditSchoolDto.html":{}}}],["src/models/school/dto/editschool.dto.ts:22",{"_index":880,"title":{},"body":{"classes/EditSchoolDto.html":{}}}],["src/models/school/dto/editschool.dto.ts:26",{"_index":884,"title":{},"body":{"classes/EditSchoolDto.html":{}}}],["src/models/school/dto/editschool.dto.ts:30",{"_index":887,"title":{},"body":{"classes/EditSchoolDto.html":{}}}],["src/models/school/dto/editschool.dto.ts:34",{"_index":881,"title":{},"body":{"classes/EditSchoolDto.html":{}}}],["src/models/school/dto/editschool.dto.ts:38",{"_index":889,"title":{},"body":{"classes/EditSchoolDto.html":{}}}],["src/models/school/dto/editschool.dto.ts:43",{"_index":890,"title":{},"body":{"classes/EditSchoolDto.html":{}}}],["src/models/school/dto/editschool.dto.ts:47",{"_index":886,"title":{},"body":{"classes/EditSchoolDto.html":{}}}],["src/models/school/dto/editschool.dto.ts:53",{"_index":883,"title":{},"body":{"classes/EditSchoolDto.html":{}}}],["src/models/school/dto/editschool.dto.ts:58",{"_index":879,"title":{},"body":{"classes/EditSchoolDto.html":{}}}],["src/models/school/dto/editschool.dto.ts:9",{"_index":882,"title":{},"body":{"classes/EditSchoolDto.html":{}}}],["src/models/school/dto/getschool.dto.ts",{"_index":1118,"title":{},"body":{"classes/GetSchoolDto.html":{},"coverage.html":{}}}],["src/models/school/dto/getschool.dto.ts:12",{"_index":1129,"title":{},"body":{"classes/GetSchoolDto.html":{}}}],["src/models/school/dto/getschool.dto.ts:15",{"_index":1130,"title":{},"body":{"classes/GetSchoolDto.html":{}}}],["src/models/school/dto/getschool.dto.ts:18",{"_index":1119,"title":{},"body":{"classes/GetSchoolDto.html":{}}}],["src/models/school/dto/getschool.dto.ts:21",{"_index":1133,"title":{},"body":{"classes/GetSchoolDto.html":{}}}],["src/models/school/dto/getschool.dto.ts:24",{"_index":1121,"title":{},"body":{"classes/GetSchoolDto.html":{}}}],["src/models/school/dto/getschool.dto.ts:27",{"_index":1126,"title":{},"body":{"classes/GetSchoolDto.html":{}}}],["src/models/school/dto/getschool.dto.ts:30",{"_index":1128,"title":{},"body":{"classes/GetSchoolDto.html":{}}}],["src/models/school/dto/getschool.dto.ts:33",{"_index":1122,"title":{},"body":{"classes/GetSchoolDto.html":{}}}],["src/models/school/dto/getschool.dto.ts:36",{"_index":1131,"title":{},"body":{"classes/GetSchoolDto.html":{}}}],["src/models/school/dto/getschool.dto.ts:39",{"_index":1132,"title":{},"body":{"classes/GetSchoolDto.html":{}}}],["src/models/school/dto/getschool.dto.ts:42",{"_index":1127,"title":{},"body":{"classes/GetSchoolDto.html":{}}}],["src/models/school/dto/getschool.dto.ts:45",{"_index":1125,"title":{},"body":{"classes/GetSchoolDto.html":{}}}],["src/models/school/dto/getschool.dto.ts:48",{"_index":1120,"title":{},"body":{"classes/GetSchoolDto.html":{}}}],["src/models/school/dto/getschool.dto.ts:6",{"_index":1123,"title":{},"body":{"classes/GetSchoolDto.html":{}}}],["src/models/school/dto/getschool.dto.ts:9",{"_index":1124,"title":{},"body":{"classes/GetSchoolDto.html":{}}}],["src/models/school/school.controller.ts",{"_index":1575,"title":{},"body":{"controllers/SchoolController.html":{},"coverage.html":{}}}],["src/models/school/school.controller.ts:24",{"_index":1590,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/models/school/school.controller.ts:32",{"_index":1595,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/models/school/school.controller.ts:40",{"_index":1592,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/models/school/school.controller.ts:47",{"_index":1598,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/models/school/school.controller.ts:54",{"_index":1587,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/models/school/school.controller.ts:62",{"_index":1584,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/models/school/school.module.ts",{"_index":1636,"title":{},"body":{"modules/SchoolModule.html":{}}}],["src/models/school/school.service.ts",{"_index":1638,"title":{},"body":{"injectables/SchoolService.html":{},"coverage.html":{}}}],["src/models/school/school.service.ts:11",{"_index":1639,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/models/school/school.service.ts:115",{"_index":1642,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/models/school/school.service.ts:124",{"_index":1641,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/models/school/school.service.ts:15",{"_index":1644,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/models/school/school.service.ts:41",{"_index":1646,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/models/school/school.service.ts:68",{"_index":1645,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/models/school/school.service.ts:90",{"_index":1647,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/models/shedule/dto/createshedule.dto.ts",{"_index":728,"title":{},"body":{"classes/CreateSheduleDto.html":{},"coverage.html":{}}}],["src/models/shedule/dto/createshedule.dto.ts:14",{"_index":731,"title":{},"body":{"classes/CreateSheduleDto.html":{}}}],["src/models/shedule/dto/createshedule.dto.ts:17",{"_index":734,"title":{},"body":{"classes/CreateSheduleDto.html":{}}}],["src/models/shedule/dto/createshedule.dto.ts:20",{"_index":735,"title":{},"body":{"classes/CreateSheduleDto.html":{}}}],["src/models/shedule/dto/createshedule.dto.ts:8",{"_index":733,"title":{},"body":{"classes/CreateSheduleDto.html":{}}}],["src/models/shedule/dto/editshedule.dto.ts",{"_index":897,"title":{},"body":{"classes/EditSheduleDto.html":{},"coverage.html":{}}}],["src/models/shedule/dto/editshedule.dto.ts:14",{"_index":898,"title":{},"body":{"classes/EditSheduleDto.html":{}}}],["src/models/shedule/dto/editshedule.dto.ts:17",{"_index":900,"title":{},"body":{"classes/EditSheduleDto.html":{}}}],["src/models/shedule/dto/editshedule.dto.ts:8",{"_index":899,"title":{},"body":{"classes/EditSheduleDto.html":{}}}],["src/models/shedule/dto/getshedule.dto.ts",{"_index":1135,"title":{},"body":{"classes/GetSheduleDto.html":{},"coverage.html":{}}}],["src/models/shedule/dto/getshedule.dto.ts:10",{"_index":1136,"title":{},"body":{"classes/GetSheduleDto.html":{}}}],["src/models/shedule/dto/getshedule.dto.ts:13",{"_index":1138,"title":{},"body":{"classes/GetSheduleDto.html":{}}}],["src/models/shedule/dto/getshedule.dto.ts:16",{"_index":1139,"title":{},"body":{"classes/GetSheduleDto.html":{}}}],["src/models/shedule/dto/getshedule.dto.ts:7",{"_index":1137,"title":{},"body":{"classes/GetSheduleDto.html":{}}}],["src/models/shedule/shedule.controller.ts",{"_index":1662,"title":{},"body":{"controllers/SheduleController.html":{},"coverage.html":{}}}],["src/models/shedule/shedule.controller.ts:22",{"_index":1671,"title":{},"body":{"controllers/SheduleController.html":{}}}],["src/models/shedule/shedule.controller.ts:29",{"_index":1674,"title":{},"body":{"controllers/SheduleController.html":{}}}],["src/models/shedule/shedule.controller.ts:37",{"_index":1669,"title":{},"body":{"controllers/SheduleController.html":{}}}],["src/models/shedule/shedule.controller.ts:45",{"_index":1665,"title":{},"body":{"controllers/SheduleController.html":{}}}],["src/models/shedule/shedule.module.ts",{"_index":1751,"title":{},"body":{"modules/SheduleModule.html":{}}}],["src/models/shedule/shedule.service.ts",{"_index":1753,"title":{},"body":{"injectables/SheduleService.html":{},"coverage.html":{}}}],["src/models/shedule/shedule.service.ts:11",{"_index":1756,"title":{},"body":{"injectables/SheduleService.html":{}}}],["src/models/shedule/shedule.service.ts:32",{"_index":1758,"title":{},"body":{"injectables/SheduleService.html":{}}}],["src/models/shedule/shedule.service.ts:47",{"_index":1759,"title":{},"body":{"injectables/SheduleService.html":{}}}],["src/models/shedule/shedule.service.ts:68",{"_index":1761,"title":{},"body":{"injectables/SheduleService.html":{}}}],["src/models/shedule/shedule.service.ts:8",{"_index":1754,"title":{},"body":{"injectables/SheduleService.html":{}}}],["src/models/sheduledays/dto/createsheduledays.dto.ts",{"_index":722,"title":{},"body":{"classes/CreateSheduleDaysDto.html":{},"coverage.html":{}}}],["src/models/sheduledays/dto/createsheduledays.dto.ts:11",{"_index":726,"title":{},"body":{"classes/CreateSheduleDaysDto.html":{}}}],["src/models/sheduledays/dto/createsheduledays.dto.ts:8",{"_index":725,"title":{},"body":{"classes/CreateSheduleDaysDto.html":{}}}],["src/models/sheduledays/dto/editsheduledays.dto.ts",{"_index":893,"title":{},"body":{"classes/EditSheduleDaysDto.html":{},"coverage.html":{}}}],["src/models/sheduledays/dto/editsheduledays.dto.ts:11",{"_index":895,"title":{},"body":{"classes/EditSheduleDaysDto.html":{}}}],["src/models/sheduledays/dto/editsheduledays.dto.ts:8",{"_index":894,"title":{},"body":{"classes/EditSheduleDaysDto.html":{}}}],["src/models/sheduledays/sheduledays.controller.ts",{"_index":1704,"title":{},"body":{"controllers/SheduleDaysController.html":{},"coverage.html":{}}}],["src/models/sheduledays/sheduledays.controller.ts:20",{"_index":1710,"title":{},"body":{"controllers/SheduleDaysController.html":{}}}],["src/models/sheduledays/sheduledays.controller.ts:28",{"_index":1707,"title":{},"body":{"controllers/SheduleDaysController.html":{}}}],["src/models/sheduledays/sheduledays.controller.ts:35",{"_index":1708,"title":{},"body":{"controllers/SheduleDaysController.html":{}}}],["src/models/sheduledays/sheduledays.module.ts",{"_index":1723,"title":{},"body":{"modules/SheduleDaysModule.html":{}}}],["src/models/sheduledays/sheduledays.service.ts",{"_index":1725,"title":{},"body":{"injectables/SheduleDaysService.html":{},"coverage.html":{}}}],["src/models/sheduledays/sheduledays.service.ts:12",{"_index":1732,"title":{},"body":{"injectables/SheduleDaysService.html":{}}}],["src/models/sheduledays/sheduledays.service.ts:30",{"_index":1728,"title":{},"body":{"injectables/SheduleDaysService.html":{}}}],["src/models/sheduledays/sheduledays.service.ts:52",{"_index":1730,"title":{},"body":{"injectables/SheduleDaysService.html":{}}}],["src/models/sheduledays/sheduledays.service.ts:9",{"_index":1726,"title":{},"body":{"injectables/SheduleDaysService.html":{}}}],["src/models/user/dto/createuser.dto.ts",{"_index":738,"title":{},"body":{"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"coverage.html":{}}}],["src/models/user/dto/createuser.dto.ts:13",{"_index":764,"title":{},"body":{"classes/CreateUserForRdDto.html":{}}}],["src/models/user/dto/createuser.dto.ts:16",{"_index":756,"title":{},"body":{"classes/CreateUserForRdDto.html":{}}}],["src/models/user/dto/createuser.dto.ts:20",{"_index":755,"title":{},"body":{"classes/CreateUserForRdDto.html":{}}}],["src/models/user/dto/createuser.dto.ts:24",{"_index":759,"title":{},"body":{"classes/CreateUserForRdDto.html":{}}}],["src/models/user/dto/createuser.dto.ts:30",{"_index":760,"title":{},"body":{"classes/CreateUserForRdDto.html":{}}}],["src/models/user/dto/createuser.dto.ts:33",{"_index":754,"title":{},"body":{"classes/CreateUserForRdDto.html":{}}}],["src/models/user/dto/createuser.dto.ts:38",{"_index":762,"title":{},"body":{"classes/CreateUserForRdDto.html":{}}}],["src/models/user/dto/createuser.dto.ts:43",{"_index":744,"title":{},"body":{"classes/CreateUserForMGTMTDto.html":{}}}],["src/models/user/dto/createuser.dto.ts:47",{"_index":749,"title":{},"body":{"classes/CreateUserForMGTMTDto.html":{}}}],["src/models/user/dto/createuser.dto.ts:50",{"_index":743,"title":{},"body":{"classes/CreateUserForMGTMTDto.html":{}}}],["src/models/user/dto/createuser.dto.ts:54",{"_index":742,"title":{},"body":{"classes/CreateUserForMGTMTDto.html":{}}}],["src/models/user/dto/createuser.dto.ts:58",{"_index":745,"title":{},"body":{"classes/CreateUserForMGTMTDto.html":{}}}],["src/models/user/dto/createuser.dto.ts:61",{"_index":746,"title":{},"body":{"classes/CreateUserForMGTMTDto.html":{}}}],["src/models/user/dto/createuser.dto.ts:64",{"_index":740,"title":{},"body":{"classes/CreateUserForMGTMTDto.html":{}}}],["src/models/user/dto/createuser.dto.ts:71",{"_index":748,"title":{},"body":{"classes/CreateUserForMGTMTDto.html":{}}}],["src/models/user/dto/createuser.dto.ts:9",{"_index":758,"title":{},"body":{"classes/CreateUserForRdDto.html":{}}}],["src/models/user/dto/edituser.dto.ts",{"_index":902,"title":{},"body":{"classes/EditUser.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"coverage.html":{}}}],["src/models/user/dto/edituser.dto.ts:11",{"_index":933,"title":{},"body":{"classes/EditUserForRdDto.html":{}}}],["src/models/user/dto/edituser.dto.ts:14",{"_index":927,"title":{},"body":{"classes/EditUserForRdDto.html":{}}}],["src/models/user/dto/edituser.dto.ts:18",{"_index":930,"title":{},"body":{"classes/EditUserForRdDto.html":{}}}],["src/models/user/dto/edituser.dto.ts:22",{"_index":926,"title":{},"body":{"classes/EditUserForRdDto.html":{}}}],["src/models/user/dto/edituser.dto.ts:25",{"_index":929,"title":{},"body":{"classes/EditUserForRdDto.html":{}}}],["src/models/user/dto/edituser.dto.ts:28",{"_index":925,"title":{},"body":{"classes/EditUserForRdDto.html":{}}}],["src/models/user/dto/edituser.dto.ts:33",{"_index":932,"title":{},"body":{"classes/EditUserForRdDto.html":{}}}],["src/models/user/dto/edituser.dto.ts:38",{"_index":918,"title":{},"body":{"classes/EditUserForMGTMTDto.html":{}}}],["src/models/user/dto/edituser.dto.ts:42",{"_index":924,"title":{},"body":{"classes/EditUserForMGTMTDto.html":{}}}],["src/models/user/dto/edituser.dto.ts:45",{"_index":917,"title":{},"body":{"classes/EditUserForMGTMTDto.html":{}}}],["src/models/user/dto/edituser.dto.ts:49",{"_index":920,"title":{},"body":{"classes/EditUserForMGTMTDto.html":{}}}],["src/models/user/dto/edituser.dto.ts:53",{"_index":916,"title":{},"body":{"classes/EditUserForMGTMTDto.html":{}}}],["src/models/user/dto/edituser.dto.ts:56",{"_index":921,"title":{},"body":{"classes/EditUserForMGTMTDto.html":{}}}],["src/models/user/dto/edituser.dto.ts:59",{"_index":914,"title":{},"body":{"classes/EditUserForMGTMTDto.html":{}}}],["src/models/user/dto/edituser.dto.ts:62",{"_index":919,"title":{},"body":{"classes/EditUserForMGTMTDto.html":{}}}],["src/models/user/dto/edituser.dto.ts:66",{"_index":923,"title":{},"body":{"classes/EditUserForMGTMTDto.html":{}}}],["src/models/user/dto/edituser.dto.ts:7",{"_index":928,"title":{},"body":{"classes/EditUserForRdDto.html":{}}}],["src/models/user/dto/edituser.dto.ts:71",{"_index":906,"title":{},"body":{"classes/EditUser.html":{}}}],["src/models/user/dto/edituser.dto.ts:73",{"_index":911,"title":{},"body":{"classes/EditUser.html":{}}}],["src/models/user/dto/edituser.dto.ts:75",{"_index":905,"title":{},"body":{"classes/EditUser.html":{}}}],["src/models/user/dto/edituser.dto.ts:77",{"_index":904,"title":{},"body":{"classes/EditUser.html":{}}}],["src/models/user/dto/edituser.dto.ts:79",{"_index":908,"title":{},"body":{"classes/EditUser.html":{}}}],["src/models/user/dto/edituser.dto.ts:81",{"_index":909,"title":{},"body":{"classes/EditUser.html":{}}}],["src/models/user/dto/edituser.dto.ts:83",{"_index":903,"title":{},"body":{"classes/EditUser.html":{}}}],["src/models/user/dto/edituser.dto.ts:85",{"_index":907,"title":{},"body":{"classes/EditUser.html":{}}}],["src/models/user/dto/edituser.dto.ts:87",{"_index":910,"title":{},"body":{"classes/EditUser.html":{}}}],["src/models/user/dto/getuser.dto.ts",{"_index":1141,"title":{},"body":{"classes/GetUserDto.html":{},"coverage.html":{}}}],["src/models/user/dto/getuser.dto.ts:12",{"_index":1148,"title":{},"body":{"classes/GetUserDto.html":{}}}],["src/models/user/dto/getuser.dto.ts:15",{"_index":1144,"title":{},"body":{"classes/GetUserDto.html":{}}}],["src/models/user/dto/getuser.dto.ts:19",{"_index":1143,"title":{},"body":{"classes/GetUserDto.html":{}}}],["src/models/user/dto/getuser.dto.ts:23",{"_index":1149,"title":{},"body":{"classes/GetUserDto.html":{}}}],["src/models/user/dto/getuser.dto.ts:26",{"_index":1146,"title":{},"body":{"classes/GetUserDto.html":{}}}],["src/models/user/dto/getuser.dto.ts:30",{"_index":1142,"title":{},"body":{"classes/GetUserDto.html":{}}}],["src/models/user/dto/getuser.dto.ts:33",{"_index":1147,"title":{},"body":{"classes/GetUserDto.html":{}}}],["src/models/user/dto/getuser.dto.ts:8",{"_index":1145,"title":{},"body":{"classes/GetUserDto.html":{}}}],["src/models/user/dto/validation.dto.ts",{"_index":1922,"title":{},"body":{"classes/ValidationdDto.html":{},"coverage.html":{}}}],["src/models/user/dto/validation.dto.ts:11",{"_index":1924,"title":{},"body":{"classes/ValidationdDto.html":{}}}],["src/models/user/dto/validation.dto.ts:7",{"_index":1923,"title":{},"body":{"classes/ValidationdDto.html":{}}}],["src/models/user/uppercasepipe.pipe.ts",{"_index":1778,"title":{},"body":{"injectables/UpperCasePipe.html":{},"coverage.html":{}}}],["src/models/user/uppercasepipe.pipe.ts:13",{"_index":1785,"title":{},"body":{"injectables/UpperCasePipe.html":{}}}],["src/models/user/uppercasepipe.pipe.ts:9",{"_index":1781,"title":{},"body":{"injectables/UpperCasePipe.html":{}}}],["src/models/user/user.controller.ts",{"_index":1803,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/models/user/user.controller.ts:24",{"_index":1830,"title":{},"body":{"controllers/UserController.html":{}}}],["src/models/user/user.controller.ts:33",{"_index":1817,"title":{},"body":{"controllers/UserController.html":{}}}],["src/models/user/user.controller.ts:46",{"_index":1820,"title":{},"body":{"controllers/UserController.html":{}}}],["src/models/user/user.controller.ts:53",{"_index":1823,"title":{},"body":{"controllers/UserController.html":{}}}],["src/models/user/user.controller.ts:66",{"_index":1826,"title":{},"body":{"controllers/UserController.html":{}}}],["src/models/user/user.controller.ts:74",{"_index":1810,"title":{},"body":{"controllers/UserController.html":{}}}],["src/models/user/user.controller.ts:97",{"_index":1815,"title":{},"body":{"controllers/UserController.html":{}}}],["src/models/user/user.module",{"_index":287,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/models/user/user.module.ts",{"_index":1872,"title":{},"body":{"modules/UserModule.html":{}}}],["src/models/user/user.service.ts",{"_index":1874,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/models/user/user.service.ts:107",{"_index":1895,"title":{},"body":{"injectables/UserService.html":{}}}],["src/models/user/user.service.ts:119",{"_index":1882,"title":{},"body":{"injectables/UserService.html":{}}}],["src/models/user/user.service.ts:13",{"_index":1880,"title":{},"body":{"injectables/UserService.html":{}}}],["src/models/user/user.service.ts:137",{"_index":1888,"title":{},"body":{"injectables/UserService.html":{}}}],["src/models/user/user.service.ts:156",{"_index":1886,"title":{},"body":{"injectables/UserService.html":{}}}],["src/models/user/user.service.ts:166",{"_index":1896,"title":{},"body":{"injectables/UserService.html":{}}}],["src/models/user/user.service.ts:17",{"_index":1889,"title":{},"body":{"injectables/UserService.html":{}}}],["src/models/user/user.service.ts:35",{"_index":1893,"title":{},"body":{"injectables/UserService.html":{}}}],["src/models/user/user.service.ts:60",{"_index":1890,"title":{},"body":{"injectables/UserService.html":{}}}],["src/models/user/user.service.ts:89",{"_index":1884,"title":{},"body":{"injectables/UserService.html":{}}}],["start",{"_index":2014,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":2017,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":2019,"title":{},"body":{"index.html":{}}}],["started",{"_index":1994,"title":{"index.html":{}},"body":{}}],["starter",{"_index":2007,"title":{},"body":{"index.html":{}}}],["starym",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{}}}],["statements",{"_index":1928,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":685,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/EditSchoolDto.html":{},"classes/GetSchoolDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"injectables/SchoolService.html":{}}}],["status(404",{"_index":1367,"title":{},"body":{"classes/NotFoundErrorFilter.html":{}}}],["status(status",{"_index":1216,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/NotFoundExceptionFilter.html":{}}}],["status,type",{"_index":709,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/EditSchoolDto.html":{}}}],["status:status",{"_index":713,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/EditSchoolDto.html":{}}}],["statuscode",{"_index":103,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{}}}],["stay",{"_index":2039,"title":{},"body":{"index.html":{}}}],["street",{"_index":686,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/EditSchoolDto.html":{},"classes/GetSchoolDto.html":{},"injectables/SchoolService.html":{}}}],["string",{"_index":12,"title":{},"body":{"classes/AddUserInterViewDto.html":{},"classes/AddgroupDto.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CallUserHistoryController.html":{},"injectables/CallUserHistoryService.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"classes/CreateCallUserDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateInterViewDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateSheduleDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/DecodeDto.html":{},"controllers/DirectorController.html":{},"injectables/DirectorService.html":{},"classes/EditContactDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditGroupDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSheduleDto.html":{},"classes/EditUser.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{},"classes/GetCallUserHistoryDto.html":{},"classes/GetContactDto.html":{},"classes/GetContactPersontDto.html":{},"classes/GetDirectorDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetGroupDto.html":{},"classes/GetSchoolDto.html":{},"classes/GetSheduleDto.html":{},"classes/GetUserDto.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{},"classes/LoginUserDto.html":{},"controllers/PredicteController.html":{},"injectables/PredicteService.html":{},"classes/RefreshTokenDto.html":{},"classes/RemoveUserInterViewDto.html":{},"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/SendFiszkiDto.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"injectables/SheduleDaysService.html":{},"injectables/SheduleService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/ValidationdDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["string,@param('schoolid",{"_index":526,"title":{},"body":{"controllers/ContactPersonController.html":{}}}],["subject",{"_index":637,"title":{},"body":{"classes/CreateGroupDto.html":{},"classes/EditGroupDto.html":{},"classes/GetGroupDto.html":{},"injectables/GroupService.html":{}}}],["subject:string",{"_index":649,"title":{},"body":{"classes/CreateGroupDto.html":{},"classes/EditGroupDto.html":{},"classes/GetGroupDto.html":{}}}],["suitenumber",{"_index":687,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/EditSchoolDto.html":{},"classes/GetSchoolDto.html":{},"injectables/SchoolService.html":{}}}],["suitenumber:string",{"_index":717,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/EditSchoolDto.html":{}}}],["super",{"_index":1501,"title":{},"body":{"injectables/PrismaService.html":{}}}],["support",{"_index":2032,"title":{},"body":{"index.html":{},"modules.html":{}}}],["surname",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ContactPersonService.html":{},"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"injectables/DirectorService.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditUser.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"injectables/FiszkaService.html":{},"classes/GetContactPersontDto.html":{},"classes/GetDirectorDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetUserDto.html":{},"injectables/UserService.html":{}}}],["surname:string",{"_index":623,"title":{},"body":{"classes/CreateFiszkaDto.html":{}}}],["svg",{"_index":2050,"title":{},"body":{"modules.html":{}}}],["swoich",{"_index":1028,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["sytuacja",{"_index":1425,"title":{},"body":{"controllers/PredicteController.html":{}}}],["szkoły",{"_index":1185,"title":{},"body":{"controllers/GroupController.html":{},"controllers/PredicteController.html":{},"controllers/SheduleController.html":{}}}],["table",{"_index":1959,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1958,"title":{},"body":{"coverage.html":{}}}],["tej",{"_index":1402,"title":{},"body":{"controllers/PredicteController.html":{}}}],["termsnumber",{"_index":656,"title":{},"body":{"classes/CreateInterViewDto.html":{},"classes/EditInterViewDto.html":{},"injectables/InterviewsService.html":{}}}],["termsnumber:termsnumber",{"_index":1355,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["test",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["test:covsupport",{"_index":2024,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":2023,"title":{},"body":{"index.html":{}}}],["testponowymtokenie",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{}}}],["tests",{"_index":2021,"title":{},"body":{"index.html":{}}}],["testu",{"_index":1008,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["text",{"_index":1989,"title":{},"body":{"miscellaneous/functions.html":{}}}],["thanks",{"_index":2030,"title":{},"body":{"index.html":{}}}],["this.$connect",{"_index":1502,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$disconnect",{"_index":1504,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.authservice.logout",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.profile(req['user'].email",{"_index":226,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.refreshtoken(oldtoken",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signin(signindto.email",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.calluserservice.addusercall(idfiszka",{"_index":423,"title":{},"body":{"controllers/CallUserHistoryController.html":{}}}],["this.calluserservice.getallhistory(idfiszka",{"_index":420,"title":{},"body":{"controllers/CallUserHistoryController.html":{}}}],["this.contactpersonservice.create(idschool",{"_index":523,"title":{},"body":{"controllers/ContactPersonController.html":{}}}],["this.contactpersonservice.edit(idcontactperson,schoolid",{"_index":527,"title":{},"body":{"controllers/ContactPersonController.html":{}}}],["this.contactpersonservice.getbyidformgtmt(idschool",{"_index":520,"title":{},"body":{"controllers/ContactPersonController.html":{}}}],["this.contactpersonservice.getbyidforrd(idschool",{"_index":522,"title":{},"body":{"controllers/ContactPersonController.html":{}}}],["this.contactservice.create(idschool",{"_index":485,"title":{},"body":{"controllers/ContactController.html":{}}}],["this.contactservice.edit(idschool",{"_index":489,"title":{},"body":{"controllers/ContactController.html":{}}}],["this.contactservice.getbyidformgtmt(idschool",{"_index":477,"title":{},"body":{"controllers/ContactController.html":{}}}],["this.contactservice.getbyidforrd(idschool",{"_index":482,"title":{},"body":{"controllers/ContactController.html":{}}}],["this.directorservice.create(idschool",{"_index":801,"title":{},"body":{"controllers/DirectorController.html":{}}}],["this.directorservice.edit(idschool",{"_index":803,"title":{},"body":{"controllers/DirectorController.html":{}}}],["this.directorservice.getbyidformgtmt(idschool",{"_index":798,"title":{},"body":{"controllers/DirectorController.html":{}}}],["this.directorservice.getbyidforrd(idschool",{"_index":800,"title":{},"body":{"controllers/DirectorController.html":{}}}],["this.extracttokenfromheader(request",{"_index":262,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.fiszkaservice.addfiszki(idinterview",{"_index":1007,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["this.fiszkaservice.addgroup(idgroup",{"_index":1012,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["this.fiszkaservice.editfiszkard(idfiszka",{"_index":1000,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["this.fiszkaservice.editfiszkauser(idfiszka",{"_index":1004,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["this.fiszkaservice.findallbyinterview(idinterview",{"_index":985,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["this.fiszkaservice.findallbyme(idinterview",{"_index":997,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["this.fiszkaservice.findallbyuser(idinterview",{"_index":990,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["this.fiszkaservice.findallforuser(userid",{"_index":993,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["this.groupservice.create(idschool",{"_index":1178,"title":{},"body":{"controllers/GroupController.html":{}}}],["this.groupservice.edit(idschool",{"_index":1182,"title":{},"body":{"controllers/GroupController.html":{}}}],["this.groupservice.getbyidformgtmt(idschool",{"_index":1176,"title":{},"body":{"controllers/GroupController.html":{}}}],["this.groupservice.getbyidforrd(idschool",{"_index":1174,"title":{},"body":{"controllers/GroupController.html":{}}}],["this.httpadapterhost",{"_index":70,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["this.interviewsservice.addusertointerview(idinterview",{"_index":1284,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["this.interviewsservice.createinterview(createinterviewdto",{"_index":1290,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["this.interviewsservice.editinterview(idinterview",{"_index":1281,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["this.interviewsservice.findallbyschool(idschool",{"_index":1275,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["this.interviewsservice.findallbyuser(userid",{"_index":1269,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["this.interviewsservice.findbyuser(iduser",{"_index":1278,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["this.interviewsservice.findmybyschool(idschool",{"_index":1272,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["this.interviewsservice.removeuserfrominterview(idinterview",{"_index":1287,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["this.jwtservice.decode(refreshtoken.access_token",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.signasync",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.signasync(payload",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(refreshtoken.access_token",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(test",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verifyasync(token",{"_index":267,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.predicteservice.predicte(region",{"_index":1434,"title":{},"body":{"controllers/PredicteController.html":{}}}],["this.prisma.contact.create",{"_index":562,"title":{},"body":{"injectables/ContactService.html":{}}}],["this.prisma.contact.findmany",{"_index":560,"title":{},"body":{"injectables/ContactService.html":{}}}],["this.prisma.contactperson.create",{"_index":544,"title":{},"body":{"injectables/ContactPersonService.html":{}}}],["this.prisma.contactperson.findmany",{"_index":540,"title":{},"body":{"injectables/ContactPersonService.html":{}}}],["this.prisma.director.create",{"_index":830,"title":{},"body":{"injectables/DirectorService.html":{}}}],["this.prisma.director.finduniqueorthrow",{"_index":826,"title":{},"body":{"injectables/DirectorService.html":{}}}],["this.prisma.fiszka.createmany",{"_index":1065,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["this.prisma.fiszka.findmany",{"_index":1046,"title":{},"body":{"injectables/FiszkaService.html":{},"injectables/PredicteService.html":{}}}],["this.prisma.fiszka.finduniqueorthrow",{"_index":1050,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["this.prisma.fiszka.update",{"_index":1054,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["this.prisma.group.create",{"_index":1201,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.prisma.group.findmany",{"_index":1200,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.prisma.group.update",{"_index":1068,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["this.prisma.interviews.create",{"_index":1354,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["this.prisma.interviews.findmany",{"_index":1315,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["this.prisma.interviews.findunique",{"_index":1324,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["this.prisma.interviews.update",{"_index":1321,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["this.prisma.interviewuser.createmany",{"_index":1340,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["this.prisma.interviewuser.deletemany",{"_index":1350,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["this.prisma.phonecalls.create",{"_index":438,"title":{},"body":{"injectables/CallUserHistoryService.html":{}}}],["this.prisma.phonecalls.findmany",{"_index":433,"title":{},"body":{"injectables/CallUserHistoryService.html":{}}}],["this.prisma.rentalcost.create",{"_index":1556,"title":{},"body":{"injectables/RentalCostService.html":{}}}],["this.prisma.rentalcost.finduniqueorthrow",{"_index":1554,"title":{},"body":{"injectables/RentalCostService.html":{}}}],["this.prisma.school.create",{"_index":1649,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.school.findfirst",{"_index":1776,"title":{},"body":{"injectables/SheduleService.html":{}}}],["this.prisma.school.findmany",{"_index":1648,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.school.finduniqueorthrow",{"_index":828,"title":{},"body":{"injectables/DirectorService.html":{},"injectables/RentalCostService.html":{},"injectables/SchoolService.html":{}}}],["this.prisma.school.update",{"_index":551,"title":{},"body":{"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"injectables/DirectorService.html":{},"injectables/GroupService.html":{},"injectables/RentalCostService.html":{},"injectables/SchoolService.html":{}}}],["this.prisma.shedule.create",{"_index":1762,"title":{},"body":{"injectables/SheduleService.html":{}}}],["this.prisma.shedule.findmany",{"_index":1771,"title":{},"body":{"injectables/SheduleService.html":{}}}],["this.prisma.shedule.findunique",{"_index":1738,"title":{},"body":{"injectables/SheduleDaysService.html":{}}}],["this.prisma.shedule.update",{"_index":1766,"title":{},"body":{"injectables/SheduleService.html":{}}}],["this.prisma.sheduledays.createmany",{"_index":1742,"title":{},"body":{"injectables/SheduleDaysService.html":{}}}],["this.prisma.sheduledays.findmany",{"_index":1733,"title":{},"body":{"injectables/SheduleDaysService.html":{}}}],["this.prisma.sheduledays.updatemany",{"_index":1747,"title":{},"body":{"injectables/SheduleDaysService.html":{}}}],["this.prisma.user.create",{"_index":1906,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findmany",{"_index":1901,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findunique",{"_index":1918,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.finduniqueorthrow",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["this.prisma.user.update",{"_index":1916,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.updatemany",{"_index":1915,"title":{},"body":{"injectables/UserService.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":254,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.reflector.getallandoverride(roles_key",{"_index":1567,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.rentalcost.create(idschool",{"_index":1535,"title":{},"body":{"controllers/RentalCostController.html":{}}}],["this.rentalcost.getbyidformgtmt(idschool",{"_index":1532,"title":{},"body":{"controllers/RentalCostController.html":{}}}],["this.rentalcost.getbyidforrd(idschool",{"_index":1533,"title":{},"body":{"controllers/RentalCostController.html":{}}}],["this.rentalcost.patch(idschool",{"_index":1538,"title":{},"body":{"controllers/RentalCostController.html":{}}}],["this.req['user'].role",{"_index":1794,"title":{},"body":{"injectables/UpperCasePipe.html":{}}}],["this.schoolservice.createschool(region",{"_index":1620,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.editschool(schoolid",{"_index":1618,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.findall(region",{"_index":1607,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.findallformgtm",{"_index":1612,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.findbyid(schoolid",{"_index":1610,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.findbyidformgtm(schoolid",{"_index":1615,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.sheduledaysservice.create(idshedule",{"_index":1718,"title":{},"body":{"controllers/SheduleDaysController.html":{}}}],["this.sheduledaysservice.edit(idshedule",{"_index":1719,"title":{},"body":{"controllers/SheduleDaysController.html":{}}}],["this.sheduledaysservice.findall(idshedule",{"_index":1716,"title":{},"body":{"controllers/SheduleDaysController.html":{}}}],["this.sheduleservice.create(createsheduledto",{"_index":1695,"title":{},"body":{"controllers/SheduleController.html":{}}}],["this.sheduleservice.edit(editsheduledto",{"_index":1693,"title":{},"body":{"controllers/SheduleController.html":{}}}],["this.sheduleservice.findall(region,idschool",{"_index":1687,"title":{},"body":{"controllers/SheduleController.html":{}}}],["this.sheduleservice.findbyid(region",{"_index":1691,"title":{},"body":{"controllers/SheduleController.html":{}}}],["this.userservice.createuserformgtmt(createuser",{"_index":1861,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.createuserforrd(createuser",{"_index":1862,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.edituserformgtmt(edituser",{"_index":1867,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.edituserforrd(edituser",{"_index":1868,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findall",{"_index":1849,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findbyid(id",{"_index":1854,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findbyregion(region",{"_index":1850,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findtotalbyid(userid",{"_index":1857,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.validation(validationuserdto",{"_index":1846,"title":{},"body":{"controllers/UserController.html":{}}}],["throw",{"_index":263,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/SheduleService.html":{},"controllers/UserController.html":{}}}],["thursday",{"_index":1469,"title":{},"body":{"injectables/PredicteService.html":{}}}],["time:new",{"_index":1220,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["timestamp",{"_index":104,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{}}}],["title",{"_index":638,"title":{},"body":{"classes/CreateGroupDto.html":{},"classes/EditGroupDto.html":{},"classes/GetGroupDto.html":{},"injectables/GroupService.html":{}}}],["title:string",{"_index":648,"title":{},"body":{"classes/CreateGroupDto.html":{},"classes/EditGroupDto.html":{},"classes/GetGroupDto.html":{}}}],["todo",{"_index":1016,"title":{},"body":{"controllers/FiszkaController.html":{},"controllers/SheduleController.html":{}}}],["token",{"_index":261,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["tokena\",testponowymtokenie",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokenie\",user",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{}}}],["totalfiszki",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetUserDto.html":{},"injectables/UserService.html":{}}}],["touch",{"_index":2040,"title":{},"body":{"index.html":{}}}],["transform",{"_index":1779,"title":{},"body":{"injectables/UpperCasePipe.html":{}}}],["transform(value",{"_index":1782,"title":{},"body":{"injectables/UpperCasePipe.html":{}}}],["transformer",{"_index":1968,"title":{},"body":{"dependencies.html":{}}}],["trial",{"_index":639,"title":{},"body":{"classes/CreateGroupDto.html":{},"classes/EditGroupDto.html":{},"classes/GetGroupDto.html":{},"injectables/GroupService.html":{}}}],["trial:boolean",{"_index":652,"title":{},"body":{"classes/CreateGroupDto.html":{},"classes/EditGroupDto.html":{},"classes/GetGroupDto.html":{}}}],["true",{"_index":259,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CallUserHistoryService.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"injectables/DirectorService.html":{},"injectables/FiszkaService.html":{},"injectables/GroupService.html":{},"injectables/InterviewsService.html":{},"injectables/PredicteService.html":{},"injectables/RentalCostService.html":{},"guards/RolesGuard.html":{},"injectables/SchoolService.html":{},"injectables/SheduleDaysService.html":{},"injectables/SheduleService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":264,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["tuesday",{"_index":1467,"title":{},"body":{"injectables/PredicteService.html":{}}}],["twitter",{"_index":2046,"title":{},"body":{"index.html":{}}}],["tworzenie",{"_index":1017,"title":{},"body":{"controllers/FiszkaController.html":{},"controllers/SchoolController.html":{}}}],["tylko",{"_index":1631,"title":{},"body":{"controllers/SchoolController.html":{}}}],["type",{"_index":10,"title":{},"body":{"classes/AddUserInterViewDto.html":{},"classes/AddgroupDto.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CallUserHistoryController.html":{},"injectables/CallUserHistoryService.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"classes/CreateCallUserDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateInterViewDto.html":{},"classes/CreateRentalCostDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateSheduleDaysDto.html":{},"classes/CreateSheduleDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/DecodeDto.html":{},"controllers/DirectorController.html":{},"injectables/DirectorService.html":{},"classes/EditContactDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditGroupDto.html":{},"classes/EditInterViewDto.html":{},"classes/EditRentalCostDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSheduleDaysDto.html":{},"classes/EditSheduleDto.html":{},"classes/EditUser.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{},"classes/GetCallUserHistoryDto.html":{},"classes/GetContactDto.html":{},"classes/GetContactPersontDto.html":{},"classes/GetDirectorDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetGroupDto.html":{},"classes/GetRentalCostDto.html":{},"classes/GetSchoolDto.html":{},"classes/GetSheduleDto.html":{},"classes/GetUserDto.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{},"classes/LoginUserDto.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"controllers/PredicteController.html":{},"injectables/PredicteService.html":{},"classes/PrismaOtherFilter.html":{},"injectables/PrismaService.html":{},"classes/PrismaValidationFilter.html":{},"classes/RefreshTokenDto.html":{},"classes/RemoveUserInterViewDto.html":{},"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{},"guards/RolesGuard.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/SendFiszkiDto.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"injectables/SheduleDaysService.html":{},"injectables/SheduleService.html":{},"injectables/UpperCasePipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/ValidationdDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["type:\"httpexception",{"_index":1224,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["type:\"notfounderror",{"_index":1368,"title":{},"body":{"classes/NotFoundErrorFilter.html":{}}}],["type:\"notfoundexception",{"_index":1372,"title":{},"body":{"classes/NotFoundExceptionFilter.html":{}}}],["typeof",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{}}}],["types/bcrypt",{"_index":1965,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":2006,"title":{},"body":{"index.html":{}}}],["ui.id",{"_index":1343,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["ui.userid",{"_index":1329,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["układanie",{"_index":1385,"title":{},"body":{"controllers/PredicteController.html":{}}}],["unauthorizedexception",{"_index":245,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/SchoolController.html":{}}}],["unauthorizedexception(\"not",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception('invalid",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":244,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/UpperCasePipe.html":{},"injectables/UserService.html":{}}}],["unique_fiszka_user_id",{"_index":1051,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["unique_id_region",{"_index":1905,"title":{},"body":{"injectables/UserService.html":{}}}],["unique_school_region_id",{"_index":549,"title":{},"body":{"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"injectables/DirectorService.html":{},"injectables/GroupService.html":{},"injectables/RentalCostService.html":{},"injectables/SchoolService.html":{},"injectables/SheduleService.html":{}}}],["unit",{"_index":2020,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":67,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CallUserHistoryController.html":{},"injectables/CallUserHistoryService.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"controllers/DirectorController.html":{},"injectables/DirectorService.html":{},"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{},"controllers/PredicteController.html":{},"injectables/PredicteService.html":{},"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"injectables/SheduleDaysService.html":{},"injectables/SheduleService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["unlicensed",{"_index":2059,"title":{},"body":{"properties.html":{}}}],["update",{"_index":552,"title":{},"body":{"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"injectables/DirectorService.html":{},"injectables/GroupService.html":{},"injectables/RentalCostService.html":{}}}],["updatedgroup",{"_index":1067,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["updateinschool",{"_index":550,"title":{},"body":{"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"injectables/DirectorService.html":{},"injectables/GroupService.html":{},"injectables/RentalCostService.html":{}}}],["updateinschool.contact()).find((x",{"_index":565,"title":{},"body":{"injectables/ContactService.html":{},"injectables/GroupService.html":{}}}],["updateinschool.contactperson()).find((x)=>x.id===idcontactperson",{"_index":553,"title":{},"body":{"injectables/ContactPersonService.html":{}}}],["updateinschool.director",{"_index":831,"title":{},"body":{"injectables/DirectorService.html":{}}}],["updateinschool.rentalcost",{"_index":1559,"title":{},"body":{"injectables/RentalCostService.html":{}}}],["uppercasepipe",{"_index":1777,"title":{"injectables/UpperCasePipe.html":{}},"body":{"injectables/UpperCasePipe.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["uppercasepipe.pipe",{"_index":1839,"title":{},"body":{"controllers/UserController.html":{}}}],["useclass",{"_index":296,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["usefilters",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CallUserHistoryController.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/FiszkaController.html":{},"controllers/GroupController.html":{},"controllers/InterviewsController.html":{},"controllers/PredicteController.html":{},"controllers/RentalCostController.html":{},"controllers/SchoolController.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"controllers/UserController.html":{}}}],["usefilters(new",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CallUserHistoryController.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/FiszkaController.html":{},"controllers/GroupController.html":{},"controllers/InterviewsController.html":{},"controllers/PredicteController.html":{},"controllers/RentalCostController.html":{},"controllers/SchoolController.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"controllers/UserController.html":{}}}],["useguards",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CallUserHistoryController.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/FiszkaController.html":{},"controllers/GroupController.html":{},"controllers/InterviewsController.html":{},"controllers/PredicteController.html":{},"controllers/RentalCostController.html":{},"controllers/SchoolController.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"controllers/UserController.html":{}}}],["useguards(authguard",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(authguard)@usefilters(new",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(rolesguard",{"_index":415,"title":{},"body":{"controllers/CallUserHistoryController.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/FiszkaController.html":{},"controllers/GroupController.html":{},"controllers/InterviewsController.html":{},"controllers/PredicteController.html":{},"controllers/RentalCostController.html":{},"controllers/SchoolController.html":{},"controllers/SheduleController.html":{},"controllers/SheduleDaysController.html":{},"controllers/UserController.html":{}}}],["user",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CallUserHistoryService.html":{},"classes/CreateInterViewDto.html":{},"injectables/FiszkaService.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["user.controller",{"_index":1873,"title":{},"body":{"modules/UserModule.html":{}}}],["user.email",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["user.fiszka.length",{"_index":1913,"title":{},"body":{"injectables/UserService.html":{}}}],["user.id",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.job",{"_index":1912,"title":{},"body":{"injectables/UserService.html":{}}}],["user.name",{"_index":1907,"title":{},"body":{"injectables/UserService.html":{}}}],["user.password",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.phone",{"_index":1910,"title":{},"body":{"injectables/UserService.html":{}}}],["user.region",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.region.touppercase",{"_index":1914,"title":{},"body":{"injectables/UserService.html":{}}}],["user.role",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["user.role?.includes(role",{"_index":1573,"title":{},"body":{"guards/RolesGuard.html":{}}}],["user.service",{"_index":1833,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.surname",{"_index":1909,"title":{},"body":{"injectables/UserService.html":{}}}],["user/user.service",{"_index":1296,"title":{},"body":{"modules/InterviewsModule.html":{}}}],["user:user",{"_index":1568,"title":{},"body":{"guards/RolesGuard.html":{}}}],["useragent",{"_index":97,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/NotFoundExceptionFilter.html":{}}}],["usercontroller",{"_index":1802,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userid",{"_index":962,"title":{},"body":{"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{},"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{},"controllers/UserController.html":{}}}],["userids",{"_index":1341,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["userids.filter((id",{"_index":1345,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["userinterviewids",{"_index":1342,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["userinterviewids.filter((id",{"_index":1347,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["userinterviews",{"_index":1319,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["usermodule",{"_index":136,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["users",{"_index":657,"title":{},"body":{"classes/CreateInterViewDto.html":{},"injectables/InterviewsService.html":{}}}],["users,date",{"_index":1351,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["users.map(userid",{"_index":1353,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["userservice",{"_index":1294,"title":{"injectables/UserService.html":{}},"body":{"modules/InterviewsModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["userservice,interviewsservice",{"_index":1298,"title":{},"body":{"modules/InterviewsModule.html":{}}}],["uwzględnienia",{"_index":1422,"title":{},"body":{"controllers/PredicteController.html":{}}}],["użytkopwnik",{"_index":1026,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["użytkownika",{"_index":1623,"title":{},"body":{"controllers/SchoolController.html":{}}}],["validation",{"_index":1807,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["validation(@body",{"_index":1845,"title":{},"body":{"controllers/UserController.html":{}}}],["validation(validationuserdto",{"_index":1827,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["validationddto",{"_index":1828,"title":{"classes/ValidationdDto.html":{}},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/ValidationdDto.html":{},"coverage.html":{}}}],["validationerror",{"_index":1210,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["validationresult",{"_index":1859,"title":{},"body":{"controllers/UserController.html":{}}}],["validationuserdto",{"_index":1831,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["validationuserdto.email",{"_index":1917,"title":{},"body":{"injectables/UserService.html":{}}}],["validationuserdto.phone",{"_index":1921,"title":{},"body":{"injectables/UserService.html":{}}}],["validator",{"_index":18,"title":{},"body":{"classes/AddUserInterViewDto.html":{},"classes/AddgroupDto.html":{},"classes/CreateCallUserDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateInterViewDto.html":{},"classes/CreateRentalCostDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateSheduleDaysDto.html":{},"classes/CreateSheduleDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/EditContactDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditGroupDto.html":{},"classes/EditInterViewDto.html":{},"classes/EditRentalCostDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSheduleDaysDto.html":{},"classes/EditSheduleDto.html":{},"classes/EditUser.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"classes/GetCallUserHistoryDto.html":{},"classes/GetContactDto.html":{},"classes/GetContactPersontDto.html":{},"classes/GetDirectorDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetGroupDto.html":{},"classes/GetRentalCostDto.html":{},"classes/GetSchoolDto.html":{},"classes/GetSheduleDto.html":{},"classes/GetUserDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/LoginUserDto.html":{},"classes/RefreshTokenDto.html":{},"classes/RemoveUserInterViewDto.html":{},"classes/SendFiszkiDto.html":{},"classes/ValidationdDto.html":{},"dependencies.html":{}}}],["value",{"_index":1786,"title":{},"body":{"injectables/UpperCasePipe.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.job",{"_index":1800,"title":{},"body":{"injectables/UpperCasePipe.html":{}}}],["value.job.touppercase",{"_index":1801,"title":{},"body":{"injectables/UpperCasePipe.html":{}}}],["value.region",{"_index":1796,"title":{},"body":{"injectables/UpperCasePipe.html":{}}}],["value.region.touppercase",{"_index":1797,"title":{},"body":{"injectables/UpperCasePipe.html":{}}}],["value.role",{"_index":1798,"title":{},"body":{"injectables/UpperCasePipe.html":{}}}],["value.role.touppercase",{"_index":1799,"title":{},"body":{"injectables/UpperCasePipe.html":{}}}],["variable",{"_index":1934,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2060,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":2057,"title":{},"body":{"properties.html":{}}}],["void",{"_index":46,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{}}}],["w",{"_index":809,"title":{},"body":{"controllers/DirectorController.html":{},"controllers/PredicteController.html":{}}}],["watch",{"_index":2015,"title":{},"body":{"index.html":{}}}],["we're",{"_index":269,"title":{},"body":{"guards/AuthGuard.html":{}}}],["website",{"_index":2044,"title":{},"body":{"index.html":{}}}],["wednesday",{"_index":1468,"title":{},"body":{"injectables/PredicteService.html":{}}}],["wiadomo",{"_index":1682,"title":{},"body":{"controllers/SheduleController.html":{}}}],["wietlicy",{"_index":1410,"title":{},"body":{"controllers/PredicteController.html":{}}}],["wprowadzanie",{"_index":1696,"title":{},"body":{"controllers/SheduleController.html":{}}}],["wszystkich",{"_index":1187,"title":{},"body":{"controllers/GroupController.html":{},"controllers/SchoolController.html":{},"controllers/SheduleController.html":{}}}],["wszystkie",{"_index":1393,"title":{},"body":{"controllers/PredicteController.html":{}}}],["wyszukany",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{}}}],["wywiadówki",{"_index":1020,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["wyświetla",{"_index":1685,"title":{},"body":{"controllers/SheduleController.html":{}}}],["wyświetlanie",{"_index":1186,"title":{},"body":{"controllers/GroupController.html":{},"controllers/SheduleController.html":{}}}],["wyświetlenie",{"_index":804,"title":{},"body":{"controllers/DirectorController.html":{}}}],["x.id",{"_index":566,"title":{},"body":{"injectables/ContactService.html":{},"injectables/GroupService.html":{}}}],["yes",{"_index":1891,"title":{},"body":{"injectables/UserService.html":{}}}],["you'd",{"_index":2035,"title":{},"body":{"index.html":{}}}],["yourrole",{"_index":1992,"title":{},"body":{"miscellaneous/functions.html":{}}}],["yours",{"_index":1053,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["z",{"_index":1023,"title":{},"body":{"controllers/FiszkaController.html":{},"controllers/SchoolController.html":{},"controllers/SheduleController.html":{}}}],["zaj",{"_index":1421,"title":{},"body":{"controllers/PredicteController.html":{}}}],["zajęc",{"_index":1701,"title":{},"body":{"controllers/SheduleController.html":{}}}],["zajęcia",{"_index":1409,"title":{},"body":{"controllers/PredicteController.html":{}}}],["założenia",{"_index":405,"title":{},"body":{"controllers/CallUserHistoryController.html":{}}}],["zgadza",{"_index":1456,"title":{},"body":{"injectables/PredicteService.html":{}}}],["zgłoszone",{"_index":1396,"title":{},"body":{"controllers/PredicteController.html":{}}}],["zmienna",{"_index":1405,"title":{},"body":{"controllers/PredicteController.html":{}}}],["zoom",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CallUserHistoryModule.html":{},"modules/ContactModule.html":{},"modules/ContactPersonModule.html":{},"modules/DirectorModule.html":{},"modules/FiszkaModule.html":{},"modules/GroupModule.html":{},"modules/InterviewsModule.html":{},"modules/PredicteModule.html":{},"modules/PrismaModule.html":{},"modules/RentalCostModule.html":{},"modules/SchoolModule.html":{},"modules/SheduleDaysModule.html":{},"modules/SheduleModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["zrobi",{"_index":1679,"title":{},"body":{"controllers/SheduleController.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AddUserInterViewDto.html":{"url":"classes/AddUserInterViewDto.html","title":"class - AddUserInterViewDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddUserInterViewDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/interviews/dto/addUserInterView.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                idUserList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        idUserList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/interviews/dto/addUserInterView.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty} from \"class-validator\"\n\nexport class AddUserInterViewDto {\n\n    @IsNotEmpty()\n    idUserList: string[]\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddgroupDto.html":{"url":"classes/AddgroupDto.html","title":"class - AddgroupDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddgroupDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/fiszka/dto/addGroup.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                idUser\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        idUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/fiszka/dto/addGroup.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsAlpha, IsNotEmpty } from \"class-validator\";\n\n\nexport class AddgroupDto {\n    @IsNotEmpty()\n    idUser: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AllExceptionsFilter.html":{"url":"classes/AllExceptionsFilter.html","title":"class - AllExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/validation/AllExceptionsFilter.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpAdapterHost: HttpAdapterHost)\n                    \n                \n                        \n                            \n                                Defined in src/common/validation/AllExceptionsFilter.filter.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpAdapterHost\n                                                  \n                                                        \n                                                                    HttpAdapterHost\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/common/validation/AllExceptionsFilter.filter.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    ExceptionFilter,\n    Catch,\n    ArgumentsHost,\n    HttpException,\n    HttpStatus,\n    NotFoundException,\n} from '@nestjs/common';\nimport { HttpAdapterHost } from '@nestjs/core';\nimport { NotFoundError } from 'rxjs';\nimport { NotFoundErrorFilter } from './NotFoundErrorFilter.filter';\nimport { NotFoundExceptionFilter } from './NotFoundException.filter';\nimport { PrismaValidationFilter } from './PrismaClientValidationError.filter';\nimport { PrismaOtherFilter } from './PrismaOtherError.filter';\nimport { PrismaClientKnownRequestError, PrismaClientUnknownRequestError } from '@prisma/client/runtime/library';\n\n\n\n\n@Catch()\nexport class AllExceptionsFilter implements ExceptionFilter {\n\n    constructor(private readonly httpAdapterHost: HttpAdapterHost) { }\n\n    catch(exception: unknown, host: ArgumentsHost): void {\n\n        const { httpAdapter } = this.httpAdapterHost;\n\n\n        const ctx = host.switchToHttp();\n\n        const httpStatus =\n            exception instanceof HttpException\n                ? exception.getStatus()\n                : HttpStatus.INTERNAL_SERVER_ERROR;\n\n        const nameError = exception.constructor.name;\n        const request = ctx.getRequest();\n        const response = ctx.getResponse();\n\n        if (nameError === \"NotFoundError\") {\n            new NotFoundErrorFilter().catch(exception as NotFoundError, host);\n            return;\n        }\n        if (nameError === \"NotFoundException\") {\n            new NotFoundExceptionFilter().catch(exception as NotFoundException, host);\n            return;\n        }\n        if (nameError === \"PrismaClientKnownRequestError\") {\n            new PrismaValidationFilter().catch(exception as PrismaClientKnownRequestError, host);\n            return;\n        }\n        if (nameError === \"PrismaClientUnknownRequestError\" || nameError === \"PrismaClientValidationError\") {\n            new PrismaOtherFilter().catch(exception as PrismaClientUnknownRequestError, host);\n            return;\n        }\n\n        const data = (exception as any).message\n\n        const responseBody = {\n            type: exception.constructor.name,\n            msg: data,\n            method: request.method,\n            headers: request.headers,\n            userAgent: request.headers['user-agent'],\n            requestId: response.getHeaders()['x-request-id'],\n            statusCode: httpStatus,\n            timestamp: new Date().toISOString(),\n            path: httpAdapter.getRequestUrl(ctx.getRequest()),\n        };\n\n        httpAdapter.reply(ctx.getResponse(), responseBody, httpStatus);\n    }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller()\nexport class AppController {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCallUserHistoryModule\n\nCallUserHistoryModule\n\nAppModule -->\n\nCallUserHistoryModule->AppModule\n\n\n\n\n\nContactModule\n\nContactModule\n\nAppModule -->\n\nContactModule->AppModule\n\n\n\n\n\nContactPersonModule\n\nContactPersonModule\n\nAppModule -->\n\nContactPersonModule->AppModule\n\n\n\n\n\nDirectorModule\n\nDirectorModule\n\nAppModule -->\n\nDirectorModule->AppModule\n\n\n\n\n\nFiszkaModule\n\nFiszkaModule\n\nAppModule -->\n\nFiszkaModule->AppModule\n\n\n\n\n\nGroupModule\n\nGroupModule\n\nAppModule -->\n\nGroupModule->AppModule\n\n\n\n\n\nInterviewsModule\n\nInterviewsModule\n\nAppModule -->\n\nInterviewsModule->AppModule\n\n\n\n\n\nRentalCostModule\n\nRentalCostModule\n\nAppModule -->\n\nRentalCostModule->AppModule\n\n\n\n\n\nSchoolModule\n\nSchoolModule\n\nAppModule -->\n\nSchoolModule->AppModule\n\n\n\n\n\nSheduleDaysModule\n\nSheduleDaysModule\n\nAppModule -->\n\nSheduleDaysModule->AppModule\n\n\n\n\n\nSheduleModule\n\nSheduleModule\n\nAppModule -->\n\nSheduleModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CallUserHistoryModule\n                        \n                        \n                            ContactModule\n                        \n                        \n                            ContactPersonModule\n                        \n                        \n                            DirectorModule\n                        \n                        \n                            FiszkaModule\n                        \n                        \n                            GroupModule\n                        \n                        \n                            InterviewsModule\n                        \n                        \n                            RentalCostModule\n                        \n                        \n                            SchoolModule\n                        \n                        \n                            SheduleDaysModule\n                        \n                        \n                            SheduleModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { SheduleDaysService } from './models/sheduleDays/sheduledays.service';\nimport { SheduleDaysModule } from './models/sheduleDays/sheduledays.module';\nimport { SheduleDaysController } from './models/sheduleDays/sheduledays.controller';\nimport { SheduleController } from './models/shedule/shedule.controller';\nimport { SheduleService } from './models/shedule/shedule.service';\n\nimport { ContactModule } from './models/contact/contact.module';\nimport { DirectorModule } from './models/director/director.module';\nimport { SchoolModule } from './models/school/school.module';\nimport { CallUserHistoryModule } from './models/callUserHistory/calluserhistory.module';\nimport { FiszkaModule } from './models/fiszka/fiszka.module';\nimport { InterviewsModule } from './models/interviews/interviews.module';\nimport { AuthModule } from './Auth/auth.module';\nimport { UserModule } from './models/user/user.module';\nimport { Module } from '@nestjs/common';\nimport { ContactPersonModule } from './models/personContact/contactPerson.module';\nimport { RentalCostModule } from './models/rentalCost/rentalcost.module';\nimport { GroupModule } from './models/group/group.module';\nimport { SheduleModule } from './models/shedule/shedule.module';\n\n\n\n@Module({\n  imports: [\n    SheduleDaysModule,\n    SheduleModule,\n    GroupModule,\n    ContactModule,\n    DirectorModule,\n    SchoolModule,\n    CallUserHistoryModule,\n    ContactPersonModule,\n    FiszkaModule,\n    InterviewsModule,\n    AuthModule,\n    UserModule,\n    RentalCostModule\n  ],\n  controllers: [\n\n\n  ],\n  providers: [\n    \n  ],\n})\nexport class AppModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                getProfile\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                LogOut\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                refreshToken\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        getProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfile(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@UseFilters(new HttpExceptionFilter())@Get('profile')\n                \n            \n\n            \n                \n                    Defined in src/Auth/auth.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        LogOut\n                        \n                    \n                \n            \n            \n                \n                    \n                    LogOut()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@HttpCode(HttpStatus.OK)@UseFilters(new HttpExceptionFilter())@Post('logOut')\n                \n            \n\n            \n                \n                    Defined in src/Auth/auth.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        refreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    refreshToken(OldToken: RefreshTokenDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@HttpCode(HttpStatus.OK)@UseFilters(new HttpExceptionFilter())@Post('refreshToken')\n                \n            \n\n            \n                \n                    Defined in src/Auth/auth.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    OldToken\n                                    \n                                                RefreshTokenDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    signIn(signInDto: LoginUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@HttpCode(HttpStatus.OK)@UseFilters(new HttpExceptionFilter())@Post('login')\n                \n            \n\n            \n                \n                    Defined in src/Auth/auth.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signInDto\n                                    \n                                                LoginUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n    Body,\n    Controller,\n    Get,\n    HttpCode,\n    HttpStatus,\n    Request,\n    Post,\n    UseGuards,\n    UseFilters,\n    Req,\n\n} from '@nestjs/common';\n\nimport { Public } from './decorators/public.decorator';\nimport { AuthService } from './auth.service';\nimport { AuthGuard } from './auth.guard';\nimport { LoginUserDto } from 'src/Auth/dto/authUser.dto';\nimport { HttpExceptionFilter } from 'src/common/validation/http-exception.filter';\nimport { RefreshTokenDto } from 'src/Auth/dto/authRefreshToken.dto';\n\n\n\n@Controller('auth')\nexport class AuthController {\n    constructor(private authService: AuthService) { }\n\n    @Public()\n    @HttpCode(HttpStatus.OK)\n    @UseFilters(new HttpExceptionFilter())\n    @Post('login')\n    async signIn(@Body() signInDto: LoginUserDto) {\n       return this.authService.signIn(signInDto.email, signInDto.password);\n\n    }\n    @Public()\n    @HttpCode(HttpStatus.OK)\n    @UseFilters(new HttpExceptionFilter())\n    @Post('refreshToken')\n    refreshToken(@Body() OldToken: RefreshTokenDto) {\n        \n        return this.authService.refreshToken(OldToken);\n    }\n    @Public()\n    @HttpCode(HttpStatus.OK)\n    @UseFilters(new HttpExceptionFilter())\n    @Post('logOut')\n    LogOut() {\n        return this.authService.LogOut();\n    }\n    \n    @UseGuards(AuthGuard)\n    @UseFilters(new HttpExceptionFilter())\n    @Get('profile')\n    getProfile(@Req() req: Request) {\n        //return req['user'];\n        return this.authService.Profile(req['user'].email);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/Auth/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                extractTokenFromHeader\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/Auth/auth.guard.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/Auth/auth.guard.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        extractTokenFromHeader\n                        \n                    \n                \n            \n            \n                \n                    \n                    extractTokenFromHeader(request: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/Auth/auth.guard.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n    CanActivate,\n    ExecutionContext,\n    Injectable,\n    UnauthorizedException,\n  } from '@nestjs/common';\n  import { Reflector } from '@nestjs/core';\n  import { JwtService } from '@nestjs/jwt';\n  import { Request } from 'express';\n  import { jwtConstants } from './constants';\n  import { IS_PUBLIC_KEY } from './decorators/public.decorator';\n  const jwtSecretKey = process.env.JWT_SECRET;\n\n  @Injectable()\n  export class AuthGuard implements CanActivate {\n    constructor(private jwtService: JwtService, private reflector: Reflector) {}\n  \n    async canActivate(context: ExecutionContext): Promise {\n      const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n        context.getHandler(),\n        context.getClass(),\n      ]);\n      if (isPublic) {\n        // 💡 See this condition\n        return true;\n      }\n  \n      const request = context.switchToHttp().getRequest();\n      const token = this.extractTokenFromHeader(request);\n      if (!token) {\n        throw new UnauthorizedException();\n      }\n      try {\n \n        const payload = await this.jwtService.verifyAsync(token, {\n          secret: jwtSecretKey,\n        });\n        \n        // 💡 We're assigning the payload to the request object here\n        // so that we can access it in our route handlers\n        request['user'] = payload;\n      } catch {\n        \n        throw new UnauthorizedException();\n      }\n      return true;\n    }\n  \n    private extractTokenFromHeader(request: Request): string | undefined {\n      const [type, token] = request.headers.authorization?.split(' ') ?? [];\n      return type === 'Bearer' ? token : undefined;\n    }\n  }\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/Auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_GUARD } from '@nestjs/core';\nimport { JwtModule } from '@nestjs/jwt';\nimport { AuthController } from './auth.controller';\nimport { AuthGuard } from './auth.guard';\nimport { AuthService } from './auth.service';\nimport { UserModule } from 'src/models/user/user.module';\nconst jwtSecretKey = process.env.JWT_SECRET;\n\n@Module({\n  imports: [\n    UserModule,\n    JwtModule.register({\n      global: true,\n      secret:jwtSecretKey,\n      //secret: jwtConstants.secret,\n      signOptions: { expiresIn: '5000s' },\n    }),\n\n  ],\n  providers: [\n    AuthService,\n    {\n      provide: APP_GUARD,\n      useClass: AuthGuard,\n    },\n  ],\n  controllers: [AuthController,],\n  exports: [AuthService,],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                LogOut\n                            \n                            \n                                    Async\n                                Profile\n                            \n                            \n                                    Async\n                                refreshToken\n                            \n                            \n                                    Async\n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/Auth/auth.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        LogOut\n                        \n                    \n                \n            \n            \n                \n                    \n                    LogOut()\n                \n            \n\n\n            \n                \n                    Defined in src/Auth/auth.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        Profile\n                        \n                    \n                \n            \n            \n                \n                    \n                    Profile(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/Auth/auth.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        refreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    refreshToken(refreshToken: RefreshTokenDto)\n                \n            \n\n\n            \n                \n                    Defined in src/Auth/auth.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    refreshToken\n                                    \n                                                RefreshTokenDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    signIn(email: string, pass: string)\n                \n            \n\n\n            \n                \n                    Defined in src/Auth/auth.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { PrismaService } from 'prisma/prisma.service';\nimport * as bcrypt from 'bcrypt';\nimport { RefreshTokenDto } from 'src/Auth/dto/authRefreshToken.dto';\nimport * as jwt from 'jsonwebtoken';\nimport { DecodeDto } from './dto/decode.dto';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private jwtService: JwtService,\n    private prisma: PrismaService\n  ) { }\n\n  async refreshToken(refreshToken: RefreshTokenDto) {\n    try {\n      const decoded = await this.jwtService.verify(refreshToken.access_token);\n      const user = await this.prisma.user.findUniqueOrThrow({\n        where: {\n          email: decoded.email,\n        },\n      });\n      const payload = { email: user.email, role: user.role, region: user.region, id: user.id };\n      console.log(\"Token byl aktywny ale dałem refresh\");\n      \n      return {\n        access_token: await this.jwtService.signAsync(payload),\n      };\n    } catch (error) {\n      if (error instanceof jwt.TokenExpiredError) {\n        console.log(\"stary token \",refreshToken.access_token);\n        \n        const decoded = this.jwtService.decode(refreshToken.access_token);\n        let decodedData: DecodeDto;\n        console.log(\"before if\",decoded)\n        if (typeof decoded === 'string') {\n          decodedData = JSON.parse(decoded) as DecodeDto;\n        } else {\n          decodedData = decoded as DecodeDto;\n        }\n        console.log(\"stary token \",decodedData);\n        \n        const user = await this.prisma.user.findUniqueOrThrow({\n          where: {\n            email: decodedData.email,\n          },\n        });\n        console.log(\"User wyszukany po starym tokenie\",user);\n        \n        const payload = { email: user.email, role: user.role, region: user.region, id: user.id };\n        console.log(\"końcowy payload\",payload);\n        let test = await this.jwtService.signAsync(payload)\n        console.log(test)\n        let testponowymtokenie = await this.jwtService.verify(test)\n        console.log(\"test nowego tokena\",testponowymtokenie)\n        return {\n          //access_token: await this.jwtService.signAsync(payload)\n          access_token:test\n        };\n      }\n      throw new UnauthorizedException('Invalid or expired refresh token');\n    }\n  }\n  async LogOut(): Promise {\n    const expiresIn = '1s';\n    const token = await this.jwtService.signAsync({}, { expiresIn });\n  }\n\n  async signIn(email: string, pass: string) {\n\n\n    const user = await this.prisma.user.findUniqueOrThrow(\n      {\n        where: {\n          email: email\n        },\n      }\n    );\n    console.log(user)\n\n\n    if (!user) {\n      throw new UnauthorizedException(\"Not correct email\");\n    }\n    const match = await bcrypt.compare(pass, user.password);\n    if (!match) {\n      throw new UnauthorizedException(\"Not correct password\");\n    }\n    const payload = { email: user.email, role: user.role, region: user.region, id: user.id };\n    return {\n      access_token: await this.jwtService.signAsync(payload),\n    };\n\n  }\n  async Profile(email: string) {\n\n    const user = await this.prisma.user.findUniqueOrThrow(\n      {\n        where: {\n          email: email\n        },\n        select:{\n          id: true,\n          name: true,\n          surname: true,\n          email: true,\n          region: true,\n          phone: true,\n          role: true,\n          job: true,\n          totalFiszki: true, \n        }\n      }\n    );\n    if (!user) {\n      throw new UnauthorizedException(\"Not correct email\");\n    }\n   return user\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CallUserHistoryController.html":{"url":"controllers/CallUserHistoryController.html","title":"controller - CallUserHistoryController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CallUserHistoryController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/callUserHistory/calluserhistory.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                callUserHistory\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                AddUserCall\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                GetAllHistory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        AddUserCall\n                        \n                    \n                \n            \n            \n                \n                    \n                    AddUserCall(idFiszka: string, data: CreateCallUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.MGTMT, Role.CA, Role.RD)@Post('addcalluser/:idFiszka')\n                \n            \n\n            \n                \n                    Defined in src/models/callUserHistory/calluserhistory.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idFiszka\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                CreateCallUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        GetAllHistory\n                        \n                    \n                \n            \n            \n                \n                    \n                    GetAllHistory(idFiszka: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.MGTMT, Role.RD, Role.CA)@Get('getallhistory/:idFiszka')\n                \n            \n\n            \n                \n                    Defined in src/models/callUserHistory/calluserhistory.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idFiszka\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        \nimport { Body, Controller, Get, Param, Post, UseFilters, UseGuards } from '@nestjs/common';\nimport { RolesGuard } from 'src/Auth/roles.guard';\nimport { CallUserHistoryService } from './calluserhistory.service';\nimport { Role } from '@prisma/client';\nimport { Roles } from 'src/Auth/decorators/roles.decorator';\nimport { HttpExceptionFilter } from 'src/common/validation/http-exception.filter';\nimport { GetCallUserHistoryDto } from './dto/GetCallUserHistory.dto';\nimport { CreateCallUserDto } from './dto/CreateCallUser.dto';\n\n\n// założenia:\n// DR i AC może dodawać rozmowy ( czyli dzwonić do kandydatów )\n\n@Controller(\"callUserHistory\")\n@UseGuards(RolesGuard)\nexport class CallUserHistoryController {\n    constructor(private callUserService: CallUserHistoryService) { }\n\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.MGTMT, Role.RD, Role.CA)\n    @Get('getallhistory/:idFiszka')\n    async GetAllHistory(@Param('idFiszka') idFiszka: string): Promise {\n        return this.callUserService.GetAllHistory(idFiszka)\n    }\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.MGTMT, Role.CA, Role.RD)\n    @Post('addcalluser/:idFiszka')\n    async AddUserCall(@Param('idFiszka') idFiszka: string, @Body() data: CreateCallUserDto) {\n        return this.callUserService.AddUserCall(idFiszka, data)\n\n    }\n   \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CallUserHistoryModule.html":{"url":"modules/CallUserHistoryModule.html","title":"module - CallUserHistoryModule","body":"\n                   \n\n\n\n\n    Modules\n    CallUserHistoryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CallUserHistoryModule\n\n\n\ncluster_CallUserHistoryModule_providers\n\n\n\n\nCallUserHistoryService\n\nCallUserHistoryService\n\n\n\nCallUserHistoryModule\n\nCallUserHistoryModule\n\nCallUserHistoryModule -->\n\nCallUserHistoryService->CallUserHistoryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/callUserHistory/calluserhistory.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CallUserHistoryService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CallUserHistoryController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        \n\nimport { Module } from '@nestjs/common';\nimport { CallUserHistoryController } from './calluserhistory.controller';\nimport { CallUserHistoryService } from './calluserhistory.service';\n\n@Module({\n    imports: [],\n    controllers: [CallUserHistoryController],\n    providers: [CallUserHistoryService],\n})\nexport class CallUserHistoryModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CallUserHistoryService.html":{"url":"injectables/CallUserHistoryService.html","title":"injectable - CallUserHistoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CallUserHistoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/callUserHistory/calluserhistory.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                AddUserCall\n                            \n                            \n                                    Async\n                                GetAllHistory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/models/callUserHistory/calluserhistory.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        AddUserCall\n                        \n                    \n                \n            \n            \n                \n                    \n                    AddUserCall(IdFiszka: string, data: CreateCallUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/models/callUserHistory/calluserhistory.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    IdFiszka\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                CreateCallUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        GetAllHistory\n                        \n                    \n                \n            \n            \n                \n                    \n                    GetAllHistory(IdFiszka: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/callUserHistory/calluserhistory.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    IdFiszka\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from 'prisma/prisma.service';\nimport { CreateCallUserDto } from './dto/CreateCallUser.dto';\n\n@Injectable()\nexport class CallUserHistoryService {\n    constructor(private prisma: PrismaService) { }\n\n    async GetAllHistory(IdFiszka: string) {\n        return this.prisma.phoneCalls.findMany({\n            where: {\n                fiszka: {\n                    id: IdFiszka\n                }\n            },\n            select: {\n                callDate: true,\n                callNext: true,\n                comments: true\n            }\n        });\n    }\n\n    async AddUserCall(IdFiszka: string, data: CreateCallUserDto) {\n        const user = this.prisma.phoneCalls.create({\n            data: {\n                callDate: data.callDate,\n                callNext: data.callNext,\n                comments: data.comments,\n                fiszka: {\n                    connect: {\n                        id: IdFiszka\n                    }\n                }\n            }\n        })\n        return user\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ContactController.html":{"url":"controllers/ContactController.html","title":"controller - ContactController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ContactController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/contact/contact.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                contact\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                edit\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getByIdForMgtmt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getByIdForRd\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(idSchool: string, req: Request, body: CreateContactDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA)@Post('create/:idSchool')\n                \n            \n\n            \n                \n                    Defined in src/models/contact/contact.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                CreateContactDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        edit\n                        \n                    \n                \n            \n            \n                \n                    \n                    edit(idSchool: string, idContact: string, req: Request, body: EditContactDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA)@Patch('edit/:idSchool/:idContact')\n                \n            \n\n            \n                \n                    Defined in src/models/contact/contact.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    idContact\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                EditContactDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        getByIdForMgtmt\n                        \n                    \n                \n            \n            \n                \n                    \n                    getByIdForMgtmt(idSchool: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.MGTMT)@Get('getcontact/mgtmt/:idSchool')\n                \n            \n\n            \n                \n                    Defined in src/models/contact/contact.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        getByIdForRd\n                        \n                    \n                \n            \n            \n                \n                    \n                    getByIdForRd(idSchool: string, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA)@Get('getcontact/rd/:idSchool')\n                \n            \n\n            \n                \n                    Defined in src/models/contact/contact.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Patch, Post, Req, UseFilters, UseGuards } from '@nestjs/common';\nimport { RolesGuard } from 'src/Auth/roles.guard';\nimport { ContactService } from './contact.service';\nimport { Role } from '@prisma/client';\nimport { Roles } from 'src/Auth/decorators/roles.decorator';\nimport { HttpExceptionFilter } from 'src/common/validation/http-exception.filter';\nimport { GetContactDto } from './dto/getContact.dto';\nimport { CreateContactDto } from './dto/createContact.dto';\nimport { EditContactDto } from './dto/editContact.dto';\nimport { Request } from 'express';\n\n@UseGuards(RolesGuard)\n@Controller('contact')\nexport class ContactController {\n    constructor(private contactService: ContactService) { }\n\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.MGTMT)\n    @Get('getcontact/mgtmt/:idSchool')\n    async getByIdForMgtmt(@Param('idSchool') idSchool: string): Promise {\n        return this.contactService.getByIdForMgtmt(idSchool);\n    }\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.RD, Role.CA)\n    @Get('getcontact/rd/:idSchool')\n    async getByIdForRd(@Param('idSchool') idSchool: string, @Req() req: Request): Promise {\n        const region: string = req['user'].region;\n        return this.contactService.getByIdForRd(idSchool, region);\n    }\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.RD, Role.CA)\n    @Post('create/:idSchool')\n    async create(@Param('idSchool') idSchool: string, @Req() req: Request, @Body() body: CreateContactDto) {\n        const region: string = req['user'].region;\n        return this.contactService.create(idSchool, body, region);\n    }\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.RD, Role.CA)\n    @Patch('edit/:idSchool/:idContact')\n    async edit(@Param('idSchool') idSchool: string, @Param('idContact') idContact: string, @Req() req: Request, @Body() body: EditContactDto) {\n        const region: string = req['user'].region;\n        return this.contactService.edit(idSchool, body, region, idContact);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContactModule.html":{"url":"modules/ContactModule.html","title":"module - ContactModule","body":"\n                   \n\n\n\n\n    Modules\n    ContactModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ContactModule\n\n\n\ncluster_ContactModule_imports\n\n\n\ncluster_ContactModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nContactModule\n\nContactModule\n\nContactModule -->\n\nPrismaModule->ContactModule\n\n\n\n\n\nContactService\n\nContactService\n\nContactModule -->\n\nContactService->ContactModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/contact/contact.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ContactService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ContactController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { PrismaModule } from 'prisma/prisma.module';\nimport { ContactService } from './contact.service';\nimport { Module } from '@nestjs/common';\nimport { ContactController } from './contact.controller';\n\n@Module({\n    imports: [PrismaModule],\n    controllers: [ContactController],\n    providers: [\n        ContactService,],\n})\nexport class ContactModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ContactPersonController.html":{"url":"controllers/ContactPersonController.html","title":"controller - ContactPersonController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ContactPersonController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/personContact/contactPerson.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                contactperson\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                edit\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getByIdForMgtmt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getByIdForRd\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(idSchool: string, req: Request, body: CreateContactPersontDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA)@Post('create/:idSchool')\n                \n            \n\n            \n                \n                    Defined in src/models/personContact/contactPerson.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                CreateContactPersontDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        edit\n                        \n                    \n                \n            \n            \n                \n                    \n                    edit(idContactPerson: string, schoolId: string, req: Request, body: EditContactPersontDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA)@Patch('edit/:schoolId/:idContactPerson')\n                \n            \n\n            \n                \n                    Defined in src/models/personContact/contactPerson.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idContactPerson\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schoolId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                EditContactPersontDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        getByIdForMgtmt\n                        \n                    \n                \n            \n            \n                \n                    \n                    getByIdForMgtmt(idSchool: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.MGTMT)@Get('get/mgtmt/:idSchool')\n                \n            \n\n            \n                \n                    Defined in src/models/personContact/contactPerson.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        getByIdForRd\n                        \n                    \n                \n            \n            \n                \n                    \n                    getByIdForRd(idSchool: string, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA)@Get('get/rd/:idSchool')\n                \n            \n\n            \n                \n                    Defined in src/models/personContact/contactPerson.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        \nimport { Body, Controller, Get, Param, Patch, Post, Req, UseFilters, UseGuards } from '@nestjs/common';\nimport { ContactPersonService } from './contactPerson.service';\nimport { RolesGuard } from 'src/Auth/roles.guard';\nimport { Request } from 'express';\nimport { Role } from '@prisma/client';\nimport { Roles } from 'src/Auth/decorators/roles.decorator';\nimport { HttpExceptionFilter } from 'src/common/validation/http-exception.filter';\nimport { GetContactPersontDto } from './dto/getContactPerson.dto';\nimport { CreateContactPersontDto } from './dto/createContactPerson.dto';\nimport { EditContactPersontDto } from './dto/editContactPerson.dto';\n\n@UseGuards(RolesGuard)\n@Controller('contactperson')\nexport class ContactPersonController { \n    constructor(private ContactPersonService: ContactPersonService) { }\n    \n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.MGTMT)\n    @Get('get/mgtmt/:idSchool')\n    async getByIdForMgtmt(@Param('idSchool') idSchool: string): Promise {\n        return this.ContactPersonService.getByIdForMgtmt(idSchool);\n    }\n\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.RD, Role.CA)\n    @Get('get/rd/:idSchool')\n    async getByIdForRd(@Param('idSchool') idSchool: string, @Req() req: Request): Promise {\n        const region: string = req['user'].region;\n        return this.ContactPersonService.getByIdForRd(idSchool, region);\n    }\n\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.RD, Role.CA)\n    @Post('create/:idSchool')\n    async create(@Param('idSchool') idSchool: string, @Req() req: Request, @Body() body: CreateContactPersontDto) {\n        const region: string = req['user'].region;\n        return this.ContactPersonService.create(idSchool, region, body);\n    }\n    \n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.RD, Role.CA)\n    @Patch('edit/:schoolId/:idContactPerson')\n    async edit(@Param('idContactPerson') idContactPerson: string,@Param('schoolId') schoolId: string, @Req() req: Request, @Body() body: EditContactPersontDto) {\n        const region: string = req['user'].region;\n        return this.ContactPersonService.edit(idContactPerson,schoolId, region, body);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContactPersonModule.html":{"url":"modules/ContactPersonModule.html","title":"module - ContactPersonModule","body":"\n                   \n\n\n\n\n    Modules\n    ContactPersonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ContactPersonModule\n\n\n\ncluster_ContactPersonModule_imports\n\n\n\ncluster_ContactPersonModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nContactPersonModule\n\nContactPersonModule\n\nContactPersonModule -->\n\nPrismaModule->ContactPersonModule\n\n\n\n\n\nContactPersonService\n\nContactPersonService\n\nContactPersonModule -->\n\nContactPersonService->ContactPersonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/personContact/contactPerson.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ContactPersonService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ContactPersonController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\nhttps://docs.nestjs.com/modules\n*/\n\nimport { Module } from '@nestjs/common';\nimport {ContactPersonController } from './contactPerson.controller';\nimport { ContactPersonService } from './contactPerson.service';\nimport { PrismaModule } from 'prisma/prisma.module';\n\n@Module({\n    imports: [PrismaModule],\n    controllers: [ContactPersonController],\n    providers: [ContactPersonService],\n})\nexport class ContactPersonModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContactPersonService.html":{"url":"injectables/ContactPersonService.html","title":"injectable - ContactPersonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ContactPersonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/personContact/contactPerson.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                edit\n                            \n                            \n                                    Async\n                                getByIdForMgtmt\n                            \n                            \n                                    Async\n                                getByIdForRd\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/models/personContact/contactPerson.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(idSchool: string, region: string, body: CreateContactPersontDto)\n                \n            \n\n\n            \n                \n                    Defined in src/models/personContact/contactPerson.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                CreateContactPersontDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        edit\n                        \n                    \n                \n            \n            \n                \n                    \n                    edit(idContactPerson: string, schoolId: string, region: string, body: EditContactPersontDto)\n                \n            \n\n\n            \n                \n                    Defined in src/models/personContact/contactPerson.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idContactPerson\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schoolId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                EditContactPersontDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getByIdForMgtmt\n                        \n                    \n                \n            \n            \n                \n                    \n                    getByIdForMgtmt(idSchool: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/personContact/contactPerson.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getByIdForRd\n                        \n                    \n                \n            \n            \n                \n                    \n                    getByIdForRd(idSchool: string, region: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/personContact/contactPerson.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from 'prisma/prisma.service';\nimport { CreateContactPersontDto } from './dto/createContactPerson.dto';\nimport { EditContactPersontDto } from './dto/editContactPerson.dto';\n\n@Injectable()\nexport class ContactPersonService {\n    constructor(private prisma: PrismaService) { }\n\n    async getByIdForMgtmt(idSchool: string) {\n        return this.prisma.contactPerson.findMany({\n            where: {\n                schoolId: idSchool\n            },\n            select: {\n                id: true,\n                name: true,\n                surname: true,\n                email: true,\n                phone: true\n            }\n        })\n    }\n\n    async getByIdForRd(idSchool: string, region: string) {\n\n        return this.prisma.contactPerson.findMany({\n           where:{\n                school:{\n                    region:region,\n                    id:idSchool\n                }  \n           },\n              select:{\n                id: true,\n                name: true,\n                surname: true,\n                email: true,\n                phone: true\n              } \n        })\n    }\n\n\n    async create(idSchool: string, region: string, body: CreateContactPersontDto) {\n\n        return this.prisma.contactPerson.create({\n            data: {\n                name: body.name,\n                surname: body.surname,\n                email: body.email,\n                phone: body.phone,\n                school: {\n                    connect: {\n                        unique_school_region_id: {\n                            id: idSchool,\n                            region: region\n                        }\n                    }\n                }\n            }\n\n        })\n\n    }\n\n    async edit(idContactPerson: string, schoolId: string, region: string, body: EditContactPersontDto) {\n\n        const UpdateInSchool = this.prisma.school.update({\n            where: {\n                unique_school_region_id:\n                {\n                    region: region\n                    , id: schoolId\n                }\n            },\n            data: {\n                contactPerson: {\n                    update: {\n                        where: {\n                            id: idContactPerson\n                        },\n                        data: body\n                    }\n\n            }\n        }\n        })\n       \n       return (await UpdateInSchool.contactPerson()).find((x)=>x.id===idContactPerson)\n\n\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContactService.html":{"url":"injectables/ContactService.html","title":"injectable - ContactService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ContactService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/contact/contact.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                edit\n                            \n                            \n                                    Async\n                                getByIdForMgtmt\n                            \n                            \n                                    Async\n                                getByIdForRd\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/models/contact/contact.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(idSchool: string, body: CreateContactDto, region: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/contact/contact.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                CreateContactDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        edit\n                        \n                    \n                \n            \n            \n                \n                    \n                    edit(idSchool: string, body: EditContactDto, region: string, idContact: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/contact/contact.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                EditContactDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    idContact\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getByIdForMgtmt\n                        \n                    \n                \n            \n            \n                \n                    \n                    getByIdForMgtmt(idSchool: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/contact/contact.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getByIdForRd\n                        \n                    \n                \n            \n            \n                \n                    \n                    getByIdForRd(idSchool: string, region: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/contact/contact.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from 'prisma/prisma.service';\nimport { CreateContactDto } from './dto/createContact.dto';\nimport { EditContactDto } from './dto/editContact.dto';\n\n@Injectable()\nexport class ContactService {\n    constructor(private prisma: PrismaService) { }\n\n    async getByIdForMgtmt(idSchool: string) {\n        return this.prisma.contact.findMany({\n            where: { schoolId: idSchool },\n            select: {\n                id: true,\n                dateOfVisit: true,\n                comments: true\n            }\n        })\n\n    }\n\n    async getByIdForRd(idSchool: string, region: string) {\n        return this.prisma.contact.findMany({\n            where: {\n                school: {\n                    region: region,\n                    id: idSchool\n                }\n            },\n            select: {\n                id: true,\n                dateOfVisit: true,\n                comments: true\n            }\n\n        })\n\n    }\n    async create(idSchool: string, body: CreateContactDto, region: string) {\n        return this.prisma.contact.create({\n            data: {\n                dateOfVisit: body.dateOfVisit,\n                comments: body.comments,\n                school: {\n                    connect: {\n                        unique_school_region_id: {\n                            id: idSchool,\n                            region: region\n                        }\n                    }\n                }\n            }\n\n        })\n    }\n    async edit(idSchool: string, body: EditContactDto, region: string, idContact: string) {\n        const UpdateInSchool = this.prisma.school.update({\n            where: {\n                unique_school_region_id:\n                {\n                    region: region\n                    , id: idSchool\n                }\n            },\n            data: {\n                contact: {\n                    update: {\n                        where: {\n                            id: idContact\n                        },\n                        data: body\n                    }\n\n                }\n            }\n        })\n\n        return (await UpdateInSchool.contact()).find((x) => x.id === idContact)\n\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCallUserDto.html":{"url":"classes/CreateCallUserDto.html","title":"class - CreateCallUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCallUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/callUserHistory/dto/CreateCallUser.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                callDate\n                            \n                            \n                                    \n                                    \n                                callNext\n                            \n                            \n                                    \n                                    \n                                comments\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        callDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/callUserHistory/dto/CreateCallUser.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        callNext\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/callUserHistory/dto/CreateCallUser.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsAscii()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/callUserHistory/dto/CreateCallUser.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsAlphanumeric, IsAscii, IsDate, IsNotEmpty, IsOptional, IsString } from \"class-validator\"\n\nexport class CreateCallUserDto {\n\n    @IsDate()\n    @IsNotEmpty()\n    callDate: Date\n\n    @IsDate()\n    @IsOptional()\n    callNext: Date\n\n    @IsOptional()\n    @IsAscii()\n    comments: string\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateContactDto.html":{"url":"classes/CreateContactDto.html","title":"class - CreateContactDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateContactDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/contact/dto/createContact.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                comments\n                            \n                            \n                                    \n                                    \n                                dateOfVisit\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAscii()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/contact/dto/createContact.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        dateOfVisit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/contact/dto/createContact.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsAlpha, IsOptional, IsDate, IsNotEmpty, IsAscii } from \"class-validator\"\n\nexport class CreateContactDto {\n    @IsDate()\n    @IsNotEmpty()\n    dateOfVisit: Date\n\n    @IsAscii()\n    @IsOptional()\n    comments: string\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateContactPersontDto.html":{"url":"classes/CreateContactPersontDto.html","title":"class - CreateContactPersontDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateContactPersontDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/personContact/dto/createContactPerson.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                surname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/personContact/dto/createContactPerson.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/personContact/dto/createContactPerson.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPhoneNumber('PL')@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/personContact/dto/createContactPerson.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/personContact/dto/createContactPerson.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsAlpha, IsEmail, IsNotEmpty, IsOptional, IsPhoneNumber } from \"class-validator\"\n\nexport class CreateContactPersontDto {\n\n    @IsAlpha(\"pl-PL\")\n    @IsNotEmpty()\n    name: string\n\n    @IsAlpha(\"pl-PL\")\n    @IsNotEmpty()\n    surname: string\n\n    @IsEmail()\n    @IsOptional()\n    email: string\n\n    @IsPhoneNumber(\"PL\")\n    @IsOptional()\n    phone: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDirectorDto.html":{"url":"classes/CreateDirectorDto.html","title":"class - CreateDirectorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDirectorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/director/dto/createDirector.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                surname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/director/dto/createDirector.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/director/dto/createDirector.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPhoneNumber('PL')@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/director/dto/createDirector.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/director/dto/createDirector.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsAlpha, IsEmail, IsNotEmpty, IsOptional, IsPhoneNumber } from \"class-validator\"\n\nexport class CreateDirectorDto {\n\n    @IsAlpha(\"pl-PL\")\n    @IsNotEmpty()\n    name: string\n\n    @IsAlpha(\"pl-PL\")\n    @IsNotEmpty()\n    surname: string\n\n    @IsEmail()\n    @IsOptional()\n    email: string\n\n    @IsPhoneNumber(\"PL\")\n    @IsOptional()\n    phone: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateFiszkaDto.html":{"url":"classes/CreateFiszkaDto.html","title":"class - CreateFiszkaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateFiszkaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/fiszka/dto/CreateFiszka.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                classDigit\n                            \n                            \n                                    \n                                    \n                                classLetter\n                            \n                            \n                                    \n                                    \n                                comments\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                surname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        classDigit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Min(0)@Max(8)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/fiszka/dto/CreateFiszka.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        classLetter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/fiszka/dto/CreateFiszka.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAscii()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/fiszka/dto/CreateFiszka.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/fiszka/dto/CreateFiszka.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/fiszka/dto/CreateFiszka.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPhoneNumber('PL')@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/fiszka/dto/CreateFiszka.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/fiszka/dto/CreateFiszka.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsAlpha, IsAlphanumeric, IsAscii, IsEmail, IsNotEmpty, IsNumber, IsOptional, IsPhoneNumber, Max, Min, isNumber } from \"class-validator\"\n\nexport class CreateFiszkaDto {\n    @IsAlpha(\"pl-PL\")\n    @IsNotEmpty()\n    name:string\n\n    @IsAlpha(\"pl-PL\")\n    @IsNotEmpty()\n    surname:string\n\n    @IsAlpha(\"pl-PL\")\n    @IsOptional()\n    classLetter:string\n\n    @IsNumber()\n    @Min(0)\n    @Max(8)\n    @IsOptional()\n    classDigit:number\n\n    @IsAscii()\n    @IsOptional()\n    comments:string\n\n    @IsPhoneNumber('PL')\n    @IsOptional()\n    phone:string\n\n    @IsEmail()\n    @IsNotEmpty()\n    email:string\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateGroupDto.html":{"url":"classes/CreateGroupDto.html","title":"class - CreateGroupDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateGroupDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/group/dto/createGroup.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                codeGroup\n                            \n                            \n                                    \n                                dayOfTheWeek\n                            \n                            \n                                    \n                                hour\n                            \n                            \n                                    \n                                subject\n                            \n                            \n                                    \n                                title\n                            \n                            \n                                    \n                                trial\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        codeGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/group/dto/createGroup.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dayOfTheWeek\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DaysOfTheWeek\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/group/dto/createGroup.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        hour\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/group/dto/createGroup.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        subject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/group/dto/createGroup.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/group/dto/createGroup.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        trial\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/group/dto/createGroup.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DaysOfTheWeek } from \"@prisma/client\"\nimport { IsNotEmpty, IsOptional} from \"class-validator\"\n\nexport class CreateGroupDto {\n\n    @IsNotEmpty()\n    codeGroup: string\n\n    @IsNotEmpty()\n    title:string\n\n    @IsNotEmpty()\n    subject:string\n\n    @IsOptional()\n    dayOfTheWeek:DaysOfTheWeek\n\n    @IsOptional()\n    hour:string\n\n    @IsOptional()\n    trial:boolean\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateInterViewDto.html":{"url":"classes/CreateInterViewDto.html","title":"class - CreateInterViewDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateInterViewDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/interviews/dto/createInterView.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                classNumber\n                            \n                            \n                                    \n                                date\n                            \n                            \n                                    \n                                schoolId\n                            \n                            \n                                    \n                                    \n                                termsNumber\n                            \n                            \n                                    \n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        classNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Min(0)@Max(8)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/interviews/dto/createInterView.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/interviews/dto/createInterView.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        schoolId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/interviews/dto/createInterView.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        termsNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Min(0)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/interviews/dto/createInterView.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :     User[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/interviews/dto/createInterView.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { School, User } from \"@prisma/client\"\nimport { IsNotEmpty, IsEmail, IsEmpty, IsOptional, NotContains, Min, Max } from \"class-validator\"\n\nexport class CreateInterViewDto {\n\n    @Min(0)\n    @Max(8)\n    @IsNotEmpty()\n    classNumber: number\n    \n    @Min(0)\n    @IsNotEmpty()\n    termsNumber: number\n\n    @IsNotEmpty()\n    schoolId: string\n\n    @IsOptional()\n    users: User[]\n\n    @IsOptional()\n    date: Date\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRentalCostDto.html":{"url":"classes/CreateRentalCostDto.html","title":"class - CreateRentalCostDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRentalCostDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/rentalCost/dto/createRentalCost.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                classroomHour\n                            \n                            \n                                    \n                                    \n                                clockHour\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        classroomHour\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Decimal\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDecimal()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/rentalCost/dto/createRentalCost.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        clockHour\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Decimal\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDecimal()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/rentalCost/dto/createRentalCost.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Decimal } from \"@prisma/client/runtime/library\";\nimport { IsDecimal, IsNotEmpty, IsOptional } from \"class-validator\";\n\nexport class CreateRentalCostDto {\n\n    @IsDecimal()\n    @IsOptional()\n    classroomHour:Decimal\n\n    @IsDecimal()\n    @IsOptional()\n    clockHour:Decimal\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSchoolDto.html":{"url":"classes/CreateSchoolDto.html","title":"class - CreateSchoolDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSchoolDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/school/dto/createSchool.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                city\n                            \n                            \n                                    \n                                    \n                                    \n                                comments\n                            \n                            \n                                    \n                                cooperation\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                numberOfClasses\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                postCode\n                            \n                            \n                                    \n                                    \n                                province\n                            \n                            \n                                    \n                                region\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                    \n                                street\n                            \n                            \n                                    \n                                    \n                                    \n                                suiteNumber\n                            \n                            \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/createSchool.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @MinLength(1)@IsAscii()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/createSchool.dto.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        cooperation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/createSchool.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/createSchool.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAscii()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/createSchool.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        numberOfClasses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Min(0)@Max(50)@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/createSchool.dto.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPhoneNumber('PL')@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/createSchool.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        postCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPostalCode('PL')@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/createSchool.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        province\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/createSchool.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        region\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/createSchool.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Status\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/createSchool.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        street\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/createSchool.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        suiteNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Length(1, 5)@IsAlphanumeric('pl-PL')@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/createSchool.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/createSchool.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Status,Type} from \"@prisma/client\"\nimport { IsAlpha, IsAlphanumeric, IsAscii, IsEmail, IsEmpty, IsNotEmpty, IsNumber, IsOptional, IsPhoneNumber, IsPostalCode, Length, Max, Min, MinLength } from \"class-validator\"\n\nexport class CreateSchoolDto {\n    \n    @IsAscii()\n    @IsNotEmpty()\n    name: string\n\n    @IsAlpha(\"pl-PL\")\n    @IsNotEmpty()\n    city: string\n\n    @IsNotEmpty()\n    status:Status\n\n    @IsNotEmpty()\n    type: Type\n\n    @IsNotEmpty()\n    cooperation:boolean\n\n    @IsPhoneNumber(\"PL\")\n    @IsNotEmpty()\n    phone: string\n\n    @IsAlpha(\"pl-PL\")\n    @IsNotEmpty()\n    province: string\n\n    @IsEmail()\n    @IsOptional()\n    email: string\n\n    @IsEmpty()\n    region: string\n\n    @IsAlpha(\"pl-PL\")\n    @IsNotEmpty()\n    street: string\n\n    @Length(1,5)\n    @IsAlphanumeric(\"pl-PL\")\n    @IsNotEmpty()\n    suiteNumber:string\n\n    @IsPostalCode(\"PL\")\n    @IsNotEmpty()\n    postCode: string\n\n    @Min(0)\n    @Max(50)\n    @IsNumber()\n    @IsOptional()\n    numberOfClasses: number\n\n    @MinLength(1)\n    @IsAscii()\n    @IsOptional()\n    comments: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSheduleDaysDto.html":{"url":"classes/CreateSheduleDaysDto.html","title":"class - CreateSheduleDaysDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSheduleDaysDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/sheduleDays/dto/createSheduleDays.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                day\n                            \n                            \n                                    \n                                numberLesson\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        day\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DaysOfTheWeek\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/sheduleDays/dto/createSheduleDays.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        numberLesson\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/sheduleDays/dto/createSheduleDays.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DaysOfTheWeek } from \"@prisma/client\"\nimport { IsNotEmpty } from \"class-validator\"\n\nexport class CreateSheduleDaysDto {\n\n   @IsNotEmpty()\n   day: DaysOfTheWeek\n\n   @IsNotEmpty()\n   numberLesson: number\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSheduleDto.html":{"url":"classes/CreateSheduleDto.html","title":"class - CreateSheduleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSheduleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/shedule/dto/createShedule.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                classDigit\n                            \n                            \n                                    \n                                    \n                                classLetter\n                            \n                            \n                                    \n                                date\n                            \n                            \n                                    \n                                sheduleDays\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        classDigit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Max(8)@Min(0)@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/shedule/dto/createShedule.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        classLetter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/shedule/dto/createShedule.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/shedule/dto/createShedule.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sheduleDays\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SheduleDays\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/shedule/dto/createShedule.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { SheduleDays } from \"@prisma/client\"\nimport { IsOptional, IsNotEmpty, IsAlphanumeric, IsAlpha, IsNumber, Max, Min } from \"class-validator\"\n\nexport class CreateSheduleDto {\n\n    @IsAlpha()\n    @IsOptional()\n    classLetter: string\n\n    @Max(8)\n    @Min(0)\n    @IsNumber()\n    @IsOptional()\n    classDigit: number\n\n    @IsOptional()\n    date: Date\n\n    @IsOptional()\n    sheduleDays:SheduleDays\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserForMGTMTDto.html":{"url":"classes/CreateUserForMGTMTDto.html","title":"class - CreateUserForMGTMTDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserForMGTMTDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/user/dto/createUser.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                active\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                job\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                region\n                            \n                            \n                                    \n                                    \n                                role\n                            \n                            \n                                    \n                                    \n                                surname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/createUser.dto.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/createUser.dto.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        job\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Job\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/createUser.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/createUser.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPhoneNumber('PL')@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/createUser.dto.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        region\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/createUser.dto.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@NotContains('MGTMT')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/createUser.dto.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/createUser.dto.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Job, Role } from \"@prisma/client\"\nimport { IsAlpha, IsEmail, IsEmpty, IsNotEmpty, IsOptional, IsPhoneNumber, Min, MinLength, NotContains } from \"class-validator\"\n\n\nexport class CreateUserForRdDto {\n    @IsAlpha()\n    @MinLength(3)\n    @IsNotEmpty()\n    name: string\n\n    @IsAlpha()\n    @IsNotEmpty()\n    surname: string\n\n    @IsNotEmpty()\n    job: Job\n\n    @IsNotEmpty()\n    @IsEmail()\n    email: string\n\n    @IsPhoneNumber(\"PL\")\n    @IsNotEmpty()\n    phone: string\n\n    // @IsNotEmpty()\n    // password: string\n\n    @IsEmpty()\n    region: string\n\n    @IsOptional()\n    active: boolean\n\n    @IsNotEmpty()\n    @NotContains(\"MGTMT\")\n    @NotContains(\"RD\")\n    role: Role\n}\nexport class CreateUserForMGTMTDto {\n    @IsAlpha(\"pl-PL\")\n    @IsNotEmpty()\n    name: string\n\n    @IsAlpha(\"pl-PL\")\n    @IsNotEmpty()\n    surname: string\n\n    @IsNotEmpty()\n    job: Job\n\n    @IsNotEmpty()\n    @IsEmail()\n    email: string\n\n    @IsPhoneNumber(\"PL\")\n    @IsNotEmpty()\n    phone: string\n\n    @IsNotEmpty()\n    region: string\n\n    @IsOptional()\n    active: boolean\n\n    // @IsNotEmpty()\n    // password: string\n\n    @IsNotEmpty()\n    @NotContains(\"MGTMT\")\n    role: Role\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserForRdDto.html":{"url":"classes/CreateUserForRdDto.html","title":"class - CreateUserForRdDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserForRdDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/user/dto/createUser.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                active\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                job\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                region\n                            \n                            \n                                    \n                                    \n                                    \n                                role\n                            \n                            \n                                    \n                                    \n                                surname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/createUser.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/createUser.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        job\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Job\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/createUser.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha()@MinLength(3)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/createUser.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPhoneNumber('PL')@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/createUser.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        region\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/createUser.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@NotContains('MGTMT')@NotContains('RD')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/createUser.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/createUser.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Job, Role } from \"@prisma/client\"\nimport { IsAlpha, IsEmail, IsEmpty, IsNotEmpty, IsOptional, IsPhoneNumber, Min, MinLength, NotContains } from \"class-validator\"\n\n\nexport class CreateUserForRdDto {\n    @IsAlpha()\n    @MinLength(3)\n    @IsNotEmpty()\n    name: string\n\n    @IsAlpha()\n    @IsNotEmpty()\n    surname: string\n\n    @IsNotEmpty()\n    job: Job\n\n    @IsNotEmpty()\n    @IsEmail()\n    email: string\n\n    @IsPhoneNumber(\"PL\")\n    @IsNotEmpty()\n    phone: string\n\n    // @IsNotEmpty()\n    // password: string\n\n    @IsEmpty()\n    region: string\n\n    @IsOptional()\n    active: boolean\n\n    @IsNotEmpty()\n    @NotContains(\"MGTMT\")\n    @NotContains(\"RD\")\n    role: Role\n}\nexport class CreateUserForMGTMTDto {\n    @IsAlpha(\"pl-PL\")\n    @IsNotEmpty()\n    name: string\n\n    @IsAlpha(\"pl-PL\")\n    @IsNotEmpty()\n    surname: string\n\n    @IsNotEmpty()\n    job: Job\n\n    @IsNotEmpty()\n    @IsEmail()\n    email: string\n\n    @IsPhoneNumber(\"PL\")\n    @IsNotEmpty()\n    phone: string\n\n    @IsNotEmpty()\n    region: string\n\n    @IsOptional()\n    active: boolean\n\n    // @IsNotEmpty()\n    // password: string\n\n    @IsNotEmpty()\n    @NotContains(\"MGTMT\")\n    role: Role\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DecodeDto.html":{"url":"classes/DecodeDto.html","title":"class - DecodeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DecodeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Auth/dto/decode.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                exp\n                            \n                            \n                                iat\n                            \n                            \n                                id\n                            \n                            \n                                region\n                            \n                            \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/Auth/dto/decode.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/Auth/dto/decode.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/Auth/dto/decode.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/Auth/dto/decode.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        region\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/Auth/dto/decode.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Role\n\n                    \n                \n                    \n                        \n                                Defined in src/Auth/dto/decode.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Role } from \"@prisma/client\"\n\nexport class DecodeDto {\n\n    email:string\n\n    role:Role\n\n    region:string\n\n    id:number\n\n    iat:number\n\n    exp:number\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DirectorController.html":{"url":"controllers/DirectorController.html","title":"controller - DirectorController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DirectorController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/director/director.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                director\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                edit\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getByIdForMgtmt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getByIdForRd\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(idSchool: string, req: Request, body: CreateDirectorDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA)@Post('create/:idSchool')\n                \n            \n\n            \n                \n                    Defined in src/models/director/director.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                CreateDirectorDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        edit\n                        \n                    \n                \n            \n            \n                \n                    \n                    edit(idSchool: string, req: Request, body: EditDirectorDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA)@Patch('edit/:idSchool')\n                \n            \n\n            \n                \n                    Defined in src/models/director/director.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                EditDirectorDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        getByIdForMgtmt\n                        \n                    \n                \n            \n            \n                \n                    \n                    getByIdForMgtmt(idSchool: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.MGTMT)@Get('getdirector/mgtmt/:idSchool')\n                \n            \n\n            \n                \n                    Defined in src/models/director/director.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        getByIdForRd\n                        \n                    \n                \n            \n            \n                \n                    \n                    getByIdForRd(idSchool: string, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA)@Get('getdirector/rd/:idSchool')\n                \n            \n\n            \n                \n                    Defined in src/models/director/director.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        \nimport { Body, Controller, Get, Param, Patch, Post, Req, UseFilters, UseGuards } from '@nestjs/common';\nimport { DirectorService } from './director.service';\nimport { Role } from '@prisma/client';\nimport { Request } from 'express';\nimport { Roles } from 'src/Auth/decorators/roles.decorator';\nimport { HttpExceptionFilter } from 'src/common/validation/http-exception.filter';\nimport { EditDirectorDto } from './dto/editDirector.dto';\nimport { CreateDirectorDto } from './dto/createDirector.dto';\nimport { RolesGuard } from 'src/Auth/roles.guard';\nimport { GetDirectorDto } from './dto/getDirector.dto';\n\n@UseGuards(RolesGuard)\n@Controller('director')\nexport class DirectorController {\n    constructor(private directorService: DirectorService) { }\n\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.MGTMT)\n    @Get('getdirector/mgtmt/:idSchool')\n    async getByIdForMgtmt(@Param('idSchool') idSchool: string): Promise {\n        return this.directorService.getByIdForMgtmt(idSchool);\n    }\n\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.RD, Role.CA)\n    @Get('getdirector/rd/:idSchool')\n    async getByIdForRd(@Param('idSchool') idSchool: string, @Req() req: Request): Promise {\n        const region: string = req['user'].region;\n        return this.directorService.getByIdForRd(idSchool, region);\n    }\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.RD, Role.CA)\n    @Post('create/:idSchool')\n    async create(@Param('idSchool') idSchool: string, @Req() req: Request, @Body() body: CreateDirectorDto) {\n        const region: string = req['user'].region;\n        return this.directorService.create(idSchool, region, body);\n    }\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.RD, Role.CA)\n    @Patch('edit/:idSchool')\n    async edit(@Param('idSchool') idSchool: string, @Req() req: Request, @Body() body: EditDirectorDto) {\n        const region: string = req['user'].region;\n        return this.directorService.edit(idSchool, region, body);\n    }\n    //wyświetlenie dyrektora placówki po id placówki dla Mngmt\n    //wyświetlenie dyrektora placówki po id placówki w danym regionie dla Rd\n    // dodanie dyrektora placówki dla Dr w danym regionie\n    // edycja dyrektora placówki dla Dr w danym regionie\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DirectorModule.html":{"url":"modules/DirectorModule.html","title":"module - DirectorModule","body":"\n                   \n\n\n\n\n    Modules\n    DirectorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DirectorModule\n\n\n\ncluster_DirectorModule_imports\n\n\n\ncluster_DirectorModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nDirectorModule\n\nDirectorModule\n\nDirectorModule -->\n\nPrismaModule->DirectorModule\n\n\n\n\n\nDirectorService\n\nDirectorService\n\nDirectorModule -->\n\nDirectorService->DirectorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/director/director.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DirectorService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DirectorController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { PrismaModule } from 'prisma/prisma.module';\nimport { DirectorController } from './director.controller';\nimport { DirectorService } from './director.service';\nimport { Module } from '@nestjs/common';\n\n@Module({\n    imports: [PrismaModule],\n    controllers: [DirectorController],\n    providers: [\n        DirectorService ],\n})\nexport class DirectorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DirectorService.html":{"url":"injectables/DirectorService.html","title":"injectable - DirectorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DirectorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/director/director.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                edit\n                            \n                            \n                                    Async\n                                getByIdForMgtmt\n                            \n                            \n                                    Async\n                                getByIdForRd\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/models/director/director.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(idSchool: string, region: string, body: CreateDirectorDto)\n                \n            \n\n\n            \n                \n                    Defined in src/models/director/director.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                CreateDirectorDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        edit\n                        \n                    \n                \n            \n            \n                \n                    \n                    edit(idSchool: string, region: string, body: EditDirectorDto)\n                \n            \n\n\n            \n                \n                    Defined in src/models/director/director.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                EditDirectorDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getByIdForMgtmt\n                        \n                    \n                \n            \n            \n                \n                    \n                    getByIdForMgtmt(idSchool: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/director/director.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getByIdForRd\n                        \n                    \n                \n            \n            \n                \n                    \n                    getByIdForRd(idSchool: string, region: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/director/director.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from 'prisma/prisma.service';\nimport { CreateDirectorDto } from './dto/createDirector.dto';\nimport { EditDirectorDto } from './dto/editDirector.dto';\n\n@Injectable()\nexport class DirectorService {\n    constructor(private prisma: PrismaService) { }\n\n    async getByIdForMgtmt(idSchool: string) {\n        return this.prisma.director.findUniqueOrThrow({\n            where: {\n                schoolId: idSchool\n            },\n            select: {\n                id: true,\n                name: true,\n                surname: true,\n                email: true,\n                phone: true\n            }\n        })\n    }\n\n    async getByIdForRd(idSchool: string, region: string) {\n\n        const Find = this.prisma.school.findUniqueOrThrow({\n            where: {\n                unique_school_region_id: {\n                    id: idSchool,\n                    region: region\n                }\n            },\n\n            select: {\n                director: {\n                    select: {\n                        id: true,\n                        name: true,\n                        surname: true,\n                        email: true,\n                        phone: true\n                    }\n                }\n            }\n        })\n        return Find.director()\n    }\n\n\n    async create(idSchool: string, region: string, body: CreateDirectorDto) {\n\n        return this.prisma.director.create({\n            data: {\n                name: body.name,\n                surname: body.surname,\n                email: body.email,\n                phone: body.phone,\n                school: {\n                    connect: {\n                        unique_school_region_id: {\n                            id: idSchool,\n                            region: region\n                        }\n                    }\n                }\n            }\n\n        })\n\n    }\n\n    async edit(idSchool: string, region: string, body: EditDirectorDto) {\n\n        const UpdateInSchool = this.prisma.school.update({\n            where: {\n                unique_school_region_id: {\n                    id: idSchool,\n                    region: region\n                }\n            },\n            data: {\n                director: {\n                    update: {\n                        name: body.name,\n                        surname: body.surname,\n                        email: body.email,\n                        phone: body.phone\n                    }\n                }\n            }\n        })\n        return UpdateInSchool.director()\n\n\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditContactDto.html":{"url":"classes/EditContactDto.html","title":"class - EditContactDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditContactDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/contact/dto/editContact.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                comments\n                            \n                            \n                                    \n                                    \n                                dateOfVisit\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAscii()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/contact/dto/editContact.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        dateOfVisit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/contact/dto/editContact.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsAlpha, IsOptional, IsDate, IsNotEmpty, IsAscii } from \"class-validator\"\n\nexport class EditContactDto {\n    @IsDate()\n    @IsOptional()\n    dateOfVisit: Date\n\n    @IsAscii()\n    @IsOptional()\n    comments: string\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditContactPersontDto.html":{"url":"classes/EditContactPersontDto.html","title":"class - EditContactPersontDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditContactPersontDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/personContact/dto/editContactPerson.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                surname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/personContact/dto/editContactPerson.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/personContact/dto/editContactPerson.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPhoneNumber('PL')@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/personContact/dto/editContactPerson.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/personContact/dto/editContactPerson.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsAlpha, IsEmail, IsOptional, IsPhoneNumber } from \"class-validator\"\n\nexport class EditContactPersontDto {\n\n    @IsAlpha(\"pl-PL\")\n    @IsOptional()\n    name: string\n\n    @IsAlpha(\"pl-PL\")\n    @IsOptional()\n    surname: string\n\n    @IsEmail()\n    @IsOptional()\n    email: string\n\n    @IsPhoneNumber(\"PL\")\n    @IsOptional()\n    phone: string\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditDirectorDto.html":{"url":"classes/EditDirectorDto.html","title":"class - EditDirectorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditDirectorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/director/dto/editDirector.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                surname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/director/dto/editDirector.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/director/dto/editDirector.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPhoneNumber('PL')@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/director/dto/editDirector.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/director/dto/editDirector.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsAlpha, IsNotEmpty, IsEmail, IsOptional, IsPhoneNumber } from \"class-validator\"\n\nexport class EditDirectorDto {\n    @IsAlpha(\"pl-PL\")\n    @IsOptional()\n    name: string\n\n    @IsAlpha(\"pl-PL\")\n    @IsOptional()\n    surname: string\n\n    @IsEmail()\n    @IsOptional()\n    email: string\n\n    @IsPhoneNumber(\"PL\")\n    @IsOptional()\n    phone: string\n    \n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditFiszkaDto.html":{"url":"classes/EditFiszkaDto.html","title":"class - EditFiszkaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditFiszkaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/fiszka/dto/EditFiszka.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                classDigit\n                            \n                            \n                                    \n                                    \n                                classLetter\n                            \n                            \n                                    \n                                    \n                                comments\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                resignation\n                            \n                            \n                                    \n                                    \n                                surname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        classDigit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Min(0)@Max(7)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/fiszka/dto/EditFiszka.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        classLetter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/fiszka/dto/EditFiszka.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAscii()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/fiszka/dto/EditFiszka.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/fiszka/dto/EditFiszka.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/fiszka/dto/EditFiszka.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPhoneNumber('PL')@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/fiszka/dto/EditFiszka.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        resignation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/fiszka/dto/EditFiszka.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/fiszka/dto/EditFiszka.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsAlpha, IsAlphanumeric, IsAscii, IsEmail, IsNumber, IsOptional, IsPhoneNumber, Max, Min } from \"class-validator\"\n\nexport class EditFiszkaDto {\n    @IsAlpha(\"pl-PL\")\n    @IsOptional()\n    name: string\n\n    @IsAlpha(\"pl-PL\")\n    @IsOptional()\n    surname: string\n\n    @IsAlpha(\"pl-PL\")\n    @IsOptional()\n    classLetter: string\n    \n    @IsNumber()\n    @Min(0)\n    @Max(7)\n    @IsOptional()\n    classDigit: number\n\n    @IsAscii()\n    @IsOptional()\n    comments: string\n\n    @IsPhoneNumber('PL')\n    @IsOptional()\n    phone: string\n\n    @IsEmail()\n    @IsOptional()\n    email: string\n\n    @IsOptional()\n    resignation: boolean\n\n  \n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditGroupDto.html":{"url":"classes/EditGroupDto.html","title":"class - EditGroupDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditGroupDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/group/dto/editGroup.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                codeGroup\n                            \n                            \n                                    \n                                dayOfTheWeek\n                            \n                            \n                                    \n                                hour\n                            \n                            \n                                    \n                                subject\n                            \n                            \n                                    \n                                title\n                            \n                            \n                                    \n                                trial\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        codeGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/group/dto/editGroup.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dayOfTheWeek\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DaysOfTheWeek\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/group/dto/editGroup.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        hour\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/group/dto/editGroup.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        subject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/group/dto/editGroup.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/group/dto/editGroup.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        trial\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/group/dto/editGroup.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DaysOfTheWeek } from \"@prisma/client\"\nimport { IsNotEmpty, IsOptional} from \"class-validator\"\n\nexport class EditGroupDto {\n\n    @IsOptional()\n    codeGroup: string\n\n    @IsOptional()\n    title:string\n\n    @IsOptional()\n    subject:string\n\n    @IsOptional()\n    dayOfTheWeek:DaysOfTheWeek\n\n    @IsOptional()\n    hour:string\n\n    @IsOptional()\n    trial:boolean\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditInterViewDto.html":{"url":"classes/EditInterViewDto.html","title":"class - EditInterViewDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditInterViewDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/interviews/dto/editInterView.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                classNumber\n                            \n                            \n                                    \n                                date\n                            \n                            \n                                    \n                                    \n                                termsNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        classNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Min(0)@Max(8)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/interviews/dto/editInterView.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/interviews/dto/editInterView.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        termsNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Min(0)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/interviews/dto/editInterView.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, Min, Max, IsNumber } from \"class-validator\"\n\nexport class EditInterViewDto {\n\n    @IsNumber()\n    @Min(0)\n    @Max(8)\n    @IsOptional()\n    classNumber: number\n\n    @Min(0)\n    @IsOptional()\n    termsNumber: number\n\n    @IsOptional()\n    date: Date\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditRentalCostDto.html":{"url":"classes/EditRentalCostDto.html","title":"class - EditRentalCostDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditRentalCostDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/rentalCost/dto/editRentalCost.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                classroomHour\n                            \n                            \n                                    \n                                    \n                                clockHour\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        classroomHour\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Decimal\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDecimal()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/rentalCost/dto/editRentalCost.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        clockHour\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Decimal\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDecimal()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/rentalCost/dto/editRentalCost.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Decimal } from \"@prisma/client/runtime/library\";\nimport { IsDecimal, IsNotEmpty, IsOptional } from \"class-validator\";\n\nexport class EditRentalCostDto {\n\n    @IsDecimal()\n    @IsOptional()\n    classroomHour:Decimal\n\n    @IsDecimal()\n    @IsOptional()\n    clockHour:Decimal\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditSchoolDto.html":{"url":"classes/EditSchoolDto.html","title":"class - EditSchoolDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditSchoolDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/school/dto/editSchool.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                city\n                            \n                            \n                                    \n                                    \n                                    \n                                comments\n                            \n                            \n                                    \n                                cooperation\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                numberOfClasses\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                postCode\n                            \n                            \n                                    \n                                    \n                                province\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                    \n                                street\n                            \n                            \n                                    \n                                    \n                                    \n                                suiteNumber\n                            \n                            \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/editSchool.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @MinLength(1)@IsAscii()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/editSchool.dto.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        cooperation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/editSchool.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/editSchool.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/editSchool.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        numberOfClasses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Min(0)@Max(50)@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/editSchool.dto.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPhoneNumber('PL')@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/editSchool.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        postCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPostalCode('PL')@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/editSchool.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        province\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/editSchool.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Status\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/editSchool.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        street\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/editSchool.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        suiteNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Length(1, 5)@IsAlphanumeric('pl-PL')@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/editSchool.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/editSchool.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Status,Type} from \"@prisma/client\"\nimport { IsAlpha, IsAlphanumeric, IsAscii, IsEmail, IsNumber, IsOptional, IsPhoneNumber, IsPostalCode, Length, Max, Min, MinLength } from \"class-validator\"\n\nexport class EditSchoolDto {\n    \n    @IsAlpha(\"pl-PL\")\n    @IsOptional()\n    name: string\n\n    @IsAlpha(\"pl-PL\")\n    @IsOptional()\n    city: string\n\n    @IsOptional()\n    status:Status\n\n    @IsOptional()\n    type: Type\n\n    @IsOptional()\n    cooperation:boolean\n\n    @IsPhoneNumber(\"PL\")\n    @IsOptional()\n    phone: string\n\n    @IsAlpha(\"pl-PL\")\n    @IsOptional()\n    province: string\n\n    @IsEmail()\n    @IsOptional()\n    email: string\n\n    @IsAlpha(\"pl-PL\")\n    @IsOptional()\n    street: string\n\n    @Length(1,5)\n    @IsAlphanumeric(\"pl-PL\")\n    @IsOptional()\n    suiteNumber:string\n\n    @IsPostalCode(\"PL\")\n    @IsOptional()\n    postCode: string\n\n    @Min(0)\n    @Max(50)\n    @IsNumber()\n    @IsOptional()\n    numberOfClasses: number\n\n    @MinLength(1)\n    @IsAscii()\n    @IsOptional()\n    comments: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditSheduleDaysDto.html":{"url":"classes/EditSheduleDaysDto.html","title":"class - EditSheduleDaysDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditSheduleDaysDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/sheduleDays/dto/editSheduleDays.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                day\n                            \n                            \n                                    \n                                numberLesson\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        day\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DaysOfTheWeek\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/sheduleDays/dto/editSheduleDays.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        numberLesson\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/sheduleDays/dto/editSheduleDays.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DaysOfTheWeek } from \"@prisma/client\"\nimport { IsNotEmpty } from \"class-validator\"\n\nexport class EditSheduleDaysDto {\n\n   @IsNotEmpty()\n   day: DaysOfTheWeek\n\n   @IsNotEmpty()\n   numberLesson: number\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditSheduleDto.html":{"url":"classes/EditSheduleDto.html","title":"class - EditSheduleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditSheduleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/shedule/dto/editShedule.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                classDigit\n                            \n                            \n                                    \n                                    \n                                classLetter\n                            \n                            \n                                    \n                                date\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        classDigit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Max(8)@Min(0)@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/shedule/dto/editShedule.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        classLetter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/shedule/dto/editShedule.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/shedule/dto/editShedule.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsAlpha, IsOptional, Max, Min, IsNumber } from \"class-validator\"\n\nexport class EditSheduleDto {\n\n    @IsAlpha()\n    @IsOptional()\n    classLetter: string\n\n    @Max(8)\n    @Min(0)\n    @IsNumber()\n    @IsOptional()\n    classDigit: number\n\n    @IsOptional()\n    date: Date\n\n \n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditUser.html":{"url":"classes/EditUser.html","title":"class - EditUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/user/dto/editUser.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                email\n                            \n                            \n                                job\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                phone\n                            \n                            \n                                region\n                            \n                            \n                                role\n                            \n                            \n                                surname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/editUser.dto.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/editUser.dto.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        job\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Job\n\n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/editUser.dto.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/editUser.dto.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/editUser.dto.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/editUser.dto.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        region\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/editUser.dto.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Role\n\n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/editUser.dto.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/editUser.dto.ts:73\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Job, Role } from \"@prisma/client\"\nimport { IsAlpha, IsEmail, IsOptional, IsPhoneNumber, NotContains } from \"class-validator\"\n\nexport class EditUserForRdDto {\n    @IsAlpha(\"pl-PL\")\n    @IsOptional()\n    name: string\n\n    @IsAlpha(\"pl-PL\")\n    @IsOptional()\n    surname: string\n\n    @IsOptional()\n    job: Job\n\n    @IsPhoneNumber(\"PL\")\n    @IsOptional()\n    phone: string\n\n    @IsOptional()\n    @IsEmail()\n    email: string\n\n    @IsOptional()\n    password: string\n\n    @IsOptional()\n    active: boolean\n\n    @IsOptional()\n    @NotContains(\"MGTMT\")\n    @NotContains(\"RD\")\n    role: Role\n}\nexport class EditUserForMGTMTDto {\n    @IsAlpha(\"pl-PL\")\n    @IsOptional()\n    name: string\n\n    @IsAlpha(\"pl-PL\")\n    @IsOptional()\n    surname: string\n\n    @IsOptional()\n    job: Job\n\n    @IsPhoneNumber(\"PL\")\n    @IsOptional()\n    phone: string\n\n    @IsOptional()\n    @IsEmail()\n    email: string\n\n    @IsOptional()\n    region: string\n\n    @IsOptional()\n    active: boolean\n\n    @IsOptional()\n    password: string\n\n    @IsOptional()\n    @NotContains(\"MGTMT\")\n    role: Role\n}\nexport class EditUser {\n\n\n    name: string\n\n    surname: string\n\n    job: Job\n\n    email: string\n\n    phone: string\n    \n    region: string\n    \n    active: boolean\n\n    password: string\n\n    role: Role\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditUserForMGTMTDto.html":{"url":"classes/EditUserForMGTMTDto.html","title":"class - EditUserForMGTMTDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditUserForMGTMTDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/user/dto/editUser.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                active\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                job\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                region\n                            \n                            \n                                    \n                                    \n                                role\n                            \n                            \n                                    \n                                    \n                                surname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/editUser.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/editUser.dto.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        job\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Job\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/editUser.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/editUser.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/editUser.dto.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPhoneNumber('PL')@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/editUser.dto.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        region\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/editUser.dto.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@NotContains('MGTMT')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/editUser.dto.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/editUser.dto.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Job, Role } from \"@prisma/client\"\nimport { IsAlpha, IsEmail, IsOptional, IsPhoneNumber, NotContains } from \"class-validator\"\n\nexport class EditUserForRdDto {\n    @IsAlpha(\"pl-PL\")\n    @IsOptional()\n    name: string\n\n    @IsAlpha(\"pl-PL\")\n    @IsOptional()\n    surname: string\n\n    @IsOptional()\n    job: Job\n\n    @IsPhoneNumber(\"PL\")\n    @IsOptional()\n    phone: string\n\n    @IsOptional()\n    @IsEmail()\n    email: string\n\n    @IsOptional()\n    password: string\n\n    @IsOptional()\n    active: boolean\n\n    @IsOptional()\n    @NotContains(\"MGTMT\")\n    @NotContains(\"RD\")\n    role: Role\n}\nexport class EditUserForMGTMTDto {\n    @IsAlpha(\"pl-PL\")\n    @IsOptional()\n    name: string\n\n    @IsAlpha(\"pl-PL\")\n    @IsOptional()\n    surname: string\n\n    @IsOptional()\n    job: Job\n\n    @IsPhoneNumber(\"PL\")\n    @IsOptional()\n    phone: string\n\n    @IsOptional()\n    @IsEmail()\n    email: string\n\n    @IsOptional()\n    region: string\n\n    @IsOptional()\n    active: boolean\n\n    @IsOptional()\n    password: string\n\n    @IsOptional()\n    @NotContains(\"MGTMT\")\n    role: Role\n}\nexport class EditUser {\n\n\n    name: string\n\n    surname: string\n\n    job: Job\n\n    email: string\n\n    phone: string\n    \n    region: string\n    \n    active: boolean\n\n    password: string\n\n    role: Role\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditUserForRdDto.html":{"url":"classes/EditUserForRdDto.html","title":"class - EditUserForRdDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditUserForRdDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/user/dto/editUser.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                active\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                job\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                    \n                                role\n                            \n                            \n                                    \n                                    \n                                surname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/editUser.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/editUser.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        job\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Job\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/editUser.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/editUser.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/editUser.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPhoneNumber('PL')@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/editUser.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@NotContains('MGTMT')@NotContains('RD')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/editUser.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/editUser.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Job, Role } from \"@prisma/client\"\nimport { IsAlpha, IsEmail, IsOptional, IsPhoneNumber, NotContains } from \"class-validator\"\n\nexport class EditUserForRdDto {\n    @IsAlpha(\"pl-PL\")\n    @IsOptional()\n    name: string\n\n    @IsAlpha(\"pl-PL\")\n    @IsOptional()\n    surname: string\n\n    @IsOptional()\n    job: Job\n\n    @IsPhoneNumber(\"PL\")\n    @IsOptional()\n    phone: string\n\n    @IsOptional()\n    @IsEmail()\n    email: string\n\n    @IsOptional()\n    password: string\n\n    @IsOptional()\n    active: boolean\n\n    @IsOptional()\n    @NotContains(\"MGTMT\")\n    @NotContains(\"RD\")\n    role: Role\n}\nexport class EditUserForMGTMTDto {\n    @IsAlpha(\"pl-PL\")\n    @IsOptional()\n    name: string\n\n    @IsAlpha(\"pl-PL\")\n    @IsOptional()\n    surname: string\n\n    @IsOptional()\n    job: Job\n\n    @IsPhoneNumber(\"PL\")\n    @IsOptional()\n    phone: string\n\n    @IsOptional()\n    @IsEmail()\n    email: string\n\n    @IsOptional()\n    region: string\n\n    @IsOptional()\n    active: boolean\n\n    @IsOptional()\n    password: string\n\n    @IsOptional()\n    @NotContains(\"MGTMT\")\n    role: Role\n}\nexport class EditUser {\n\n\n    name: string\n\n    surname: string\n\n    job: Job\n\n    email: string\n\n    phone: string\n    \n    region: string\n    \n    active: boolean\n\n    password: string\n\n    role: Role\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FiszkaController.html":{"url":"controllers/FiszkaController.html","title":"controller - FiszkaController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FiszkaController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/fiszka/fiszka.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                fiszka\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                addFiszki\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                addGroup\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                editFiszkaRd\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                editFiszkaUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findAllByInterview\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findAllByMe\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findAllByUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findAllForUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        addFiszki\n                        \n                    \n                \n            \n            \n                \n                    \n                    addFiszki(idInterview: string, req: Request, body: CreateFiszkaDto[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.USER, Role.MGTMT, Role.CA, Role.RD)@Post('addfiszki/:idInterview')\n                \n            \n\n            \n                \n                    Defined in src/models/fiszka/fiszka.controller.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idInterview\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                CreateFiszkaDto[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        addGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    addGroup(IdGroup: string, body: AddgroupDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.CA, Role.RD)@Patch('addgroup/:idgroup')\n                \n            \n\n            \n                \n                    Defined in src/models/fiszka/fiszka.controller.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    IdGroup\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                AddgroupDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        editFiszkaRd\n                        \n                    \n                \n            \n            \n                \n                    \n                    editFiszkaRd(idFiszka: string, req: Request, body: EditFiszkaDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.MGTMT, Role.CA, Role.RD)@Patch('editfiszka/:idFiszka')\n                \n            \n\n            \n                \n                    Defined in src/models/fiszka/fiszka.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idFiszka\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                EditFiszkaDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        editFiszkaUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    editFiszkaUser(idFiszka: string, idInterview: string, req: Request, body: EditFiszkaDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.USER)@Patch('editfiszka/:idFiszka/:idInterview')\n                \n            \n\n            \n                \n                    Defined in src/models/fiszka/fiszka.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idFiszka\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    idInterview\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                EditFiszkaDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        findAllByInterview\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByInterview(idInterview: string, UserID: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.MGTMT, Role.RD, Role.CA)@Get('findall/:idInterview/:idEmployee')\n                \n            \n\n            \n                \n                    Defined in src/models/fiszka/fiszka.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idInterview\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    UserID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        findAllByMe\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByMe(idInterview: string, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.USER)@Get('findallbyme/:idInterview')\n                \n            \n\n            \n                \n                    Defined in src/models/fiszka/fiszka.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idInterview\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        findAllByUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByUser(idInterview: string, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA, Role.USER)@Get('findall/:idInterview')\n                \n            \n\n            \n                \n                    Defined in src/models/fiszka/fiszka.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idInterview\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        findAllForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForUser(UserID: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.MGTMT, Role.RD, Role.CA)@Get('findallforuser/:idEmployee')\n                \n            \n\n            \n                \n                    Defined in src/models/fiszka/fiszka.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    UserID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        \nimport { Body, Controller, Get, Param, Patch, Post, Req, UseFilters, UseGuards } from '@nestjs/common';\nimport { RolesGuard } from 'src/Auth/roles.guard';\nimport { FiszkaService } from './fiszka.service';\nimport { Request } from 'express';\nimport { Role } from '@prisma/client';\nimport { Roles } from 'src/Auth/decorators/roles.decorator';\nimport { HttpExceptionFilter } from 'src/common/validation/http-exception.filter';\nimport { GetFiszkaDto } from './dto/GetFiszka.dto';\nimport { EditFiszkaDto } from './dto/EditFiszka.dto';\nimport { CreateFiszkaDto } from './dto/CreateFiszka.dto';\nimport { AddgroupDto } from './dto/addGroup.dto';\n\n\n@Controller('fiszka')\n@UseGuards(RolesGuard)\nexport class FiszkaController {\n  constructor(private fiszkaService: FiszkaService) { }\n\n  @UseFilters(new HttpExceptionFilter())\n  @Roles(Role.MGTMT, Role.RD, Role.CA)\n  @Get('findall/:idInterview/:idEmployee')\n  async findAllByInterview(@Param('idInterview') idInterview: string, @Param('idEmployee') UserID: string): Promise {\n    return this.fiszkaService.findAllByInterview(idInterview, UserID)\n  }\n\n  @UseFilters(new HttpExceptionFilter())\n  @Roles(Role.RD, Role.CA, Role.USER)\n  @Get('findall/:idInterview')\n  async findAllByUser(@Param('idInterview') idInterview: string, @Req() req: Request): Promise {\n    const UserID: string = req['user'].id;\n    return this.fiszkaService.findAllByUser(idInterview, UserID)\n  }\n\n  @UseFilters(new HttpExceptionFilter())\n  @Roles(Role.MGTMT, Role.RD, Role.CA)\n  @Get('findallforuser/:idEmployee')\n  async findAllForUser(@Param('idEmployee') UserID: string): Promise {\n    return this.fiszkaService.findAllForUser(UserID)\n  }\n  @UseFilters(new HttpExceptionFilter())\n  @Roles(Role.USER)\n  @Get('findallbyme/:idInterview')\n  async findAllByMe(@Param('idInterview') idInterview: string, @Req() req: Request): Promise {\n    const UserID: string = req['user'].id;\n    return this.fiszkaService.findAllByMe(idInterview, UserID)\n  }\n  @UseFilters(new HttpExceptionFilter())\n  @Roles(Role.MGTMT, Role.CA, Role.RD)\n  @Patch('editfiszka/:idFiszka')\n  async editFiszkaRd(@Param('idFiszka') idFiszka: string, @Req() req: Request, @Body() body: EditFiszkaDto) {\n    const UserID: string = req['user'].id;\n    return this.fiszkaService.editFiszkaRd(idFiszka, UserID, body)\n  }\n  @UseFilters(new HttpExceptionFilter())\n  @Roles(Role.USER)\n  @Patch('editfiszka/:idFiszka/:idInterview')\n  async editFiszkaUser(@Param('idFiszka') idFiszka: string, @Param('idInterview') idInterview: string, @Req() req: Request, @Body() body: EditFiszkaDto) {\n    const UserID: string = req['user'].id;\n    return this.fiszkaService.editFiszkaUser(idFiszka, UserID, idInterview, body)\n  }\n  @UseFilters(new HttpExceptionFilter())\n  @Roles(Role.USER, Role.MGTMT, Role.CA, Role.RD)\n  @Post('addfiszki/:idInterview')\n  async addFiszki(@Param('idInterview') idInterview: string, @Req() req: Request, @Body() body: CreateFiszkaDto[]) {\n    const UserID: string = req['user'].id;\n    return this.fiszkaService.addFiszki(idInterview, UserID, body)\n  }\n\n  //do testu\n  @UseFilters(new HttpExceptionFilter())\n  @Roles(Role.CA, Role.RD)\n  @Patch('addgroup/:idgroup')\n  async addGroup(@Param('idgroup') IdGroup: string, @Body() body: AddgroupDto) {\n    return this.fiszkaService.addGroup(IdGroup, body)\n  }\n  // dodanie fiszki do danej grupy\n\n  //#TODO: Tworzenie fiszek PR, AC, DR  |id wywiadówki \n  //#TODO: Edycja fiszki PR, AC, DR | Id pracownika i id wywiadówki \n  //#TODO: Lista fiszek z danej wywiadówki DR ,AC,MGTN | Id wywiadówki i id pracownika\n  //#TODO: Lista fiszek z danej wywiadówki per użytkopwnik PR | Id wywiadówki\n  //#TODO: Lista fiszek danego pracownika  AC, DR | Id pracownika \n  //#TODO: Lista swoich fiszek  PR | Id wywiadówki\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FiszkaModule.html":{"url":"modules/FiszkaModule.html","title":"module - FiszkaModule","body":"\n                   \n\n\n\n\n    Modules\n    FiszkaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FiszkaModule\n\n\n\ncluster_FiszkaModule_providers\n\n\n\n\nFiszkaService\n\nFiszkaService\n\n\n\nFiszkaModule\n\nFiszkaModule\n\nFiszkaModule -->\n\nFiszkaService->FiszkaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/fiszka/fiszka.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FiszkaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FiszkaController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        \nimport { FiszkaController } from './fiszka.controller';\nimport { FiszkaService } from './fiszka.service';\n\nimport { Module } from '@nestjs/common';\n\n@Module({\n    imports: [],\n    controllers: [FiszkaController],\n    providers: [\n        FiszkaService, ],\n})\nexport class FiszkaModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FiszkaService.html":{"url":"injectables/FiszkaService.html","title":"injectable - FiszkaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FiszkaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/fiszka/fiszka.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addFiszki\n                            \n                            \n                                    Async\n                                addGroup\n                            \n                            \n                                    Async\n                                editFiszkaRd\n                            \n                            \n                                    Async\n                                editFiszkaUser\n                            \n                            \n                                    Async\n                                findAllByInterview\n                            \n                            \n                                    Async\n                                findAllByMe\n                            \n                            \n                                    Async\n                                findAllByUser\n                            \n                            \n                                    Async\n                                findAllForUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/models/fiszka/fiszka.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addFiszki\n                        \n                    \n                \n            \n            \n                \n                    \n                    addFiszki(idInterview: string, userId: string, body: CreateFiszkaDto[])\n                \n            \n\n\n            \n                \n                    Defined in src/models/fiszka/fiszka.service.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idInterview\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                CreateFiszkaDto[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    addGroup(IdGroup: string, body: AddgroupDto)\n                \n            \n\n\n            \n                \n                    Defined in src/models/fiszka/fiszka.service.ts:172\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    IdGroup\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                AddgroupDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        editFiszkaRd\n                        \n                    \n                \n            \n            \n                \n                    \n                    editFiszkaRd(idFiszka: string, UserID: string, body: EditFiszkaDto)\n                \n            \n\n\n            \n                \n                    Defined in src/models/fiszka/fiszka.service.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idFiszka\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    UserID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                EditFiszkaDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        editFiszkaUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    editFiszkaUser(idFiszka: string, UserID: string, idInterview: string, body: EditFiszkaDto)\n                \n            \n\n\n            \n                \n                    Defined in src/models/fiszka/fiszka.service.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idFiszka\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    UserID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    idInterview\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                EditFiszkaDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByInterview\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByInterview(idInterview: string, UserID: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/fiszka/fiszka.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idInterview\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    UserID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByMe\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByMe(idInterview: string, UserID: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/fiszka/fiszka.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idInterview\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    UserID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByUser(idInterview: string, UserID: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/fiszka/fiszka.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idInterview\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    UserID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForUser(idEmployee: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/fiszka/fiszka.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idEmployee\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable } from '@nestjs/common';\nimport { PrismaService } from 'prisma/prisma.service';\nimport { EditFiszkaDto } from './dto/EditFiszka.dto';\nimport { CreateFiszkaDto } from './dto/CreateFiszka.dto';\nimport { AddgroupDto } from './dto/addGroup.dto';\n\n@Injectable()\nexport class FiszkaService {\n    constructor(private prisma: PrismaService) { }\n\n    async findAllByInterview(idInterview: string, UserID: string) {\n        const fiszka = this.prisma.fiszka.findMany({\n            where: {\n                interviews: {\n                    id: idInterview\n                },\n                user: {\n                    id: UserID\n                }\n            },\n            select: {\n                name: true,\n                surname: true,\n                classLetter: true,\n                classDigit: true,\n                comments: true,\n                phone: true,\n                email: true,\n                resignation: true,\n                phoneCalls: true,\n                group: true\n            }\n        });\n        return fiszka;\n    }\n    async findAllByUser(idInterview: string, UserID: string) {\n        return this.prisma.fiszka.findMany({\n            where: {\n                interviews: {\n                    id: idInterview\n                },\n                user: {\n                    id: UserID\n                }\n            },\n            select: {\n                name: true,\n                surname: true,\n                classLetter: true,\n                classDigit: true,\n                comments: true,\n                phone: true,\n                email: true,\n                resignation: true,\n                phoneCalls: true,\n                group: true\n            }\n        });\n\n    }\n    async findAllForUser(idEmployee: string) {\n        return this.prisma.fiszka.findMany({\n            where: {\n                user: {\n                    id: idEmployee\n                }\n            },\n            select: {\n                name: true,\n                surname: true,\n                classLetter: true,\n                classDigit: true,\n                comments: true,\n                phone: true,\n                email: true,\n                resignation: true,\n                phoneCalls: true,\n                group: true\n            }\n        });\n    }\n    async findAllByMe(idInterview: string, UserID: string) {\n        return this.prisma.fiszka.findMany({\n            where: {\n                interviews: {\n                    id: idInterview\n                },\n                user: {\n                    id: UserID\n                }\n            },\n            select: {\n                name: true,\n                surname: true,\n                classLetter: true,\n                classDigit: true,\n                comments: true,\n                phone: true,\n                email: true,\n                resignation: true,\n                phoneCalls: true,\n                group: true\n            }\n        })\n    }\n    async editFiszkaRd(idFiszka: string, UserID: string, body: EditFiszkaDto) {\n        const fiszka = await this.prisma.fiszka.findUniqueOrThrow({\n            where: {\n                unique_fiszka_user_id: {\n                    id: idFiszka,\n                    userId: UserID\n                }\n            },\n        });\n        if (!fiszka) {\n            return new ForbiddenException(`This fiszka its not yours!`)\n        }\n        return this.prisma.fiszka.update({\n            where: {\n                id: idFiszka\n            },\n            data: body\n        })\n    }\n    async editFiszkaUser(idFiszka: string, UserID: string, idInterview: string, body: EditFiszkaDto) {\n        const fiszka = await this.prisma.fiszka.findUniqueOrThrow({\n            where: {\n                unique_fiszka_user_id: {\n                    id: idFiszka,\n                    userId: UserID\n                },\n                interviewsId: idInterview\n            },\n        });\n\n        if (!fiszka) {\n            return new ForbiddenException(`This fiszka its not yours!`)\n        }\n        return this.prisma.fiszka.update({\n            where: {\n                id: idFiszka\n            },\n            data: body\n        })\n    }\n    async addFiszki(idInterview: string, userId: string, body: CreateFiszkaDto[]) {\n        const data = body.map((fiszka) => ({\n            name: fiszka.name,\n            surname: fiszka.surname,\n            classLetter: fiszka.classLetter,\n            classDigit: fiszka.classDigit,\n            comments: fiszka.comments,\n            phone: fiszka.phone,\n            email: fiszka.email,\n            interviews: {\n                connect: { id: idInterview },\n            },\n            interviewsId: idInterview,\n            user: {\n                connect: { id: userId },\n            },\n            userId: userId\n        }));\n        const createdFiszkas = await this.prisma.fiszka.createMany({\n            data: data,\n            skipDuplicates: true,\n        });\n        return createdFiszkas;\n    }\n\n    async addGroup(IdGroup: string, body: AddgroupDto) {\n        const updatedGroup = await this.prisma.group.update({\n            where: {\n                id: IdGroup\n            },\n            data: {\n                fiszki: {\n                    connect: {\n                        id: body.idUser\n                    }\n                }\n            },\n            include: {\n                fiszki: true\n            }\n        });\n\n        return updatedGroup;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetCallUserHistoryDto.html":{"url":"classes/GetCallUserHistoryDto.html","title":"class - GetCallUserHistoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetCallUserHistoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/callUserHistory/dto/GetCallUserHistory.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                callDate\n                            \n                            \n                                    \n                                    \n                                callNext\n                            \n                            \n                                    \n                                    \n                                comments\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        callDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/callUserHistory/dto/GetCallUserHistory.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        callNext\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/callUserHistory/dto/GetCallUserHistory.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAscii()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/callUserHistory/dto/GetCallUserHistory.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsAscii, IsDate, IsNotEmpty, IsOptional } from \"class-validator\"\n\nexport class GetCallUserHistoryDto {\n\n    @IsDate()\n    @IsNotEmpty()\n    callDate: Date\n\n    @IsDate()\n    @IsOptional()\n    callNext: Date\n\n    @IsAscii()\n    @IsOptional()\n    comments: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetContactDto.html":{"url":"classes/GetContactDto.html","title":"class - GetContactDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetContactDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/contact/dto/getContact.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                comments\n                            \n                            \n                                    \n                                    \n                                dateOfVisit\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAscii()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/contact/dto/getContact.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        dateOfVisit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/contact/dto/getContact.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsAlpha, IsOptional, IsDate, IsNotEmpty, IsAscii } from \"class-validator\"\n\nexport class GetContactDto {\n    @IsDate()\n    @IsNotEmpty()\n    dateOfVisit: Date\n\n    @IsAscii()\n    @IsOptional()\n    comments: string\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetContactPersontDto.html":{"url":"classes/GetContactPersontDto.html","title":"class - GetContactPersontDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetContactPersontDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/personContact/dto/getContactPerson.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                phone\n                            \n                            \n                                    \n                                surname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/personContact/dto/getContactPerson.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/personContact/dto/getContactPerson.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/personContact/dto/getContactPerson.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/personContact/dto/getContactPerson.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/personContact/dto/getContactPerson.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsOptional } from \"class-validator\"\n\nexport class GetContactPersontDto {\n\n    @IsNotEmpty()\n    id:string\n\n    @IsNotEmpty()\n    name: string\n\n    @IsNotEmpty()\n    surname: string\n\n    @IsOptional()\n    email: string\n\n    @IsOptional()\n    phone: string\n\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetDirectorDto.html":{"url":"classes/GetDirectorDto.html","title":"class - GetDirectorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetDirectorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/director/dto/getDirector.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                phone\n                            \n                            \n                                    \n                                surname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/director/dto/getDirector.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/director/dto/getDirector.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/director/dto/getDirector.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/director/dto/getDirector.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/director/dto/getDirector.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsOptional } from \"class-validator\"\n\nexport class GetDirectorDto {\n\n    @IsNotEmpty()\n    id:string\n\n    @IsNotEmpty()\n    name: string\n\n    @IsNotEmpty()\n    surname: string\n\n    @IsOptional()\n    email: string\n\n    @IsOptional()\n    phone: string\n\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetFiszkaDto.html":{"url":"classes/GetFiszkaDto.html","title":"class - GetFiszkaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetFiszkaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/fiszka/dto/GetFiszka.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                classDigit\n                            \n                            \n                                    \n                                    \n                                classLetter\n                            \n                            \n                                    \n                                comments\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                group\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                phoneCalls\n                            \n                            \n                                    \n                                resignation\n                            \n                            \n                                    \n                                    \n                                surname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        classDigit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Min(0)@Max(8)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/fiszka/dto/GetFiszka.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        classLetter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/fiszka/dto/GetFiszka.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/fiszka/dto/GetFiszka.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/fiszka/dto/GetFiszka.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        group\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Group\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/fiszka/dto/GetFiszka.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/fiszka/dto/GetFiszka.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPhoneNumber('PL')@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/fiszka/dto/GetFiszka.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phoneCalls\n                        \n                    \n                \n            \n                \n                    \n                        Type :     PhoneCalls[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/fiszka/dto/GetFiszka.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        resignation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/fiszka/dto/GetFiszka.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/fiszka/dto/GetFiszka.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Group, PhoneCalls } from \"@prisma/client\"\nimport { IsAlpha, IsEmail, IsNotEmpty, IsNumber, IsOptional, IsPhoneNumber, Max, Min } from \"class-validator\"\n\nexport class GetFiszkaDto {\n    @IsAlpha(\"pl-PL\")\n    @IsNotEmpty()\n    name: String\n\n    @IsAlpha(\"pl-PL\")\n    @IsNotEmpty()\n    surname: string\n\n    @IsAlpha(\"pl-PL\")\n    @IsOptional()\n    classLetter: string\n    \n    @IsNumber()\n    @Min(0)\n    @Max(8)\n    @IsOptional()\n    classDigit: number\n\n    @IsOptional()\n    comments: string\n\n    @IsPhoneNumber('PL')\n    @IsNotEmpty()\n    phone: string\n\n    @IsEmail()\n    @IsOptional()\n    email: string\n\n    @IsNotEmpty()\n    resignation: boolean\n\n    @IsOptional()\n    phoneCalls: PhoneCalls[]\n\n    @IsOptional()\n    group:Group\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetGroupDto.html":{"url":"classes/GetGroupDto.html","title":"class - GetGroupDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetGroupDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/group/dto/getGroup.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                codeGroup\n                            \n                            \n                                    \n                                dayOfTheWeek\n                            \n                            \n                                    \n                                fiszki\n                            \n                            \n                                    \n                                hour\n                            \n                            \n                                    \n                                subject\n                            \n                            \n                                    \n                                title\n                            \n                            \n                                    \n                                trial\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        codeGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/group/dto/getGroup.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dayOfTheWeek\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DaysOfTheWeek\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/group/dto/getGroup.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fiszki\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Fiszka[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/group/dto/getGroup.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        hour\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/group/dto/getGroup.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        subject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/group/dto/getGroup.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/group/dto/getGroup.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        trial\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/group/dto/getGroup.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DaysOfTheWeek, Fiszka } from \"@prisma/client\"\nimport { IsNotEmpty, IsOptional} from \"class-validator\"\n\nexport class GetGroupDto {\n\n    @IsNotEmpty()\n    codeGroup: string\n\n    @IsNotEmpty()\n    title:string\n\n    @IsNotEmpty()\n    subject:string\n\n    @IsOptional()\n    dayOfTheWeek:DaysOfTheWeek\n\n    @IsOptional()\n    hour:string\n\n    @IsNotEmpty()\n    trial:boolean\n\n    @IsOptional()\n    fiszki:Fiszka[]\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetRentalCostDto.html":{"url":"classes/GetRentalCostDto.html","title":"class - GetRentalCostDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetRentalCostDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/rentalCost/dto/getRentalCost.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                classroomHour\n                            \n                            \n                                    \n                                    \n                                clockHour\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        classroomHour\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Decimal\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDecimal()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/rentalCost/dto/getRentalCost.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        clockHour\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Decimal\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDecimal()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/rentalCost/dto/getRentalCost.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Decimal } from \"@prisma/client/runtime/library\";\nimport { IsDecimal, IsNotEmpty, IsOptional } from \"class-validator\";\n\nexport class GetRentalCostDto {\n\n    @IsDecimal()\n    @IsOptional()\n    classroomHour:Decimal\n\n    @IsDecimal()\n    @IsOptional()\n    clockHour:Decimal\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetSchoolDto.html":{"url":"classes/GetSchoolDto.html","title":"class - GetSchoolDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetSchoolDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/school/dto/getSchool.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                city\n                            \n                            \n                                    \n                                comments\n                            \n                            \n                                    \n                                cooperation\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                numberOfClasses\n                            \n                            \n                                    \n                                phone\n                            \n                            \n                                    \n                                postCode\n                            \n                            \n                                    \n                                province\n                            \n                            \n                                    \n                                region\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                street\n                            \n                            \n                                    \n                                suiteNumber\n                            \n                            \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/getSchool.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/getSchool.dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        cooperation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/getSchool.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/getSchool.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/getSchool.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/getSchool.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        numberOfClasses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/getSchool.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/getSchool.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        postCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/getSchool.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        province\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/getSchool.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        region\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/getSchool.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Status\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/getSchool.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        street\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/getSchool.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        suiteNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/getSchool.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/getSchool.dto.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Status, Type } from \"@prisma/client\"\nimport { IsNotEmpty, IsOptional } from \"class-validator\"\n\nexport class GetSchoolDto {\n    @IsNotEmpty()\n    id: string\n\n    @IsNotEmpty()\n    name: string\n\n    @IsNotEmpty()\n    region: string\n\n    @IsNotEmpty()\n    status: Status\n\n    @IsNotEmpty()\n    city: string\n\n    @IsNotEmpty()\n    type: Type\n\n    @IsNotEmpty()\n    cooperation: boolean\n\n    @IsNotEmpty()\n    phone: string\n\n    @IsNotEmpty()\n    province: string\n\n    @IsOptional()\n    email: string\n\n    @IsNotEmpty()\n    street: string\n\n    @IsNotEmpty()\n    suiteNumber: string\n\n    @IsNotEmpty()\n    postCode: string\n\n    @IsOptional()\n    numberOfClasses: number\n\n    @IsOptional()\n    comments: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetSheduleDto.html":{"url":"classes/GetSheduleDto.html","title":"class - GetSheduleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetSheduleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/shedule/dto/getShedule.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                classDigit\n                            \n                            \n                                    \n                                classLetter\n                            \n                            \n                                    \n                                date\n                            \n                            \n                                    \n                                sheduleDays\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        classDigit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/shedule/dto/getShedule.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        classLetter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/shedule/dto/getShedule.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/shedule/dto/getShedule.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        sheduleDays\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SheduleDays\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/shedule/dto/getShedule.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { SheduleDays } from \"@prisma/client\"\nimport { IsNotEmpty, IsOptional } from \"class-validator\"\n\nexport class GetSheduleDto {\n\n    @IsOptional()\n    classLetter: string\n\n    @IsOptional()\n    classDigit: string\n\n    @IsNotEmpty()\n    date: Date\n\n    @IsOptional()\n    sheduleDays:SheduleDays\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserDto.html":{"url":"classes/GetUserDto.html","title":"class - GetUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/user/dto/GetUser.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                active\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                job\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                region\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                    \n                                surname\n                            \n                            \n                                    \n                                    \n                                totalFiszki\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/GetUser.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/GetUser.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        job\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Job\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/GetUser.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/GetUser.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        region\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/GetUser.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/GetUser.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/GetUser.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        totalFiszki\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Min(0)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/GetUser.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Job, Role } from \"@prisma/client\"\nimport { IsNotEmpty, IsEmail, Min, IsAlpha } from \"class-validator\"\n\nexport class GetUserDto {\n    \n    @IsAlpha(\"pl-PL\")\n    @IsNotEmpty()\n    name: string\n    \n    @IsAlpha(\"pl-PL\")\n    @IsNotEmpty()\n    surname: string\n\n    @IsNotEmpty()\n    job: Job\n\n    @IsNotEmpty()\n    @IsEmail()\n    email: string\n\n    @Min(0)\n    @IsNotEmpty()\n    totalFiszki: number\n\n    @IsNotEmpty()\n    region: string\n\n\n    @IsNotEmpty()\n    active: boolean\n\n    @IsNotEmpty()\n    role: Role\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GroupController.html":{"url":"controllers/GroupController.html","title":"controller - GroupController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GroupController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/group/group.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                group\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                edit\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getByIdForMgtmt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getByIdForRD\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(req: Request, IdSchool: string, body: CreateGroupDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(Role.CA, Role.RD)@UseFilters(new HttpExceptionFilter())@Post('create/:idschool')\n                \n            \n\n            \n                \n                    Defined in src/models/group/group.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    IdSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                CreateGroupDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        edit\n                        \n                    \n                \n            \n            \n                \n                    \n                    edit(req: Request, IdSchool: string, IdGroup: string, body: EditGroupDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(Role.CA, Role.RD)@UseFilters(new HttpExceptionFilter())@Patch('edit/:idschool/:idgroup')\n                \n            \n\n            \n                \n                    Defined in src/models/group/group.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    IdSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    IdGroup\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                EditGroupDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        getByIdForMgtmt\n                        \n                    \n                \n            \n            \n                \n                    \n                    getByIdForMgtmt(IdSchool: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(Role.MGTMT)@UseFilters(new HttpExceptionFilter())@Get('getgroups/mgtmt/:idschool')\n                \n            \n\n            \n                \n                    Defined in src/models/group/group.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    IdSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        getByIdForRD\n                        \n                    \n                \n            \n            \n                \n                    \n                    getByIdForRD(req: Request, IdSchool: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(Role.CA, Role.RD)@UseFilters(new HttpExceptionFilter())@Get('getgroups/rd/:idschool')\n                \n            \n\n            \n                \n                    Defined in src/models/group/group.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    IdSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Request } from 'express';\nimport { Controller, Get, Param, Patch, Post, Req, UseFilters, UseGuards } from '@nestjs/common';\nimport { RolesGuard } from 'src/Auth/roles.guard';\nimport { GroupService } from './group.service';\nimport { Role } from '@prisma/client';\nimport { Roles } from 'src/Auth/decorators/roles.decorator';\nimport { HttpExceptionFilter } from 'src/common/validation/http-exception.filter';\nimport { GetGroupDto } from './dto/getGroup.dto';\nimport { CreateGroupDto } from './dto/createGroup.dto';\nimport { EditGroupDto } from './dto/editGroup.dto';\n\n\n@UseGuards(RolesGuard)\n@Controller('group')\nexport class GroupController {\n    constructor(private groupService: GroupService) { }\n\n    @Roles(Role.CA, Role.RD)\n    @UseFilters(new HttpExceptionFilter())\n    @Get('getgroups/rd/:idschool')\n    async getByIdForRD(@Req() req: Request, @Param('idschool') IdSchool: string): Promise {\n        const region: string = req['user'].region;\n        return this.groupService.getByIdForRD(IdSchool, region)\n    }\n\n    @Roles(Role.MGTMT)\n    @UseFilters(new HttpExceptionFilter())\n    @Get('getgroups/mgtmt/:idschool')\n    async getByIdForMgtmt(@Param('idschool') IdSchool: string): Promise {\n        return this.groupService.getByIdForMGTMT(IdSchool)\n    }\n    @Roles(Role.CA, Role.RD)\n    @UseFilters(new HttpExceptionFilter())\n    @Post('create/:idschool')\n    async create(@Req() req: Request, @Param('idschool') IdSchool: string, body: CreateGroupDto) {\n        const region: string = req['user'].region;\n        return this.groupService.create(IdSchool, region, body)\n    }\n    @Roles(Role.CA, Role.RD)\n    @UseFilters(new HttpExceptionFilter())\n    @Patch('edit/:idschool/:idgroup')\n    async edit(@Req() req: Request, @Param('idschool') IdSchool: string, @Param('idgroup') IdGroup: string, body: EditGroupDto) {\n        const region: string = req['user'].region;\n        return this.groupService.edit(IdSchool, IdGroup, region, body)\n    }\n    //dodawanie grup do danej szkoły dla rd\n    //wyświetlanie grup wszystkich dla szkoły Rd  (region)\n    //wyświetlanie grup wszystkich dla szkoły mgtm \n    //edycja grupy dla rd\n    //dodanie grupy do szkoły\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GroupModule.html":{"url":"modules/GroupModule.html","title":"module - GroupModule","body":"\n                   \n\n\n\n\n    Modules\n    GroupModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GroupModule\n\n\n\ncluster_GroupModule_providers\n\n\n\ncluster_GroupModule_imports\n\n\n\n\nGroupModule\n\nGroupModule\n\nGroupModule -->\n\nGroupModule->GroupModule\n\n\n\n\n\nGroupService\n\nGroupService\n\nGroupModule -->\n\nGroupService->GroupModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/group/group.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GroupService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GroupController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GroupModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { GroupController } from './group.controller';\nimport { GroupService } from './group.service';\nimport { Module } from '@nestjs/common';\n\n@Module({\n    imports: [GroupModule],\n    controllers: [GroupController],\n    providers: [\n        GroupService,],\n})\nexport class GroupModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GroupService.html":{"url":"injectables/GroupService.html","title":"injectable - GroupService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GroupService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/group/group.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                edit\n                            \n                            \n                                    Async\n                                getByIdForMGTMT\n                            \n                            \n                                    Async\n                                getByIdForRD\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/models/group/group.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(idSchool: string, region: string, body: CreateGroupDto)\n                \n            \n\n\n            \n                \n                    Defined in src/models/group/group.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                CreateGroupDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        edit\n                        \n                    \n                \n            \n            \n                \n                    \n                    edit(idSchool: string, idgroup: string, region: string, body: EditGroupDto)\n                \n            \n\n\n            \n                \n                    Defined in src/models/group/group.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    idgroup\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                EditGroupDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getByIdForMGTMT\n                        \n                    \n                \n            \n            \n                \n                    \n                    getByIdForMGTMT(idSchool: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/group/group.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getByIdForRD\n                        \n                    \n                \n            \n            \n                \n                    \n                    getByIdForRD(idSchool: string, region: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/group/group.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from 'prisma/prisma.service';\nimport { CreateGroupDto } from './dto/createGroup.dto';\nimport { EditGroupDto } from './dto/editGroup.dto';\n\n@Injectable()\nexport class GroupService {\n    constructor(private prisma: PrismaService) { }\n\n    async getByIdForRD(idSchool: string, region: string) {\n        return this.prisma.group.findMany({\n            where: {\n                school: {\n                    region: region,\n                    id: idSchool\n                }\n            },\n            select: {\n                id: true,\n                codeGroup: true,\n                title: true,\n                subject: true,\n                dayOfTheWeek: true,\n                hour: true,\n                trial: true,\n                fiszki: true\n            }\n        })\n    }\n    async getByIdForMGTMT(idSchool: string) {\n        return this.prisma.group.findMany({\n            where: {\n                school: {\n                    id: idSchool\n                }\n            },\n            select: {\n                id: true,\n                codeGroup: true,\n                title: true,\n                subject: true,\n                dayOfTheWeek: true,\n                hour: true,\n                trial: true,\n                fiszki: true\n            }\n        })\n    }\n\n    async create(idSchool: string, region: string, body: CreateGroupDto) {\n        return this.prisma.group.create({\n            data: {\n                codeGroup: body.codeGroup,\n                title: body.title,\n                subject: body.subject,\n                dayOfTheWeek: body.dayOfTheWeek,\n                hour: body.hour,\n                trial: body.trial,\n                school: {\n                    connect: {\n                        unique_school_region_id: {\n                            id: idSchool,\n                            region: region\n                        }\n                    }\n                }\n            }\n        })\n    }\n    async edit(idSchool: string, idgroup: string, region: string, body: EditGroupDto) {\n        const UpdateInSchool = this.prisma.school.update({\n            where: {\n                unique_school_region_id:\n                {\n                    region: region\n                    , id: idSchool\n                }\n            },\n            data: {\n                group: {\n                    update: {\n                        where: {\n                            id: idgroup\n                        },\n                        data: body\n                    }\n\n                }\n            }\n        })\n\n        return (await UpdateInSchool.contact()).find((x) => x.id === idgroup)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/validation/http-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/common/validation/http-exception.filter.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            HttpException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExceptionFilter, Catch, ArgumentsHost, HttpException } from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport { ValidationError } from 'class-validator';\nimport { Request, Response } from 'express';\n\n\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n  catch(exception: HttpException, host: ArgumentsHost) {\n    if (exception instanceof Prisma.PrismaClientKnownRequestError) {\n      console.log(exception)\n    }\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    const status = exception.getStatus();\n\n    const error: object | string = exception.getResponse();\n    if (error as object) {\n      const errorObj: any = error as object\n      response\n        .status(status)\n        .json({\n          error: errorObj.message,\n          msg: exception.message,\n          statusCode: status,\n          headers: request.headers,\n          timestamp: {time:new Date().toLocaleTimeString(),date:new Date().toDateString()},\n          path: request.url,\n        });\n    }else{\n    response\n      .status(status)\n      .json({\n        type:\"HttpException\",\n        error: error,\n        msg: exception.message,\n        statusCode: status,\n        timestamp: new Date().toISOString(),\n        path: request.url,\n      });\n    }\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/InterviewsController.html":{"url":"controllers/InterviewsController.html","title":"controller - InterviewsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  InterviewsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/interviews/interviews.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                interviews\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                addUserToInterview\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                CreateInterview\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                editInterview\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findAllBySchool\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findAllByUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findByUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findMyBySchool\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                removeUserToInterview\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        addUserToInterview\n                        \n                    \n                \n            \n            \n                \n                    \n                    addUserToInterview(IdInterView: string, addUserInterViewDto: AddUserInterViewDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(Role.CA, Role.RD)@UseFilters(new HttpExceptionFilter())@Patch('adduser/:idinterview')\n                \n            \n\n            \n                \n                    Defined in src/models/interviews/interviews.controller.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    IdInterView\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    addUserInterViewDto\n                                    \n                                                AddUserInterViewDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        CreateInterview\n                        \n                    \n                \n            \n            \n                \n                    \n                    CreateInterview(createInterViewDto: CreateInterViewDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(Role.CA, Role.RD)@UseFilters(new HttpExceptionFilter())@Post('create')\n                \n            \n\n            \n                \n                    Defined in src/models/interviews/interviews.controller.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createInterViewDto\n                                    \n                                                CreateInterViewDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        editInterview\n                        \n                    \n                \n            \n            \n                \n                    \n                    editInterview(IdInterView: string, editInterViewDto: EditInterViewDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(Role.CA, Role.RD)@UseFilters(new HttpExceptionFilter())@Patch('edit/:idinterview')\n                \n            \n\n            \n                \n                    Defined in src/models/interviews/interviews.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    IdInterView\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    editInterViewDto\n                                    \n                                                EditInterViewDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        findAllBySchool\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllBySchool(IdSchool: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(Role.CA, Role.RD)@UseFilters(new HttpExceptionFilter())@Get('findallbyschool/rd/:idschool')\n                \n            \n\n            \n                \n                    Defined in src/models/interviews/interviews.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    IdSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        findAllByUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByUser(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(Role.CA, Role.USER, Role.RD)@UseFilters(new HttpExceptionFilter())@Get('findallbyuser')\n                \n            \n\n            \n                \n                    Defined in src/models/interviews/interviews.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        findByUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByUser(IdUser: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(Role.CA, Role.RD)@UseFilters(new HttpExceptionFilter())@Get('findallbyuser/rd/:iduser')\n                \n            \n\n            \n                \n                    Defined in src/models/interviews/interviews.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    IdUser\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        findMyBySchool\n                        \n                    \n                \n            \n            \n                \n                    \n                    findMyBySchool(IdSchool: string, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(Role.CA, Role.USER)@UseFilters(new HttpExceptionFilter())@Get('findallbyschool/:idschool')\n                \n            \n\n            \n                \n                    Defined in src/models/interviews/interviews.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    IdSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        removeUserToInterview\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeUserToInterview(IdInterView: string, removeUserInterViewDto: RemoveUserInterViewDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(Role.CA, Role.RD)@UseFilters(new HttpExceptionFilter())@Patch('removeuser/:idinterview')\n                \n            \n\n            \n                \n                    Defined in src/models/interviews/interviews.controller.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    IdInterView\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    removeUserInterViewDto\n                                    \n                                                RemoveUserInterViewDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        \nimport { Body, Controller, Get, Param, Patch, Post, Req, UseFilters, UseGuards } from '@nestjs/common';\nimport { InterviewsService } from './interviews.service';\nimport { RolesGuard } from 'src/Auth/roles.guard';\nimport { Role } from '@prisma/client';\nimport { Roles } from 'src/Auth/decorators/roles.decorator';\nimport { CreateInterViewDto } from './dto/createInterView.dto';\nimport { AddUserInterViewDto } from './dto/addUserInterView.dto';\nimport { EditInterViewDto } from './dto/editInterView.dto';\nimport { Request } from 'express';\nimport { HttpExceptionFilter } from 'src/common/validation/http-exception.filter';\nimport { RemoveUserInterViewDto } from './dto/removeUserInterview.dto';\n\n@UseGuards(RolesGuard)\n@Controller('interviews')\nexport class InterviewsController {\n    constructor(private interviewsService: InterviewsService) { }\n\n\n    @Roles(Role.CA, Role.USER, Role.RD)\n    @UseFilters(new HttpExceptionFilter())\n    @Get('findallbyuser')\n    async findAllByUser(@Req() req: Request) {\n        const UserId: string = req['user'].id\n        return this.interviewsService.findAllByUser(UserId)\n    }\n\n    @Roles(Role.CA, Role.USER)\n    @UseFilters(new HttpExceptionFilter())\n    @Get('findallbyschool/:idschool')\n    async findMyBySchool(@Param('idschool') IdSchool: string, @Req() req: Request) {\n        const UserId: string = req['user'].id\n        return this.interviewsService.findMyBySchool(IdSchool, UserId)\n    }\n\n    @Roles(Role.CA, Role.RD)\n    @UseFilters(new HttpExceptionFilter())\n    @Get('findallbyschool/rd/:idschool')\n    async findAllBySchool(@Param('idschool') IdSchool: string) {\n        return this.interviewsService.findAllBySchool(IdSchool)\n    }\n\n    @Roles(Role.CA, Role.RD)\n    @UseFilters(new HttpExceptionFilter())\n    @Get('findallbyuser/rd/:iduser')\n    async findByUser(@Param('iduser') IdUser: string) {\n        return this.interviewsService.findByUser(IdUser)\n    }\n\n    @Roles(Role.CA, Role.RD)\n    @UseFilters(new HttpExceptionFilter())\n    @Patch('edit/:idinterview')\n    async editInterview(@Param('idinterview') IdInterView: string, @Body() editInterViewDto: EditInterViewDto) {\n        return this.interviewsService.editInterview(IdInterView, editInterViewDto)\n    }\n    @Roles(Role.CA, Role.RD)\n    @UseFilters(new HttpExceptionFilter())\n    @Patch('adduser/:idinterview')\n    async addUserToInterview(@Param('idinterview') IdInterView: string, @Body() addUserInterViewDto: AddUserInterViewDto) {\n        return this.interviewsService.addUserToInterview(IdInterView, addUserInterViewDto)\n    }\n    @Roles(Role.CA, Role.RD)\n    @UseFilters(new HttpExceptionFilter())\n    @Patch('removeuser/:idinterview')\n    async removeUserToInterview(@Param('idinterview') IdInterView: string, @Body() removeUserInterViewDto: RemoveUserInterViewDto) {\n        return this.interviewsService.removeUserFromInterview(IdInterView, removeUserInterViewDto)\n    }\n    @Roles(Role.CA, Role.RD)\n    @UseFilters(new HttpExceptionFilter())\n    @Post('create')\n    async CreateInterview(@Body() createInterViewDto: CreateInterViewDto) {\n        return this.interviewsService.CreateInterview(createInterViewDto)\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InterviewsModule.html":{"url":"modules/InterviewsModule.html","title":"module - InterviewsModule","body":"\n                   \n\n\n\n\n    Modules\n    InterviewsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_InterviewsModule\n\n\n\ncluster_InterviewsModule_imports\n\n\n\ncluster_InterviewsModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nInterviewsModule\n\nInterviewsModule\n\nInterviewsModule -->\n\nPrismaModule->InterviewsModule\n\n\n\n\n\nInterviewsService\n\nInterviewsService\n\nInterviewsModule -->\n\nInterviewsService->InterviewsModule\n\n\n\n\n\nUserService\n\nUserService\n\nInterviewsModule -->\n\nUserService->InterviewsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/interviews/interviews.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            InterviewsService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            InterviewsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { PrismaModule } from 'prisma/prisma.module';\nimport { InterviewsService } from './interviews.service';\nimport { Module } from '@nestjs/common';\nimport { UserService } from '../user/user.service';\nimport { InterviewsController } from './interviews.controller';\n\n\n@Module({\n    imports: [PrismaModule],\n    controllers: [ InterviewsController],\n    providers: [\n        UserService,InterviewsService],\n})\nexport class InterviewsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InterviewsService.html":{"url":"injectables/InterviewsService.html","title":"injectable - InterviewsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InterviewsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/interviews/interviews.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addUserToInterview\n                            \n                            \n                                    Async\n                                CreateInterview\n                            \n                            \n                                    Async\n                                editInterview\n                            \n                            \n                                    Async\n                                findAllBySchool\n                            \n                            \n                                    Async\n                                findAllByUser\n                            \n                            \n                                    Async\n                                findByUser\n                            \n                            \n                                    Async\n                                findMyBySchool\n                            \n                            \n                                    Async\n                                removeUserFromInterview\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/models/interviews/interviews.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addUserToInterview\n                        \n                    \n                \n            \n            \n                \n                    \n                    addUserToInterview(interviewId: string, data: AddUserInterViewDto)\n                \n            \n\n\n            \n                \n                    Defined in src/models/interviews/interviews.service.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    interviewId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                AddUserInterViewDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        CreateInterview\n                        \n                    \n                \n            \n            \n                \n                    \n                    CreateInterview(Data: CreateInterViewDto)\n                \n            \n\n\n            \n                \n                    Defined in src/models/interviews/interviews.service.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    Data\n                                    \n                                                CreateInterViewDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        editInterview\n                        \n                    \n                \n            \n            \n                \n                    \n                    editInterview(IdInterView: string, Data: EditInterViewDto)\n                \n            \n\n\n            \n                \n                    Defined in src/models/interviews/interviews.service.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    IdInterView\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    Data\n                                    \n                                                EditInterViewDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllBySchool\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllBySchool(IdSchool: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/interviews/interviews.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    IdSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByUser(idUser: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/interviews/interviews.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idUser\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByUser(IdUser: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/interviews/interviews.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    IdUser\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findMyBySchool\n                        \n                    \n                \n            \n            \n                \n                    \n                    findMyBySchool(IdSchool: string, idUser: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/interviews/interviews.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    IdSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    idUser\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeUserFromInterview\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeUserFromInterview(interviewId: string, data: RemoveUserInterViewDto)\n                \n            \n\n\n            \n                \n                    Defined in src/models/interviews/interviews.service.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    interviewId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                RemoveUserInterViewDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable } from '@nestjs/common';\nimport { PrismaService } from 'prisma/prisma.service';\nimport { EditInterViewDto } from './dto/editInterView.dto';\nimport { AddUserInterViewDto } from './dto/addUserInterView.dto';\nimport { CreateInterViewDto } from './dto/createInterView.dto';\nimport { RemoveUserInterViewDto } from './dto/removeUserInterview.dto';\n\n\n@Injectable()\nexport class InterviewsService {\n    constructor(private prisma: PrismaService) { }\n\n\n    async findAllByUser(idUser: string) {\n        return this.prisma.interviews.findMany({\n            where: {\n                fiszki: {\n                    id: idUser\n                }\n            },\n            select: {\n                id: true,\n                classNumber: true,\n                termsNumber: true,\n                date: true\n            }\n        })\n    }\n\n\n\n    async findMyBySchool(IdSchool: string, idUser:string) {\n\n        const interviews = this.prisma.interviews.findMany({\n            where: {\n                school: {\n                    id: IdSchool\n                },\n                fiszki: {\n                    id: idUser\n                }\n            },\n            select: {\n                id: true,\n                classNumber: true,\n                termsNumber: true,\n                date: true\n            }\n        });\n\n        return interviews;\n\n    }\n\n    async findAllBySchool(IdSchool: string) {\n        return this.prisma.interviews.findMany({\n            where: {\n                school: {\n                    id: IdSchool\n                }\n            },\n            select: {\n                id: true,\n                interviewTotalFiszki: true,\n                classNumber: true,\n                termsNumber: true,\n                date: true\n            }\n        })\n    }\n\n    async findByUser(IdUser:string) {\n        return this.prisma.interviews.findMany({\n            where: {\n              userInterviews:{\n                some:{\n                    userId: IdUser\n                }\n              }\n              },\n            select: {\n                id: true,\n                interviewTotalFiszki: true,\n                classNumber: true,\n                termsNumber: true,\n                date: true\n            }\n        })\n    }\n\n    async editInterview(IdInterView: string, Data: EditInterViewDto) {\n        const InterView = this.prisma.interviews.update(\n            {\n                where: {\n                    id: IdInterView\n                },\n                data: Data\n            }\n        );\n        return InterView\n    }\n    \n    async addUserToInterview(interviewId: string, data: AddUserInterViewDto) {\n        const ids = data.idUserList;\n        const interview = await this.prisma.interviews.findUnique({\n            where: { id: interviewId },\n            include: { userInterviews: true },\n          });\n          \n          if (!interview) {\n            return new ForbiddenException(`Interview(id:${interviewId}) not found`)\n          }\n          \n          const existingUserIds = interview.userInterviews.map((ui) => ui.userId);\n          const newUserIds = ids.filter((id) => !existingUserIds.includes(id));\n          const AddUserIds = newUserIds.filter((id) => existingUserIds.includes(id));\n          if (AddUserIds.length === 0) {\n            return new ForbiddenException(`One or more Id not found`)\n\n        }\n          const userInterviews = newUserIds.map((userId) => ({\n            userId,\n            interviewId,\n          }));\n        \n          return this.prisma.interviewUser.createMany({\n            data: userInterviews,\n          });\n    }\n    async removeUserFromInterview(interviewId: string, data: RemoveUserInterViewDto) {\n        const userIds = data.idUserList;\n  \n        const interview = await this.prisma.interviews.findUnique({\n          where: { id: interviewId },\n          include: { userInterviews: true },\n        });\n \n        if (!interview) {\n            return new ForbiddenException(`Interview(id:${interviewId}) not found`)\n        }\n        \n        const existingUserIds = interview.userInterviews.map((ui) => ui.userId);\n        const userInterviewIds = interview.userInterviews.map((ui) => ui.id);\n        const removedUserIds = userIds.filter((id) => existingUserIds.includes(id));\n        const removedUserInterviewIds = userInterviewIds.filter((id, index) => \n        existingUserIds.includes(userInterviewIds[index]));\n\n        if (removedUserIds.length === 0) {\n            return new ForbiddenException(`One or more Id not found`)\n\n        }\n        \n        return this.prisma.interviewUser.deleteMany({\n          where: { id: { in: removedUserInterviewIds } },\n        });\n    }\n\n    async CreateInterview(Data: CreateInterViewDto) {\n        const { classNumber, termsNumber, schoolId, users,date } = Data;\n        let interviewUsers = [];\n        if (users) {\n            interviewUsers = users.map(userId => ({\n                userId: userId\n            }));\n        }\n        return this.prisma.interviews.create({\n            data: {\n                classNumber: classNumber,\n                termsNumber:termsNumber,\n                userInterviews: {\n                    create: interviewUsers\n                },\n                date: date? date : new Date(), // Nie sprawdzałem czy działa\n                school: { connect: { id:schoolId } },\n              }\n        })\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginUserDto.html":{"url":"classes/LoginUserDto.html","title":"class - LoginUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Auth/dto/authUser.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Auth/dto/authUser.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Auth/dto/authUser.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty } from \"class-validator\"\n\nexport class LoginUserDto {\n\n    @IsNotEmpty()\n    @IsEmail()\n    email: string\n\n    @IsNotEmpty()\n    password: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotFoundErrorFilter.html":{"url":"classes/NotFoundErrorFilter.html","title":"class - NotFoundErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotFoundErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/validation/NotFoundErrorFilter.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: NotFoundError, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/common/validation/NotFoundErrorFilter.filter.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            NotFoundError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExceptionFilter, Catch, ArgumentsHost} from '@nestjs/common';\nimport { Request, Response } from 'express';\nimport { NotFoundError } from \"rxjs\";\n\n@Catch(NotFoundError)\nexport class NotFoundErrorFilter implements ExceptionFilter {\n  catch(exception: NotFoundError, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n\n    const status = exception.message;\n\n    response\n     .status(404)\n      .json({\n        type:\"NotFoundError\",\n        statusCode: status,\n        timestamp: new Date().toISOString(),\n        path: request.url,\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotFoundExceptionFilter.html":{"url":"classes/NotFoundExceptionFilter.html","title":"class - NotFoundExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotFoundExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/validation/NotFoundException.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: NotFoundException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/common/validation/NotFoundException.filter.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            NotFoundException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExceptionFilter, Catch, ArgumentsHost, NotFoundException} from '@nestjs/common';\nimport { Request, Response } from 'express';\n\n\n@Catch(NotFoundException)\nexport class NotFoundExceptionFilter implements ExceptionFilter {\n  catch(exception: NotFoundException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    const status = exception.getStatus();\n\n    response\n      .status(status)\n      .json({\n        type:\"NotFoundException\",\n        name:exception.name,\n        msg: exception.message,\n        method: request.method,\n        headers: request.headers,\n        userAgent: request.headers['user-agent'],\n        requestId: response.getHeaders()['x-request-id'],\n        statusCode: status,\n        timestamp: new Date().toISOString(),\n        path: request.url,\n      });\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PredicteController.html":{"url":"controllers/PredicteController.html","title":"controller - PredicteController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PredicteController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/predicte/predicte.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                predicte\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                Predicte\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        Predicte\n                        \n                    \n                \n            \n            \n                \n                    \n                    Predicte(req: Request, IdSchool: string, body: SendFiszkiDto[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA)@Get('group/:IdSchool')\n                \n            \n\n            \n                \n                    Defined in src/models/predicte/predicte.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    IdSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                SendFiszkiDto[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Req, UseFilters, UseGuards } from '@nestjs/common';\nimport { Role } from '@prisma/client';\nimport { Roles } from 'src/Auth/decorators/roles.decorator';\nimport { HttpExceptionFilter } from 'src/common/validation/http-exception.filter';\nimport { PredicteService } from './predicte.service';\nimport { RolesGuard } from 'src/Auth/roles.guard';\nimport { SendFiszkiDto } from './dto/GetClassFromfiszki.dto';\n\n@Controller('predicte')\n@UseGuards(RolesGuard)\nexport class PredicteController {\n    constructor(private predicteService: PredicteService) { }\n    // układanie dzieci do konkretnych grup\n    // minnimum dzieci w grupie 7 \n    // max w grupie 9\n    // pokazać wszystkie dni kiedy zgłoszone dzieci (na podstawie klasy) kończą o tej samej godzinie + zmienna czy dzieci mogą czekać np.1 zajęcia na świetlicy\n    // czy ilość dzieci w grupach jest aktualna, czy dzieci mogą czekać, czy łączenie dzieci może być między klasami, czy przyjmujemy indywidualne plany zajęć dzieci do uwzględnienia, co jeśli jest sytuacja że dzieci chętnych jest 13 (1 grupa=9 a druga = ?)\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.RD, Role.CA)\n    @Get('group/:IdSchool')\n    async Predicte(@Req() req: Request, @Param('IdSchool') IdSchool: string, @Body() body: SendFiszkiDto[]) {\n        const region: string = req['user'].region;\n        return this.predicteService.Predicte(region, body)\n\n    }\n    // Potrzebne dane do pierwszego etapu\n    // -Id szkoły\n    // -Lista dzieci chętnych \n    // -plany zajęć dzieci które są chętne \n    // Otrzymujemy \n    // Podział \n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PredicteModule.html":{"url":"modules/PredicteModule.html","title":"module - PredicteModule","body":"\n                   \n\n\n\n\n    Modules\n    PredicteModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PredicteModule\n\n\n\ncluster_PredicteModule_providers\n\n\n\ncluster_PredicteModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nPredicteModule\n\nPredicteModule\n\nPredicteModule -->\n\nPrismaModule->PredicteModule\n\n\n\n\n\nPredicteService\n\nPredicteService\n\nPredicteModule -->\n\nPredicteService->PredicteModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/predicte/predicte.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PredicteService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PredicteController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { PrismaModule } from 'prisma/prisma.module';\nimport { PredicteController } from './predicte.controller';\nimport { PredicteService } from './predicte.service';\n/*\nhttps://docs.nestjs.com/modules\n*/\n\nimport { Module } from '@nestjs/common';\n\n@Module({\n    imports: [PrismaModule],\n    controllers: [PredicteController],\n    providers: [\n        PredicteService,],\n})\nexport class PredicteModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PredicteService.html":{"url":"injectables/PredicteService.html","title":"injectable - PredicteService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PredicteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/predicte/predicte.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                Predicte\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/models/predicte/predicte.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        Predicte\n                        \n                    \n                \n            \n            \n                \n                    \n                    Predicte(region: string, Fiszki: SendFiszkiDto[])\n                \n            \n\n\n            \n                \n                    Defined in src/models/predicte/predicte.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    Fiszki\n                                    \n                                                SendFiszkiDto[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from 'prisma/prisma.service';\nimport { SendFiszkiDto } from './dto/GetClassFromfiszki.dto';\n\n@Injectable()\nexport class PredicteService {\n    constructor(private prisma: PrismaService) { }\n\n    async Predicte(region: string, Fiszki: SendFiszkiDto[]) {\n        //sprawdzenie czy region się zgadza \n        const availableEmployee = {\n            monday: {\n                1: [null],\n                2: [null],\n                3: [\"1\"],\n                4: [\"1\"],\n                5: [\"1\"],\n                6: [\"1\", \"2\"],\n                7: [\"1\", \"2\", \"3\"],\n                8: [\"2\", \"3\"],\n                9: [\"2\", \"3\"],\n                10: [\"2\"],\n            },\n            tuesday: {\n                1: [null],\n                2: [null],\n                3: [null],\n                4: [\"1\"],\n                5: [\"1\", \"2\"],\n                6: [\"1\", \"4\", \"2\"],\n                7: [\"1\", \"4\", \"3\", \"2\"],\n                8: [\"2\", \"3\"],\n                9: [\"2\", \"3\"],\n                10: [\"2\", \"3\"],\n            },\n            wednesday: {\n                1: [null],\n                2: [null],\n                3: [\"2\"],\n                4: [\"2\"],\n                5: [\"3\"],\n                6: [\"3\", \"2\"],\n                7: [\"1\", \"2\", \"3\"],\n                8: [\"2\", \"3\"],\n                9: [\"2\", \"3\"],\n                10: [null],\n            },\n            thursday: {\n                1: [null],\n                2: [null],\n                3: [\"1\"],\n                4: [\"1\"],\n                5: [\"1\"],\n                6: [\"1\", \"2\"],\n                7: [\"1\", \"2\", \"3\"],\n                8: [\"2\", \"3\"],\n                9: [\"2\", \"3\"],\n                10: [\"2\"],\n            },\n            friday: {\n                1: [null],\n                2: [null],\n                3: [\"1\"],\n                4: [\"1\"],\n                5: [\"1\"],\n                6: [\"1\", \"2\"],\n                7: [\"1\", \"2\", \"3\"],\n                8: [\"2\", \"3\"],\n                9: [\"2\", \"3\"],\n                10: [null],\n            },\n        }\n        const fiszkiIds = Fiszki.map((fiszka) => fiszka.id);\n\n        const result = await this.prisma.fiszka.findMany({\n            where: {\n                id: {\n                    in: fiszkiIds,\n                },\n                interviews: {\n                    school: {\n                        region: region\n                    }\n                }\n            },\n            select: {\n                id: true,\n                interviews: {\n                    select: {\n                        schoolId: true,\n                    },\n                },\n            },\n        });\n\n        const fiszkiSchoolData: [string, string][] = result.map((fiszka) => [fiszka.id, fiszka.interviews?.schoolId || \"\"]);\n\n        return fiszkiSchoolData;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from \"@nestjs/common\";\nimport { PrismaService } from \"./prisma.service\";\n\n@Global()\n@Module({\n    providers:[PrismaService],\n    exports:[PrismaService],\n})\nexport class PrismaModule{}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PrismaOtherFilter.html":{"url":"classes/PrismaOtherFilter.html","title":"class - PrismaOtherFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PrismaOtherFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/validation/PrismaOtherError.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: PrismaClientUnknownRequestError, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/common/validation/PrismaOtherError.filter.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            PrismaClientUnknownRequestError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExceptionFilter, Catch, ArgumentsHost, HttpException } from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport { PrismaClientUnknownRequestError } from '@prisma/client/runtime/library';\nimport { Request, Response } from 'express';\n\n\n\n@Catch(HttpException)\nexport class PrismaOtherFilter implements ExceptionFilter {\n    catch(exception: PrismaClientUnknownRequestError, host: ArgumentsHost) {\n        if (exception instanceof Prisma.PrismaClientKnownRequestError) {\n            console.log(exception)\n        }\n        const ctx = host.switchToHttp();\n        const response = ctx.getResponse();\n        const request = ctx.getRequest();\n\n\n        response\n            .json({\n                type: \"PrismaError\",\n                error: exception.message,\n                code: exception.clientVersion,\n                timestamp: new Date().toISOString(),\n                path: request.url,\n            });\n    }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in prisma/prisma.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in prisma/prisma.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in prisma/prisma.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  constructor() {\n    super();\n  }\n  async onModuleInit() {\n    await this.$connect();\n  }\n  \n  async enableShutdownHooks(app: INestApplication) {\n    process.on('beforeExit', async () => {\n      await this.$disconnect(); \n      await app.close();\n    });\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PrismaValidationFilter.html":{"url":"classes/PrismaValidationFilter.html","title":"class - PrismaValidationFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PrismaValidationFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/validation/PrismaClientValidationError.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: PrismaClientKnownRequestError, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/common/validation/PrismaClientValidationError.filter.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            PrismaClientKnownRequestError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExceptionFilter, Catch, ArgumentsHost, HttpException } from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport { Request, Response } from 'express';\nimport { cutTextFromUnique } from '../helpers/CutErrorMsg';\nimport { PrismaClientKnownRequestError } from '@prisma/client/runtime/library';\n\n\n@Catch(HttpException)\nexport class PrismaValidationFilter implements ExceptionFilter {\n    catch(exception: PrismaClientKnownRequestError, host: ArgumentsHost) {\n        if (exception instanceof Prisma.PrismaClientKnownRequestError) {\n            console.log(exception)\n        }\n        const ctx = host.switchToHttp();\n        const response = ctx.getResponse();\n        const request = ctx.getRequest();\n\n\n        response\n            .json({\n                type: \"PrismaError\",\n                error: cutTextFromUnique(exception.message),\n                code: exception.code,\n                timestamp: new Date().toISOString(),\n                path: request.url,\n            });\n    }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RefreshTokenDto.html":{"url":"classes/RefreshTokenDto.html","title":"class - RefreshTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RefreshTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Auth/dto/authRefreshToken.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                access_token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        access_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Auth/dto/authRefreshToken.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from \"class-validator\";\n\nexport class RefreshTokenDto {\n\n    @IsNotEmpty()\n    access_token: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveUserInterViewDto.html":{"url":"classes/RemoveUserInterViewDto.html","title":"class - RemoveUserInterViewDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveUserInterViewDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/interviews/dto/removeUserInterview.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                idUserList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        idUserList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/interviews/dto/removeUserInterview.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty} from \"class-validator\"\n\nexport class RemoveUserInterViewDto {\n\n    @IsNotEmpty()\n    idUserList: string[]\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RentalCostController.html":{"url":"controllers/RentalCostController.html","title":"controller - RentalCostController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RentalCostController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/rentalCost/rentalcost.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                rentalcost\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getByIdForMgtmt\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getByIdForRd\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                patch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(idSchool: string, req: Request, body: EditRentalCostDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA)@Post('create/rd/:idSchool')\n                \n            \n\n            \n                \n                    Defined in src/models/rentalCost/rentalcost.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                EditRentalCostDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        getByIdForMgtmt\n                        \n                    \n                \n            \n            \n                \n                    \n                    getByIdForMgtmt(idSchool: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.MGTMT)@Get('get/mgtmt/:idSchool')\n                \n            \n\n            \n                \n                    Defined in src/models/rentalCost/rentalcost.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        getByIdForRd\n                        \n                    \n                \n            \n            \n                \n                    \n                    getByIdForRd(idSchool: string, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA)@Get('get/rd/:idSchool')\n                \n            \n\n            \n                \n                    Defined in src/models/rentalCost/rentalcost.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        patch\n                        \n                    \n                \n            \n            \n                \n                    \n                    patch(idSchool: string, req: Request, body: CreateRentalCostDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA)@Patch('edit/rd/:idSchool')\n                \n            \n\n            \n                \n                    Defined in src/models/rentalCost/rentalcost.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                CreateRentalCostDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Request } from 'express';\nimport { Body, Controller, Get, Param, Patch, Post, Req, UseFilters, UseGuards } from '@nestjs/common';\nimport { RolesGuard } from 'src/Auth/roles.guard';\nimport { RentalCostService } from './rentalcost.service';\nimport { Role } from '@prisma/client';\nimport { Roles } from 'src/Auth/decorators/roles.decorator';\nimport { HttpExceptionFilter } from 'src/common/validation/http-exception.filter';\nimport { CreateRentalCostDto } from './dto/createRentalCost.dto';\nimport { GetRentalCostDto } from './dto/getRentalCost.dto';\nimport { EditRentalCostDto } from './dto/editRentalCost.dto';\n\n\n@UseGuards(RolesGuard)\n@Controller('rentalcost')\nexport class RentalCostController {\n    constructor(private rentalCost: RentalCostService) { }\n\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.MGTMT)\n    @Get('get/mgtmt/:idSchool')\n    async getByIdForMgtmt(@Param('idSchool') idSchool: string): Promise {\n        return this.rentalCost.getByIdForMgtmt(idSchool)\n    }\n\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.RD, Role.CA)\n    @Get('get/rd/:idSchool')\n    async getByIdForRd(@Param('idSchool') idSchool: string, @Req() req: Request): Promise {\n        const region: string = req['user'].region;\n        return this.rentalCost.getByIdForRd(idSchool, region)\n    }\n\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.RD, Role.CA)\n    @Post('create/rd/:idSchool')\n    async create(@Param('idSchool') idSchool: string, @Req() req: Request, @Body() body: EditRentalCostDto) {\n        const region: string = req['user'].region;\n        return this.rentalCost.create(idSchool, body, region)\n    }\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.RD, Role.CA)\n    @Patch('edit/rd/:idSchool')\n    async patch(@Param('idSchool') idSchool: string, @Req() req: Request, @Body() body: CreateRentalCostDto) {\n        const region: string = req['user'].region;\n        return this.rentalCost.patch(idSchool, body, region)\n    }\n    //koszty najmu dla mgtmt\n    //koszty najmu dla rd\n    //dodanie kosztów najmu dla rd\n    //edycja kosztów najmu dla rd\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RentalCostModule.html":{"url":"modules/RentalCostModule.html","title":"module - RentalCostModule","body":"\n                   \n\n\n\n\n    Modules\n    RentalCostModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RentalCostModule\n\n\n\ncluster_RentalCostModule_imports\n\n\n\ncluster_RentalCostModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nRentalCostModule\n\nRentalCostModule\n\nRentalCostModule -->\n\nPrismaModule->RentalCostModule\n\n\n\n\n\nRentalCostService\n\nRentalCostService\n\nRentalCostModule -->\n\nRentalCostService->RentalCostModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/rentalCost/rentalcost.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RentalCostService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RentalCostController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        \nimport { Module } from '@nestjs/common';\nimport { PrismaModule } from 'prisma/prisma.module';\nimport { RentalCostController } from './rentalcost.controller';\nimport { RentalCostService } from './rentalcost.service';\n\n@Module({\n    imports: [PrismaModule],\n    controllers: [RentalCostController],\n    providers: [RentalCostService],\n})\nexport class RentalCostModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RentalCostService.html":{"url":"injectables/RentalCostService.html","title":"injectable - RentalCostService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RentalCostService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/rentalCost/rentalcost.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                getByIdForMgtmt\n                            \n                            \n                                    Async\n                                getByIdForRd\n                            \n                            \n                                    Async\n                                patch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/models/rentalCost/rentalcost.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(idSchool: string, body: CreateRentalCostDto, region: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/rentalCost/rentalcost.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                CreateRentalCostDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getByIdForMgtmt\n                        \n                    \n                \n            \n            \n                \n                    \n                    getByIdForMgtmt(idSchool: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/rentalCost/rentalcost.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getByIdForRd\n                        \n                    \n                \n            \n            \n                \n                    \n                    getByIdForRd(idSchool: string, region: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/rentalCost/rentalcost.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        patch\n                        \n                    \n                \n            \n            \n                \n                    \n                    patch(idSchool: string, body: EditRentalCostDto, region: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/rentalCost/rentalcost.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                EditRentalCostDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from 'prisma/prisma.service';\nimport { CreateRentalCostDto } from './dto/createRentalCost.dto';\nimport { EditRentalCostDto } from './dto/editRentalCost.dto';\n\n@Injectable()\nexport class RentalCostService {\n    constructor(private prisma: PrismaService) { }\n\n    async getByIdForMgtmt(idSchool: string) {\n        return this.prisma.rentalCost.findUniqueOrThrow({\n            where: { schoolId: idSchool },\n            select: {\n                classroomHour: true,\n                clockHour: true\n            }\n        })\n\n    }\n\n    async getByIdForRd(idSchool: string, region: string) {\n        const Find = this.prisma.school.findUniqueOrThrow({\n            where: {\n                unique_school_region_id: {\n                    id: idSchool,\n                    region: region\n                }\n            },\n\n            select: {\n                rentalCost: {\n                    select: {\n                        id: true,\n                        classroomHour: true,\n                        clockHour: true\n                    }\n                }\n            }\n        })\n        return Find.rentalCost()\n    }\n    async create(idSchool: string, body: CreateRentalCostDto, region: string) {\n        return this.prisma.rentalCost.create({\n            data: {\n                classroomHour: body.classroomHour,\n                clockHour: body.clockHour,\n                school: {\n                    connect: {\n                        unique_school_region_id: {\n                            id: idSchool,\n                            region: region\n                        }\n                    }\n                }\n            }\n\n        })\n    }\n    async patch(idSchool: string, body: EditRentalCostDto, region: string) {\n        const UpdateInSchool = this.prisma.school.update({\n            where: {\n                unique_school_region_id: {\n                    id: idSchool,\n                    region: region\n                }\n            },\n            data: {\n                rentalCost: {\n                    update: {\n                        classroomHour: body.classroomHour,\n                        clockHour: body.clockHour\n                    }\n                }\n            }\n        })\n        return UpdateInSchool.rentalCost()\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/Auth/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/Auth/roles.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/Auth/roles.guard.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Role, User } from '@prisma/client';\nimport { ROLES_KEY } from './decorators/roles.decorator';\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(private reflector: Reflector) {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const requiredRoles = this.reflector.getAllAndOverride(ROLES_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    if (!requiredRoles) {\n      return true;\n    }\n  //   const { user }:{user:User} = context.switchToHttp().getRequest();\n\n  //  return requiredRoles.some((role)=>user.role.includes(role))\n   const { user } = context.switchToHttp().getRequest();\n   //console.log(user.role)\n   //console.log(requiredRoles)\n   return requiredRoles.some((role) => user.role?.includes(role));\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SchoolController.html":{"url":"controllers/SchoolController.html","title":"controller - SchoolController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SchoolController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/school/school.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                school\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                createSchool\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                editSchool\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findAllForMGTM\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findById\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findByIdForMGTM\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        createSchool\n                        \n                    \n                \n            \n            \n                \n                    \n                    createSchool(req: Request, body: CreateSchoolDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA)@Post('create')\n                \n            \n\n            \n                \n                    Defined in src/models/school/school.controller.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                CreateSchoolDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        editSchool\n                        \n                    \n                \n            \n            \n                \n                    \n                    editSchool(SchoolId: string, req: Request, body: EditSchoolDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA)@Patch('edit/:id')\n                \n            \n\n            \n                \n                    Defined in src/models/school/school.controller.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    SchoolId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                EditSchoolDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA)@Get('findall')\n                \n            \n\n            \n                \n                    Defined in src/models/school/school.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        findAllForMGTM\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForMGTM()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.MGTMT)@Get('findall/mgtmt')\n                \n            \n\n            \n                \n                    Defined in src/models/school/school.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(SchoolId: string, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA)@Get('findbyid/:id')\n                \n            \n\n            \n                \n                    Defined in src/models/school/school.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    SchoolId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        findByIdForMGTM\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByIdForMGTM(SchoolId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.MGTMT)@Get('findbyid/mgtmt/:id')\n                \n            \n\n            \n                \n                    Defined in src/models/school/school.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    SchoolId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        \nimport { Body, Controller, Get, Param, Patch, Post, Req, UnauthorizedException, UseFilters, UseGuards } from '@nestjs/common';\nimport { RolesGuard } from 'src/Auth/roles.guard';\nimport { SchoolService } from './school.service';\nimport { Role } from '@prisma/client';\nimport { Request } from 'express';\nimport { Roles } from 'src/Auth/decorators/roles.decorator';\nimport { HttpExceptionFilter} from 'src/common/validation/http-exception.filter';\nimport { EditSchoolDto } from './dto/editSchool.dto';\nimport { CreateSchoolDto } from './dto/createSchool.dto';\nimport { GetSchoolDto } from './dto/getSchool.dto';\n\n\n\n\n@Controller('school')\n@UseGuards(RolesGuard)\nexport class SchoolController {\n    constructor(private schoolService: SchoolService) { }\n\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.RD, Role.CA)\n    @Get('findall')\n    async findAll(@Req() req: Request): Promise{\n        const region: string = req['user'].region;\n        return this.schoolService.findAll(region);\n    }\n\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.RD, Role.CA)\n    @Get('findbyid/:id')\n    async findById(@Param('id') SchoolId: string, @Req() req: Request): Promise {\n        const region: string = req['user'].region;\n        return this.schoolService.findById(SchoolId, region);\n    }\n\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.MGTMT)\n    @Get('findall/mgtmt')\n    async findAllForMGTM(): Promise {\n        return this.schoolService.findAllForMGTM();\n    }\n\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.MGTMT)\n    @Get('findbyid/mgtmt/:id')\n    async findByIdForMGTM(@Param('id') SchoolId: string): Promise {\n        return this.schoolService.findByIdForMGTM(SchoolId);\n    }\n \n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.RD, Role.CA)\n    @Patch('edit/:id')\n    async editSchool(@Param('id') SchoolId: string, @Req() req: Request, @Body() body: EditSchoolDto) {\n        const region: string = req['user'].region;\n        return this.schoolService.editSchool(SchoolId, region, body);\n    }\n\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.RD, Role.CA)\n    @Post('create')\n    async createSchool(@Req() req: Request, @Body() body: CreateSchoolDto) {\n        const region: string = req['user'].region;\n        return this.schoolService.createSchool(region, body);\n    }\n    // Lista wszystkich placówek z danego regionu dla użytkownika z rolą RD lub CA\n    // Konkretna placówka po podaniu jej id (tylko z danego regionu) dla użytkownika z rolą RD lub CA\n    // Lista wszystkich placówek dla użytkownika z rolą MGTMT\n    // Konkretna placówka po podaniu jej id dla użytkownika z rolą MGTMT\n    // edycja placówki dla rd i ca (tylko z danego regionu)\n    // Tworzenie nowej placówki dla rd i ca (tylko z danego regionu)\n}\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SchoolModule.html":{"url":"modules/SchoolModule.html","title":"module - SchoolModule","body":"\n                   \n\n\n\n\n    Modules\n    SchoolModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SchoolModule\n\n\n\ncluster_SchoolModule_imports\n\n\n\ncluster_SchoolModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nSchoolModule\n\nSchoolModule\n\nSchoolModule -->\n\nPrismaModule->SchoolModule\n\n\n\n\n\nSchoolService\n\nSchoolService\n\nSchoolModule -->\n\nSchoolService->SchoolModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/school/school.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SchoolService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SchoolController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        \nimport { Module } from '@nestjs/common';\nimport { SchoolController } from './school.controller';\nimport { SchoolService } from './school.service';\nimport { PrismaModule } from 'prisma/prisma.module';\n\n@Module({\n    imports: [PrismaModule],\n    controllers: [SchoolController],\n    providers: [SchoolService],\n})\nexport class SchoolModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SchoolService.html":{"url":"injectables/SchoolService.html","title":"injectable - SchoolService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SchoolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/school/school.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createSchool\n                            \n                            \n                                    Async\n                                editSchool\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findAllForMGTM\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByIdForMGTM\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/models/school/school.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createSchool\n                        \n                    \n                \n            \n            \n                \n                    \n                    createSchool(region: string, body: CreateSchoolDto)\n                \n            \n\n\n            \n                \n                    Defined in src/models/school/school.service.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                CreateSchoolDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        editSchool\n                        \n                    \n                \n            \n            \n                \n                    \n                    editSchool(schoolId: string, region: string, body: EditSchoolDto)\n                \n            \n\n\n            \n                \n                    Defined in src/models/school/school.service.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    schoolId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                EditSchoolDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(region: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/school/school.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllForMGTM\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForMGTM()\n                \n            \n\n\n            \n                \n                    Defined in src/models/school/school.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(schoolId: string, region: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/school/school.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    schoolId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByIdForMGTM\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByIdForMGTM(schoolId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/school/school.service.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    schoolId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from 'prisma/prisma.service';\nimport { EditSchoolDto } from './dto/editSchool.dto';\nimport { CreateSchoolDto } from './dto/createSchool.dto';\nimport { GetSchoolDto } from './dto/getSchool.dto';\n\n\n\n@Injectable()\nexport class SchoolService {\n    constructor(private prisma: PrismaService) { }\n\n\n    async findAll(region: string): Promise {\n\n        return this.prisma.school.findMany({\n            where: {\n                region: region\n            },\n            select: {\n                id: true,\n                name: true,\n                region: true,\n                status: true,\n                city: true,\n                type: true,\n                cooperation: true,\n                phone: true,\n                province: true,\n                email: true,\n                street: true,\n                suiteNumber: true,\n                postCode: true,\n                numberOfClasses: true,\n                comments: true\n            }\n        })\n    }\n\n    async findById(schoolId: string, region: string): Promise {\n\n        return this.prisma.school.findUniqueOrThrow({\n            where: {\n                unique_school_region_id: { region: region, id: schoolId }\n            },\n            select: {\n                id: true,\n                name: true,\n                region: true,\n                status: true,\n                city: true,\n                type: true,\n                cooperation: true,\n                phone: true,\n                province: true,\n                email: true,\n                street: true,\n                suiteNumber: true,\n                postCode: true,\n                numberOfClasses: true,\n                comments: true\n            }\n        })\n\n    }\n\n    async findAllForMGTM(): Promise {\n        return this.prisma.school.findMany({\n            select: {\n                id: true,\n                name: true,\n                region: true,\n                status: true,\n                city: true,\n                type: true,\n                cooperation: true,\n                phone: true,\n                province: true,\n                email: true,\n                street: true,\n                suiteNumber: true,\n                postCode: true,\n                numberOfClasses: true,\n                comments: true\n            }\n        })\n    }\n\n    async findByIdForMGTM(schoolId: string): Promise {\n        return this.prisma.school.findUniqueOrThrow({\n            where: {\n                id: schoolId\n            },\n            select: {\n                id: true,\n                name: true,\n                region: true,\n                status: true,\n                city: true,\n                type: true,\n                cooperation: true,\n                phone: true,\n                province: true,\n                email: true,\n                street: true,\n                suiteNumber: true,\n                postCode: true,\n                numberOfClasses: true,\n                comments: true\n            }\n        })\n    }\n\n    async editSchool(schoolId: string, region: string, body: EditSchoolDto) {\n        return this.prisma.school.update({\n            where: {\n                unique_school_region_id: { region: region, id: schoolId }\n            },\n            data: body\n        })\n    }\n\n    async createSchool(region: string, body: CreateSchoolDto) {\n        return this.prisma.school.create({\n            data: {\n                name: body.name,\n                region: region,\n                status: body.status,\n                city: body.city,\n                type: body.type,\n                cooperation: body.cooperation,\n                phone: body.phone,\n                province: body.province,\n                email: body.email,\n                street: body.street,\n                suiteNumber: body.suiteNumber,\n                postCode: body.postCode,\n                numberOfClasses: body.numberOfClasses,\n                comments: body.comments\n            }\n        })\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendFiszkiDto.html":{"url":"classes/SendFiszkiDto.html","title":"class - SendFiszkiDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendFiszkiDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/predicte/dto/GetClassFromfiszki.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                interviewsId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/predicte/dto/GetClassFromfiszki.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        interviewsId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/predicte/dto/GetClassFromfiszki.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from \"class-validator\"\n\nexport class SendFiszkiDto {\n\n    @IsNotEmpty()\n    id: string\n\n    @IsNotEmpty()\n    interviewsId: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SheduleController.html":{"url":"controllers/SheduleController.html","title":"controller - SheduleController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SheduleController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/shedule/shedule.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                shedule\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                edit\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createSheduleDto: CreateSheduleDto, req: Request, IdSchool: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA)@Post('create/:IdSchool')\n                \n            \n\n            \n                \n                    Defined in src/models/shedule/shedule.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createSheduleDto\n                                    \n                                                CreateSheduleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    IdSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        edit\n                        \n                    \n                \n            \n            \n                \n                    \n                    edit(EditSheduleDto: EditSheduleDto, IdShedule: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA)@Patch('edit/:IdShedule')\n                \n            \n\n            \n                \n                    Defined in src/models/shedule/shedule.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    EditSheduleDto\n                                    \n                                                EditSheduleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    IdShedule\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(req: Request, IdSchool: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA)@Get('findall/:IdSchool')\n                \n            \n\n            \n                \n                    Defined in src/models/shedule/shedule.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    IdSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(req: Request, IdShedule: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA)@Get('find/:IdShedule')\n                \n            \n\n            \n                \n                    Defined in src/models/shedule/shedule.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    IdShedule\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        \nimport { Body, Controller, Get, Param, Patch, Post, Req, UseFilters, UseGuards } from '@nestjs/common';\nimport { RolesGuard } from 'src/Auth/roles.guard';\nimport { SheduleService } from './shedule.service';\nimport { Request } from 'express';\nimport { Role } from '@prisma/client';\nimport { Roles } from 'src/Auth/decorators/roles.decorator';\nimport { HttpExceptionFilter } from 'src/common/validation/http-exception.filter';\nimport { CreateSheduleDto } from './dto/createShedule.dto';\nimport { EditSheduleDto } from './dto/editShedule.dto';\n\n@Controller('shedule')\n@UseGuards(RolesGuard)\nexport class SheduleController {\n    constructor(private sheduleService: SheduleService) { }\n\n    //#TODO Zrobić jeszcze dla mgtmt ale narazie nie wiadomo jak ma się to wyświetlać :)\n\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.RD, Role.CA)\n    @Get('findall/:IdSchool')\n    async findAll(@Req() req: Request, @Param('IdSchool') IdSchool: string) {\n        const region: string = req['user'].region;\n        return this.sheduleService.findAll(region,IdSchool);\n    }\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.RD, Role.CA)\n    @Get('find/:IdShedule')\n    async findById(@Req() req: Request, @Param('IdShedule') IdShedule: string) {\n        const region: string = req['user'].region;\n        return this.sheduleService.findById(region, IdShedule)\n    }\n\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.RD, Role.CA)\n    @Patch('edit/:IdShedule')\n    async edit (@Body() EditSheduleDto: EditSheduleDto, @Param('IdShedule') IdShedule: string) {\n\n        return this.sheduleService.edit(EditSheduleDto, IdShedule)\n    }\n\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.RD, Role.CA)\n    @Post('create/:IdSchool')\n    async create(@Body() createSheduleDto: CreateSheduleDto, @Req() req: Request, @Param('IdSchool') IdSchool: string) {\n        const region: string = req['user'].region;\n        return this.sheduleService.create(createSheduleDto, IdSchool, region)\n    }\n\n\n    //wprowadzanie danych przez dr - dany region\n    //wyświetlanie wszystkich planów zajęc z danej szkoły - i region\n    // modyfikacja danego planu zajęc\n}\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SheduleDaysController.html":{"url":"controllers/SheduleDaysController.html","title":"controller - SheduleDaysController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SheduleDaysController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/sheduleDays/sheduledays.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                sheduleday\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                edit\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(req: Request, IdShedule: string, data: CreateSheduleDaysDto[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA)@Post('create/:IdShedule')\n                \n            \n\n            \n                \n                    Defined in src/models/sheduleDays/sheduledays.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    IdShedule\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                CreateSheduleDaysDto[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        edit\n                        \n                    \n                \n            \n            \n                \n                    \n                    edit(req: Request, IdShedule: string, data: EditSheduleDaysDto[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA)@Patch('edit/:IdShedule')\n                \n            \n\n            \n                \n                    Defined in src/models/sheduleDays/sheduledays.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    IdShedule\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                EditSheduleDaysDto[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(req: Request, IdShedule: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA)@Post('findall/:IdShedule')\n                \n            \n\n            \n                \n                    Defined in src/models/sheduleDays/sheduledays.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    IdShedule\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        \nimport { Body, Controller, Param, Patch, Post, Req, UseFilters, UseGuards } from '@nestjs/common';\nimport { RolesGuard } from 'src/Auth/roles.guard';\nimport { SheduleDaysService } from './sheduledays.service';\nimport { Role } from '@prisma/client';\nimport { Roles } from 'src/Auth/decorators/roles.decorator';\nimport { HttpExceptionFilter } from 'src/common/validation/http-exception.filter';\nimport { Request } from 'express';\nimport { CreateSheduleDaysDto } from './dto/createSheduleDays.dto';\nimport { EditSheduleDaysDto } from './dto/editSheduleDays.dto';\n\n@Controller('sheduleday')\n@UseGuards(RolesGuard)\nexport class SheduleDaysController {\n    constructor(private sheduleDaysService: SheduleDaysService) { }\n\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.RD, Role.CA)\n    @Post('findall/:IdShedule')\n    async findAll(@Req() req: Request, @Param('IdShedule') IdShedule: string) {\n        const region: string = req['user'].region;\n        return this.sheduleDaysService.findAll(IdShedule, region)\n    }\n\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.RD, Role.CA)\n    @Post('create/:IdShedule')\n    async create(@Req() req: Request, @Param('IdShedule') IdShedule: string, @Body() data: CreateSheduleDaysDto[]) {\n        const region: string = req['user'].region;\n        return this.sheduleDaysService.create(IdShedule, region, data)\n    }\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.RD, Role.CA)\n    @Patch('edit/:IdShedule')\n    async edit(@Req() req: Request, @Param('IdShedule') IdShedule: string, @Body() data: EditSheduleDaysDto[]) {\n        const region: string = req['user'].region;\n        return this.sheduleDaysService.edit(IdShedule, region, data)\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SheduleDaysModule.html":{"url":"modules/SheduleDaysModule.html","title":"module - SheduleDaysModule","body":"\n                   \n\n\n\n\n    Modules\n    SheduleDaysModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SheduleDaysModule\n\n\n\ncluster_SheduleDaysModule_providers\n\n\n\ncluster_SheduleDaysModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nSheduleDaysModule\n\nSheduleDaysModule\n\nSheduleDaysModule -->\n\nPrismaModule->SheduleDaysModule\n\n\n\n\n\nSheduleDaysService\n\nSheduleDaysService\n\nSheduleDaysModule -->\n\nSheduleDaysService->SheduleDaysModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/sheduleDays/sheduledays.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SheduleDaysService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SheduleDaysController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        \nimport { Module } from '@nestjs/common';\nimport { PrismaModule } from 'prisma/prisma.module';\nimport { SheduleDaysController } from './sheduledays.controller';\nimport { SheduleDaysService } from './sheduledays.service';\n\n@Module({\n    imports: [PrismaModule],\n    controllers: [SheduleDaysController],\n    providers: [SheduleDaysService],\n})\nexport class SheduleDaysModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SheduleDaysService.html":{"url":"injectables/SheduleDaysService.html","title":"injectable - SheduleDaysService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SheduleDaysService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/sheduleDays/sheduledays.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                edit\n                            \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/models/sheduleDays/sheduledays.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(IdShedule: string, region: string, data: CreateSheduleDaysDto[])\n                \n            \n\n\n            \n                \n                    Defined in src/models/sheduleDays/sheduledays.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    IdShedule\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                CreateSheduleDaysDto[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        edit\n                        \n                    \n                \n            \n            \n                \n                    \n                    edit(IdShedule: string, region: string, data: EditSheduleDaysDto[])\n                \n            \n\n\n            \n                \n                    Defined in src/models/sheduleDays/sheduledays.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    IdShedule\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                EditSheduleDaysDto[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(IdShedule: string, region: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/sheduleDays/sheduledays.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    IdShedule\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable } from '@nestjs/common';\nimport { PrismaService } from 'prisma/prisma.service';\nimport { CreateSheduleDaysDto } from './dto/createSheduleDays.dto';\nimport { EditSheduleDaysDto } from './dto/editSheduleDays.dto';\n\n\n@Injectable()\nexport class SheduleDaysService {\n    constructor(private prisma: PrismaService) { }\n\n    async findAll(IdShedule: string, region: string) {\n        return this.prisma.sheduleDays.findMany({\n            where: {\n                sheduleId: IdShedule,\n                shedule: {\n                    school: {\n                        region: region\n                    }\n                }\n            },\n            select:{\n                day:true,\n                numberLesson:true,\n                id:true\n            }\n\n        })\n    }\n    async create(IdShedule: string, region: string, data: CreateSheduleDaysDto[]) {\n        const shedule = await this.prisma.shedule.findUnique({\n            where: { id: IdShedule },\n            include: { school: true }\n        });\n\n        if (!shedule) {\n            return new ForbiddenException(`One or more Id not found`)\n        }\n        const schoolRegion = shedule.school?.region;\n\n        if (schoolRegion !== region) {\n            return new ForbiddenException(`Bad region`)\n        }\n        return this.prisma.sheduleDays.createMany({\n            data: data.map(item => ({\n                day: item.day,\n                numberLesson: item.numberLesson,\n                sheduleId: shedule.id,\n            })),\n        });\n    }\n    async edit(IdShedule: string, region: string, data: EditSheduleDaysDto[]) {\n        const shedule = await this.prisma.shedule.findUnique({\n            where: { id: IdShedule },\n            include: { school: true }\n        });\n\n        if (!shedule) {\n            return new ForbiddenException(`One or more Id not found`)\n        }\n        const schoolRegion = shedule.school?.region;\n\n        if (schoolRegion !== region) {\n            return new ForbiddenException(`Bad region`)\n        }\n        return this.prisma.sheduleDays.updateMany({\n            data: data.map(item => ({\n                day: item.day,\n                numberLesson: item.numberLesson,\n                sheduleId: shedule.id,\n            })),\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SheduleModule.html":{"url":"modules/SheduleModule.html","title":"module - SheduleModule","body":"\n                   \n\n\n\n\n    Modules\n    SheduleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SheduleModule\n\n\n\ncluster_SheduleModule_imports\n\n\n\ncluster_SheduleModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nSheduleModule\n\nSheduleModule\n\nSheduleModule -->\n\nPrismaModule->SheduleModule\n\n\n\n\n\nSheduleService\n\nSheduleService\n\nSheduleModule -->\n\nSheduleService->SheduleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/shedule/shedule.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SheduleService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SheduleController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        \nimport { Module } from '@nestjs/common';\nimport { PrismaModule } from 'prisma/prisma.module';\nimport { SheduleController } from './shedule.controller';\nimport { SheduleService } from './shedule.service';\n\n@Module({\n    imports: [PrismaModule],\n    controllers: [SheduleController],\n    providers: [SheduleService],\n})\nexport class SheduleModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SheduleService.html":{"url":"injectables/SheduleService.html","title":"injectable - SheduleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SheduleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/shedule/shedule.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                edit\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/models/shedule/shedule.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(body: CreateSheduleDto, IdSchool: string, region: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/shedule/shedule.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                CreateSheduleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    IdSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        edit\n                        \n                    \n                \n            \n            \n                \n                    \n                    edit(body: EditSheduleDto, IdShedule: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/shedule/shedule.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                EditSheduleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    IdShedule\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(region: string, IdSchool: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/shedule/shedule.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    IdSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(region: string, IdShedule: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/shedule/shedule.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    IdShedule\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { PrismaService } from 'prisma/prisma.service';\nimport { CreateSheduleDto } from './dto/createShedule.dto';\nimport { EditSheduleDto } from './dto/editShedule.dto';\n\n@Injectable()\nexport class SheduleService {\n    constructor(private prisma: PrismaService) { }\n\n    async create(body: CreateSheduleDto, IdSchool: string, region: string) {\n        return this.prisma.shedule.create({\n            data: {\n                classDigit: body.classDigit,\n                classLetter: body.classLetter,\n                date: body.date,\n               \n\n                school: {\n                    connect: {\n                        unique_school_region_id: {\n                            id: IdSchool,\n                            region: region\n                        }\n                    }\n                }\n            }\n\n        })\n    }\n\n    async edit(body: EditSheduleDto, IdShedule: string) {\n        return this.prisma.shedule.update({\n            where: {\n               id:IdShedule,\n               \n            },\n            data:{\n                classDigit:body.classDigit,\n                classLetter:body.classLetter,\n                date:body.date,\n            }\n            }\n        )\n    }\n\n    async findAll(region: string, IdSchool: string) {\n        const shedule = this.prisma.shedule.findMany({\n            where: {\n                school: {\n                    region: region,\n                    id: IdSchool\n                }\n            },\n            select: {\n                id: true,\n                sheduleDays: true,\n                classDigit: true,\n                classLetter: true,\n                date: true\n            }\n        })\n        if((await shedule).length===0){\n            throw new HttpException(\"Not found data with this ID\",HttpStatus.NOT_FOUND)\n        }\n        return shedule\n    }\n    async findById(region: string, IdShedule: string) {\n        return this.prisma.school.findFirst({\n            where: {\n                region: region,\n                shedule: {\n                    some: {\n                        id: IdShedule\n                    }\n                }\n            },\n            select: {\n                shedule: {\n                    select: {\n                        id: true,\n                        sheduleDays: true,\n                        classDigit: true,\n                        classLetter: true,\n                        date: true\n                    }\n                }\n            }\n        });\n    }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpperCasePipe.html":{"url":"injectables/UpperCasePipe.html","title":"injectable - UpperCasePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UpperCasePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/user/upperCasePipe.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(req: Request)\n                    \n                \n                        \n                            \n                                Defined in src/models/user/upperCasePipe.pipe.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/models/user/upperCasePipe.pipe.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Injectable, ArgumentMetadata, Req, Scope, Inject } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core/router';\nimport { Role } from '@prisma/client';\nimport { Request } from 'express';\n\n\n@Injectable({ scope: Scope.REQUEST })\nexport class UpperCasePipe implements PipeTransform {\n  constructor(@Inject(REQUEST) protected readonly req: Request) {}\n\n  \n  transform(value: any, metadata: ArgumentMetadata) {\n    \n    let Role:Role = this.req['user'].role\n    //console.log(Role)\n    if (value.region !== undefined) {\n      value.region = value.region.toUpperCase();\n    }\n    if (value.role !== undefined) {\n      value.role = value.role.toUpperCase();\n    }\n    if (value.job !== undefined) {\n      value.job = value.job.toUpperCase();\n    }\n    return value;\n\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                createUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                editUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findAllRegion\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findById\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findTotalById\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                validation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(createUserDto: any, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.MGTMT)@Post()\n                \n            \n\n            \n                \n                    Defined in src/models/user/user.controller.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        editUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    editUser(Id: string, editUserDto: any, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA, Role.MGTMT)@Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/models/user/user.controller.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    Id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    editUserDto\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA, Role.MGTMT)@Get('findall')\n                \n            \n\n            \n                \n                    Defined in src/models/user/user.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        findAllRegion\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllRegion(Region: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.MGTMT)@Get('region/:region')\n                \n            \n\n            \n                \n                    Defined in src/models/user/user.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    Region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(Id: string, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA, Role.MGTMT)@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/models/user/user.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    Id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        findTotalById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findTotalById(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.USER, Role.MGTMT, Role.CA, Role.RD)@Get('total')\n                \n            \n\n            \n                \n                    Defined in src/models/user/user.controller.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        validation\n                        \n                    \n                \n            \n            \n                \n                    \n                    validation(ValidationUserDto: ValidationdDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA, Role.MGTMT)@Post('validation')\n                \n            \n\n            \n                \n                    Defined in src/models/user/user.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ValidationUserDto\n                                    \n                                                ValidationdDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { BadRequestException, Body, Controller, Get, Param, Patch, Post, Req, UseFilters, UseGuards } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { CreateUserForMGTMTDto, CreateUserForRdDto } from './dto/createUser.dto';\nimport { Role } from '@prisma/client';\nimport { Request } from 'express';\nimport { RolesGuard } from './../../Auth/roles.guard';\nimport { EditUserForMGTMTDto, EditUserForRdDto } from './dto/editUser.dto';\nimport { GetUserDto } from './dto/GetUser.dto';\nimport { HttpExceptionFilter } from './../../common/validation/http-exception.filter';\nimport { Roles } from 'src/Auth/decorators/roles.decorator';\nimport { UpperCasePipe } from './upperCasePipe.pipe';\nimport { ClassValidator } from 'src/common/helpers/ClassValidator';\nimport { ValidationdDto } from './dto/validation.dto';\n\n\n@Controller('user')\n@UseGuards(RolesGuard)\nexport class UserController {\n  constructor(private userService: UserService) { }\n\n  @UseFilters(new HttpExceptionFilter())\n  @Roles(Role.RD, Role.CA, Role.MGTMT)\n  @Post('validation')\n  async validation(@Body() ValidationUserDto: ValidationdDto): Promise {\n    return this.userService.Validation(ValidationUserDto)\n  }\n\n\n\n  @UseFilters(new HttpExceptionFilter())\n  @Roles(Role.RD, Role.CA, Role.MGTMT)\n  @Get('findall')\n  async findAll(@Req() req: Request): Promise {\n    const role: Role = req['user'].role\n    if (role.match(Role.MGTMT)) {\n      return this.userService.findAll();\n    } else {\n      const region: string = req['user'].region;\n      return this.userService.findByRegion(region, role);\n    }\n  }\n\n  @UseFilters(new HttpExceptionFilter())\n  @Roles(Role.MGTMT)\n  @Get('region/:region')\n  async findAllRegion(@Param('region') Region: string): Promise {\n    return this.userService.findByRegion(Region);\n  }\n\n  @UseFilters(new HttpExceptionFilter())\n  @Roles(Role.RD, Role.CA, Role.MGTMT)\n  @Get(':id')\n  async findById(@Param('id') Id: string, @Req() req: Request): Promise {\n    const role: Role = req['user'].role\n    if (role.match(Role.MGTMT)) {\n      return this.userService.findById(Id);\n    } else {\n      const region: string = req['user'].region;\n      return this.userService.findById(Id, region);\n    }\n  }\n\n  @UseFilters(new HttpExceptionFilter())\n  @Roles(Role.USER, Role.MGTMT, Role.CA, Role.RD)\n  @Get('total')\n  async findTotalById(@Req() req: Request): Promise {\n    const UserId: string = req['user'].id\n    return this.userService.findTotalById(UserId);\n  }\n\n  @UseFilters(new HttpExceptionFilter())\n  @Roles(Role.RD, Role.MGTMT)\n  @Post()\n  async createUser(@Body(UpperCasePipe) createUserDto: any, @Req() req: Request): Promise {\n    const role: Role = req['user'].role\n    if (role.match(Role.MGTMT)) {\n      const validationResult = await ClassValidator(createUserDto, CreateUserForMGTMTDto);\n      if (validationResult instanceof BadRequestException) {\n        throw validationResult;\n      }\n      const createUser: CreateUserForMGTMTDto = createUserDto\n      return this.userService.CreateUserForMGTMT(createUser);\n    } else {\n      const validationResult = await ClassValidator(createUserDto, CreateUserForRdDto);\n      if (validationResult instanceof BadRequestException) {\n        throw validationResult;\n      }\n      const createUser: CreateUserForRdDto = createUserDto\n      const region: string = req['user'].region\n      return this.userService.CreateUserForRd(createUser, region);\n    }\n  }\n\n  @UseFilters(new HttpExceptionFilter())\n  @Roles(Role.RD, Role.CA, Role.MGTMT)\n  @Patch(':id')\n  async editUser(@Param('id') Id: string, @Body(UpperCasePipe) editUserDto: any, @Req() req: Request) {\n    const role: Role = req['user'].role\n    if (role.match(Role.MGTMT)) {\n      const validationResult = await ClassValidator(editUserDto, EditUserForMGTMTDto);\n      if (validationResult instanceof BadRequestException) {\n        throw validationResult;\n      }\n      const editUser: EditUserForMGTMTDto = editUserDto\n      return this.userService.EditUserForMGTMT(editUser, Id)\n    } else {\n      const validationResult = await ClassValidator(editUserDto, EditUserForRdDto);\n      if (validationResult instanceof BadRequestException) {\n        throw validationResult;\n      }\n      const editUser: EditUserForRdDto = editUserDto\n      const region: string = req['user'].region;\n      return this.userService.EditUserForRd(editUser, Id, region, role)\n    }\n  }\n\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nUserModule\n\nUserModule\n\nPrismaService  -->\n\nUserModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nUserModule -->\n\nPrismaService->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { UserService } from './user.service';\nimport { UserController } from './user.controller';\nimport { Global, Module } from '@nestjs/common';\nimport { PrismaService } from 'prisma/prisma.service';\nimport { APP_GUARD } from '@nestjs/core';\nimport { RolesGuard } from 'src/Auth/roles.guard';\n\n\n@Global()\n@Module({\n    imports: [],\n    controllers: [\n        UserController],\n    providers: [\n        UserService, PrismaService,\n        {\n            provide: APP_GUARD,\n            useClass: RolesGuard,\n        } \n    ],\n    exports: [PrismaService],\n})\n\nexport class UserModule {\n   \n }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                CreateUserForMGTMT\n                            \n                            \n                                    Async\n                                CreateUserForRd\n                            \n                            \n                                    Async\n                                EditUserForMGTMT\n                            \n                            \n                                    Async\n                                EditUserForRd\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByRegion\n                            \n                            \n                                    Async\n                                findTotalById\n                            \n                            \n                                    Async\n                                Validation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/models/user/user.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        CreateUserForMGTMT\n                        \n                    \n                \n            \n            \n                \n                    \n                    CreateUserForMGTMT(User: CreateUserForMGTMTDto)\n                \n            \n\n\n            \n                \n                    Defined in src/models/user/user.service.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    User\n                                    \n                                                CreateUserForMGTMTDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        CreateUserForRd\n                        \n                    \n                \n            \n            \n                \n                    \n                    CreateUserForRd(User: CreateUserForRdDto, region: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/user/user.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    User\n                                    \n                                                CreateUserForRdDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        EditUserForMGTMT\n                        \n                    \n                \n            \n            \n                \n                    \n                    EditUserForMGTMT(editUserForRdDto: CreateUserForMGTMTDto, Id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/user/user.service.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    editUserForRdDto\n                                    \n                                                CreateUserForMGTMTDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    Id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        EditUserForRd\n                        \n                    \n                \n            \n            \n                \n                    \n                    EditUserForRd(editUserForRdDto: EditUserForRdDto, Id: string, region: string, Role: Role)\n                \n            \n\n\n            \n                \n                    Defined in src/models/user/user.service.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    editUserForRdDto\n                                    \n                                                EditUserForRdDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    Id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    Role\n                                    \n                                            Role\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/models/user/user.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(Id: string, region?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/user/user.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    Id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByRegion\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByRegion(Region: string, Role?: Role)\n                \n            \n\n\n            \n                \n                    Defined in src/models/user/user.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    Region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    Role\n                                    \n                                            Role\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findTotalById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findTotalById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/user/user.service.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        Validation\n                        \n                    \n                \n            \n            \n                \n                    \n                    Validation(ValidationUserDto: ValidationdDto)\n                \n            \n\n\n            \n                \n                    Defined in src/models/user/user.service.ts:166\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ValidationUserDto\n                                    \n                                                ValidationdDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from '../../../prisma/prisma.service'\nimport { CreateUserForMGTMTDto, CreateUserForRdDto } from './dto/createUser.dto';\nimport { EditUserForRdDto } from './dto/editUser.dto';\nimport { HashPassword } from './../../common/helpers/hashPass';\nimport { Role } from '@prisma/client';\nimport { RoleValue } from 'src/common/helpers/roleValue';\nimport { ValidationdDto } from './dto/validation.dto';\n\n\n//@Injectable({ scope: Scope.REQUEST })\n@Injectable()\nexport class UserService {\n  constructor(private prisma: PrismaService) { }\n\n\n  async findAll() {\n    return this.prisma.user.findMany({\n      select: {\n        name: true,\n        surname: true,\n        email: true,\n        region: true,\n        role: true,\n        phone: true,\n        job: true,\n        active: true,\n        totalFiszki: true,\n        id: true\n      }\n    });\n\n  }\n\n  async findByRegion(Region: string, Role?: Role) {\n    const role = await RoleValue(Role)\n    const roles = role?.map(role => role.toString() as Role);\n\n    return this.prisma.user.findMany({\n      where: {\n        region: Region,\n        role: {\n          in: roles\n        }\n      }, select: {\n        name: true,\n        surname: true,\n        email: true,\n        region: true,\n        phone: true,\n        role: true,\n        job: true,\n        active: true,\n        totalFiszki: true,\n        id: true\n      }\n    });\n  }\n\n  async findById(Id: string, region?: string) {\n\n\n    const user = this.prisma.user.findUniqueOrThrow(\n      {\n        where: {\n          unique_id_region: {\n            id: Id,\n            region: region\n          },\n\n        }, select: {\n          name: true,\n          surname: true,\n          email: true,\n          region: true,\n          phone: true,\n          role: true,\n          job: true,\n          active: true,\n          totalFiszki: true,\n          id: true\n        }\n      }\n    );\n    return user\n  }\n\n\n  async CreateUserForRd(User: CreateUserForRdDto, region: string) {\n\n\n    const user = this.prisma.user.create({\n      data: {\n        name: User.name,\n        password: await HashPassword(User.name + \".\" + User.surname),\n        surname: User.surname,\n        email: User.email,\n        phone: User.phone,\n        region: region.toUpperCase(),\n        role: User.role,\n        job: User.job,\n        active: true,\n      }\n    })\n    return user\n  }\n  async findTotalById(id: string) {\n    const user = await this.prisma.user.findUniqueOrThrow({\n      where: {\n        id: id\n      },\n      select: {\n        fiszka: true\n      }\n\n    })\n    return user.fiszka.length\n  }\n  async CreateUserForMGTMT(User: CreateUserForMGTMTDto) {\n\n    const user = this.prisma.user.create({\n      data: {\n        name: User.name,\n        password: await HashPassword(User.name + \".\" + User.surname),\n        surname: User.surname,\n        email: User.email,\n        phone: User.phone,\n        region: User.region.toUpperCase(),\n        role: User.role,\n        job: User.job,\n        active: true\n      }\n    })\n    return user\n  }\n\n  async EditUserForRd(editUserForRdDto: EditUserForRdDto, Id: string, region: string, Role: Role) {\n    const role = await RoleValue(Role)\n    const roles = role?.map(role => role.toString() as Role);\n    const user = this.prisma.user.updateMany(\n      {\n        where: {\n          id: Id,\n          region: region,\n          role: {\n            in: roles\n          }\n        },\n        data: editUserForRdDto,\n      }\n    );\n    return user\n\n  }\n\n  async EditUserForMGTMT(editUserForRdDto: CreateUserForMGTMTDto, Id: string) {\n\n    return this.prisma.user.update({\n      where: {\n        id: Id\n      },\n      data: editUserForRdDto,\n    });\n  }\n\n  async Validation(ValidationUserDto: ValidationdDto) {\n    if (ValidationUserDto.email !== undefined) {\n      const user = await this.prisma.user.findUnique({\n        where: {\n          email: ValidationUserDto.email\n        },\n        select: {\n          id: true\n        }\n      })\n      if (!user) {\n        return ({ InDatabase: false })\n      } else {\n        return ({ InDatabase: true })\n      }\n    }\n    if (ValidationUserDto.phone !== undefined) {\n      const user = await this.prisma.user.findUnique({\n        where: {\n          phone: ValidationUserDto.phone\n        },\n        select: {\n          id: true\n        }\n      })\n      if (!user) {\n        return ({ InDatabase: false })\n      } else {\n        return ({ InDatabase: true })\n      }\n    }\n\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationdDto.html":{"url":"classes/ValidationdDto.html","title":"class - ValidationdDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationdDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/user/dto/validation.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/validation.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPhoneNumber('PL')@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/validation.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsOptional, IsPhoneNumber } from \"class-validator\"\n\nexport class ValidationdDto {\n\n    @IsEmail()\n    @IsOptional()\n    email: string\n\n    @IsPhoneNumber(\"PL\")\n    @IsOptional()\n    phone: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                prisma/seed.ts\n            \n            function\n            seed\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                prisma/seed.ts\n            \n            variable\n            prisma\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/Auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/Auth/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/Auth/auth.guard.ts\n            \n            variable\n            jwtSecretKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/Auth/auth.module.ts\n            \n            variable\n            jwtSecretKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/Auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/Auth/constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/Auth/decorators/public.decorator.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/Auth/decorators/public.decorator.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/Auth/decorators/roles.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/Auth/decorators/roles.decorator.ts\n            \n            variable\n            ROLES_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/Auth/dto/authRefreshToken.dto.ts\n            \n            class\n            RefreshTokenDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/Auth/dto/authUser.dto.ts\n            \n            class\n            LoginUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/Auth/dto/decode.dto.ts\n            \n            class\n            DecodeDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/Auth/roles.guard.ts\n            \n            guard\n            RolesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/helpers/ClassValidator.ts\n            \n            function\n            ClassValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/helpers/CutErrorMsg.ts\n            \n            function\n            cutTextFromUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/helpers/PredicteSheduleInSchool.ts\n            \n            function\n            PredicteSheduleSchool\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/helpers/hashPass.ts\n            \n            function\n            HashPassword\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/helpers/roleValue.ts\n            \n            function\n            RoleValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/helpers/roleValue.ts\n            \n            variable\n            AllRole\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/validation/AllExceptionsFilter.filter.ts\n            \n            class\n            AllExceptionsFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/validation/NotFoundErrorFilter.filter.ts\n            \n            class\n            NotFoundErrorFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/validation/NotFoundException.filter.ts\n            \n            class\n            NotFoundExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/validation/PrismaClientValidationError.filter.ts\n            \n            class\n            PrismaValidationFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/validation/PrismaOtherError.filter.ts\n            \n            class\n            PrismaOtherFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/validation/http-exception.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/callUserHistory/calluserhistory.controller.ts\n            \n            controller\n            CallUserHistoryController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/models/callUserHistory/calluserhistory.service.ts\n            \n            injectable\n            CallUserHistoryService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/models/callUserHistory/dto/CreateCallUser.dto.ts\n            \n            class\n            CreateCallUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/models/callUserHistory/dto/GetCallUserHistory.dto.ts\n            \n            class\n            GetCallUserHistoryDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/models/contact/contact.controller.ts\n            \n            controller\n            ContactController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/models/contact/contact.service.ts\n            \n            injectable\n            ContactService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/models/contact/dto/createContact.dto.ts\n            \n            class\n            CreateContactDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/models/contact/dto/editContact.dto.ts\n            \n            class\n            EditContactDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/models/contact/dto/getContact.dto.ts\n            \n            class\n            GetContactDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/models/director/director.controller.ts\n            \n            controller\n            DirectorController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/models/director/director.service.ts\n            \n            injectable\n            DirectorService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/models/director/dto/createDirector.dto.ts\n            \n            class\n            CreateDirectorDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/models/director/dto/editDirector.dto.ts\n            \n            class\n            EditDirectorDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/models/director/dto/getDirector.dto.ts\n            \n            class\n            GetDirectorDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/models/fiszka/dto/CreateFiszka.dto.ts\n            \n            class\n            CreateFiszkaDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/models/fiszka/dto/EditFiszka.dto.ts\n            \n            class\n            EditFiszkaDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/models/fiszka/dto/GetFiszka.dto.ts\n            \n            class\n            GetFiszkaDto\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/models/fiszka/dto/addGroup.dto.ts\n            \n            class\n            AddgroupDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/models/fiszka/fiszka.controller.ts\n            \n            controller\n            FiszkaController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/models/fiszka/fiszka.service.ts\n            \n            injectable\n            FiszkaService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/models/group/dto/createGroup.dto.ts\n            \n            class\n            CreateGroupDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/models/group/dto/editGroup.dto.ts\n            \n            class\n            EditGroupDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/models/group/dto/getGroup.dto.ts\n            \n            class\n            GetGroupDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/models/group/group.controller.ts\n            \n            controller\n            GroupController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/models/group/group.service.ts\n            \n            injectable\n            GroupService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/models/interviews/dto/addUserInterView.dto.ts\n            \n            class\n            AddUserInterViewDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/models/interviews/dto/createInterView.dto.ts\n            \n            class\n            CreateInterViewDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/models/interviews/dto/editInterView.dto.ts\n            \n            class\n            EditInterViewDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/models/interviews/dto/removeUserInterview.dto.ts\n            \n            class\n            RemoveUserInterViewDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/models/interviews/interviews.controller.ts\n            \n            controller\n            InterviewsController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/models/interviews/interviews.service.ts\n            \n            injectable\n            InterviewsService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/models/personContact/contactPerson.controller.ts\n            \n            controller\n            ContactPersonController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/models/personContact/contactPerson.service.ts\n            \n            injectable\n            ContactPersonService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/models/personContact/dto/createContactPerson.dto.ts\n            \n            class\n            CreateContactPersontDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/models/personContact/dto/editContactPerson.dto.ts\n            \n            class\n            EditContactPersontDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/models/personContact/dto/getContactPerson.dto.ts\n            \n            class\n            GetContactPersontDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/models/predicte/dto/GetClassFromfiszki.dto.ts\n            \n            class\n            SendFiszkiDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/models/predicte/predicte.controller.ts\n            \n            controller\n            PredicteController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/models/predicte/predicte.service.ts\n            \n            injectable\n            PredicteService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/models/rentalCost/dto/createRentalCost.dto.ts\n            \n            class\n            CreateRentalCostDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/models/rentalCost/dto/editRentalCost.dto.ts\n            \n            class\n            EditRentalCostDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/models/rentalCost/dto/getRentalCost.dto.ts\n            \n            class\n            GetRentalCostDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/models/rentalCost/rentalcost.controller.ts\n            \n            controller\n            RentalCostController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/models/rentalCost/rentalcost.service.ts\n            \n            injectable\n            RentalCostService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/models/school/dto/createSchool.dto.ts\n            \n            class\n            CreateSchoolDto\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/models/school/dto/editSchool.dto.ts\n            \n            class\n            EditSchoolDto\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/models/school/dto/getSchool.dto.ts\n            \n            class\n            GetSchoolDto\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/models/school/school.controller.ts\n            \n            controller\n            SchoolController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/models/school/school.service.ts\n            \n            injectable\n            SchoolService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/models/shedule/dto/createShedule.dto.ts\n            \n            class\n            CreateSheduleDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/models/shedule/dto/editShedule.dto.ts\n            \n            class\n            EditSheduleDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/models/shedule/dto/getShedule.dto.ts\n            \n            class\n            GetSheduleDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/models/shedule/shedule.controller.ts\n            \n            controller\n            SheduleController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/models/shedule/shedule.service.ts\n            \n            injectable\n            SheduleService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/models/sheduleDays/dto/createSheduleDays.dto.ts\n            \n            class\n            CreateSheduleDaysDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/models/sheduleDays/dto/editSheduleDays.dto.ts\n            \n            class\n            EditSheduleDaysDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/models/sheduleDays/sheduledays.controller.ts\n            \n            controller\n            SheduleDaysController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/models/sheduleDays/sheduledays.service.ts\n            \n            injectable\n            SheduleDaysService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/models/user/dto/GetUser.dto.ts\n            \n            class\n            GetUserDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/models/user/dto/createUser.dto.ts\n            \n            class\n            CreateUserForMGTMTDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/models/user/dto/createUser.dto.ts\n            \n            class\n            CreateUserForRdDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/models/user/dto/editUser.dto.ts\n            \n            class\n            EditUser\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/models/user/dto/editUser.dto.ts\n            \n            class\n            EditUserForMGTMTDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/models/user/dto/editUser.dto.ts\n            \n            class\n            EditUserForRdDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/models/user/dto/validation.dto.ts\n            \n            class\n            ValidationdDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/models/user/upperCasePipe.pipe.ts\n            \n            injectable\n            UpperCasePipe\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/models/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/models/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/11)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.2.6\n        \n            @nestjs/core : ^10.2.6\n        \n            @nestjs/jwt : ^10.1.1\n        \n            @nestjs/platform-express : ^10.2.6\n        \n            @prisma/client : ^5.3.1\n        \n            @types/bcrypt : ^5.0.0\n        \n            bcrypt : ^5.1.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            express : ^4.18.2\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            roleValue   (src/.../roleValue.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/helpers/roleValue.ts\n    \n        \n            \n                \n                    \n                        \n                        roleValue\n                    \n                \n                        \n                            \n                                 MGTMT\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 RD\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 CA\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            ClassValidator   (src/.../ClassValidator.ts)\n                        \n                        \n                            cutTextFromUnique   (src/.../CutErrorMsg.ts)\n                        \n                        \n                            HashPassword   (src/.../hashPass.ts)\n                        \n                        \n                            PredicteSheduleSchool   (src/.../PredicteSheduleInSchool.ts)\n                        \n                        \n                            RoleValue   (src/.../roleValue.ts)\n                        \n                        \n                            seed   (prisma/.../seed.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/common/helpers/ClassValidator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ClassValidator\n                        \n                    \n                \n            \n            \n                \nClassValidator(obj: any, dto: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/common/helpers/CutErrorMsg.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        cutTextFromUnique\n                        \n                    \n                \n            \n            \n                \ncutTextFromUnique(text: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/common/helpers/hashPass.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        HashPassword\n                        \n                    \n                \n            \n            \n                \nHashPassword(pass: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/common/helpers/PredicteSheduleInSchool.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PredicteSheduleSchool\n                        \n                    \n                \n            \n            \n                \nPredicteSheduleSchool()\n                \n            \n\n\n\n\n        \n    \n    src/common/helpers/roleValue.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RoleValue\n                        \n                    \n                \n            \n            \n                \nRoleValue(YourRole: Role)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    YourRole\n                                    \n                                            Role\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    prisma/seed.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        seed\n                        \n                    \n                \n            \n            \n                \nseed()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CallUserHistoryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContactModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContactPersonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DirectorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FiszkaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GroupModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InterviewsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PredicteModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RentalCostModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SchoolModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SheduleDaysModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SheduleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CallUserHistoryModule\n\n\n\ncluster_CallUserHistoryModule_providers\n\n\n\ncluster_ContactModule\n\n\n\ncluster_ContactModule_imports\n\n\n\ncluster_ContactModule_providers\n\n\n\ncluster_ContactPersonModule\n\n\n\ncluster_ContactPersonModule_providers\n\n\n\ncluster_DirectorModule\n\n\n\ncluster_DirectorModule_providers\n\n\n\ncluster_FiszkaModule\n\n\n\ncluster_FiszkaModule_providers\n\n\n\ncluster_GroupModule\n\n\n\ncluster_GroupModule_providers\n\n\n\ncluster_InterviewsModule\n\n\n\ncluster_InterviewsModule_providers\n\n\n\ncluster_PredicteModule\n\n\n\ncluster_PredicteModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_RentalCostModule\n\n\n\ncluster_RentalCostModule_providers\n\n\n\ncluster_SchoolModule\n\n\n\ncluster_SchoolModule_providers\n\n\n\ncluster_SheduleDaysModule\n\n\n\ncluster_SheduleDaysModule_providers\n\n\n\ncluster_SheduleModule\n\n\n\ncluster_SheduleModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCallUserHistoryModule\n\nCallUserHistoryModule\n\nAppModule -->\n\nCallUserHistoryModule->AppModule\n\n\n\n\n\nContactModule\n\nContactModule\n\nAppModule -->\n\nContactModule->AppModule\n\n\n\n\n\nContactPersonModule\n\nContactPersonModule\n\nAppModule -->\n\nContactPersonModule->AppModule\n\n\n\n\n\nDirectorModule\n\nDirectorModule\n\nAppModule -->\n\nDirectorModule->AppModule\n\n\n\n\n\nFiszkaModule\n\nFiszkaModule\n\nAppModule -->\n\nFiszkaModule->AppModule\n\n\n\n\n\nGroupModule\n\nGroupModule\n\nGroupModule -->\n\nGroupModule->GroupModule\n\n\n\nAppModule -->\n\nGroupModule->AppModule\n\n\n\n\n\nInterviewsModule\n\nInterviewsModule\n\nAppModule -->\n\nInterviewsModule->AppModule\n\n\n\n\n\nRentalCostModule\n\nRentalCostModule\n\nAppModule -->\n\nRentalCostModule->AppModule\n\n\n\n\n\nSchoolModule\n\nSchoolModule\n\nAppModule -->\n\nSchoolModule->AppModule\n\n\n\n\n\nSheduleDaysModule\n\nSheduleDaysModule\n\nAppModule -->\n\nSheduleDaysModule->AppModule\n\n\n\n\n\nSheduleModule\n\nSheduleModule\n\nAppModule -->\n\nSheduleModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nUserModule->PrismaService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nCallUserHistoryService\n\nCallUserHistoryService\n\nCallUserHistoryModule -->\n\nCallUserHistoryService->CallUserHistoryModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nContactModule -->\n\nPrismaModule->ContactModule\n\n\n\nContactPersonModule -->\n\nPrismaModule->ContactPersonModule\n\n\n\nDirectorModule -->\n\nPrismaModule->DirectorModule\n\n\n\nInterviewsModule -->\n\nPrismaModule->InterviewsModule\n\n\n\nRentalCostModule -->\n\nPrismaModule->RentalCostModule\n\n\n\nSchoolModule -->\n\nPrismaModule->SchoolModule\n\n\n\nSheduleDaysModule -->\n\nPrismaModule->SheduleDaysModule\n\n\n\nSheduleModule -->\n\nPrismaModule->SheduleModule\n\n\n\n\n\nPredicteModule\n\nPredicteModule\n\nPredicteModule -->\n\nPrismaModule->PredicteModule\n\n\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nContactService\n\nContactService\n\nContactModule -->\n\nContactService->ContactModule\n\n\n\n\n\nContactPersonService\n\nContactPersonService\n\nContactPersonModule -->\n\nContactPersonService->ContactPersonModule\n\n\n\n\n\nDirectorService\n\nDirectorService\n\nDirectorModule -->\n\nDirectorService->DirectorModule\n\n\n\n\n\nFiszkaService\n\nFiszkaService\n\nFiszkaModule -->\n\nFiszkaService->FiszkaModule\n\n\n\n\n\nGroupService\n\nGroupService\n\nGroupModule -->\n\nGroupService->GroupModule\n\n\n\n\n\nInterviewsService\n\nInterviewsService\n\nInterviewsModule -->\n\nInterviewsService->InterviewsModule\n\n\n\n\n\nUserService\n\nUserService\n\nInterviewsModule -->\n\nUserService->InterviewsModule\n\n\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\nPredicteService\n\nPredicteService\n\nPredicteModule -->\n\nPredicteService->PredicteModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nUserModule -->\n\nPrismaService->UserModule\n\n\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nRentalCostService\n\nRentalCostService\n\nRentalCostModule -->\n\nRentalCostService->RentalCostModule\n\n\n\n\n\nSchoolService\n\nSchoolService\n\nSchoolModule -->\n\nSchoolService->SchoolModule\n\n\n\n\n\nSheduleDaysService\n\nSheduleDaysService\n\nSheduleDaysModule -->\n\nSheduleDaysService->SheduleDaysModule\n\n\n\n\n\nSheduleService\n\nSheduleService\n\nSheduleModule -->\n\nSheduleService->SheduleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        16 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    15 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    17 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    50 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AllRole   (src/.../roleValue.ts)\n                        \n                        \n                            IS_PUBLIC_KEY   (src/.../public.decorator.ts)\n                        \n                        \n                            jwtConstants   (src/.../constants.ts)\n                        \n                        \n                            jwtSecretKey   (src/.../auth.guard.ts)\n                        \n                        \n                            jwtSecretKey   (src/.../auth.module.ts)\n                        \n                        \n                            prisma   (prisma/.../seed.ts)\n                        \n                        \n                            Public   (src/.../public.decorator.ts)\n                        \n                        \n                            Roles   (src/.../roles.decorator.ts)\n                        \n                        \n                            ROLES_KEY   (src/.../roles.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/helpers/roleValue.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AllRole\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.keys(roleValue) as Role[]\n                    \n                \n\n\n        \n    \n\n    src/Auth/decorators/public.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n\n    src/Auth/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    secret:\n      'secret',\n  }\n                    \n                \n\n\n        \n    \n\n    src/Auth/auth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtSecretKey\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.JWT_SECRET\n                    \n                \n\n\n        \n    \n\n    src/Auth/auth.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtSecretKey\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.JWT_SECRET\n                    \n                \n\n\n        \n    \n\n    prisma/seed.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        prisma\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new PrismaClient()\n                    \n                \n\n\n        \n    \n\n    src/Auth/decorators/roles.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...roles: Role[]) => SetMetadata(ROLES_KEY, roles)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROLES_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'role'\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
