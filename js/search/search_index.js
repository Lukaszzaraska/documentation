var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AccessTokenDto.html",[0,0.25,1,3.146]],["body/classes/AccessTokenDto.html",[0,0.437,1,5.489,2,1.104,3,0.117,4,0.104,5,0.104,6,5.736,7,0.309,8,1.481,9,7.368,10,0.323,11,0.008,12,0.921,13,0.983,14,2.207,15,0.368,16,6.487,17,0.117,18,1.32,19,0.117,20,0.007,21,0.007]],["title/classes/AddUserInterViewDto.html",[0,0.25,22,3.146]],["body/classes/AddUserInterViewDto.html",[0,0.437,2,1.108,3,0.118,4,0.105,5,0.105,7,0.31,8,1.484,10,0.325,11,0.008,12,0.923,13,0.987,14,2.211,15,0.37,17,0.118,18,1.324,19,0.118,20,0.007,21,0.007,22,5.501,23,5.756,24,5.572,25,6.509]],["title/classes/AddgroupDto.html",[0,0.25,26,3.146]],["body/classes/AddgroupDto.html",[0,0.432,2,1.086,3,0.115,4,0.103,5,0.103,7,0.304,8,1.466,10,0.318,11,0.008,13,0.967,14,2.191,15,0.362,17,0.139,18,1.298,19,0.115,20,0.007,21,0.007,26,5.434,27,5.641,28,5.256,29,5.524,30,6.379,31,6.379]],["title/classes/AllExceptionsFilter.html",[0,0.25,32,3.603]],["body/classes/AllExceptionsFilter.html",[0,0.215,2,0.652,3,0.069,4,0.062,5,0.062,7,0.182,10,0.32,11,0.009,15,0.312,17,0.15,19,0.069,20,0.005,21,0.005,32,4.442,33,3.39,34,2.511,35,4.292,36,1.221,37,4.262,38,1.444,39,3.833,40,7.735,41,3.833,42,1.221,43,0.795,44,1.221,45,3.671,46,5.179,47,4.689,48,3.833,49,4.292,50,0.833,51,3.493,52,4.954,53,5.673,54,5.683,55,0.567,56,2.56,57,5.683,58,3.097,59,2.879,60,3.833,61,2.879,62,3.833,63,2.879,64,3.833,65,2.879,66,3.833,67,5.683,68,5.683,69,2.56,70,1.606,71,3.833,72,1.751,73,1.163,74,2.705,75,1.444,76,2.53,77,3.833,78,3.833,79,2.327,80,2.56,81,3.671,82,3.097,83,3.833,84,7.735,85,5.497,86,2.589,87,2.56,88,2.327,89,2.56,90,3.833,91,3.885,92,3.833,93,1.843,94,3.833,95,3.833,96,3.833,97,3.833,98,3.833,99,2.241,100,3.833,101,5.497,102,3.39,103,3.097,104,3.39,105,3.097,106,3.097,107,3.39,108,3.39,109,3.39,110,3.39,111,3.39,112,1.163,113,3.097,114,2.56,115,2.56,116,2.56,117,3.833,118,3.833]],["title/controllers/AppController.html",[119,1.352,120,3.603]],["body/controllers/AppController.html",[0,0.386,3,0.124,4,0.111,5,0.111,11,0.008,17,0.124,19,0.124,20,0.007,21,0.007,55,1.019,119,2.443,120,6.51,121,2.04,122,6.086]],["title/modules/AppModule.html",[123,1.322,124,3.349]],["body/modules/AppModule.html",[0,0.207,3,0.067,4,0.059,5,0.059,10,0.184,11,0.009,15,0.209,17,0.159,19,0.067,20,0.005,21,0.005,34,1.684,36,0.819,42,0.819,43,0.533,44,0.819,50,0.801,51,2.342,55,0.546,121,1.093,123,1.864,124,6.941,125,1.544,126,1.544,127,1.635,128,1.635,129,1.544,130,2.37,131,1.635,132,3.259,133,3.259,134,5.386,135,5.386,136,5.386,137,5.386,138,5.386,139,5.386,140,5.386,141,5.386,142,5.386,143,5.386,144,5.386,145,5.386,146,5.386,147,5.098,148,2.37,149,1.635,150,1.635,151,3.686,152,2.441,153,3.686,154,5.344,155,6.894,156,3.686,157,5.344,158,3.686,159,3.686,160,3.686,161,3.686,162,3.686,163,3.686,164,3.686,165,3.686,166,5.344,167,3.686,168,3.686,169,3.686,170,2.769,171,3.686,172,3.686,173,3.686,174,3.686,175,3.686,176,3.686,177,3.686]],["title/injectables/AppService.html",[178,0.969,179,3.603]],["body/injectables/AppService.html",[0,0.385,3,0.124,4,0.11,5,0.11,11,0.008,17,0.124,19,0.124,20,0.007,21,0.007,55,1.015,178,1.747,179,6.496,180,2.584,181,6.064]],["title/controllers/AuthController.html",[119,1.352,182,3.349]],["body/controllers/AuthController.html",[0,0.197,1,4.754,3,0.063,4,0.056,5,0.056,7,0.167,10,0.336,11,0.009,13,1.088,15,0.408,17,0.154,19,0.063,20,0.005,21,0.005,36,1.146,42,1.497,43,0.974,44,1.497,50,1.56,53,2.837,55,0.52,70,3.144,72,1.604,73,1.065,93,1.779,99,2.103,119,1.065,121,1.041,182,3.874,183,3.104,184,1.654,185,3.511,186,2.079,187,4.561,188,5.157,189,5.958,190,4.561,191,4.561,192,3.511,193,4.754,194,3.653,195,3.428,196,3.534,197,1.891,198,3.384,199,4.09,200,3.511,201,3.511,202,3.511,203,2.982,204,3.511,205,3.511,206,3.511,207,3.511,208,3.177,209,3.104,210,3.511,211,3.511,212,3.511,213,5.157,214,3.511,215,3.511,216,5.157,217,3.511,218,5.061,219,3.511,220,3.511,221,5.157,222,1.357,223,3.511,224,1.654,225,1.707,226,1.654,227,2.231,228,2.478,229,3.511,230,5.157,231,4.94,232,3.104,233,4.083,234,3.104,235,2.478,236,3.104,237,3.511,238,1.654,239,2.231,240,3.104,241,1.142,242,0.833,243,1.557,244,3.104,245,1.513,246,3.511,247,3.104,248,3.511,249,3.104,250,1.707,251,3.511,252,5.157,253,3.511,254,3.511,255,3.511,256,3.511,257,4.167,258,3.511,259,3.511,260,1.513,261,3.511,262,3.511,263,3.511,264,3.511,265,2.637,266,3.511,267,3.511,268,3.511,269,3.511,270,3.511,271,3.511,272,3.511,273,3.511,274,3.511]],["title/guards/AuthGuard.html",[235,3.146,275,3.603]],["body/guards/AuthGuard.html",[0,0.229,3,0.074,4,0.066,5,0.066,7,0.194,10,0.38,11,0.009,12,0.681,15,0.378,17,0.137,19,0.074,20,0.005,21,0.005,34,1.867,36,1.278,37,2.48,38,1.539,42,1.479,43,0.962,44,1.479,50,1.25,55,0.605,56,2.729,73,1.239,76,2.452,86,3.823,91,2.889,93,1.65,178,1.25,186,1.844,203,2.113,232,3.613,235,4.059,260,2.479,276,3.302,277,3.302,278,6.389,279,5.838,280,5.752,281,3.302,282,6.383,283,7.177,284,4.086,285,5.086,286,5.427,287,4.086,288,3.613,289,5.752,290,4.086,291,5.379,292,5.887,293,2.883,294,2.124,295,3.302,296,4.321,297,3.302,298,5.086,299,4.086,300,3.613,301,3.613,302,4.086,303,4.086,304,3.613,305,6.389,306,4.086,307,4.086,308,3.841,309,3.613,310,5.887,311,1.867,312,4.086,313,3.302,314,4.086,315,4.086,316,3.069,317,3.613,318,4.086,319,4.086,320,4.086,321,4.086,322,4.086,323,4.086]],["title/modules/AuthModule.html",[123,1.322,134,3.146]],["body/modules/AuthModule.html",[0,0.278,3,0.09,4,0.08,5,0.08,11,0.009,17,0.154,19,0.09,20,0.006,21,0.006,55,0.735,56,3.314,76,1.54,121,1.947,123,2.183,125,2.079,126,2.079,127,2.201,128,2.201,129,2.079,130,3.266,131,3.266,134,6.195,147,5.594,148,2.913,149,2.201,150,2.201,152,3.001,182,5.531,233,6.007,234,4.388,235,4.635,236,4.388,260,2.138,293,3.502,296,3.727,297,4.01,313,4.01,324,4.388,325,4.388,326,4.388,327,4.962,328,4.01,329,5.808,330,4.962,331,4.962,332,4.962,333,4.962,334,4.388,335,4.962,336,4.962,337,4.962,338,4.388,339,4.962,340,4.388,341,4.388]],["title/injectables/AuthService.html",[178,0.969,233,2.977]],["body/injectables/AuthService.html",[0,0.141,1,3.997,3,0.045,4,0.04,5,0.04,7,0.12,9,4.398,10,0.308,11,0.009,12,0.943,15,0.374,17,0.139,19,0.045,20,0.004,21,0.004,36,0.888,37,2.427,38,1.506,42,1.373,43,0.893,44,1.373,50,1.343,55,0.373,76,2.435,81,1.681,91,3.304,93,1.532,99,1.026,112,2.291,178,0.869,180,0.948,186,2.26,187,3.535,189,5.009,190,4.398,191,3.535,193,3.997,203,2.774,227,1.599,233,2.67,239,1.599,240,2.226,241,1.618,242,0.597,247,2.226,249,2.226,279,3.231,281,2.034,282,5.316,292,2.226,293,1.776,305,4.398,308,4.393,309,3.535,310,4.398,311,3.727,338,3.535,342,2.226,343,3.998,344,2.143,345,2.441,346,2.517,347,3.998,348,2.517,349,2.517,350,2.517,351,3.998,352,2.517,353,2.471,354,3.998,355,2.517,356,3.998,357,4.398,358,2.517,359,1.116,360,3.535,361,2.517,362,2.517,363,3.997,364,2.517,365,1.891,366,2.517,367,4.395,368,5.464,369,2.517,370,4.993,371,2.226,372,4.398,373,4.398,374,1.58,375,4.973,376,4.973,377,2.517,378,2.517,379,2.517,380,2.226,381,2.517,382,3.998,383,5.664,384,3.003,385,2.517,386,3.998,387,2.517,388,2.517,389,5.664,390,2.517,391,2.517,392,2.517,393,2.517,394,2.517,395,2.517,396,2.034,397,2.517,398,2.517,399,2.517,400,2.517,401,2.226,402,2.517,403,2.517,404,2.517,405,2.517,406,2.517,407,2.517,408,2.517,409,2.517,410,2.517,411,2.517,412,2.821,413,2.517,414,2.517,415,4.973,416,4.973,417,3.321,418,2.226,419,3.998,420,2.517,421,2.517,422,2.226,423,3.998,424,2.517,425,2.517,426,2.517,427,2.517,428,2.517,429,2.226,430,2.517,431,1.776,432,2.226]],["title/controllers/CallUserHistoryController.html",[119,1.352,433,3.349]],["body/controllers/CallUserHistoryController.html",[0,0.229,3,0.074,4,0.066,5,0.066,7,0.194,10,0.332,11,0.009,12,0.997,13,1.008,15,0.378,17,0.15,19,0.074,20,0.005,21,0.005,36,1.276,42,1.477,43,0.961,44,1.477,50,1.445,55,0.604,70,3.025,72,1.863,73,1.237,93,1.649,99,2.943,119,1.237,121,1.209,184,1.92,186,2.332,196,3.718,198,3.822,203,2.9,222,2.22,224,1.92,225,1.982,226,1.92,228,2.877,238,1.92,241,1.326,242,0.967,243,1.808,245,1.757,250,1.982,433,4.314,434,3.605,435,4.077,436,5.079,437,5.079,438,5.079,439,3.605,440,5.094,441,5.373,442,4.077,443,4.077,444,5.422,445,3.605,446,4.077,447,4.077,448,5.079,449,3.605,450,5.094,451,4.077,452,4.077,453,2.048,454,2.119,455,2.119,456,3.836,457,3.605,458,3.605,459,2.877,460,3.605,461,4.077,462,3.063,463,3.605,464,3.605,465,4.077,466,4.077,467,4.077,468,4.077,469,4.077,470,4.077,471,4.077,472,5.373,473,4.077,474,4.077,475,4.077,476,4.077,477,4.077,478,4.077,479,4.077,480,4.077,481,4.077]],["title/modules/CallUserHistoryModule.html",[123,1.322,135,3.146]],["body/modules/CallUserHistoryModule.html",[0,0.33,3,0.106,4,0.094,5,0.094,11,0.009,17,0.151,19,0.106,20,0.007,21,0.007,55,0.869,121,2.17,123,2.364,125,2.461,126,2.461,127,2.604,128,2.604,129,2.461,130,3.537,131,2.604,135,6.181,148,3.246,149,2.604,150,2.604,152,2.683,433,5.99,456,5.849,457,5.193,482,5.193,483,5.193,484,5.872,485,5.872,486,3.163,487,3.163]],["title/injectables/CallUserHistoryService.html",[178,0.969,456,2.977]],["body/injectables/CallUserHistoryService.html",[0,0.242,3,0.078,4,0.069,5,0.069,7,0.205,10,0.369,11,0.009,12,1.01,15,0.42,17,0.133,19,0.078,20,0.005,21,0.005,28,3.791,36,1.326,38,1.622,42,1.642,43,1.069,44,1.642,50,1.488,55,0.637,73,1.306,76,1.852,93,1.479,99,3.014,112,1.81,178,1.297,180,1.622,186,2.361,203,2.95,260,2.95,311,1.967,344,2.571,345,3.185,359,1.91,367,3.984,418,3.807,436,5.276,437,5.276,438,5.276,439,5.276,440,5.216,444,5.552,445,5.276,448,3.807,449,5.276,456,3.985,458,3.807,459,3.038,460,3.807,488,3.807,489,2.093,490,4.306,491,4.306,492,4.306,493,4.306,494,4.306,495,2.163,496,4.821,497,4.821,498,2.81,499,4.306,500,4.306,501,4.306,502,4.306,503,2.505,504,4.306,505,4.306,506,4.306]],["title/classes/ChangePasswordDto.html",[0,0.25,193,3.146]],["body/classes/ChangePasswordDto.html",[0,0.4,2,0.958,3,0.102,4,0.091,5,0.091,7,0.268,8,1.357,10,0.39,11,0.008,12,1.005,13,1.186,14,2.247,15,0.444,17,0.129,18,1.146,19,0.102,20,0.007,21,0.007,193,5.031,412,3.974,507,4.98,508,7.823,509,7.823,510,7.129,511,5.631,512,5.631,513,5.631,514,5.631,515,7.129,516,7.129,517,5.355,518,6.304,519,7.129,520,5.631,521,3.974,522,5.631,523,7.129,524,5.631,525,5.631]],["title/controllers/ContactController.html",[119,1.352,526,3.349]],["body/controllers/ContactController.html",[0,0.21,3,0.068,4,0.06,5,0.06,7,0.179,10,0.317,11,0.009,12,1.016,13,0.962,15,0.361,17,0.151,19,0.068,20,0.005,21,0.005,36,1.202,42,1.41,43,0.918,44,1.41,50,1.38,55,0.555,70,2.912,72,1.714,73,1.138,93,1.723,119,1.138,121,1.112,184,1.767,186,2.287,194,4.076,195,3.829,196,3.617,197,3.42,198,3.491,199,2.277,203,2.82,208,3.3,222,3.281,224,1.767,225,1.823,226,1.767,238,1.767,241,1.22,242,0.89,243,1.664,245,1.616,250,1.823,453,1.884,454,1.949,455,1.949,526,4.065,527,3.317,528,3.317,529,2.549,530,2.813,531,3.819,532,2.183,533,4.905,534,2.647,535,3.751,536,3.508,537,2.647,538,6.146,539,4.905,540,3.751,541,3.751,542,2.817,543,3.751,544,3.751,545,1.823,546,4.24,547,3.317,548,2.647,549,3.317,550,3.317,551,3.317,552,2.097,553,3.751,554,3.751,555,2.817,556,2.383,557,3.751,558,3.751,559,3.694,560,2.505,561,2.817,562,3.751,563,3.751,564,3.317,565,3.751,566,3.751]],["title/modules/ContactModule.html",[123,1.322,136,3.146]],["body/modules/ContactModule.html",[0,0.329,3,0.106,4,0.094,5,0.094,11,0.009,17,0.151,19,0.106,20,0.007,21,0.007,55,0.867,121,2.166,123,2.361,125,2.453,126,2.453,127,2.597,128,2.597,129,2.453,130,3.532,131,2.597,136,6.176,148,3.24,149,2.597,150,2.597,152,2.675,486,3.935,487,3.153,526,5.982,546,5.845,547,5.177,567,5.177,568,5.177,569,5.854,570,5.854]],["title/controllers/ContactPersonController.html",[119,1.352,571,3.349]],["body/controllers/ContactPersonController.html",[0,0.193,3,0.062,4,0.055,5,0.055,7,0.164,10,0.332,11,0.009,12,1.026,13,1.011,15,0.379,17,0.148,19,0.062,20,0.005,21,0.005,36,1.128,42,1.481,43,0.964,44,1.481,50,1.449,55,0.509,70,2.98,72,1.569,73,1.042,93,1.764,119,1.042,121,1.018,184,1.618,186,2.335,194,4.131,195,3.89,196,3.724,197,3.591,198,3.573,199,2.086,203,2.904,208,3.465,222,3.22,224,1.618,225,1.67,226,1.618,228,4.26,238,1.618,241,1.117,242,0.815,243,1.524,245,1.48,250,1.67,453,1.726,454,1.785,455,1.785,529,2.391,530,2.638,531,3.582,532,1.999,534,2.424,536,3.046,542,2.58,545,1.67,552,1.921,555,2.58,556,2.183,559,3.88,560,2.294,561,2.58,571,3.812,572,3.038,573,4.488,574,4.705,575,3.435,576,3.038,577,3.435,578,3.435,579,5.896,580,3.038,581,3.591,582,4.705,583,3.435,584,3.435,585,3.038,586,3.435,587,4.031,588,3.038,589,2.424,590,3.038,591,3.038,592,3.038,593,3.435,594,3.038,595,3.435,596,3.435,597,3.435,598,3.435,599,3.435,600,3.435,601,3.435,602,3.435,603,3.435,604,3.435]],["title/modules/ContactPersonModule.html",[123,1.322,137,3.146]],["body/modules/ContactPersonModule.html",[0,0.328,3,0.105,4,0.094,5,0.094,11,0.009,17,0.15,19,0.105,20,0.007,21,0.007,55,0.864,121,2.161,123,2.357,125,2.446,126,2.446,127,2.589,128,2.589,129,2.446,130,3.527,131,2.589,137,6.171,148,3.234,149,2.589,150,2.589,152,2.666,486,3.927,487,3.144,571,5.973,587,5.84,588,5.161,605,5.161,606,5.161,607,5.837,608,5.161,609,5.837]],["title/injectables/ContactPersonService.html",[178,0.969,587,2.977]],["body/injectables/ContactPersonService.html",[0,0.178,3,0.057,4,0.051,5,0.051,7,0.151,10,0.361,11,0.009,12,1.074,15,0.411,17,0.131,19,0.057,20,0.004,21,0.004,36,1.064,38,1.198,42,1.607,43,1.143,44,1.607,50,1.496,55,0.471,73,0.964,76,1.487,93,1.707,99,2.35,112,2.194,178,1.041,180,1.198,186,2.366,203,2.838,222,2.903,228,3.381,242,0.754,260,3.472,311,1.453,344,2.064,345,2.765,353,1.789,359,1.41,374,2.769,489,1.546,495,2.406,503,1.85,529,2.256,530,2.49,532,2.788,536,3.305,573,4.236,574,4.528,576,4.236,579,5.674,580,4.236,581,3.708,582,4.068,587,3.199,589,2.244,590,2.812,591,2.812,592,2.812,610,2.812,611,3.381,612,3.381,613,3.179,614,3.179,615,3.179,616,3.179,617,3.381,618,3.179,619,3.381,620,3.179,621,4.791,622,2.35,623,2.065,624,2.802,625,3.179,626,2.388,627,2.569,628,2.388,629,2.388,630,3.044,631,3.179,632,2.244,633,2.123,634,2.244,635,3.179,636,2.569,637,3.179,638,4.791,639,3.179,640,3.179,641,2.569]],["title/injectables/ContactService.html",[178,0.969,546,2.977]],["body/injectables/ContactService.html",[0,0.196,3,0.063,4,0.056,5,0.056,7,0.166,10,0.357,11,0.009,12,1.071,15,0.407,17,0.129,19,0.063,20,0.005,21,0.005,36,1.143,38,1.318,42,1.592,43,1.036,44,1.592,50,1.462,55,0.518,73,1.061,76,1.086,93,1.667,99,2.487,112,2.273,178,1.118,180,1.318,186,2.344,203,2.919,222,2.995,260,3.229,311,1.598,344,2.217,345,2.898,359,1.551,374,2.759,489,1.7,495,2.584,498,2.873,503,2.035,528,3.093,529,2.423,530,2.673,532,2.993,533,4.746,536,3.631,537,3.63,538,6.337,539,4.746,546,3.435,548,2.468,549,3.093,550,3.093,551,3.093,581,1.884,611,3.63,612,3.63,617,3.63,619,3.63,624,2.5,630,3.268,632,2.468,633,2.336,634,2.468,636,2.827,642,3.093,643,3.498,644,3.498,645,3.498,646,3.498,647,3.498,648,5.143,649,4.582,650,3.498,651,3.498,652,2.827,653,3.093]],["title/classes/CreateCallUserDto.html",[0,0.25,440,3.146]],["body/classes/CreateCallUserDto.html",[0,0.41,2,0.996,3,0.106,4,0.094,5,0.094,7,0.279,8,1.391,10,0.397,11,0.008,12,0.865,13,1.207,14,2.11,15,0.452,17,0.106,18,1.191,19,0.106,20,0.007,21,0.007,440,5.155,496,6.435,497,6.435,498,3.751,654,5.177,655,3.494,656,5.854,657,2.362,658,5.854,659,5.854,660,5.854,661,4.731,662,4.251,663,3.91,664,4.731]],["title/classes/CreateContactDto.html",[0,0.25,533,3.146]],["body/classes/CreateContactDto.html",[0,0.42,2,1.037,3,0.11,4,0.098,5,0.098,7,0.29,8,1.426,10,0.373,11,0.008,12,0.887,13,1.135,14,1.984,15,0.425,17,0.11,18,1.24,19,0.11,20,0.007,21,0.007,498,3.819,533,5.286,649,6.091,655,3.139,657,2.122,662,4.359,663,5.003,665,5.391,666,3.874,667,6.096,668,4.926,669,6.096,670,2.485]],["title/classes/CreateContactPersontDto.html",[0,0.25,574,3.146]],["body/classes/CreateContactPersontDto.html",[0,0.396,2,0.942,3,0.1,4,0.089,5,0.089,7,0.263,8,1.342,10,0.407,11,0.008,12,1.051,13,1.239,14,2.056,15,0.464,17,0.1,18,1.126,19,0.1,20,0.006,21,0.006,43,1.122,353,2.408,574,4.976,622,3.163,623,2.78,657,2.198,670,2.256,671,4.894,672,3.095,673,5.534,674,3.664,675,4.48,676,5.534,677,3.095,678,5.534,679,5.534,680,3.127,681,2.607,682,3.427,683,3.321,684,2.876]],["title/classes/CreateDirectorDto.html",[0,0.25,685,3.146]],["body/classes/CreateDirectorDto.html",[0,0.396,2,0.942,3,0.1,4,0.089,5,0.089,7,0.263,8,1.342,10,0.407,11,0.008,12,1.051,13,1.239,14,2.056,15,0.464,17,0.1,18,1.126,19,0.1,20,0.006,21,0.006,43,1.122,353,2.408,622,3.163,623,2.78,657,2.198,670,2.256,672,3.095,674,3.664,675,4.48,677,3.095,680,3.127,681,2.607,682,3.427,683,3.321,684,2.876,685,4.976,686,4.894,687,5.534,688,5.534,689,5.534,690,5.534]],["title/classes/CreateFiszkaDto.html",[0,0.25,691,3.146]],["body/classes/CreateFiszkaDto.html",[0,0.36,2,0.815,3,0.086,4,0.077,5,0.077,7,0.228,8,1.221,10,0.422,11,0.009,12,0.982,13,1.284,14,2.047,15,0.481,17,0.086,18,0.974,19,0.086,20,0.006,21,0.006,43,0.927,353,1.991,498,3.021,622,2.615,623,2.298,657,2.282,662,3.733,666,3.043,670,1.952,672,2.678,674,3.759,675,4.076,680,2.845,681,2.256,682,3.516,683,3.407,691,4.527,692,4.235,693,3.733,694,3.733,695,1.804,696,3.379,697,4.789,698,2.907,699,4.789,700,5.672,701,4.045,702,4.789,703,4.789,704,4.789,705,3.379,706,4.789,707,4.789,708,3.733,709,2.579,710,2.405,711,4.235,712,4.789,713,4.789,714,4.789,715,2.579,716,2.907,717,4.789,718,4.789,719,3.87,720,4.789,721,3.87]],["title/classes/CreateGroupDto.html",[0,0.25,722,3.146]],["body/classes/CreateGroupDto.html",[0,0.384,2,0.9,3,0.096,4,0.085,5,0.085,7,0.252,8,1.304,10,0.425,11,0.009,12,0.986,13,1.292,14,2.299,15,0.484,17,0.124,18,1.076,19,0.096,20,0.006,21,0.006,242,1.255,657,2.415,722,4.834,723,4.678,724,5.36,725,5.145,726,5.145,727,5.145,728,5.145,729,5.145,730,5.29,731,4.834,732,4.275,733,5.29,734,5.29,735,5.29,736,5.29,737,2.417,738,5.29,739,2.572,740,4.275,741,4.275,742,3.733,743,4.275,744,4.275,745,4.275]],["title/classes/CreateInterViewDto.html",[0,0.25,746,3.146]],["body/classes/CreateInterViewDto.html",[0,0.387,2,0.91,3,0.097,4,0.086,5,0.086,7,0.255,8,1.314,10,0.416,11,0.009,12,0.817,13,1.266,14,2.212,15,0.474,17,0.125,18,1.088,19,0.097,20,0.006,21,0.006,242,1.269,367,4.443,581,4.113,655,3.499,657,2.366,695,3.039,709,2.881,710,2.687,715,3.716,716,3.247,746,4.868,747,4.73,748,5.389,749,5.389,750,6.752,751,5.349,752,5.349,753,5.349,754,5.349,755,4.73,756,5.349,757,5.349]],["title/classes/CreateRentalCostDto.html",[0,0.25,758,3.146]],["body/classes/CreateRentalCostDto.html",[0,0.42,2,1.034,3,0.11,4,0.098,5,0.098,7,0.289,8,1.423,10,0.373,11,0.008,13,1.133,14,1.61,15,0.425,17,0.135,18,1.236,19,0.11,20,0.007,21,0.007,69,4.058,657,2.294,758,5.276,759,5.373,760,5.616,761,5.616,762,6.543,763,6.041,764,6.077,765,6.077,766,6.543,767,4.91,768,4.91]],["title/classes/CreateScheduleDaysDto.html",[0,0.25,769,3.146]],["body/classes/CreateScheduleDaysDto.html",[0,0.42,2,1.034,3,0.11,4,0.098,5,0.098,7,0.289,8,1.423,10,0.373,11,0.008,13,1.133,14,2.238,15,0.425,17,0.135,18,1.236,19,0.11,20,0.007,21,0.007,242,1.442,695,2.817,731,5.714,739,2.954,742,4.288,769,5.276,770,5.373,771,6.543,772,6.543,773,5.373,774,6.077,775,6.077]],["title/classes/CreateScheduleDto.html",[0,0.25,776,3.146]],["body/classes/CreateScheduleDto.html",[0,0.396,2,0.942,3,0.1,4,0.089,5,0.089,7,0.263,8,1.342,10,0.407,11,0.008,12,0.835,13,1.239,15,0.464,17,0.127,18,1.126,19,0.1,20,0.006,21,0.006,242,1.313,655,3.536,657,2.484,670,2.874,693,4.515,694,4.515,695,2.656,708,4.103,709,2.981,710,2.78,715,2.981,716,3.36,776,4.976,777,4.894,778,6.602,779,4.894,780,5.534,781,4.894,782,5.534,783,5.534,784,5.534,785,4.894]],["title/classes/CreateSchoolDto.html",[0,0.25,786,2.977]],["body/classes/CreateSchoolDto.html",[0,0.308,2,0.65,3,0.069,4,0.061,5,0.061,7,0.182,8,1.044,10,0.448,11,0.009,12,1.055,13,1.326,14,2.28,15,0.497,17,0.099,18,0.777,19,0.069,20,0.005,21,0.005,43,0.927,242,0.906,353,1.99,374,2.037,498,3.02,521,2.694,623,2.297,657,1.985,661,3.085,662,3.731,664,4.429,670,1.556,672,2.135,674,1.984,675,3.483,680,2.431,681,1.798,682,1.856,683,2.582,684,1.984,695,2.065,705,2.694,708,3.189,709,2.056,710,1.918,715,2.056,737,1.744,739,1.856,786,3.661,787,3.376,788,4.817,789,4.117,790,4.817,791,4.817,792,5.802,793,4.283,794,4.817,795,4.117,796,3.818,797,3.376,798,3.818,799,3.818,800,3.818,801,3.818,802,3.818,803,3.376,804,3.818,805,3.818,806,3.818,807,3.818,808,3.376,809,3.818,810,5.182,811,3.818,812,3.376,813,3.818,814,3.818,815,3.818,816,3.376,817,3.376,818,3.818,819,3.376,820,3.818,821,3.376,822,3.376,823,3.376,824,3.085,825,3.376,826,3.085,827,3.376,828,3.085,829,3.376,830,3.376,831,3.376,832,3.376,833,3.376,834,3.376]],["title/classes/CreateUserForMGTMTDto.html",[0,0.25,835,2.833]],["body/classes/CreateUserForMGTMTDto.html",[0,0.383,2,0.728,3,0.077,4,0.069,5,0.069,7,0.204,8,1.131,10,0.418,11,0.008,12,1.061,13,1.27,14,2.372,15,0.476,17,0.107,18,0.87,19,0.107,20,0.005,21,0.005,43,1.066,241,2.726,242,1.015,353,2.288,374,2.342,521,3.018,622,3.005,623,2.641,657,2.088,670,2.781,674,3.087,675,3.774,680,3.026,681,2.014,682,2.887,683,2.797,684,3.087,705,3.018,710,2.148,737,3.117,739,2.079,810,4.799,835,3.774,836,3.456,837,4.684,838,5.326,839,4.277,840,3.213,841,4.277,842,3.456,843,4.277,844,4.277,845,4.277,846,4.277,847,4.277,848,4.277,849,4.277,850,3.018,851,2.718,852,3.782,853,3.966,854,4.191,855,3.018]],["title/classes/CreateUserForRdDto.html",[0,0.25,851,2.833]],["body/classes/CreateUserForRdDto.html",[0,0.384,2,0.731,3,0.078,4,0.069,5,0.069,7,0.204,8,1.134,10,0.418,11,0.008,12,1.061,13,1.272,14,2.361,15,0.477,17,0.108,18,0.874,19,0.108,20,0.005,21,0.005,43,1.068,241,2.729,242,1.019,353,2.292,374,2.346,521,3.032,622,3.011,623,2.646,657,2.092,670,2.788,680,3.033,681,2.023,682,2.896,683,2.806,684,3.096,705,3.032,710,2.158,737,3.124,739,2.088,810,5.526,835,2.73,836,3.472,837,4.693,838,5.332,840,3.227,842,3.472,850,3.032,851,3.785,852,3.799,853,3.979,854,4.204,855,3.032,856,4.296,857,4.296,858,4.296,859,4.296,860,4.296,861,4.296,862,4.296,863,4.296,864,4.296,865,4.296,866,4.296]],["title/classes/DecodeDto.html",[0,0.25,363,3.146]],["body/classes/DecodeDto.html",[0,0.327,2,0.99,3,0.105,4,0.094,5,0.094,7,0.277,8,1.386,10,0.436,11,0.008,12,0.862,15,0.496,17,0.105,19,0.105,20,0.007,21,0.007,112,2.207,241,2.706,242,1.381,353,2.259,363,5.136,374,2.312,695,2.992,721,4.702,867,5.146,868,7.278,869,7.278,870,5.819,871,5.819,872,5.819,873,5.819,874,5.819,875,5.819,876,5.819,877,5.819,878,5.819,879,5.819,880,5.819]],["title/controllers/DirectorController.html",[119,1.352,881,3.349]],["body/controllers/DirectorController.html",[0,0.199,3,0.064,4,0.057,5,0.057,7,0.169,10,0.307,11,0.009,12,0.965,13,0.933,15,0.349,17,0.149,19,0.064,20,0.005,21,0.005,36,1.155,42,1.367,43,0.889,44,1.367,50,1.337,55,0.526,70,2.838,72,1.622,73,1.077,93,1.679,112,1.577,119,1.077,121,1.052,184,1.672,186,2.255,194,4.036,195,3.781,196,3.548,197,3.314,198,3.402,199,2.155,203,2.767,208,3.197,222,3.243,224,1.672,225,1.726,226,1.672,238,1.672,241,1.154,242,0.842,243,1.574,245,1.53,250,1.726,396,4.201,453,1.783,454,1.845,455,1.845,462,3.905,529,2.449,530,2.702,531,3.669,532,2.066,534,2.505,536,3.441,537,2.505,542,2.666,545,1.726,552,1.985,555,2.666,556,2.256,559,3.58,560,2.371,561,2.666,564,3.139,685,4.78,881,3.905,882,3.139,883,3.139,884,3.55,885,4.78,886,3.139,887,3.55,888,3.55,889,3.55,890,4.109,891,3.139,892,3.139,893,3.139,894,2.505,895,3.139,896,3.55,897,3.55,898,3.55,899,3.55,900,3.55,901,3.139,902,3.55,903,5.199,904,6.773,905,6.661,906,4.78,907,3.55,908,4.971,909,6.152,910,6.152,911,2.505,912,2.666,913,2.505]],["title/modules/DirectorModule.html",[123,1.322,138,3.146]],["body/modules/DirectorModule.html",[0,0.329,3,0.106,4,0.094,5,0.094,11,0.009,17,0.151,19,0.106,20,0.007,21,0.007,55,0.867,121,2.166,123,2.361,125,2.453,126,2.453,127,2.597,128,2.597,129,2.453,130,3.532,131,2.597,138,6.176,148,3.24,149,2.597,150,2.597,152,2.675,486,3.935,487,3.153,881,5.982,890,5.845,891,5.177,914,5.177,915,5.177,916,5.854,917,5.854]],["title/injectables/DirectorService.html",[178,0.969,890,2.977]],["body/injectables/DirectorService.html",[0,0.192,3,0.062,4,0.055,5,0.055,7,0.163,10,0.354,11,0.009,12,1.058,15,0.403,17,0.128,19,0.062,20,0.005,21,0.005,36,1.125,38,1.29,42,1.578,43,1.166,44,1.578,50,1.447,55,0.507,73,1.038,76,1.571,93,1.65,99,2.064,112,2.154,178,1.1,180,1.29,186,2.333,203,2.901,222,2.875,260,3.536,344,2.181,345,2.868,353,2.066,359,1.518,374,2.749,489,1.664,495,3.026,503,1.992,529,2.384,530,2.631,532,2.946,536,3.608,537,3.572,581,1.844,611,3.572,612,3.572,617,3.572,619,3.572,622,2.713,623,2.384,624,1.664,626,3.802,627,4.091,628,3.802,629,3.802,630,3.828,632,2.416,633,2.286,634,2.416,685,4.697,883,4.476,885,4.697,890,3.381,892,3.027,893,3.027,894,2.416,895,3.027,918,3.027,919,3.423,920,3.423,921,3.423,922,3.423,923,3.423,924,3.423,925,3.027,926,2.766,927,3.423,928,3.423,929,3.423]],["title/injectables/DtoValidationPipe.html",[178,0.969,930,3.349]],["body/injectables/DtoValidationPipe.html",[0,0.271,3,0.087,4,0.078,5,0.078,7,0.23,10,0.322,11,0.009,15,0.367,17,0.15,19,0.087,20,0.006,21,0.006,34,2.21,36,1.435,38,1.822,42,1.435,43,0.934,44,1.435,50,1.051,55,0.716,74,3.413,75,1.822,81,3.23,86,3.807,93,1.199,178,1.404,180,1.822,186,2.014,224,2.278,294,2.514,308,3.23,311,2.95,545,2.351,695,1.822,701,3.611,786,4.313,930,4.851,931,4.277,932,4.557,933,3.633,934,4.837,935,4.313,936,4.557,937,4.855,938,5.475,939,4.837,940,4.557,941,5.461,942,3.633,943,4.557,944,3.413,945,4.837,946,3.909,947,3.633,948,4.313,949,3.909,950,3.413,951,3.633,952,3.633,953,6.532,954,5.711,955,5.218]],["title/injectables/DtoValidatorPipe.html",[178,0.969,956,3.349]],["body/injectables/DtoValidatorPipe.html",[0,0.252,3,0.081,4,0.072,5,0.072,7,0.214,10,0.307,11,0.009,15,0.349,17,0.15,19,0.081,20,0.006,21,0.006,34,2.055,36,1.366,38,1.694,42,1.366,43,0.889,44,1.366,50,0.977,55,0.666,74,3.174,75,1.694,76,1.396,81,3.003,86,3.713,93,1.115,178,1.336,180,1.694,186,1.94,224,2.118,241,1.463,242,1.067,294,2.337,308,3.003,311,3.44,545,2.186,695,1.694,701,3.438,835,3.907,851,3.907,932,4.338,933,3.378,935,4.106,936,4.338,937,4.678,938,5.314,940,4.338,941,5.262,942,3.378,943,4.338,944,3.174,947,3.378,950,3.174,951,3.378,952,3.378,953,6.733,954,5.436,955,6.084,956,4.618,957,3.977,958,4.497,959,4.497,960,3.977,961,3.634,962,3.732,963,3.732,964,3.378,965,4.497,966,4.497,967,6.148]],["title/injectables/DtoValidatorSelfPipe.html",[178,0.969,968,3.349]],["body/injectables/DtoValidatorSelfPipe.html",[0,0.287,3,0.092,4,0.082,5,0.082,7,0.243,10,0.334,11,0.009,15,0.38,17,0.149,19,0.092,20,0.006,21,0.006,34,2.333,36,1.487,38,1.924,42,1.487,43,0.968,44,1.487,50,1.11,55,0.756,74,3.604,75,1.924,81,3.411,86,3.876,93,1.266,178,1.455,180,1.924,186,2.069,294,2.654,308,3.411,311,2.333,695,1.924,701,3.744,932,4.724,933,3.836,935,4.471,936,4.724,937,4.987,938,5.593,940,4.724,941,5.609,942,3.836,943,4.724,944,3.604,947,3.836,950,3.604,951,3.836,952,3.836,953,6.405,955,4.127,960,4.516,964,3.836,968,5.028,969,4.516,970,5.107,971,5.107,972,4.064]],["title/classes/EditContactDto.html",[0,0.25,539,3.146]],["body/classes/EditContactDto.html",[0,0.42,2,1.037,3,0.11,4,0.098,5,0.098,7,0.29,8,1.426,10,0.373,11,0.008,12,0.887,13,1.135,14,1.615,15,0.425,17,0.11,18,1.24,19,0.11,20,0.007,21,0.007,498,3.819,539,5.286,649,6.091,655,3.139,657,2.297,662,4.359,663,5.003,666,3.874,670,2.485,973,5.391,974,6.096,975,5.391,976,6.096]],["title/classes/EditContactPersontDto.html",[0,0.25,582,3.146]],["body/classes/EditContactPersontDto.html",[0,0.396,2,0.944,3,0.1,4,0.089,5,0.089,7,0.264,8,1.345,10,0.408,11,0.008,12,1.052,13,1.24,15,0.465,17,0.1,18,1.129,19,0.1,20,0.006,21,0.006,43,1.123,353,2.412,582,4.985,622,3.168,623,2.784,657,2.393,670,2.263,672,3.104,674,3.671,677,3.104,680,3.133,681,2.614,682,3.434,683,3.327,684,2.884,698,4.288,977,4.908,978,5.55,979,5.55,980,5.55,981,5.55]],["title/classes/EditDirectorDto.html",[0,0.25,885,3.146]],["body/classes/EditDirectorDto.html",[0,0.396,2,0.942,3,0.1,4,0.089,5,0.089,7,0.263,8,1.342,10,0.407,11,0.008,12,1.051,13,1.239,14,1.466,15,0.464,17,0.1,18,1.126,19,0.1,20,0.006,21,0.006,43,1.122,353,2.408,622,3.163,623,2.78,657,2.391,670,2.256,672,3.095,674,3.664,677,3.095,680,3.127,681,2.607,682,3.427,683,3.321,684,2.876,698,4.28,885,4.976,982,4.894,983,5.534,984,5.534,985,5.534,986,5.534]],["title/classes/EditFiszkaDto.html",[0,0.25,987,3.146]],["body/classes/EditFiszkaDto.html",[0,0.349,2,0.778,3,0.083,4,0.074,5,0.074,7,0.218,8,1.184,10,0.425,11,0.009,12,1.052,13,1.291,15,0.484,17,0.083,18,0.93,19,0.083,20,0.006,21,0.006,43,1.021,353,2.193,498,3.328,622,2.88,623,2.531,657,2.474,662,3.618,666,2.905,670,1.864,672,2.557,674,3.672,677,2.557,680,2.758,681,2.154,682,3.434,683,3.328,693,4.111,694,4.111,695,2.342,696,3.227,698,4.289,700,5.498,701,3.951,708,3.618,709,2.463,710,2.297,711,4.043,715,2.463,716,2.776,719,3.695,737,2.84,987,4.388,988,4.043,989,5.709,990,4.572,991,4.572,992,4.572,993,4.572,994,4.572,995,4.572,996,4.572,997,4.572]],["title/classes/EditGroupDto.html",[0,0.25,998,3.146]],["body/classes/EditGroupDto.html",[0,0.384,2,0.9,3,0.096,4,0.085,5,0.085,7,0.252,8,1.304,10,0.425,11,0.009,12,0.986,13,1.292,14,1.401,15,0.484,17,0.124,18,1.076,19,0.096,20,0.006,21,0.006,242,1.255,657,2.572,724,5.36,725,5.145,726,5.145,727,5.145,728,5.145,729,5.145,731,4.834,732,4.275,737,2.417,739,2.572,740,4.275,741,4.275,742,3.733,743,4.275,744,4.275,745,4.275,998,4.834,999,4.678,1000,5.29,1001,5.29,1002,5.29,1003,5.29,1004,5.29,1005,5.29]],["title/classes/EditInterViewDto.html",[0,0.25,1006,3.146]],["body/classes/EditInterViewDto.html",[0,0.397,2,0.947,3,0.1,4,0.09,5,0.09,7,0.265,8,1.347,10,0.408,11,0.008,13,1.241,15,0.465,17,0.128,18,1.133,19,0.1,20,0.006,21,0.006,242,1.321,655,3.542,657,2.487,695,3.085,696,3.928,708,4.118,709,2.998,710,2.796,715,3.812,716,3.379,748,5.491,749,5.491,1006,4.994,1007,4.922,1008,5.718,1009,5.566,1010,5.566,1011,4.922,1012,5.566,1013,7.077,1014,5.566,1015,5.566]],["title/classes/EditRentalCostDto.html",[0,0.25,1016,3.146]],["body/classes/EditRentalCostDto.html",[0,0.42,2,1.034,3,0.11,4,0.098,5,0.098,7,0.289,8,1.423,10,0.373,11,0.008,13,1.133,14,1.61,15,0.425,17,0.135,18,1.236,19,0.11,20,0.007,21,0.007,69,4.058,657,2.294,760,5.616,761,5.616,762,6.543,763,6.041,766,6.543,767,4.91,768,4.91,1016,5.276,1017,5.373,1018,6.077,1019,6.077]],["title/classes/EditScheduleDaysDto.html",[0,0.25,1020,3.146]],["body/classes/EditScheduleDaysDto.html",[0,0.42,2,1.034,3,0.11,4,0.098,5,0.098,7,0.289,8,1.423,10,0.373,11,0.008,13,1.133,14,2.238,15,0.425,17,0.135,18,1.236,19,0.11,20,0.007,21,0.007,242,1.442,695,2.817,731,5.714,739,2.954,742,4.288,771,6.543,772,6.543,773,5.373,1020,5.276,1021,5.373,1022,6.077,1023,6.077]],["title/classes/EditScheduleDto.html",[0,0.25,1024,3.146]],["body/classes/EditScheduleDto.html",[0,0.408,2,0.99,3,0.105,4,0.094,5,0.094,7,0.277,8,1.386,10,0.396,11,0.008,12,0.862,13,1.204,15,0.451,17,0.105,18,1.184,19,0.105,20,0.007,21,0.007,655,3.589,657,2.427,670,2.967,693,4.621,694,4.621,695,2.742,708,4.235,709,3.134,710,2.923,715,3.134,716,3.533,779,5.146,781,5.146,1024,5.136,1025,5.146,1026,5.819,1027,5.819,1028,5.819]],["title/classes/EditSchoolDto.html",[0,0.25,948,2.977]],["body/classes/EditSchoolDto.html",[0,0.316,2,0.674,3,0.071,4,0.064,5,0.064,7,0.188,8,1.071,10,0.448,11,0.009,12,1.049,13,1.324,15,0.496,17,0.102,18,0.806,19,0.071,20,0.005,21,0.005,43,0.946,242,0.939,353,2.031,498,3.082,521,2.794,623,2.344,657,2.523,661,3.2,662,3.808,664,4.546,666,2.516,670,1.614,672,2.214,677,2.214,680,2.495,681,1.865,683,1.865,684,2.058,695,2.119,698,2.404,708,3.274,709,2.133,710,1.989,715,2.133,737,1.809,739,1.925,788,4.915,789,4.226,790,4.915,791,4.915,792,5.873,793,4.37,794,4.915,795,4.226,797,3.501,803,3.501,816,3.501,817,3.501,821,3.501,822,3.501,823,3.501,824,3.2,825,3.501,826,3.2,827,3.501,828,3.2,829,3.501,830,3.501,831,3.501,832,3.501,833,3.501,834,3.501,948,3.757,1029,3.501,1030,3.959,1031,3.959,1032,3.959,1033,3.959,1034,3.959,1035,3.959,1036,3.959,1037,3.959,1038,3.959,1039,3.959,1040,3.959,1041,3.959,1042,3.959,1043,3.959,1044,3.959,1045,3.959,1046,3.959,1047,3.959]],["title/classes/EditSelfDto.html",[0,0.25,972,2.707]],["body/classes/EditSelfDto.html",[0,0.434,2,0.725,3,0.077,4,0.068,5,0.068,7,0.203,8,1.127,10,0.339,11,0.009,12,1.09,13,1.032,15,0.387,17,0.107,18,0.866,19,0.133,20,0.005,21,0.005,43,0.984,241,2.67,242,1.01,353,2.484,374,1.881,417,5.345,622,2.775,623,2.867,657,2.612,670,1.736,677,2.381,680,3.263,681,2.006,682,3.576,683,3.465,684,3.537,737,3.109,739,2.07,837,4.325,838,5.217,850,3.005,853,3.954,854,4.178,855,3.005,962,2.585,963,2.585,972,3.594,1048,3.198,1049,3.441,1050,4.258,1051,4.258,1052,4.258,1053,4.447,1054,3.198]],["title/classes/EditUserForMGTMTDto.html",[0,0.25,962,2.707]],["body/classes/EditUserForMGTMTDto.html",[0,0.41,2,0.625,3,0.066,4,0.059,5,0.059,7,0.175,8,1.015,10,0.416,11,0.009,12,1.082,13,1.264,15,0.474,17,0.096,18,0.747,19,0.124,20,0.005,21,0.005,43,1.056,241,2.713,242,0.871,353,2.366,374,2.186,417,5.091,431,3.761,622,2.979,623,2.731,657,2.594,670,1.497,674,2.77,677,2.053,680,3.052,681,1.729,682,3.345,683,3.242,684,3.26,698,3.235,737,3.339,739,1.785,837,4.644,838,5.3,850,2.591,853,3.559,854,3.761,855,2.591,962,3.235,963,2.229,972,2.229,1048,2.758,1049,2.967,1053,4.003,1054,2.758,1055,3.672,1056,3.672,1057,3.672,1058,3.247,1059,3.672,1060,3.672,1061,3.672,1062,3.672,1063,3.672,1064,3.672,1065,3.672,1066,3.672]],["title/classes/EditUserForRdDto.html",[0,0.25,963,2.707]],["body/classes/EditUserForRdDto.html",[0,0.413,2,0.637,3,0.068,4,0.06,5,0.06,7,0.178,8,1.029,10,0.411,11,0.009,12,1.082,13,1.251,15,0.469,17,0.098,18,0.762,19,0.125,20,0.005,21,0.005,43,1.065,241,2.725,242,0.888,353,2.382,374,1.717,417,5.125,431,3.814,622,3.002,623,2.749,657,2.593,670,1.526,674,2.809,677,2.093,680,3.08,681,1.763,682,3.376,683,3.271,684,3.296,698,3.281,737,3.364,739,1.82,837,4.679,838,5.323,850,2.642,853,3.609,854,3.814,855,2.642,962,2.273,963,3.281,972,2.273,1048,2.812,1049,3.025,1053,4.059,1054,2.812,1058,3.31,1067,3.743,1068,3.743,1069,3.743,1070,3.743,1071,3.743,1072,3.743,1073,3.743,1074,3.743,1075,3.743,1076,3.743]],["title/controllers/FiszkaController.html",[119,1.352,1077,3.349]],["body/controllers/FiszkaController.html",[0,0.112,3,0.036,4,0.032,5,0.032,7,0.095,10,0.358,11,0.009,12,1.033,13,1.088,15,0.408,17,0.132,19,0.036,20,0.003,21,0.003,26,3.477,28,1.263,29,1.328,36,0.733,42,1.595,43,1.038,44,1.595,50,1.56,55,0.294,70,3.074,72,0.908,73,0.603,75,1.856,93,1.854,112,1.983,119,0.603,121,0.589,184,0.936,186,2.407,194,3.98,195,3.771,196,3.888,197,1.778,198,3.514,199,2.004,203,2.793,208,1.715,222,3.169,224,0.936,225,0.966,226,0.936,227,1.263,228,1.403,238,0.936,241,0.647,242,0.472,243,0.882,245,0.857,250,0.966,265,4.428,441,3.981,444,4.911,450,4.787,453,0.999,454,1.033,455,1.033,462,3.701,463,3.742,472,3.981,545,0.966,552,1.112,691,3.477,695,1.594,912,1.493,913,1.403,987,4.408,1077,2.479,1078,1.758,1079,2.919,1080,2.919,1081,2.919,1082,3.301,1083,2.919,1084,2.919,1085,2.919,1086,2.919,1087,2.919,1088,2.919,1089,2.919,1090,1.758,1091,1.758,1092,1.988,1093,1.988,1094,4.911,1095,1.758,1096,2.919,1097,1.988,1098,1.988,1099,4.428,1100,1.988,1101,1.988,1102,1.988,1103,1.988,1104,1.988,1105,1.988,1106,1.758,1107,4.357,1108,1.988,1109,1.988,1110,1.758,1111,1.988,1112,1.988,1113,1.758,1114,1.988,1115,1.988,1116,1.758,1117,4.357,1118,1.988,1119,1.988,1120,1.758,1121,1.988,1122,1.988,1123,1.988,1124,1.988,1125,1.988,1126,1.988,1127,1.988,1128,1.988,1129,2.329,1130,1.607,1131,2.826,1132,1.758,1133,1.758,1134,1.758,1135,1.758,1136,1.758,1137,2.329,1138,1.988,1139,1.988,1140,1.988,1141,1.988,1142,1.988,1143,1.758,1144,1.758,1145,3.301,1146,1.988,1147,1.988,1148,1.988,1149,1.988,1150,1.988,1151,1.988,1152,1.988,1153,1.988,1154,1.988,1155,1.758,1156,1.988,1157,1.988,1158,1.988,1159,1.988,1160,3.742,1161,1.988,1162,1.988,1163,1.988,1164,1.988,1165,1.988,1166,1.988,1167,1.988,1168,3.301,1169,1.988,1170,1.988,1171,1.988,1172,1.988,1173,1.988,1174,2.479,1175,1.988,1176,1.988,1177,1.988,1178,1.988,1179,1.988,1180,1.988,1181,1.988,1182,2.919,1183,2.569,1184,3.701,1185,2.919,1186,2.667,1187,1.988,1188,1.493,1189,1.988,1190,3.42,1191,5.213,1192,1.758,1193,4.833,1194,4.927,1195,6.246,1196,4.927,1197,3.981,1198,1.988,1199,1.988,1200,1.988,1201,1.607,1202,1.988]],["title/modules/FiszkaModule.html",[123,1.322,139,3.146]],["body/modules/FiszkaModule.html",[0,0.333,3,0.107,4,0.095,5,0.095,11,0.009,17,0.145,19,0.107,20,0.007,21,0.007,55,0.877,121,2.182,123,2.374,125,2.483,126,2.483,127,2.629,128,2.629,129,2.483,130,3.552,131,2.629,139,6.195,148,3.265,149,2.629,150,2.629,152,2.708,1077,6.015,1131,5.862,1132,5.241,1203,5.241,1204,5.241,1205,5.927,1206,5.927]],["title/injectables/FiszkaService.html",[178,0.969,1131,2.977]],["body/injectables/FiszkaService.html",[0,0.098,3,0.032,4,0.028,5,0.028,7,0.083,10,0.359,11,0.009,12,1.069,15,0.408,17,0.1,19,0.032,20,0.003,21,0.003,24,3.032,26,3.204,28,3.932,29,1.167,36,0.658,38,0.658,42,1.598,43,1.18,44,1.598,50,1.53,55,0.259,73,0.53,75,1.71,76,1.713,91,1.488,93,1.783,99,2.25,112,2.44,178,0.644,180,0.658,186,2.388,203,2.777,222,2.833,227,1.11,260,3.923,311,2.827,344,1.276,345,1.956,353,1.713,359,0.775,367,3.6,374,1.966,444,4.146,489,0.849,495,3.351,498,2.6,503,1.017,622,2.8,623,1.977,626,1.313,627,1.412,628,1.313,629,1.313,652,1.412,691,3.204,693,3.212,694,3.212,987,4.151,989,4.106,1079,2.619,1080,2.619,1081,2.619,1083,3.409,1084,2.619,1085,2.619,1086,2.619,1087,2.619,1088,2.619,1089,2.619,1090,2.619,1094,5.158,1095,2.619,1099,4.146,1106,2.619,1107,5.471,1110,2.619,1113,2.619,1116,2.619,1120,2.619,1129,5.582,1131,1.978,1133,1.545,1134,1.545,1135,1.545,1136,1.545,1183,2.34,1207,1.545,1208,2.962,1209,2.394,1210,1.747,1211,1.747,1212,1.747,1213,2.962,1214,1.747,1215,2.962,1216,1.747,1217,1.747,1218,1.747,1219,1.747,1220,1.747,1221,2.962,1222,1.747,1223,1.747,1224,2.962,1225,1.747,1226,2.962,1227,1.747,1228,2.962,1229,4.493,1230,2.09,1231,4.106,1232,4.146,1233,2.962,1234,2.962,1235,2.962,1236,2.962,1237,2.962,1238,3.409,1239,2.962,1240,1.747,1241,1.545,1242,1.545,1243,1.545,1244,1.412,1245,1.747,1246,1.167,1247,2.962,1248,2.962,1249,2.962,1250,1.747,1251,1.313,1252,1.747]],["title/classes/GetCallUserHistoryDto.html",[0,0.25,459,3.146]],["body/classes/GetCallUserHistoryDto.html",[0,0.41,2,0.996,3,0.106,4,0.094,5,0.094,7,0.279,8,1.391,10,0.397,11,0.008,12,0.865,13,1.207,14,1.935,15,0.452,17,0.106,18,1.191,19,0.106,20,0.007,21,0.007,459,5.155,496,6.435,497,6.435,498,3.751,655,3.494,657,2.256,662,4.251,663,5.318,666,3.72,668,4.731,975,5.177,1253,5.177,1254,5.854,1255,5.854,1256,5.854]],["title/classes/GetContactDto.html",[0,0.25,548,3.146]],["body/classes/GetContactDto.html",[0,0.42,2,1.037,3,0.11,4,0.098,5,0.098,7,0.29,8,1.426,10,0.373,11,0.008,12,0.887,13,1.135,14,1.984,15,0.425,17,0.11,18,1.24,19,0.11,20,0.007,21,0.007,498,3.819,548,5.286,649,6.091,655,3.139,657,2.122,662,4.359,663,5.003,666,3.874,668,4.926,670,2.485,1257,5.391,1258,6.096,1259,6.096]],["title/classes/GetContactPersontDto.html",[0,0.25,589,3.146]],["body/classes/GetContactPersontDto.html",[0,0.395,2,0.939,3,0.1,4,0.089,5,0.089,7,0.263,8,1.34,10,0.42,11,0.008,12,1.061,13,1.278,14,2.321,15,0.479,17,0.1,18,1.123,19,0.1,20,0.006,21,0.006,43,1.12,112,2.135,353,2.405,589,4.966,622,3.159,623,2.776,657,2.389,1260,4.879,1261,5.518,1262,5.518,1263,5.518,1264,5.518,1265,5.518,1266,4.459]],["title/classes/GetDirectorDto.html",[0,0.25,894,3.146]],["body/classes/GetDirectorDto.html",[0,0.395,2,0.939,3,0.1,4,0.089,5,0.089,7,0.263,8,1.34,10,0.42,11,0.008,12,1.061,13,1.278,14,2.321,15,0.479,17,0.1,18,1.123,19,0.1,20,0.006,21,0.006,43,1.12,112,2.135,353,2.405,622,3.159,623,2.776,657,2.389,894,4.966,1266,4.459,1267,4.879,1268,5.518,1269,5.518,1270,5.518,1271,5.518,1272,5.518]],["title/classes/GetFindByIdDto.html",[0,0.25,1273,3.146]],["body/classes/GetFindByIdDto.html",[0,0.358,2,1.086,3,0.115,4,0.103,5,0.103,7,0.304,8,1.466,10,0.384,11,0.008,15,0.437,17,0.115,19,0.115,20,0.007,21,0.007,28,5.256,242,1.514,624,4.343,1183,5.022,1273,5.434,1274,5.641,1275,6.379,1276,6.379]],["title/classes/GetFiszkaDto.html",[0,0.25,29,2.977]],["body/classes/GetFiszkaDto.html",[0,0.332,2,0.725,3,0.077,4,0.068,5,0.068,7,0.203,8,1.127,10,0.434,11,0.009,12,1.047,13,1.319,14,2.12,15,0.494,17,0.107,18,0.866,19,0.077,20,0.005,21,0.005,29,3.954,43,0.984,112,1.796,242,1.01,353,2.113,498,3.206,622,2.775,623,2.438,657,2.486,670,1.736,672,2.381,674,3.537,675,3.762,680,2.626,681,2.006,682,3.309,683,3.206,693,3.961,694,3.961,695,2.23,696,3.005,698,2.585,705,3.005,708,3.445,709,2.293,710,2.139,715,2.293,716,2.585,719,3.441,737,2.705,989,5.5,1231,6.468,1232,5.526,1266,3.441,1277,3.765,1278,4.258,1279,4.258,1280,4.258,1281,4.258,1282,4.258,1283,4.258,1284,4.258,1285,4.258,1286,4.258,1287,4.258,1288,4.258,1289,4.258]],["title/classes/GetGroupDto.html",[0,0.25,1290,3.146]],["body/classes/GetGroupDto.html",[0,0.375,2,0.867,3,0.092,4,0.082,5,0.082,7,0.242,8,1.272,10,0.429,11,0.009,12,0.974,13,1.303,14,2.338,15,0.488,17,0.121,18,1.036,19,0.092,20,0.006,21,0.006,28,4.246,242,1.209,657,2.39,724,5.263,725,5.02,726,5.02,727,5.02,728,5.02,729,5.02,731,4.716,732,4.116,737,2.327,739,2.476,740,4.116,741,4.116,742,3.594,743,4.116,744,4.116,745,4.116,1183,4.057,1231,4.116,1290,4.716,1291,4.504,1292,5.094,1293,5.094,1294,5.094,1295,5.094,1296,5.094,1297,5.094,1298,5.094,1299,5.094]],["title/classes/GetInterViewsDto.html",[0,0.25,1300,3.146]],["body/classes/GetInterViewsDto.html",[0,0.378,2,0.876,3,0.093,4,0.083,5,0.083,7,0.245,8,1.281,10,0.43,11,0.009,12,0.888,13,1.283,14,2.186,15,0.481,17,0.093,18,1.048,19,0.093,20,0.006,21,0.006,43,0.744,112,2.274,624,3.644,655,3.457,657,2.442,695,3.188,696,3.633,708,3.916,709,2.773,710,2.586,715,3.625,716,3.125,748,5.291,749,5.291,1011,4.552,1244,6.058,1300,4.749,1301,4.552,1302,5.148,1303,5.148,1304,5.148,1305,5.148,1306,5.148,1307,5.148,1308,5.148]],["title/classes/GetRentalCostDto.html",[0,0.25,1309,3.146]],["body/classes/GetRentalCostDto.html",[0,0.42,2,1.034,3,0.11,4,0.098,5,0.098,7,0.289,8,1.423,10,0.373,11,0.008,13,1.133,14,1.61,15,0.425,17,0.135,18,1.236,19,0.11,20,0.007,21,0.007,69,4.058,657,2.294,760,5.616,761,5.616,762,6.543,763,6.041,766,6.543,767,4.91,768,4.91,1309,5.276,1310,5.373,1311,6.077,1312,6.077]],["title/classes/GetScheduleDto.html",[0,0.25,1313,3.603]],["body/classes/GetScheduleDto.html",[0,0.401,2,0.961,3,0.102,4,0.091,5,0.091,7,0.269,8,1.36,10,0.41,11,0.009,12,0.975,13,1.248,14,2.075,15,0.468,17,0.129,18,1.149,19,0.102,20,0.007,21,0.007,242,1.34,655,3.558,657,2.495,693,4.558,694,4.558,778,6.652,785,4.994,1313,5.772,1314,4.994,1315,5.648,1316,5.648,1317,5.648,1318,5.648]],["title/classes/GetSchoolDto.html",[0,0.25,1319,3.146]],["body/classes/GetSchoolDto.html",[0,0.313,2,0.667,3,0.071,4,0.063,5,0.063,7,0.187,8,1.063,10,0.452,11,0.009,12,1.071,13,1.34,14,2.411,15,0.502,17,0.101,18,0.797,19,0.071,20,0.005,21,0.005,43,0.941,112,1.973,242,0.93,353,2.02,374,2.067,498,3.065,623,2.331,657,2.272,695,2.104,737,2.551,739,1.905,788,4.887,789,4.887,790,4.887,791,4.887,792,5.853,793,5.204,794,4.887,795,4.887,808,3.466,812,3.466,819,3.466,824,3.167,826,3.167,828,3.167,1319,3.941,1320,3.466,1321,3.919,1322,3.919,1323,3.919,1324,3.919,1325,3.919,1326,3.919,1327,3.919,1328,3.919,1329,3.919,1330,3.919,1331,3.919,1332,3.919,1333,3.919,1334,3.919,1335,3.919]],["title/classes/GetUserDto.html",[0,0.25,239,2.833]],["body/classes/GetUserDto.html",[0,0.349,2,0.78,3,0.083,4,0.074,5,0.074,7,0.218,8,1.186,10,0.431,11,0.009,12,1.009,13,1.309,14,2.369,15,0.491,17,0.112,18,0.933,19,0.083,20,0.006,21,0.006,43,1.023,239,3.957,241,2.662,242,1.087,353,2.196,374,2.247,431,4.395,622,2.884,670,1.868,674,3.237,675,3.957,680,2.762,682,3.027,683,2.933,695,2.346,710,2.302,715,2.469,737,3.232,739,2.228,755,4.053,837,4.495,838,5.202,840,3.443,842,3.703,853,3.061,1053,3.443,1336,4.053,1337,6.255,1338,4.583,1339,4.583,1340,4.583,1341,4.583,1342,4.583,1343,4.583,1344,4.583,1345,4.583,1346,4.583,1347,4.583,1348,4.583]],["title/classes/GetUserInterViewDto.html",[0,0.25,1349,3.146]],["body/classes/GetUserInterViewDto.html",[0,0.405,2,0.978,3,0.104,4,0.092,5,0.092,7,0.274,8,1.375,10,0.413,11,0.008,12,0.856,13,1.256,14,2.39,15,0.471,17,0.104,18,1.17,19,0.104,20,0.007,21,0.007,112,2.395,655,3.577,695,3.121,748,5.573,749,5.573,1349,5.097,1350,5.084,1351,5.749,1352,5.749,1353,5.749,1354,5.749]],["title/classes/GraphDateDto.html",[0,0.25,1355,3.146]],["body/classes/GraphDateDto.html",[0,0.426,2,1.061,3,0.113,4,0.1,5,0.1,7,0.297,8,1.446,10,0.379,11,0.008,13,1.151,14,2.315,15,0.431,17,0.113,18,1.269,19,0.113,20,0.007,21,0.007,655,3.182,663,4.164,1355,5.359,1356,5.513,1357,7.594,1358,7.594,1359,6.234,1360,6.234,1361,6.234,1362,6.234]],["title/controllers/GroupController.html",[119,1.352,1363,3.349]],["body/controllers/GroupController.html",[0,0.182,3,0.059,4,0.052,5,0.052,7,0.155,10,0.323,11,0.009,12,1.016,13,0.983,15,0.368,17,0.146,19,0.059,20,0.004,21,0.004,36,1.082,42,1.441,43,0.938,44,1.441,50,1.41,55,0.481,70,2.911,72,1.484,73,0.986,75,1.224,93,1.809,119,0.986,121,0.963,184,1.53,186,2.308,194,3.747,195,3.848,196,3.055,199,2.956,203,2.679,222,3.18,224,1.53,225,1.58,226,1.53,238,1.53,241,1.057,242,0.771,243,1.441,245,1.4,250,1.58,374,1.032,450,5.148,453,1.632,454,1.689,455,1.689,529,2.294,530,2.531,531,3.436,536,3.634,545,1.58,552,1.817,556,3.094,559,3.775,560,2.17,722,4.578,906,4.578,911,4.122,912,2.441,913,2.293,998,4.578,1099,5.681,1174,5.843,1186,3.935,1188,4.873,1190,2.626,1232,2.441,1290,2.293,1363,3.658,1364,2.873,1365,4.87,1366,2.873,1367,4.306,1368,3.249,1369,3.249,1370,2.873,1371,3.249,1372,3.249,1373,3.249,1374,4.87,1375,3.249,1376,3.249,1377,3.249,1378,3.249,1379,3.249,1380,3.901,1381,2.873,1382,2.873,1383,2.873,1384,2.873,1385,3.249,1386,3.249,1387,3.249,1388,4.122,1389,3.249,1390,3.249,1391,3.249,1392,3.249,1393,4.87,1394,3.249,1395,3.249,1396,2.873,1397,3.249,1398,3.249,1399,2.873,1400,3.249,1401,3.249,1402,5.165,1403,4.306,1404,3.935,1405,3.249]],["title/modules/GroupModule.html",[123,1.322,140,3.146]],["body/modules/GroupModule.html",[0,0.327,3,0.105,4,0.094,5,0.094,11,0.008,17,0.143,19,0.105,20,0.007,21,0.007,55,0.861,121,2.157,123,2.354,125,2.438,126,2.438,127,2.581,128,2.581,129,2.438,130,3.522,131,2.581,140,6.461,148,3.228,149,2.581,150,2.581,152,3.325,1363,5.965,1380,5.836,1381,5.146,1406,5.146,1407,5.819,1408,5.146,1409,5.819,1410,5.819]],["title/injectables/GroupService.html",[178,0.969,1380,2.977]],["body/injectables/GroupService.html",[0,0.156,3,0.05,4,0.045,5,0.045,7,0.132,10,0.357,11,0.009,12,1.07,15,0.407,17,0.117,19,0.05,20,0.004,21,0.004,36,0.96,38,1.047,42,1.591,43,1.035,44,1.591,50,1.491,55,0.411,73,0.843,75,1.047,76,0.863,93,1.701,99,2.162,112,2.307,178,0.939,180,1.047,186,2.363,203,2.855,222,2.768,260,3.874,311,1.27,344,1.862,345,2.578,359,1.233,374,2.71,489,1.351,495,3.005,503,1.617,529,2.036,530,2.246,532,2.515,536,3.382,537,3.05,611,3.05,612,3.05,617,3.05,619,3.05,624,2.908,630,2.746,632,1.961,633,1.856,634,1.961,636,2.246,641,2.246,653,2.458,722,4.221,724,4.573,725,4.867,726,4.867,727,4.867,728,4.867,729,4.867,998,4.221,1099,5.379,1183,3.632,1232,2.088,1251,2.088,1290,1.961,1380,2.886,1382,2.458,1383,2.458,1384,2.458,1411,2.458,1412,4.322,1413,4.322,1414,2.779,1415,2.779,1416,2.779,1417,2.779,1418,2.779,1419,4.322,1420,2.779,1421,4.322,1422,2.779,1423,4.322,1424,4.322,1425,4.322,1426,2.779,1427,2.779,1428,2.779,1429,2.779,1430,2.779,1431,2.779,1432,2.779,1433,2.779,1434,2.779]],["title/classes/HttpExceptionFilter.html",[0,0.25,70,1.868]],["body/classes/HttpExceptionFilter.html",[0,0.268,2,0.813,3,0.086,4,0.077,5,0.077,7,0.227,10,0.36,11,0.009,12,0.566,15,0.271,17,0.13,19,0.086,20,0.006,21,0.006,34,2.926,35,4.825,36,1.423,37,4.386,42,1.061,43,0.691,44,1.061,45,4.277,46,4.591,47,5.155,49,3.19,50,1.038,51,3.035,52,5.447,55,0.707,70,2.683,76,2.572,79,2.9,80,3.19,82,3.86,86,3.016,87,3.19,88,4.686,89,3.19,91,3.629,105,3.86,106,3.86,113,5.175,114,4.277,115,3.19,116,4.277,238,3.016,294,2.483,316,5.427,384,6.224,655,2.002,793,4.825,1435,4.224,1436,4.777,1437,3.86,1438,4.777,1439,3.86,1440,4.777,1441,4.777,1442,4.777,1443,5.663,1444,4.519,1445,4.81,1446,4.777,1447,4.777,1448,4.777,1449,4.777,1450,4.519]],["title/controllers/InterviewsController.html",[119,1.352,1451,3.349]],["body/controllers/InterviewsController.html",[0,0.139,3,0.045,4,0.04,5,0.04,7,0.118,10,0.366,11,0.009,12,0.99,13,1.112,15,0.417,17,0.147,19,0.045,20,0.004,21,0.004,22,5.024,24,2.64,36,0.878,42,1.63,43,1.061,44,1.63,50,1.595,55,0.367,70,3.151,72,1.134,73,0.753,75,0.935,76,1.227,93,1.865,119,0.753,121,0.736,184,1.169,186,2.428,194,3.737,195,3.625,196,3.456,198,1.985,203,3.018,208,2.054,209,2.194,222,2.172,224,1.169,225,1.206,226,1.169,227,1.577,238,1.169,241,0.807,242,0.589,243,1.1,245,1.069,250,1.206,257,3.981,265,1.864,450,5.024,453,1.246,454,1.29,455,1.29,536,1.806,545,1.206,552,1.388,695,1.856,746,4.613,1006,5.024,1094,4.91,1117,4.969,1129,2.789,1130,2.005,1137,2.789,1143,2.194,1174,6.171,1209,3.194,1230,1.751,1273,1.751,1300,1.751,1349,1.751,1367,6.295,1388,1.751,1451,2.969,1452,2.194,1453,3.495,1454,3.495,1455,3.495,1456,3.495,1457,2.4,1458,3.495,1459,4.356,1460,3.953,1461,2.481,1462,2.481,1463,2.481,1464,2.481,1465,2.481,1466,2.481,1467,2.194,1468,2.481,1469,2.481,1470,2.481,1471,2.481,1472,2.481,1473,2.481,1474,2.481,1475,2.481,1476,2.481,1477,2.481,1478,2.481,1479,4.926,1480,2.194,1481,2.481,1482,2.481,1483,2.194,1484,2.481,1485,2.481,1486,2.481,1487,5.024,1488,2.481,1489,2.481,1490,3.29,1491,2.194,1492,2.194,1493,2.194,1494,2.194,1495,2.194,1496,2.194,1497,2.194,1498,2.481,1499,2.194,1500,2.481,1501,2.481,1502,2.481,1503,2.481,1504,2.481,1505,2.481,1506,2.481,1507,2.481,1508,2.481,1509,2.481,1510,2.481,1511,2.194,1512,3.953,1513,3.495,1514,2.481,1515,2.481,1516,2.481,1517,2.481,1518,2.481,1519,2.481,1520,2.481,1521,2.481,1522,2.481,1523,2.481,1524,2.481,1525,2.481,1526,2.481,1527,2.194,1528,2.481,1529,2.481]],["title/modules/InterviewsModule.html",[123,1.322,141,3.146]],["body/modules/InterviewsModule.html",[0,0.316,3,0.102,4,0.091,5,0.091,11,0.009,17,0.153,19,0.102,20,0.007,21,0.007,55,0.834,121,2.113,123,2.319,125,2.36,126,2.36,127,2.498,128,2.498,129,2.36,130,3.47,131,2.498,141,6.285,148,3.162,149,2.498,150,2.498,152,2.573,486,3.84,487,3.033,1451,5.876,1490,5.665,1491,4.98,1530,4.98,1531,4.98,1532,5.39,1533,5.631,1534,5.631,1535,5.631,1536,5.631]],["title/injectables/InterviewsService.html",[178,0.969,1490,2.977]],["body/injectables/InterviewsService.html",[0,0.097,3,0.031,4,0.028,5,0.028,7,0.14,10,0.341,11,0.009,12,1.009,15,0.398,17,0.116,19,0.031,20,0.003,21,0.003,22,3.179,24,4.111,36,0.652,38,0.651,42,1.519,43,1.056,44,1.519,50,1.486,55,0.256,73,0.524,75,1.105,76,2.399,91,2.535,93,1.868,99,3.072,112,2.393,178,0.637,180,0.651,186,2.36,203,2.838,227,1.097,260,3.742,311,2.672,344,1.264,345,1.941,353,0.536,359,0.766,367,1.005,370,1.396,374,1.743,489,0.84,495,3.336,503,1.005,517,1.297,529,1.381,536,2.058,581,1.58,622,1.196,623,0.619,624,2.843,655,2.783,693,1.005,694,1.005,746,3.179,748,4.344,749,4.344,750,2.593,1006,3.179,1008,5.526,1094,4.394,1129,4.128,1183,2.735,1209,2.37,1230,3.561,1243,3.38,1244,3.088,1251,3.79,1273,1.219,1300,1.219,1349,1.219,1453,2.593,1454,2.593,1455,2.593,1456,2.593,1457,1.78,1458,2.593,1459,2.593,1467,2.593,1480,2.593,1483,2.593,1487,3.179,1490,1.959,1492,1.527,1493,1.527,1494,1.527,1495,1.527,1496,1.527,1497,1.527,1499,1.527,1537,1.527,1538,2.933,1539,4.505,1540,2.933,1541,1.727,1542,2.933,1543,1.727,1544,5.485,1545,2.933,1546,1.727,1547,1.727,1548,2.933,1549,1.727,1550,2.933,1551,1.727,1552,2.933,1553,1.727,1554,2.593,1555,1.727,1556,1.727,1557,1.727,1558,1.727,1559,2.933,1560,1.727,1561,4.851,1562,3.822,1563,4.462,1564,1.727,1565,1.727,1566,1.727,1567,1.727,1568,2.933,1569,1.727,1570,1.727,1571,2.933,1572,1.727,1573,1.727,1574,2.933,1575,3.088,1576,1.727,1577,2.933,1578,2.933,1579,3.822,1580,2.933,1581,2.933,1582,1.727,1583,1.727,1584,1.727,1585,1.727,1586,1.727,1587,1.727,1588,1.727,1589,1.727,1590,1.727,1591,1.727,1592,1.727,1593,2.933,1594,1.727,1595,1.727,1596,1.727,1597,1.297,1598,1.527,1599,1.396,1600,1.727,1601,1.527,1602,1.727,1603,1.727,1604,1.727,1605,1.727,1606,1.727,1607,1.727,1608,1.727,1609,3.822,1610,1.727,1611,1.727,1612,1.727,1613,1.396,1614,1.727]],["title/controllers/LoggerController.html",[119,1.352,1615,3.349]],["body/controllers/LoggerController.html",[0,0.333,3,0.107,4,0.095,5,0.095,7,0.282,11,0.009,13,0.898,15,0.337,17,0.145,19,0.107,20,0.007,21,0.007,36,1.635,50,1.288,55,0.877,70,3.084,72,2.708,73,1.798,75,2.233,93,1.469,121,1.757,184,2.791,186,2.218,196,3.467,226,2.791,1615,5.529,1616,5.241,1617,6.959,1618,5.927,1619,5.927,1620,5.927,1621,5.348,1622,5.241,1623,5.241,1624,5.927,1625,5.927]],["title/injectables/LoggerMiddleware.html",[170,3.349,178,0.969]],["body/injectables/LoggerMiddleware.html",[0,0.252,3,0.081,4,0.072,5,0.072,7,0.214,10,0.306,11,0.009,15,0.349,17,0.142,19,0.081,20,0.006,21,0.006,24,2.996,34,2.05,36,1.364,38,2.312,42,1.364,43,0.887,44,1.364,46,3.9,50,0.975,55,0.664,76,2.172,86,3.543,88,4.567,99,2.502,103,4.96,170,4.611,178,1.334,180,1.69,186,1.938,241,1.459,279,4.96,281,3.626,282,6.573,293,3.166,294,2.332,311,2.05,344,3.015,345,3.242,353,1.393,359,1.99,363,3.166,368,3.968,371,3.968,374,1.425,935,2.996,1617,4.96,1626,3.968,1627,6.138,1628,4.487,1629,6.138,1630,6.996,1631,7.522,1632,7.522,1633,4.487,1634,6.138,1635,4.487,1636,4.487,1637,4.487,1638,6.138,1639,6.138,1640,6.138,1641,6.138,1642,6.138,1643,6.138,1644,4.487,1645,4.487,1646,4.487,1647,4.487,1648,4.487]],["title/modules/LoggerModule.html",[123,1.322,142,3.146]],["body/modules/LoggerModule.html",[0,0.328,3,0.105,4,0.094,5,0.094,11,0.009,17,0.15,19,0.105,20,0.007,21,0.007,55,0.864,121,2.161,123,2.357,125,2.446,126,2.446,127,2.589,128,2.589,129,2.446,130,3.527,131,2.589,142,6.171,148,3.234,149,2.589,150,2.589,152,2.666,486,3.927,487,3.144,1615,5.973,1621,5.84,1622,5.161,1649,5.161,1650,5.161,1651,5.837,1652,5.837]],["title/injectables/LoggerService.html",[178,0.969,1621,2.977]],["body/injectables/LoggerService.html",[0,0.331,3,0.106,4,0.095,5,0.095,7,0.28,10,0.294,11,0.009,15,0.416,17,0.132,19,0.106,20,0.007,21,0.007,36,1.629,38,2.219,42,1.309,43,0.852,44,1.309,50,1.28,55,0.872,73,1.787,75,2.219,76,1.828,93,1.46,178,1.594,180,2.219,186,2.212,311,2.691,344,3.16,345,3.601,359,2.612,489,2.863,1617,5.926,1621,4.898,1653,5.209,1654,8.357,1655,5.89,1656,5.89,1657,5.89]],["title/classes/LoginUserDto.html",[0,0.25,218,3.349]],["body/classes/LoginUserDto.html",[0,0.424,2,1.051,3,0.111,4,0.099,5,0.099,7,0.294,8,1.437,10,0.376,11,0.008,12,1.006,13,1.144,14,2.251,15,0.429,17,0.111,18,1.256,19,0.111,20,0.007,21,0.007,218,5.671,353,2.531,417,5.446,680,3.348,840,4.638,1658,5.46,1659,6.174,1660,6.174]],["title/classes/MatchConstraint.html",[0,0.25,1661,3.603]],["body/classes/MatchConstraint.html",[0,0.37,2,0.849,3,0.09,4,0.08,5,0.08,7,0.237,10,0.329,11,0.009,12,0.874,15,0.374,17,0.09,18,1.341,19,0.119,20,0.006,21,0.006,34,3.011,36,1.464,42,1.464,43,0.953,44,1.464,50,1.433,76,2.291,93,1.83,316,3.747,412,3.52,701,3.686,737,2.279,1661,5.965,1662,4.03,1663,7.382,1664,6.591,1665,6.591,1666,6.591,1667,8.555,1668,4.988,1669,7.853,1670,6.591,1671,4.988,1672,6.591,1673,6.944,1674,4.988,1675,4.411,1676,4.411,1677,7.382,1678,4.988,1679,4.988,1680,4.988,1681,4.411,1682,4.988,1683,4.988,1684,7.382,1685,6.591,1686,6.591,1687,4.988,1688,4.988,1689,4.411,1690,4.988,1691,4.988,1692,4.988,1693,4.988]],["title/classes/NotFoundErrorFilter.html",[0,0.25,59,3.349]],["body/classes/NotFoundErrorFilter.html",[0,0.304,2,0.923,3,0.098,4,0.087,5,0.087,7,0.258,10,0.27,11,0.009,15,0.308,17,0.139,19,0.098,20,0.006,21,0.006,34,3.18,35,5.134,36,1.547,37,4.667,42,1.205,43,0.784,44,1.205,45,4.649,46,4.885,47,5.416,49,3.623,50,1.179,51,3.447,55,0.803,57,7.171,58,4.383,59,5.229,76,2.517,79,3.293,80,3.623,86,3.279,87,3.623,88,4.667,89,3.623,91,2.725,114,3.623,115,3.623,116,3.623,294,2.819,1444,3.828,1445,4.075,1450,3.828,1694,4.797,1695,5.424,1696,5.424,1697,5.424,1698,4.797,1699,5.424,1700,5.424,1701,5.424]],["title/classes/NotFoundExceptionFilter.html",[0,0.25,61,3.349]],["body/classes/NotFoundExceptionFilter.html",[0,0.297,2,0.9,3,0.096,4,0.085,5,0.085,7,0.252,10,0.264,11,0.008,15,0.3,17,0.124,19,0.096,20,0.006,21,0.006,34,3.129,35,5.073,36,1.522,37,4.611,42,1.175,43,0.765,44,1.175,45,4.574,46,4.827,47,5.365,49,3.533,50,1.15,51,3.361,54,7.104,55,0.783,61,5.145,76,2.493,79,3.211,80,3.533,82,4.275,86,3.578,87,3.533,88,4.611,89,3.533,91,2.657,102,4.678,103,4.275,104,4.678,105,4.275,106,4.275,107,4.678,108,4.678,109,4.678,110,4.678,111,4.678,112,1.604,113,4.275,114,3.533,115,3.533,116,3.533,294,2.749,793,4.574,1443,4.678,1444,3.733,1445,3.974,1450,3.733,1702,4.678,1703,5.29,1704,5.29,1705,5.29,1706,5.29]],["title/injectables/OptionsPipe.html",[178,0.969,1137,3.146]],["body/injectables/OptionsPipe.html",[0,0.334,3,0.107,4,0.096,5,0.096,7,0.283,10,0.296,11,0.009,15,0.338,17,0.107,19,0.107,20,0.007,21,0.007,34,2.716,36,1.639,42,1.321,43,0.859,44,1.321,50,1.292,55,0.88,93,1.829,178,1.603,180,2.24,695,3.159,701,4.484,932,5.205,936,5.205,937,5.355,938,5.917,940,5.205,1137,5.205,1246,3.97,1597,4.466,1707,5.257,1708,5.945]],["title/controllers/PredicteController.html",[119,1.352,1709,3.349]],["body/controllers/PredicteController.html",[0,0.222,3,0.071,4,0.064,5,0.064,7,0.188,10,0.197,11,0.009,12,0.843,13,0.599,15,0.224,17,0.145,19,0.071,20,0.005,21,0.005,36,1.248,42,0.878,43,0.571,44,0.878,50,0.859,55,0.585,70,2.354,72,1.805,73,1.198,75,1.489,76,1.226,86,3.079,93,0.98,112,1.198,119,1.198,121,1.171,184,1.861,186,1.811,196,2.646,197,2.128,198,1.985,208,2.054,222,3.021,225,1.921,226,1.861,238,1.861,241,1.285,242,0.938,243,1.752,245,1.703,250,1.921,374,1.255,453,1.985,454,2.054,455,2.054,464,3.494,518,3.494,536,2.986,709,2.128,908,5.282,935,4.365,1182,3.494,1188,2.968,1197,3.193,1246,2.639,1388,2.788,1402,3.494,1613,6.077,1709,4.219,1710,3.494,1711,5.78,1712,3.951,1713,5.023,1714,3.951,1715,3.951,1716,4.365,1717,3.494,1718,3.494,1719,3.951,1720,3.951,1721,8.576,1722,3.951,1723,3.951,1724,5.617,1725,3.494,1726,3.494,1727,3.951,1728,3.951,1729,3.951,1730,3.951,1731,4.967,1732,3.951,1733,3.951,1734,3.951,1735,3.951,1736,3.951,1737,3.951,1738,3.951,1739,3.951,1740,5.617,1741,5.617,1742,3.951,1743,3.951,1744,3.951,1745,3.494,1746,3.951,1747,5.78,1748,3.951,1749,3.951,1750,3.951,1751,3.951,1752,3.951,1753,3.951,1754,5.617,1755,5.617,1756,3.951,1757,3.951,1758,3.951,1759,3.951,1760,3.951,1761,5.617,1762,3.951,1763,3.951,1764,3.951,1765,3.951,1766,3.951,1767,3.951,1768,3.951,1769,3.951,1770,3.951,1771,3.951,1772,3.951,1773,3.951,1774,3.951,1775,3.951,1776,3.494]],["title/modules/PredicteModule.html",[123,1.322,1777,3.349]],["body/modules/PredicteModule.html",[0,0.326,3,0.105,4,0.093,5,0.093,11,0.009,17,0.15,19,0.105,20,0.007,21,0.007,55,0.859,121,2.153,123,2.351,125,2.431,126,2.431,127,2.573,128,2.573,129,2.431,130,3.517,131,2.573,148,3.222,149,2.573,150,2.573,152,2.65,486,3.913,487,3.125,608,5.13,1709,5.957,1716,5.831,1717,5.13,1777,6.559,1778,5.13,1779,5.13,1780,5.801,1781,5.801]],["title/injectables/PredicteService.html",[178,0.969,1716,2.977]],["body/injectables/PredicteService.html",[0,0.198,3,0.064,4,0.057,5,0.057,7,0.168,10,0.258,11,0.009,12,0.851,15,0.294,17,0.111,19,0.064,20,0.005,21,0.005,36,1.149,38,1.328,42,1.149,43,0.748,44,1.149,50,0.766,55,0.522,73,1.069,75,1.328,76,2.095,93,0.874,112,1.568,178,1.124,180,1.328,186,1.697,260,2.228,311,1.61,344,2.228,345,2.908,359,1.563,374,2.144,489,1.713,495,2.598,581,1.898,624,1.713,1183,3.719,1229,3.116,1230,3.649,1246,6.061,1513,3.116,1613,2.847,1711,4.573,1713,4.763,1716,3.454,1718,3.116,1725,6.356,1726,6.356,1782,3.116,1783,3.524,1784,5.171,1785,3.524,1786,3.524,1787,3.116,1788,3.524,1789,3.524,1790,3.524,1791,7.566,1792,7.428,1793,7.979,1794,6.866,1795,7.188,1796,7.188,1797,6.356,1798,7.188,1799,3.524,1800,3.524,1801,3.524,1802,3.524,1803,5.171,1804,3.524,1805,5.171,1806,5.171,1807,3.524,1808,3.524]],["title/classes/PrismaOtherFilter.html",[0,0.25,65,3.349]],["body/classes/PrismaOtherFilter.html",[0,0.295,2,0.895,3,0.095,4,0.085,5,0.085,7,0.25,10,0.34,11,0.009,15,0.299,17,0.145,19,0.095,20,0.006,21,0.006,34,3.118,35,5.06,36,1.516,37,4.599,42,1.169,43,0.761,44,1.169,45,4.558,46,4.814,47,5.354,49,4.558,50,1.143,51,3.343,52,3.713,55,0.779,65,5.127,68,7.089,69,3.514,76,2.351,79,3.194,80,3.514,81,3.514,86,3.215,87,3.514,88,4.599,89,3.514,91,2.643,114,3.514,115,3.514,116,3.514,242,1.248,294,2.734,344,2.267,384,3.952,1439,4.251,1444,3.713,1445,3.952,1450,3.713,1809,4.652,1810,5.261,1811,5.261,1812,5.261,1813,5.261,1814,5.261,1815,4.652,1816,5.261]],["title/classes/PrismaValidationFilter.html",[0,0.25,63,3.349]],["body/classes/PrismaValidationFilter.html",[0,0.237,2,0.718,3,0.076,4,0.068,5,0.068,7,0.201,10,0.365,11,0.009,15,0.24,17,0.132,19,0.076,20,0.005,21,0.005,34,2.688,35,4.524,36,1.307,37,4.113,42,0.938,43,0.61,44,0.938,45,3.93,46,4.305,47,4.894,49,2.819,50,0.917,51,2.682,52,2.978,55,0.625,63,4.42,67,6.481,69,2.819,76,2.542,79,2.562,80,2.819,86,2.771,87,2.819,88,4.679,89,2.819,91,3.403,112,1.28,114,4.524,115,4.524,116,4.524,294,2.194,353,1.826,374,1.341,384,5.088,517,3.17,623,1.512,724,2.978,1186,3.41,1439,3.41,1444,4.781,1450,4.781,1689,3.732,1698,3.732,1747,3.732,1815,5.99,1817,3.732,1818,4.22,1819,3.41,1820,4.22,1821,4.22,1822,5.884,1823,4.22,1824,4.22,1825,4.22,1826,4.22,1827,4.22,1828,5.884,1829,4.22,1830,4.22,1831,5.884,1832,4.22,1833,4.22,1834,4.22,1835,7.707,1836,4.22,1837,5.884,1838,6.774,1839,4.22,1840,4.22,1841,4.22,1842,4.22,1843,4.22,1844,4.22,1845,4.22,1846,4.22,1847,4.22,1848,5.203,1849,4.22,1850,4.22,1851,4.22,1852,4.22]],["title/classes/RemoveUserInterViewDto.html",[0,0.25,1487,3.146]],["body/classes/RemoveUserInterViewDto.html",[0,0.437,2,1.108,3,0.118,4,0.105,5,0.105,7,0.31,8,1.484,10,0.325,11,0.008,12,0.923,13,0.987,14,2.211,15,0.37,17,0.118,18,1.324,19,0.118,20,0.007,21,0.007,1487,5.501,1853,5.756,1854,8.344,1855,6.509]],["title/controllers/RentalCostController.html",[119,1.352,1856,3.349]],["body/controllers/RentalCostController.html",[0,0.207,3,0.067,4,0.059,5,0.059,7,0.176,10,0.314,11,0.009,12,0.956,13,0.954,15,0.357,17,0.151,19,0.067,20,0.005,21,0.005,36,1.189,42,1.398,43,0.91,44,1.398,50,1.368,55,0.547,70,2.891,72,1.687,73,1.12,93,1.711,119,1.12,121,1.095,184,1.739,186,2.278,194,4.028,195,3.815,196,3.597,197,3.39,198,3.161,203,2.805,208,3.271,222,3.27,224,1.739,225,1.795,226,1.739,238,1.739,241,1.201,242,0.876,243,1.638,245,1.591,250,1.795,453,1.855,454,1.919,455,1.919,529,2.521,531,3.776,532,2.149,534,2.606,536,3.489,542,2.774,545,3.059,552,2.065,555,2.774,556,2.347,559,3.662,560,2.466,561,2.774,585,3.266,594,3.266,758,4.87,886,3.266,901,3.266,906,4.87,911,4.441,912,2.774,913,2.606,1016,4.87,1155,3.266,1309,2.606,1856,4.02,1857,3.266,1858,4.732,1859,3.693,1860,3.693,1861,3.266,1862,3.693,1863,3.574,1864,3.266,1865,3.266,1866,3.266,1867,3.266,1868,3.693,1869,3.693,1870,3.693,1871,3.693,1872,3.693,1873,3.693,1874,3.693,1875,5.351,1876,6.901,1877,2.774,1878,5.351]],["title/modules/RentalCostModule.html",[123,1.322,143,3.146]],["body/modules/RentalCostModule.html",[0,0.33,3,0.106,4,0.094,5,0.094,11,0.008,17,0.151,19,0.106,20,0.007,21,0.007,55,0.869,121,2.17,123,2.364,125,2.461,126,2.461,127,2.604,128,2.604,129,2.461,130,3.537,131,2.604,143,6.181,148,3.246,149,2.604,150,2.604,152,2.683,486,3.942,487,3.163,1856,5.99,1863,5.849,1864,5.193,1879,5.193,1880,5.193,1881,5.872,1882,5.872]],["title/injectables/RentalCostService.html",[178,0.969,1863,2.977]],["body/injectables/RentalCostService.html",[0,0.198,3,0.064,4,0.057,5,0.057,7,0.168,10,0.359,11,0.009,12,1.062,15,0.409,17,0.13,19,0.064,20,0.005,21,0.005,36,1.152,38,1.332,42,1.599,43,1.041,44,1.599,50,1.469,55,0.524,73,1.073,76,1.609,93,1.676,99,2.114,112,2.051,178,1.127,180,1.332,186,2.349,203,2.928,222,2.908,260,3.102,344,2.234,345,2.914,359,1.569,374,2.764,489,1.719,495,3.084,503,2.058,529,2.442,532,3.017,536,3.642,545,2.521,581,1.905,611,3.659,612,3.659,617,3.659,619,3.659,624,1.719,630,3.901,632,2.496,633,2.362,634,2.496,758,4.771,760,5.078,761,5.078,925,3.127,926,2.858,1016,4.771,1309,2.496,1858,4.585,1861,4.585,1863,3.463,1865,3.127,1866,3.127,1867,3.127,1883,3.127,1884,3.537,1885,3.537,1886,3.537,1887,3.537,1888,3.537,1889,3.537,1890,3.537,1891,3.537,1892,5.185,1893,5.185,1894,3.537]],["title/interfaces/ReqUserInfo.html",[195,2.037,1895,3.349]],["body/interfaces/ReqUserInfo.html",[3,0.099,4,0.088,5,0.088,7,0.26,8,1.333,10,0.406,11,0.009,12,1.049,17,0.126,19,0.126,20,0.006,21,0.006,55,0.81,75,2.061,76,2.172,79,3.321,86,2.577,93,1.356,99,2.23,112,2.55,194,2.577,195,3.526,241,2.908,242,1.298,286,5.257,353,2.396,374,2.671,721,4.421,1895,4.109,1896,5.471,1897,4.421,1898,6.189,1899,4.838,1900,4.838,1901,4.838,1902,4.838,1903,4.838]],["title/guards/RolesGuard.html",[245,1.921,275,3.603]],["body/guards/RolesGuard.html",[0,0.289,3,0.093,4,0.083,5,0.083,7,0.245,10,0.336,11,0.009,15,0.382,17,0.144,19,0.093,20,0.006,21,0.006,34,2.352,36,1.495,38,1.94,42,1.495,43,0.973,44,1.495,50,1.119,55,0.762,56,3.438,73,1.561,76,2.327,93,1.859,178,1.463,241,1.674,242,1.222,244,4.552,245,2.9,260,2.219,276,4.16,278,7.03,283,7.483,285,5.951,286,5.972,288,4.552,300,4.552,301,4.552,304,5.951,367,3.916,737,3.074,1904,4.552,1905,5.148,1906,5.148,1907,5.148,1908,4.16,1909,6.729,1910,5.148,1911,5.148,1912,5.148,1913,5.148,1914,5.148,1915,5.148]],["title/controllers/ScheduleController.html",[119,1.352,1916,3.349]],["body/controllers/ScheduleController.html",[0,0.194,3,0.062,4,0.056,5,0.056,7,0.165,10,0.334,11,0.009,12,1,13,1.014,15,0.38,17,0.146,19,0.062,20,0.005,21,0.005,36,1.134,42,1.486,43,0.967,44,1.486,50,1.454,55,0.512,70,2.989,72,1.581,73,1.049,75,2.521,93,1.659,119,1.049,121,1.026,184,1.63,186,2.338,194,3.81,195,3.758,196,3.732,197,3.604,198,3.361,208,3.477,222,1.338,224,1.63,225,1.682,226,1.63,238,1.63,241,1.125,242,0.821,243,1.535,245,1.491,250,1.682,374,1.621,380,3.06,453,1.738,454,1.798,455,1.798,462,2.599,517,2.599,529,2.403,530,2.652,534,2.442,536,3.527,545,1.682,552,1.935,559,2.013,560,2.311,776,5.268,906,2.442,1024,5.268,1184,2.599,1188,2.599,1190,2.796,1191,3.06,1201,2.796,1388,3.601,1403,3.06,1404,2.796,1457,3.098,1787,3.06,1877,2.599,1916,3.833,1917,3.06,1918,2.796,1919,3.098,1920,3.46,1921,3.46,1922,3.46,1923,5.951,1924,3.06,1925,3.46,1926,2.599,1927,3.46,1928,3.46,1929,3.46,1930,3.46,1931,3.46,1932,3.06,1933,3.06,1934,4.048,1935,3.06,1936,3.46,1937,3.46,1938,3.46,1939,3.46,1940,3.46,1941,3.46,1942,3.46,1943,3.46,1944,3.46,1945,2.599,1946,3.46,1947,3.46,1948,3.46,1949,4.512,1950,3.46,1951,3.06,1952,3.46,1953,3.46,1954,3.46,1955,3.46,1956,3.46,1957,3.46,1958,3.46,1959,3.46,1960,3.46,1961,5.102,1962,3.46,1963,3.46]],["title/controllers/ScheduleDaysController.html",[119,1.352,1964,3.349]],["body/controllers/ScheduleDaysController.html",[0,0.221,3,0.071,4,0.063,5,0.063,7,0.188,10,0.326,11,0.009,12,0.99,13,0.99,15,0.371,17,0.151,19,0.071,20,0.005,21,0.005,36,1.246,42,1.45,43,0.944,44,1.45,50,1.419,55,0.584,70,2.98,72,1.801,73,1.196,75,2.46,93,1.619,99,3.347,119,1.196,121,1.169,184,1.857,186,2.314,194,3.784,195,3.871,196,3.678,197,3.516,198,3.279,208,3.393,222,2.524,224,1.857,225,1.917,226,1.857,238,1.857,241,1.282,242,0.936,243,1.749,245,1.699,250,1.917,453,1.981,454,2.049,455,2.049,529,2.642,530,2.915,545,1.917,552,2.205,559,3.799,769,5.018,1020,5.018,1366,3.487,1370,3.487,1396,3.487,1399,3.487,1919,3.405,1923,6.275,1924,3.487,1926,2.962,1945,2.962,1949,5.773,1951,3.487,1964,4.213,1965,3.487,1966,3.943,1967,3.943,1968,3.943,1969,3.943,1970,3.943,1971,3.943,1972,3.487,1973,3.487,1974,4.36,1975,3.487,1976,3.943,1977,3.943,1978,3.943,1979,3.943,1980,3.943,1981,3.943]],["title/modules/ScheduleDaysModule.html",[123,1.322,144,3.146]],["body/modules/ScheduleDaysModule.html",[0,0.331,3,0.106,4,0.095,5,0.095,11,0.008,17,0.151,19,0.106,20,0.007,21,0.007,55,0.872,121,2.174,123,2.367,125,2.468,126,2.468,127,2.612,128,2.612,129,2.468,130,3.542,131,2.612,144,6.185,148,3.252,149,2.612,150,2.612,152,2.691,486,3.95,487,3.173,1964,5.998,1974,5.854,1975,5.209,1982,5.209,1983,5.209,1984,5.89,1985,5.89]],["title/injectables/ScheduleDaysService.html",[178,0.969,1974,2.977]],["body/injectables/ScheduleDaysService.html",[0,0.201,3,0.065,4,0.058,5,0.058,7,0.17,10,0.339,11,0.009,12,1.05,15,0.386,17,0.123,19,0.065,20,0.005,21,0.005,36,1.161,38,1.347,42,1.51,43,0.983,44,1.51,50,1.343,55,0.529,73,1.085,75,2.328,76,2.11,91,3.414,93,1.934,99,3.26,112,2.062,178,1.136,180,1.347,186,2.26,227,2.272,260,2.253,311,2.388,344,2.253,345,2.929,359,1.586,374,2.769,489,1.738,495,1.796,529,2.462,530,2.717,624,3.004,769,4.796,771,4.224,772,4.224,1020,4.796,1251,3.927,1575,4.224,1598,4.623,1599,4.224,1918,5.843,1919,3.174,1923,5.673,1972,3.162,1973,3.162,1974,3.491,1986,3.162,1987,3.576,1988,5.227,1989,3.576,1990,5.227,1991,3.576,1992,5.227,1993,3.576,1994,3.576,1995,5.227,1996,3.576,1997,3.576,1998,3.576,1999,5.227,2000,6.797,2001,5.227,2002,5.227,2003,3.576,2004,5.227,2005,5.227,2006,5.227,2007,5.227,2008,3.576,2009,3.576]],["title/modules/ScheduleModule.html",[123,1.322,145,3.146]],["body/modules/ScheduleModule.html",[0,0.33,3,0.106,4,0.094,5,0.094,11,0.008,17,0.151,19,0.106,20,0.007,21,0.007,55,0.869,121,2.17,123,2.364,125,2.461,126,2.461,127,2.604,128,2.604,129,2.461,130,3.537,131,2.604,145,6.181,148,3.246,149,2.604,150,2.604,152,2.683,486,3.942,487,3.163,1916,5.99,1934,5.849,1935,5.193,2010,5.193,2011,5.193,2012,5.872,2013,5.872]],["title/injectables/ScheduleService.html",[178,0.969,1934,2.977]],["body/injectables/ScheduleService.html",[0,0.197,3,0.063,4,0.057,5,0.057,7,0.167,10,0.358,11,0.009,12,1.062,15,0.408,17,0.122,19,0.063,20,0.005,21,0.005,36,1.147,38,1.325,42,1.596,43,1.038,44,1.596,50,1.466,52,2.482,53,2.842,55,0.521,73,1.067,75,2.54,76,1.092,91,1.767,93,1.672,99,2.495,112,2.178,178,1.122,180,1.325,186,2.346,222,1.996,260,3.559,308,2.349,344,2.225,345,2.906,359,1.56,374,2.66,489,1.71,495,3.074,503,2.047,529,2.432,530,2.684,536,3.637,624,2.51,630,2.235,655,2.564,693,3.561,694,3.561,776,4.759,778,4.173,1024,4.759,1241,3.11,1242,3.11,1457,3.135,1554,4.567,1575,2.842,1918,5.449,1919,3.135,1923,4.597,1932,3.11,1933,3.11,1934,3.449,2014,3.11,2015,3.517,2016,5.164,2017,3.517,2018,5.164,2019,3.517,2020,4.567,2021,3.517,2022,6.743,2023,3.517,2024,3.517,2025,3.517,2026,3.517,2027,3.517,2028,3.517,2029,3.517,2030,3.517,2031,3.517,2032,3.517,2033,3.517,2034,3.517,2035,3.517,2036,3.517]],["title/controllers/SchoolController.html",[119,1.352,2037,3.349]],["body/controllers/SchoolController.html",[0,0.174,3,0.056,4,0.05,5,0.05,7,0.147,10,0.316,11,0.009,12,0.849,13,0.96,15,0.36,17,0.147,19,0.056,20,0.004,21,0.004,36,1.044,42,1.407,43,0.915,44,1.407,50,1.376,55,0.459,70,2.852,72,1.415,73,0.939,93,1.776,112,1.425,119,0.939,121,0.918,184,1.459,186,2.284,194,4.005,195,3.811,196,3.611,197,3.41,198,3.419,199,1.88,203,2.816,208,3.291,222,2.448,224,1.459,225,1.506,226,1.459,238,1.459,241,1.007,242,0.735,243,1.374,245,1.335,250,1.506,396,3.795,422,5.599,453,1.556,454,1.61,455,1.61,545,1.506,552,1.732,556,2.985,559,2.733,581,3.41,624,1.506,786,4.229,905,4.153,906,5.055,911,4.468,913,2.186,930,2.327,946,2.503,948,5.12,949,2.503,1184,5.758,1185,5.599,1192,2.739,1197,3.795,1201,5.117,1319,2.186,1404,3.795,1457,2.851,1527,2.739,1848,4.153,1877,3.528,1919,2.851,1926,2.327,1945,2.327,2037,3.528,2038,2.739,2039,4.153,2040,4.153,2041,3.097,2042,3.097,2043,3.097,2044,2.739,2045,3.097,2046,3.097,2047,2.739,2048,3.097,2049,2.739,2050,3.097,2051,3.097,2052,3.789,2053,2.739,2054,2.739,2055,3.097,2056,3.097,2057,2.739,2058,3.097,2059,3.097,2060,2.739,2061,2.739,2062,3.097,2063,3.097,2064,3.097,2065,3.097,2066,3.097,2067,3.097,2068,3.097,2069,3.097,2070,4.697,2071,6.332,2072,5.599,2073,4.697,2074,4.697,2075,4.697,2076,4.697,2077,5.674,2078,3.097]],["title/modules/SchoolModule.html",[123,1.322,146,3.146]],["body/modules/SchoolModule.html",[0,0.33,3,0.106,4,0.094,5,0.094,11,0.008,17,0.151,19,0.106,20,0.007,21,0.007,55,0.869,121,2.17,123,2.364,125,2.461,126,2.461,127,2.604,128,2.604,129,2.461,130,3.537,131,2.604,146,6.181,148,3.246,149,2.604,150,2.604,152,2.683,486,3.942,487,3.163,2037,5.99,2052,5.849,2053,5.193,2079,5.193,2080,5.193,2081,5.872,2082,5.872]],["title/injectables/SchoolService.html",[178,0.969,2052,2.977]],["body/injectables/SchoolService.html",[0,0.156,3,0.05,4,0.045,5,0.045,7,0.133,10,0.395,11,0.009,12,1.029,15,0.407,17,0.117,19,0.05,20,0.004,21,0.004,36,0.962,38,1.05,42,1.526,43,1.145,44,1.526,50,1.493,55,0.413,73,0.845,93,1.703,99,1.766,112,2.174,178,0.941,180,1.05,186,2.364,203,2.91,222,2.771,260,4.019,344,1.867,345,2.582,353,2.014,359,1.236,374,2.745,489,1.355,495,3.009,498,3.056,581,3.699,623,2.324,624,2.106,626,2.094,628,2.094,629,2.094,630,2.752,633,1.861,652,2.252,786,3.548,788,4.874,789,4.874,790,4.874,791,4.874,792,4.874,793,4.333,794,4.874,795,4.874,926,3.5,946,2.252,948,4.001,949,2.252,1319,1.967,1457,2.63,1919,2.63,2020,3.83,2039,3.83,2040,3.83,2044,3.83,2049,3.83,2052,2.893,2054,2.465,2083,2.465,2084,5.991,2085,4.331,2086,2.787,2087,4.331,2088,2.787,2089,2.787,2090,2.787,2091,2.787,2092,2.787,2093,4.331,2094,2.787,2095,3.83,2096,2.787,2097,2.787,2098,2.787,2099,2.787,2100,2.787,2101,2.787,2102,2.787,2103,2.787,2104,2.787,2105,2.787,2106,2.787]],["title/classes/SendFiszkiDto.html",[0,0.25,1713,3.146]],["body/classes/SendFiszkiDto.html",[0,0.425,2,1.057,3,0.112,4,0.1,5,0.1,7,0.296,8,1.443,10,0.378,11,0.008,12,1.009,13,1.149,14,2.313,15,0.43,17,0.112,18,1.264,19,0.112,20,0.007,21,0.007,112,2.48,1238,7.232,1713,5.349,2107,5.495,2108,6.214,2109,6.214]],["title/injectables/UpperCasePipe.html",[178,0.969,2110,3.349]],["body/injectables/UpperCasePipe.html",[0,0.274,3,0.088,4,0.079,5,0.079,7,0.233,10,0.324,11,0.009,15,0.369,17,0.132,19,0.088,20,0.006,21,0.006,34,2.232,36,1.444,38,1.841,42,1.444,43,0.94,44,1.444,50,1.062,55,0.723,74,3.448,75,1.841,86,3.82,93,1.211,178,1.413,180,1.841,186,2.024,291,6.554,294,2.54,701,3.636,932,4.588,933,3.67,935,4.342,936,4.588,937,4.88,938,5.497,940,4.588,941,3.67,942,3.67,943,4.588,947,3.67,950,3.448,951,3.67,952,3.67,2110,4.884,2111,4.321,2112,4.886,2113,4.886,2114,6.502,2115,4.886,2116,6.502,2117,4.886,2118,6.502,2119,4.886,2120,6.502,2121,4.886,2122,4.886,2123,6.502,2124,4.886,2125,4.886]],["title/controllers/UserController.html",[119,1.352,2126,3.349]],["body/controllers/UserController.html",[0,0.106,3,0.034,4,0.03,5,0.03,7,0.09,10,0.352,11,0.009,12,0.902,13,1.07,15,0.401,17,0.139,19,0.034,20,0.003,21,0.003,24,3.19,36,0.704,42,1.568,43,1.021,44,1.568,50,1.534,55,0.28,70,3.027,72,0.864,73,0.574,75,1.193,76,0.983,93,1.888,112,1.744,119,0.574,121,0.561,184,0.891,186,2.391,194,4.004,195,3.866,196,3.851,197,3.098,198,3.877,199,4.041,203,2.901,208,2.989,222,0.731,224,1.492,225,0.92,226,0.891,239,1.202,241,1.03,242,0.449,243,0.839,245,0.815,250,0.92,257,2.559,265,2.379,367,2.377,374,1.006,441,2.559,450,3.752,453,0.95,472,3.301,536,1.866,545,0.92,556,3.035,559,2.78,655,3.027,835,3.654,851,3.654,908,1.529,956,3.068,961,1.529,962,3.228,963,3.228,964,1.421,968,2.379,972,2.9,1054,2.379,1091,1.673,1096,1.673,1130,3.86,1144,1.673,1160,1.673,1174,1.421,1193,4.224,1355,4.85,1388,1.335,1457,1.923,1511,1.673,1532,2.596,1623,1.673,1731,1.673,1745,3.612,1776,1.673,1791,3.612,1919,1.923,1926,1.421,1945,1.421,2047,1.673,2057,1.673,2060,1.673,2061,1.673,2110,1.421,2126,2.379,2127,1.673,2128,4.085,2129,3.167,2130,4.085,2131,2.801,2132,2.801,2133,2.801,2134,3.167,2135,2.801,2136,1.892,2137,1.892,2138,1.892,2139,4.085,2140,1.892,2141,5.317,2142,1.892,2143,1.892,2144,1.892,2145,1.892,2146,1.892,2147,1.892,2148,1.673,2149,1.892,2150,1.892,2151,1.892,2152,1.892,2153,1.892,2154,1.892,2155,1.892,2156,1.892,2157,1.892,2158,1.892,2159,1.892,2160,1.892,2161,1.892,2162,1.892,2163,1.892,2164,1.892,2165,1.892,2166,1.673,2167,3.371,2168,1.892,2169,1.892,2170,2.801,2171,1.673,2172,1.673,2173,1.673,2174,1.892,2175,1.892,2176,1.673,2177,1.892,2178,1.892,2179,1.892,2180,1.673,2181,1.335,2182,1.673,2183,1.892,2184,1.892,2185,1.892,2186,1.892,2187,1.892,2188,1.892,2189,1.892,2190,3.167,2191,1.892,2192,1.892,2193,1.892,2194,3.167,2195,1.892,2196,1.892,2197,1.892,2198,1.892,2199,1.892,2200,1.892,2201,1.892,2202,1.892,2203,1.892,2204,1.892,2205,1.892,2206,1.892,2207,1.892,2208,1.892,2209,1.892,2210,1.892,2211,1.892,2212,1.892,2213,1.892,2214,1.892,2215,1.892,2216,1.892,2217,1.892,2218,1.892,2219,1.892,2220,3.167,2221,4.777,2222,4.085,2223,4.085,2224,1.892,2225,1.892,2226,1.892,2227,1.892,2228,1.892,2229,3.167,2230,3.167,2231,1.892,2232,1.892,2233,1.892,2234,1.892,2235,1.892,2236,1.892,2237,1.892]],["title/modules/UserModule.html",[123,1.322,147,2.977]],["body/modules/UserModule.html",[0,0.299,3,0.096,4,0.086,5,0.086,11,0.009,17,0.154,19,0.096,20,0.006,21,0.006,55,0.79,56,3.562,121,2.041,123,2.261,125,2.235,126,2.235,127,2.366,128,2.366,129,2.235,130,3.382,131,3.382,147,5.806,148,3.054,149,2.366,150,2.366,152,2.437,245,2.968,329,6.089,334,6.089,340,4.717,341,4.717,345,3.796,359,2.366,1532,5.429,2126,5.728,2171,4.717,2172,4.717,2238,4.717,2239,5.334,2240,4.717,2241,5.334,2242,5.334]],["title/injectables/UserService.html",[178,0.969,1532,2.833]],["body/injectables/UserService.html",[0,0.09,3,0.029,4,0.026,5,0.026,7,0.076,10,0.348,11,0.009,12,1.018,15,0.405,17,0.12,19,0.029,20,0.003,21,0.003,28,1.014,36,0.609,38,0.601,42,1.551,43,1.119,44,1.551,50,1.517,55,0.236,73,0.484,75,1.032,76,2.32,88,0.968,93,1.877,99,1.962,112,2.479,178,0.783,180,0.601,186,2.38,203,2.872,239,1.014,241,2.606,242,0.378,243,1.896,260,3.76,291,2.214,311,2.941,344,1.181,345,1.842,353,1.631,359,0.707,365,1.198,367,4.22,370,2.214,372,2.423,373,2.423,374,2.581,417,1.83,429,3.185,431,2.542,432,2.423,489,0.775,495,3.426,581,1.476,622,1.962,623,1.883,624,0.775,641,1.289,655,3.088,835,2.716,837,3.059,838,3.059,851,2.716,943,1.126,950,1.126,961,1.289,962,3.19,963,3.19,964,1.198,972,3.19,1008,1.289,1129,2.542,1183,1.664,1184,1.198,1230,1.934,1337,3.78,1355,4.378,1457,1.664,1532,1.741,1561,2.423,1563,1.411,1597,1.198,1601,2.423,1797,2.423,1919,2.595,2095,1.411,2131,2.423,2132,2.423,2133,2.423,2135,2.423,2148,2.423,2166,2.423,2167,3.016,2170,1.411,2173,1.411,2176,1.411,2180,1.411,2181,1.126,2182,1.411,2243,1.411,2244,2.74,2245,2.74,2246,2.74,2247,2.74,2248,2.74,2249,2.74,2250,2.74,2251,1.595,2252,2.74,2253,1.595,2254,2.74,2255,1.595,2256,2.74,2257,1.595,2258,2.74,2259,1.595,2260,2.74,2261,1.595,2262,1.595,2263,1.595,2264,2.423,2265,2.74,2266,1.595,2267,2.74,2268,1.595,2269,2.74,2270,1.595,2271,2.74,2272,1.595,2273,2.74,2274,1.595,2275,1.595,2276,1.595,2277,1.198,2278,1.595,2279,2.74,2280,2.74,2281,2.74,2282,2.74,2283,2.74,2284,1.595,2285,2.74,2286,2.74,2287,2.74,2288,2.74,2289,2.74,2290,2.74,2291,1.595,2292,1.595,2293,1.595,2294,3.602,2295,3.602,2296,3.602,2297,3.602,2298,4.813,2299,1.595,2300,2.74,2301,2.423,2302,2.74,2303,1.595,2304,1.595,2305,1.595,2306,1.595,2307,1.595,2308,2.74,2309,1.595,2310,1.595,2311,1.595,2312,1.595,2313,1.595,2314,1.595,2315,1.595,2316,1.595,2317,1.595,2318,2.74,2319,2.74,2320,4.274,2321,2.74]],["title/classes/ValidationdDto.html",[0,0.25,2167,3.146]],["body/classes/ValidationdDto.html",[0,0.422,2,1.044,3,0.111,4,0.099,5,0.099,7,0.292,8,1.432,10,0.375,11,0.008,12,1.004,13,1.14,15,0.427,17,0.111,18,1.248,19,0.111,20,0.007,21,0.007,353,2.524,623,2.913,657,2.304,672,3.431,677,3.431,680,3.335,681,2.89,684,3.188,2167,5.307,2322,5.425,2323,6.135,2324,6.135]],["title/coverage.html",[2325,4.938]],["body/coverage.html",[0,0.51,1,1.407,5,0.032,6,1.763,10,0.099,11,0.009,20,0.003,21,0.003,22,1.407,23,1.763,26,1.407,27,1.763,29,1.332,32,1.612,33,1.763,59,1.498,61,1.498,63,1.498,65,1.498,70,0.836,91,1.002,119,2.372,120,1.612,122,1.763,129,0.836,170,1.498,178,1.795,179,1.612,181,1.763,182,1.498,183,1.763,193,1.407,194,0.939,195,0.911,218,1.498,231,1.612,233,1.332,235,1.407,238,0.939,239,1.267,243,0.884,245,0.859,275,2.674,277,2.674,295,1.612,296,2.486,328,1.612,342,1.763,363,1.407,365,1.498,412,1.407,433,1.498,434,1.763,440,1.407,456,1.332,459,1.407,488,1.763,507,1.763,526,1.498,527,1.763,533,1.407,539,1.407,546,1.332,548,1.407,571,1.498,572,1.763,574,1.407,582,1.407,587,1.332,589,1.407,610,1.763,642,1.763,654,1.763,665,1.763,671,1.763,685,1.407,686,1.763,691,1.407,692,1.763,722,1.407,723,1.763,746,1.407,747,1.763,758,1.407,759,1.763,769,1.407,770,1.763,776,1.407,777,1.763,786,1.332,787,1.763,835,1.267,836,2.674,851,1.267,867,1.763,881,1.498,882,1.763,885,1.407,890,1.332,894,1.407,918,1.763,930,1.498,931,1.763,944,1.407,948,1.332,956,1.498,957,1.763,962,1.211,963,1.211,968,1.498,969,1.763,972,1.211,973,1.763,977,1.763,982,1.763,987,1.407,988,1.763,998,1.407,999,1.763,1006,1.407,1007,1.763,1016,1.407,1017,1.763,1020,1.407,1021,1.763,1024,1.407,1025,1.763,1029,1.763,1048,3.186,1077,1.498,1078,1.763,1131,1.332,1137,1.407,1207,1.763,1253,1.763,1257,1.763,1260,1.763,1267,1.763,1273,1.407,1274,1.763,1277,1.763,1290,1.407,1291,1.763,1300,1.407,1301,1.763,1309,1.407,1310,1.763,1313,1.612,1314,1.763,1319,1.407,1320,1.763,1336,1.763,1349,1.407,1350,1.763,1355,1.407,1356,1.763,1363,1.498,1364,1.763,1380,1.332,1411,1.763,1435,1.763,1437,1.612,1451,1.498,1452,1.763,1487,1.407,1490,1.332,1532,1.267,1537,1.763,1597,7.058,1615,1.498,1616,1.763,1621,1.332,1626,1.763,1653,1.763,1658,1.763,1661,1.612,1662,2.674,1675,5.788,1694,1.763,1702,1.763,1707,1.763,1709,1.498,1710,1.763,1713,1.407,1716,1.332,1782,1.763,1809,1.763,1817,1.763,1819,1.612,1853,1.763,1856,1.498,1857,1.763,1863,1.332,1883,1.763,1895,1.498,1897,2.674,1904,1.763,1908,1.612,1916,1.498,1917,1.763,1934,1.332,1964,1.498,1965,1.763,1974,1.332,1986,1.763,2014,1.763,2037,1.498,2038,1.763,2052,1.332,2083,1.763,2107,1.763,2110,1.498,2111,1.763,2126,1.498,2127,1.763,2167,1.407,2181,1.407,2243,1.763,2277,1.498,2322,1.763,2325,1.612,2326,1.994,2327,1.994,2328,1.994,2329,6.546,2330,7.185,2331,6.792,2332,8.069,2333,5.904,2334,1.763,2335,1.763,2336,8.364,2337,2.926,2338,7.721,2339,2.926,2340,7.344,2341,1.763,2342,1.763,2343,1.763,2344,1.763,2345,1.763,2346,2.486,2347,1.763,2348,1.763,2349,1.763,2350,4.936,2351,4.241,2352,4.241,2353,3.309,2354,4.241,2355,1.994,2356,3.309,2357,1.994,2358,1.994,2359,1.763,2360,1.994,2361,1.994]],["title/dependencies.html",[126,2.25,2362,3.281]],["body/dependencies.html",[0,0.42,11,0.009,18,1.24,20,0.007,21,0.007,55,0.902,56,4.071,58,4.926,126,2.554,242,1.446,293,4.302,294,3.893,344,2.627,360,5.391,937,4.071,2363,8.109,2364,6.096,2365,6.096,2366,6.096,2367,6.096,2368,6.096,2369,6.096,2370,6.096,2371,6.096,2372,6.096,2373,6.096,2374,6.096,2375,6.096,2376,6.096,2377,6.096,2378,6.096,2379,6.096,2380,6.096,2381,6.096,2382,6.096,2383,6.096]],["title/miscellaneous/enumerations.html",[2384,2.478,2385,4.748]],["body/miscellaneous/enumerations.html",[7,0.32,11,0.008,20,0.007,21,0.007,367,3.907,701,4.886,911,4.738,1246,4.484,1792,5.425,1793,5.937,1794,5.937,1877,5.043,2072,5.937,2277,5.964,2346,5.043,2384,4.484,2385,5.937,2386,5.425]],["title/miscellaneous/functions.html",[2384,2.478,2387,4.748]],["body/miscellaneous/functions.html",[7,0.252,10,0.415,11,0.008,12,1.028,20,0.006,21,0.006,42,1.895,43,1.233,44,1.895,50,1.491,129,3.187,203,1.948,241,2.232,357,4.691,365,5.154,412,4.842,944,4.842,1437,5.545,1662,4.286,1673,7.111,1676,4.691,1681,4.691,1819,5.545,2264,4.691,2277,5.154,2341,4.691,2342,4.691,2343,4.691,2344,6.726,2345,4.691,2346,3.985,2348,4.691,2349,4.691,2384,3.543,2386,4.286,2387,4.691,2388,5.305,2389,5.305,2390,5.305,2391,5.305,2392,5.305,2393,5.305,2394,5.305,2395,5.305,2396,6.862,2397,5.305,2398,5.305,2399,5.305,2400,5.305,2401,5.305,2402,5.305,2403,5.305,2404,5.305]],["title/classes/getGraphDateDto.html",[0,0.25,2181,3.146]],["body/classes/getGraphDateDto.html",[0,0.427,2,1.064,3,0.113,4,0.101,5,0.101,7,0.298,8,1.449,10,0.379,11,0.008,13,1.153,14,2.317,15,0.432,17,0.113,18,1.273,19,0.113,20,0.007,21,0.007,655,3.436,695,2.356,2181,5.37,2301,6.729,2359,5.531,2405,6.255,2406,6.255,2407,6.255,2408,6.255]],["title/index.html",[7,0.177,2409,3.71,2410,3.71]],["body/index.html",[4,0.087,11,0.008,20,0.006,21,0.006,317,4.783,401,6.145,1599,4.371,2325,4.371,2411,5.409,2412,5.409,2413,6.948,2414,5.409,2415,5.409,2416,5.409,2417,5.409,2418,5.409,2419,5.409,2420,4.783,2421,7.677,2422,5.409,2423,5.409,2424,5.409,2425,5.409,2426,8.721,2427,5.409,2428,5.409,2429,5.409,2430,8.575,2431,5.409,2432,5.409,2433,6.948,2434,5.409,2435,5.409,2436,5.409,2437,5.409,2438,6.948,2439,5.409,2440,5.409,2441,5.409,2442,6.948,2443,6.948,2444,5.409,2445,5.409,2446,5.409,2447,5.409,2448,5.409,2449,4.783,2450,5.409,2451,5.409,2452,5.409,2453,5.409,2454,5.409,2455,5.409,2456,5.409,2457,5.409,2458,4.783,2459,5.409,2460,5.409,2461,5.409,2462,5.409,2463,5.409,2464,5.409,2465,4.783]],["title/modules.html",[125,2.561]],["body/modules.html",[11,0.006,20,0.006,21,0.006,124,4.193,125,2.339,134,3.939,135,3.939,136,3.939,137,3.939,138,3.939,139,3.939,140,3.939,141,3.939,142,3.939,143,3.939,144,3.939,145,3.939,146,3.939,147,3.728,1777,4.193,2449,8.209,2466,9.283,2467,9.283,2468,9.283]],["title/overview.html",[2469,5.404]],["body/overview.html",[2,0.626,11,0.009,20,0.005,21,0.005,121,1.091,123,1.091,124,6.917,125,1.541,126,1.541,127,1.632,128,1.632,129,1.541,130,1.632,131,1.632,132,3.253,133,3.253,134,5.688,135,5.161,136,5.161,137,5.161,138,5.161,139,5.161,140,5.688,141,5.553,142,5.161,143,5.161,144,5.161,145,5.161,146,5.161,147,5.255,148,2.367,149,1.632,150,1.632,180,1.386,233,5.255,276,2.973,324,3.253,325,3.253,326,3.253,345,2.968,456,4.194,482,3.253,483,3.253,546,4.194,567,3.253,568,3.253,587,4.194,605,3.253,606,3.253,890,4.194,914,3.253,915,3.253,1131,4.194,1203,3.253,1204,3.253,1246,2.457,1380,4.194,1406,3.253,1408,3.253,1490,4.194,1530,3.253,1531,3.253,1532,4.377,1621,4.194,1649,3.253,1650,3.253,1716,4.194,1777,5.174,1778,3.253,1779,3.253,1792,2.973,1863,4.194,1879,3.253,1880,3.253,1895,2.763,1934,4.194,1974,4.194,1982,3.253,1983,3.253,2010,3.253,2011,3.253,2052,4.194,2079,3.253,2080,3.253,2238,3.253,2240,3.253,2469,3.253,2470,5.336,2471,3.679,2472,3.679]],["title/properties.html",[8,1.022,2362,3.281]],["body/properties.html",[8,1.334,11,0.008,20,0.007,21,0.007,2420,6.197,2458,6.197,2465,6.197,2473,7.008,2474,7.008,2475,7.008]],["title/miscellaneous/variables.html",[2384,2.478,2476,4.748]],["body/miscellaneous/variables.html",[7,0.241,10,0.371,11,0.009,12,0.789,20,0.006,21,0.006,75,1.909,76,1.573,79,3.076,86,2.386,93,1.256,99,2.066,112,1.537,194,3.137,195,2.315,231,5.381,241,2.57,243,3.504,260,2.183,277,4.094,286,3.806,295,5.381,296,5.935,297,5.381,298,4.48,313,5.381,316,3.806,328,4.094,374,1.61,701,4.929,1897,4.094,1898,4.48,1899,4.48,1900,4.48,1901,4.48,1902,4.48,1903,4.48,1908,5.381,2334,4.48,2335,5.889,2337,4.48,2339,4.48,2346,3.806,2347,5.889,2384,3.384,2386,4.094,2476,4.48,2477,6.659,2478,5.067,2479,5.067,2480,5.067,2481,5.067,2482,6.659,2483,8.815,2484,5.067,2485,5.067,2486,5.067]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"classes/AccessTokenDto.html":{},"classes/AddUserInterViewDto.html":{},"classes/AddgroupDto.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallUserHistoryController.html":{},"modules/CallUserHistoryModule.html":{},"injectables/CallUserHistoryService.html":{},"classes/ChangePasswordDto.html":{},"controllers/ContactController.html":{},"modules/ContactModule.html":{},"controllers/ContactPersonController.html":{},"modules/ContactPersonModule.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"classes/CreateCallUserDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateInterViewDto.html":{},"classes/CreateRentalCostDto.html":{},"classes/CreateScheduleDaysDto.html":{},"classes/CreateScheduleDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/DecodeDto.html":{},"controllers/DirectorController.html":{},"modules/DirectorModule.html":{},"injectables/DirectorService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/DtoValidatorPipe.html":{},"injectables/DtoValidatorSelfPipe.html":{},"classes/EditContactDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditGroupDto.html":{},"classes/EditInterViewDto.html":{},"classes/EditRentalCostDto.html":{},"classes/EditScheduleDaysDto.html":{},"classes/EditScheduleDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSelfDto.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"controllers/FiszkaController.html":{},"modules/FiszkaModule.html":{},"injectables/FiszkaService.html":{},"classes/GetCallUserHistoryDto.html":{},"classes/GetContactDto.html":{},"classes/GetContactPersontDto.html":{},"classes/GetDirectorDto.html":{},"classes/GetFindByIdDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetGroupDto.html":{},"classes/GetInterViewsDto.html":{},"classes/GetRentalCostDto.html":{},"classes/GetScheduleDto.html":{},"classes/GetSchoolDto.html":{},"classes/GetUserDto.html":{},"classes/GetUserInterViewDto.html":{},"classes/GraphDateDto.html":{},"controllers/GroupController.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/InterviewsController.html":{},"modules/InterviewsModule.html":{},"injectables/InterviewsService.html":{},"controllers/LoggerController.html":{},"injectables/LoggerMiddleware.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/LoginUserDto.html":{},"classes/MatchConstraint.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"injectables/OptionsPipe.html":{},"controllers/PredicteController.html":{},"modules/PredicteModule.html":{},"injectables/PredicteService.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{},"classes/RemoveUserInterViewDto.html":{},"controllers/RentalCostController.html":{},"modules/RentalCostModule.html":{},"injectables/RentalCostService.html":{},"interfaces/ReqUserInfo.html":{},"guards/RolesGuard.html":{},"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"modules/ScheduleDaysModule.html":{},"injectables/ScheduleDaysService.html":{},"modules/ScheduleModule.html":{},"injectables/ScheduleService.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"classes/SendFiszkiDto.html":{},"injectables/UpperCasePipe.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidationdDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"classes/getGraphDateDto.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1597,"title":{},"body":{"injectables/InterviewsService.html":{},"injectables/OptionsPipe.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":2474,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":2382,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":2376,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":2375,"title":{},"body":{"dependencies.html":{}}}],["0.9.1",{"_index":2380,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2332,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2354,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2358,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2352,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2355,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2353,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2356,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":2357,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2340,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2336,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2330,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2338,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2329,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2333,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2350,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2351,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":1246,"title":{},"body":{"injectables/FiszkaService.html":{},"injectables/OptionsPipe.html":{},"controllers/PredicteController.html":{},"injectables/PredicteService.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["10",{"_index":1798,"title":{},"body":{"injectables/PredicteService.html":{}}}],["10.1.1",{"_index":2366,"title":{},"body":{"dependencies.html":{}}}],["10.2.6",{"_index":2363,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":1762,"title":{},"body":{"controllers/PredicteController.html":{}}}],["16",{"_index":2470,"title":{},"body":{"overview.html":{}}}],["1s",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{}}}],["2",{"_index":1792,"title":{},"body":{"injectables/PredicteService.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["22",{"_index":2471,"title":{},"body":{"overview.html":{}}}],["3",{"_index":1793,"title":{},"body":{"injectables/PredicteService.html":{},"miscellaneous/enumerations.html":{}}}],["3.1.1",{"_index":2365,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":1794,"title":{},"body":{"injectables/PredicteService.html":{},"miscellaneous/enumerations.html":{}}}],["4.0.0",{"_index":2369,"title":{},"body":{"dependencies.html":{}}}],["4.18.2",{"_index":2377,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":1795,"title":{},"body":{"injectables/PredicteService.html":{}}}],["5)@isalphanumeric('pl",{"_index":817,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/EditSchoolDto.html":{}}}],["5.0.0",{"_index":2372,"title":{},"body":{"dependencies.html":{}}}],["5.1.0",{"_index":2373,"title":{},"body":{"dependencies.html":{}}}],["5.6.0",{"_index":2370,"title":{},"body":{"dependencies.html":{}}}],["5000s",{"_index":339,"title":{},"body":{"modules/AuthModule.html":{}}}],["57",{"_index":2472,"title":{},"body":{"overview.html":{}}}],["6",{"_index":1796,"title":{},"body":{"injectables/PredicteService.html":{}}}],["7",{"_index":1725,"title":{},"body":{"controllers/PredicteController.html":{},"injectables/PredicteService.html":{}}}],["7.2.0",{"_index":2383,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1797,"title":{},"body":{"injectables/PredicteService.html":{},"injectables/UserService.html":{}}}],["9",{"_index":1726,"title":{},"body":{"controllers/PredicteController.html":{},"injectables/PredicteService.html":{}}}],["_count",{"_index":1601,"title":{},"body":{"injectables/InterviewsService.html":{},"injectables/UserService.html":{}}}],["ac",{"_index":463,"title":{},"body":{"controllers/CallUserHistoryController.html":{},"controllers/FiszkaController.html":{}}}],["ac,mgtn",{"_index":1198,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["access",{"_index":318,"title":{},"body":{"guards/AuthGuard.html":{}}}],["access_token",{"_index":9,"title":{},"body":{"classes/AccessTokenDto.html":{},"injectables/AuthService.html":{}}}],["accesstokendto",{"_index":1,"title":{"classes/AccessTokenDto.html":{}},"body":{"classes/AccessTokenDto.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["active",{"_index":837,"title":{},"body":{"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/EditSelfDto.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"classes/GetUserDto.html":{},"injectables/UserService.html":{}}}],["addfiszki",{"_index":1079,"title":{},"body":{"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{}}}],["addfiszki(@param('idinterview",{"_index":1166,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["addfiszki(idinterview",{"_index":1090,"title":{},"body":{"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{}}}],["addgroup",{"_index":1080,"title":{},"body":{"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{}}}],["addgroup(@param('idgroup",{"_index":1176,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["addgroup(idgroup",{"_index":1095,"title":{},"body":{"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{}}}],["addgroupdto",{"_index":26,"title":{"classes/AddgroupDto.html":{}},"body":{"classes/AddgroupDto.html":{},"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{},"coverage.html":{}}}],["addusercall",{"_index":436,"title":{},"body":{"controllers/CallUserHistoryController.html":{},"injectables/CallUserHistoryService.html":{}}}],["addusercall(@param('idfiszka",{"_index":477,"title":{},"body":{"controllers/CallUserHistoryController.html":{}}}],["addusercall(idfiszka",{"_index":439,"title":{},"body":{"controllers/CallUserHistoryController.html":{},"injectables/CallUserHistoryService.html":{}}}],["adduserinterviewdto",{"_index":22,"title":{"classes/AddUserInterViewDto.html":{}},"body":{"classes/AddUserInterViewDto.html":{},"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{},"coverage.html":{}}}],["addusertointerview",{"_index":1453,"title":{},"body":{"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{}}}],["addusertointerview(@param('idinterview",{"_index":1522,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["addusertointerview(idinterview",{"_index":1461,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["addusertointerview(interviewid",{"_index":1542,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["agent",{"_index":109,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/NotFoundExceptionFilter.html":{}}}],["aktualizacji",{"_index":1847,"title":{},"body":{"classes/PrismaValidationFilter.html":{}}}],["aktualna",{"_index":1748,"title":{},"body":{"controllers/PredicteController.html":{}}}],["aktywny",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{}}}],["ale",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{},"controllers/ScheduleController.html":{}}}],["allexceptionsfilter",{"_index":32,"title":{"classes/AllExceptionsFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["allrole",{"_index":2347,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["already",{"_index":1585,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["amazing",{"_index":2450,"title":{},"body":{"index.html":{}}}],["any).message",{"_index":100,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["any)[relatedpropertyname",{"_index":1688,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["app",{"_index":2428,"title":{},"body":{"index.html":{}}}],["app_guard",{"_index":329,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["appcontroller",{"_index":120,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["applications",{"_index":2419,"title":{},"body":{"index.html":{}}}],["apply(loggermiddleware",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["appmodule",{"_index":124,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":179,"title":{"injectables/AppService.html":{}},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["args",{"_index":1669,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["args.constraints",{"_index":1685,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["args.object",{"_index":1687,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["args.property",{"_index":1690,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["argumentmetadata",{"_index":938,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/DtoValidatorPipe.html":{},"injectables/DtoValidatorSelfPipe.html":{},"injectables/OptionsPipe.html":{},"injectables/UpperCasePipe.html":{}}}],["argumentshost",{"_index":47,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{}}}],["assigning",{"_index":315,"title":{},"body":{"guards/AuthGuard.html":{}}}],["async",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CallUserHistoryController.html":{},"injectables/CallUserHistoryService.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"controllers/DirectorController.html":{},"injectables/DirectorService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/DtoValidatorPipe.html":{},"injectables/DtoValidatorSelfPipe.html":{},"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{},"controllers/LoggerController.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"controllers/PredicteController.html":{},"injectables/PredicteService.html":{},"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{},"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"injectables/ScheduleDaysService.html":{},"injectables/ScheduleService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"injectables/UpperCasePipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["auth",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":331,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":236,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth.service",{"_index":234,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/decorators/reqinfo.decorator",{"_index":2178,"title":{},"body":{"controllers/UserController.html":{}}}],["auth/decorators/roles.decorator",{"_index":2174,"title":{},"body":{"controllers/UserController.html":{}}}],["auth/roles.guard",{"_index":2172,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["authcontroller",{"_index":182,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":235,"title":{"guards/AuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authmodule",{"_index":134,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":2458,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":233,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["autoryzacji",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{}}}],["availableemployee",{"_index":1789,"title":{},"body":{"injectables/PredicteService.html":{}}}],["await",{"_index":311,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CallUserHistoryService.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/DtoValidatorPipe.html":{},"injectables/DtoValidatorSelfPipe.html":{},"injectables/FiszkaService.html":{},"injectables/GroupService.html":{},"injectables/InterviewsService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"injectables/PredicteService.html":{},"injectables/ScheduleDaysService.html":{},"injectables/UserService.html":{}}}],["backers",{"_index":2451,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":941,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/DtoValidatorPipe.html":{},"injectables/DtoValidatorSelfPipe.html":{},"injectables/UpperCasePipe.html":{}}}],["bcrypt",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["bcrypt.compare(datapass.oldpassword",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.compare(pass",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{}}}],["bearer",{"_index":323,"title":{},"body":{"guards/AuthGuard.html":{}}}],["body",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CallUserHistoryController.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"controllers/DirectorController.html":{},"injectables/DirectorService.html":{},"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"controllers/InterviewsController.html":{},"controllers/PredicteController.html":{},"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{},"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"injectables/ScheduleService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/UserController.html":{}}}],["body(dtovalidationpipe",{"_index":2066,"title":{},"body":{"controllers/SchoolController.html":{}}}],["body(uppercasepipe",{"_index":2203,"title":{},"body":{"controllers/UserController.html":{}}}],["body.city",{"_index":2099,"title":{},"body":{"injectables/SchoolService.html":{}}}],["body.classdigit",{"_index":1242,"title":{},"body":{"injectables/FiszkaService.html":{},"injectables/ScheduleService.html":{}}}],["body.classletter",{"_index":1241,"title":{},"body":{"injectables/FiszkaService.html":{},"injectables/ScheduleService.html":{}}}],["body.classroomhour",{"_index":1892,"title":{},"body":{"injectables/RentalCostService.html":{}}}],["body.clockhour",{"_index":1893,"title":{},"body":{"injectables/RentalCostService.html":{}}}],["body.codegroup",{"_index":1429,"title":{},"body":{"injectables/GroupService.html":{}}}],["body.comments",{"_index":652,"title":{},"body":{"injectables/ContactService.html":{},"injectables/FiszkaService.html":{},"injectables/SchoolService.html":{}}}],["body.cooperation",{"_index":2101,"title":{},"body":{"injectables/SchoolService.html":{}}}],["body.date",{"_index":2025,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["body.dateofvisit",{"_index":651,"title":{},"body":{"injectables/ContactService.html":{}}}],["body.dayoftheweek",{"_index":1432,"title":{},"body":{"injectables/GroupService.html":{}}}],["body.email",{"_index":628,"title":{},"body":{"injectables/ContactPersonService.html":{},"injectables/DirectorService.html":{},"injectables/FiszkaService.html":{},"injectables/SchoolService.html":{}}}],["body.fiszka.id",{"_index":1250,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["body.hour",{"_index":1433,"title":{},"body":{"injectables/GroupService.html":{}}}],["body.name",{"_index":626,"title":{},"body":{"injectables/ContactPersonService.html":{},"injectables/DirectorService.html":{},"injectables/FiszkaService.html":{},"injectables/SchoolService.html":{}}}],["body.numberofclasses",{"_index":2106,"title":{},"body":{"injectables/SchoolService.html":{}}}],["body.phone",{"_index":629,"title":{},"body":{"injectables/ContactPersonService.html":{},"injectables/DirectorService.html":{},"injectables/FiszkaService.html":{},"injectables/SchoolService.html":{}}}],["body.postcode",{"_index":2105,"title":{},"body":{"injectables/SchoolService.html":{}}}],["body.province",{"_index":2102,"title":{},"body":{"injectables/SchoolService.html":{}}}],["body.status",{"_index":2098,"title":{},"body":{"injectables/SchoolService.html":{}}}],["body.street",{"_index":2103,"title":{},"body":{"injectables/SchoolService.html":{}}}],["body.subject",{"_index":1431,"title":{},"body":{"injectables/GroupService.html":{}}}],["body.suitenumber",{"_index":2104,"title":{},"body":{"injectables/SchoolService.html":{}}}],["body.surname",{"_index":627,"title":{},"body":{"injectables/ContactPersonService.html":{},"injectables/DirectorService.html":{},"injectables/FiszkaService.html":{}}}],["body.title",{"_index":1430,"title":{},"body":{"injectables/GroupService.html":{}}}],["body.trial",{"_index":1434,"title":{},"body":{"injectables/GroupService.html":{}}}],["body.type",{"_index":2100,"title":{},"body":{"injectables/SchoolService.html":{}}}],["boolean",{"_index":737,"title":{},"body":{"classes/CreateGroupDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditGroupDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSelfDto.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetGroupDto.html":{},"classes/GetSchoolDto.html":{},"classes/GetUserDto.html":{},"classes/MatchConstraint.html":{},"guards/RolesGuard.html":{}}}],["bootstrap",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CallUserHistoryModule.html":{},"modules/ContactModule.html":{},"modules/ContactPersonModule.html":{},"modules/DirectorModule.html":{},"modules/FiszkaModule.html":{},"modules/GroupModule.html":{},"modules/InterviewsModule.html":{},"modules/LoggerModule.html":{},"modules/PredicteModule.html":{},"modules/RentalCostModule.html":{},"modules/ScheduleDaysModule.html":{},"modules/ScheduleModule.html":{},"modules/SchoolModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":2468,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2466,"title":{},"body":{"modules.html":{}}}],["building",{"_index":2414,"title":{},"body":{"index.html":{}}}],["byl",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{}}}],["ca",{"_index":2072,"title":{},"body":{"controllers/SchoolController.html":{},"miscellaneous/enumerations.html":{}}}],["calldate",{"_index":496,"title":{},"body":{"injectables/CallUserHistoryService.html":{},"classes/CreateCallUserDto.html":{},"classes/GetCallUserHistoryDto.html":{}}}],["callnext",{"_index":497,"title":{},"body":{"injectables/CallUserHistoryService.html":{},"classes/CreateCallUserDto.html":{},"classes/GetCallUserHistoryDto.html":{}}}],["calluserhistory",{"_index":435,"title":{},"body":{"controllers/CallUserHistoryController.html":{}}}],["calluserhistory.controller",{"_index":485,"title":{},"body":{"modules/CallUserHistoryModule.html":{}}}],["calluserhistory.service",{"_index":457,"title":{},"body":{"controllers/CallUserHistoryController.html":{},"modules/CallUserHistoryModule.html":{}}}],["calluserhistorycontroller",{"_index":433,"title":{"controllers/CallUserHistoryController.html":{}},"body":{"controllers/CallUserHistoryController.html":{},"modules/CallUserHistoryModule.html":{},"coverage.html":{}}}],["calluserhistorymodule",{"_index":135,"title":{"modules/CallUserHistoryModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CallUserHistoryModule.html":{},"modules.html":{},"overview.html":{}}}],["calluserhistoryservice",{"_index":456,"title":{"injectables/CallUserHistoryService.html":{}},"body":{"controllers/CallUserHistoryController.html":{},"modules/CallUserHistoryModule.html":{},"injectables/CallUserHistoryService.html":{},"coverage.html":{},"overview.html":{}}}],["calluserservice",{"_index":471,"title":{},"body":{"controllers/CallUserHistoryController.html":{}}}],["canactivate",{"_index":278,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":285,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RolesGuard.html":{}}}],["catch",{"_index":37,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{}}}],["catch(exception",{"_index":45,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{}}}],["catch(httpexception",{"_index":1439,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{}}}],["catch(notfounderror",{"_index":1696,"title":{},"body":{"classes/NotFoundErrorFilter.html":{}}}],["catch(notfoundexception",{"_index":1704,"title":{},"body":{"classes/NotFoundExceptionFilter.html":{}}}],["changepassword",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["changepassword(@body",{"_index":262,"title":{},"body":{"controllers/AuthController.html":{}}}],["changepassword(data",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{}}}],["changepassword(datapass",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{}}}],["changepassworddto",{"_index":193,"title":{"classes/ChangePasswordDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"coverage.html":{}}}],["chętne",{"_index":1774,"title":{},"body":{"controllers/PredicteController.html":{}}}],["chętnych",{"_index":1761,"title":{},"body":{"controllers/PredicteController.html":{}}}],["city",{"_index":788,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/EditSchoolDto.html":{},"classes/GetSchoolDto.html":{},"injectables/SchoolService.html":{}}}],["class",{"_index":0,"title":{"classes/AccessTokenDto.html":{},"classes/AddUserInterViewDto.html":{},"classes/AddgroupDto.html":{},"classes/AllExceptionsFilter.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateCallUserDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateInterViewDto.html":{},"classes/CreateRentalCostDto.html":{},"classes/CreateScheduleDaysDto.html":{},"classes/CreateScheduleDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/DecodeDto.html":{},"classes/EditContactDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditGroupDto.html":{},"classes/EditInterViewDto.html":{},"classes/EditRentalCostDto.html":{},"classes/EditScheduleDaysDto.html":{},"classes/EditScheduleDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSelfDto.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"classes/GetCallUserHistoryDto.html":{},"classes/GetContactDto.html":{},"classes/GetContactPersontDto.html":{},"classes/GetDirectorDto.html":{},"classes/GetFindByIdDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetGroupDto.html":{},"classes/GetInterViewsDto.html":{},"classes/GetRentalCostDto.html":{},"classes/GetScheduleDto.html":{},"classes/GetSchoolDto.html":{},"classes/GetUserDto.html":{},"classes/GetUserInterViewDto.html":{},"classes/GraphDateDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/LoginUserDto.html":{},"classes/MatchConstraint.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{},"classes/RemoveUserInterViewDto.html":{},"classes/SendFiszkiDto.html":{},"classes/ValidationdDto.html":{},"classes/getGraphDateDto.html":{}},"body":{"classes/AccessTokenDto.html":{},"classes/AddUserInterViewDto.html":{},"classes/AddgroupDto.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallUserHistoryController.html":{},"modules/CallUserHistoryModule.html":{},"injectables/CallUserHistoryService.html":{},"classes/ChangePasswordDto.html":{},"controllers/ContactController.html":{},"modules/ContactModule.html":{},"controllers/ContactPersonController.html":{},"modules/ContactPersonModule.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"classes/CreateCallUserDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateInterViewDto.html":{},"classes/CreateRentalCostDto.html":{},"classes/CreateScheduleDaysDto.html":{},"classes/CreateScheduleDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/DecodeDto.html":{},"controllers/DirectorController.html":{},"modules/DirectorModule.html":{},"injectables/DirectorService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/DtoValidatorPipe.html":{},"injectables/DtoValidatorSelfPipe.html":{},"classes/EditContactDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditGroupDto.html":{},"classes/EditInterViewDto.html":{},"classes/EditRentalCostDto.html":{},"classes/EditScheduleDaysDto.html":{},"classes/EditScheduleDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSelfDto.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"controllers/FiszkaController.html":{},"modules/FiszkaModule.html":{},"injectables/FiszkaService.html":{},"classes/GetCallUserHistoryDto.html":{},"classes/GetContactDto.html":{},"classes/GetContactPersontDto.html":{},"classes/GetDirectorDto.html":{},"classes/GetFindByIdDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetGroupDto.html":{},"classes/GetInterViewsDto.html":{},"classes/GetRentalCostDto.html":{},"classes/GetScheduleDto.html":{},"classes/GetSchoolDto.html":{},"classes/GetUserDto.html":{},"classes/GetUserInterViewDto.html":{},"classes/GraphDateDto.html":{},"controllers/GroupController.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/InterviewsController.html":{},"modules/InterviewsModule.html":{},"injectables/InterviewsService.html":{},"controllers/LoggerController.html":{},"injectables/LoggerMiddleware.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/LoginUserDto.html":{},"classes/MatchConstraint.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"injectables/OptionsPipe.html":{},"controllers/PredicteController.html":{},"modules/PredicteModule.html":{},"injectables/PredicteService.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{},"classes/RemoveUserInterViewDto.html":{},"controllers/RentalCostController.html":{},"modules/RentalCostModule.html":{},"injectables/RentalCostService.html":{},"guards/RolesGuard.html":{},"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"modules/ScheduleDaysModule.html":{},"injectables/ScheduleDaysService.html":{},"modules/ScheduleModule.html":{},"injectables/ScheduleService.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"classes/SendFiszkiDto.html":{},"injectables/UpperCasePipe.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidationdDto.html":{},"coverage.html":{},"dependencies.html":{},"classes/getGraphDateDto.html":{}}}],["classdigit",{"_index":693,"title":{},"body":{"classes/CreateFiszkaDto.html":{},"classes/CreateScheduleDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditScheduleDto.html":{},"injectables/FiszkaService.html":{},"classes/GetFiszkaDto.html":{},"classes/GetScheduleDto.html":{},"injectables/InterviewsService.html":{},"injectables/ScheduleService.html":{}}}],["classdigit:body.classdigit",{"_index":2028,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["classdigit:number",{"_index":717,"title":{},"body":{"classes/CreateFiszkaDto.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AccessTokenDto.html":{},"classes/AddUserInterViewDto.html":{},"classes/AddgroupDto.html":{},"classes/AllExceptionsFilter.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateCallUserDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateInterViewDto.html":{},"classes/CreateRentalCostDto.html":{},"classes/CreateScheduleDaysDto.html":{},"classes/CreateScheduleDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/DecodeDto.html":{},"classes/EditContactDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditGroupDto.html":{},"classes/EditInterViewDto.html":{},"classes/EditRentalCostDto.html":{},"classes/EditScheduleDaysDto.html":{},"classes/EditScheduleDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSelfDto.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"classes/GetCallUserHistoryDto.html":{},"classes/GetContactDto.html":{},"classes/GetContactPersontDto.html":{},"classes/GetDirectorDto.html":{},"classes/GetFindByIdDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetGroupDto.html":{},"classes/GetInterViewsDto.html":{},"classes/GetRentalCostDto.html":{},"classes/GetScheduleDto.html":{},"classes/GetSchoolDto.html":{},"classes/GetUserDto.html":{},"classes/GetUserInterViewDto.html":{},"classes/GraphDateDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/LoginUserDto.html":{},"classes/MatchConstraint.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{},"classes/RemoveUserInterViewDto.html":{},"classes/SendFiszkiDto.html":{},"classes/ValidationdDto.html":{},"classes/getGraphDateDto.html":{},"overview.html":{}}}],["classletter",{"_index":694,"title":{},"body":{"classes/CreateFiszkaDto.html":{},"classes/CreateScheduleDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditScheduleDto.html":{},"injectables/FiszkaService.html":{},"classes/GetFiszkaDto.html":{},"classes/GetScheduleDto.html":{},"injectables/InterviewsService.html":{},"injectables/ScheduleService.html":{}}}],["classletter:body.classletter",{"_index":2029,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["classletter:string",{"_index":714,"title":{},"body":{"classes/CreateFiszkaDto.html":{}}}],["classnumber",{"_index":748,"title":{},"body":{"classes/CreateInterViewDto.html":{},"classes/EditInterViewDto.html":{},"classes/GetInterViewsDto.html":{},"classes/GetUserInterViewDto.html":{},"injectables/InterviewsService.html":{}}}],["classroomhour",{"_index":760,"title":{},"body":{"classes/CreateRentalCostDto.html":{},"classes/EditRentalCostDto.html":{},"classes/GetRentalCostDto.html":{},"injectables/RentalCostService.html":{}}}],["classroomhour:decimal",{"_index":767,"title":{},"body":{"classes/CreateRentalCostDto.html":{},"classes/EditRentalCostDto.html":{},"classes/GetRentalCostDto.html":{}}}],["classvalidator",{"_index":944,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/DtoValidatorPipe.html":{},"injectables/DtoValidatorSelfPipe.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["classvalidator(obj",{"_index":2395,"title":{},"body":{"miscellaneous/functions.html":{}}}],["classvalidator(value",{"_index":955,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/DtoValidatorPipe.html":{},"injectables/DtoValidatorSelfPipe.html":{}}}],["cleanedfieldkeys",{"_index":1828,"title":{},"body":{"classes/PrismaValidationFilter.html":{}}}],["cleanedfieldkeys.map(key",{"_index":1832,"title":{},"body":{"classes/PrismaValidationFilter.html":{}}}],["clockhour",{"_index":761,"title":{},"body":{"classes/CreateRentalCostDto.html":{},"classes/EditRentalCostDto.html":{},"classes/GetRentalCostDto.html":{},"injectables/RentalCostService.html":{}}}],["clockhour:decimal",{"_index":768,"title":{},"body":{"classes/CreateRentalCostDto.html":{},"classes/EditRentalCostDto.html":{},"classes/GetRentalCostDto.html":{}}}],["cluster_appmodule",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":324,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":326,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":327,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":325,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_calluserhistorymodule",{"_index":482,"title":{},"body":{"modules/CallUserHistoryModule.html":{},"overview.html":{}}}],["cluster_calluserhistorymodule_providers",{"_index":483,"title":{},"body":{"modules/CallUserHistoryModule.html":{},"overview.html":{}}}],["cluster_contactmodule",{"_index":567,"title":{},"body":{"modules/ContactModule.html":{},"overview.html":{}}}],["cluster_contactmodule_providers",{"_index":568,"title":{},"body":{"modules/ContactModule.html":{},"overview.html":{}}}],["cluster_contactpersonmodule",{"_index":605,"title":{},"body":{"modules/ContactPersonModule.html":{},"overview.html":{}}}],["cluster_contactpersonmodule_providers",{"_index":606,"title":{},"body":{"modules/ContactPersonModule.html":{},"overview.html":{}}}],["cluster_directormodule",{"_index":914,"title":{},"body":{"modules/DirectorModule.html":{},"overview.html":{}}}],["cluster_directormodule_providers",{"_index":915,"title":{},"body":{"modules/DirectorModule.html":{},"overview.html":{}}}],["cluster_fiszkamodule",{"_index":1203,"title":{},"body":{"modules/FiszkaModule.html":{},"overview.html":{}}}],["cluster_fiszkamodule_providers",{"_index":1204,"title":{},"body":{"modules/FiszkaModule.html":{},"overview.html":{}}}],["cluster_groupmodule",{"_index":1406,"title":{},"body":{"modules/GroupModule.html":{},"overview.html":{}}}],["cluster_groupmodule_imports",{"_index":1407,"title":{},"body":{"modules/GroupModule.html":{}}}],["cluster_groupmodule_providers",{"_index":1408,"title":{},"body":{"modules/GroupModule.html":{},"overview.html":{}}}],["cluster_interviewsmodule",{"_index":1530,"title":{},"body":{"modules/InterviewsModule.html":{},"overview.html":{}}}],["cluster_interviewsmodule_providers",{"_index":1531,"title":{},"body":{"modules/InterviewsModule.html":{},"overview.html":{}}}],["cluster_loggermodule",{"_index":1649,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_providers",{"_index":1650,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_predictemodule",{"_index":1778,"title":{},"body":{"modules/PredicteModule.html":{},"overview.html":{}}}],["cluster_predictemodule_providers",{"_index":1779,"title":{},"body":{"modules/PredicteModule.html":{},"overview.html":{}}}],["cluster_rentalcostmodule",{"_index":1879,"title":{},"body":{"modules/RentalCostModule.html":{},"overview.html":{}}}],["cluster_rentalcostmodule_providers",{"_index":1880,"title":{},"body":{"modules/RentalCostModule.html":{},"overview.html":{}}}],["cluster_scheduledaysmodule",{"_index":1982,"title":{},"body":{"modules/ScheduleDaysModule.html":{},"overview.html":{}}}],["cluster_scheduledaysmodule_providers",{"_index":1983,"title":{},"body":{"modules/ScheduleDaysModule.html":{},"overview.html":{}}}],["cluster_schedulemodule",{"_index":2010,"title":{},"body":{"modules/ScheduleModule.html":{},"overview.html":{}}}],["cluster_schedulemodule_providers",{"_index":2011,"title":{},"body":{"modules/ScheduleModule.html":{},"overview.html":{}}}],["cluster_schoolmodule",{"_index":2079,"title":{},"body":{"modules/SchoolModule.html":{},"overview.html":{}}}],["cluster_schoolmodule_providers",{"_index":2080,"title":{},"body":{"modules/SchoolModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":2238,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":2240,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":2239,"title":{},"body":{"modules/UserModule.html":{}}}],["co",{"_index":1757,"title":{},"body":{"controllers/PredicteController.html":{}}}],["code",{"_index":1815,"title":{},"body":{"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{}}}],["codegroup",{"_index":724,"title":{},"body":{"classes/CreateGroupDto.html":{},"classes/EditGroupDto.html":{},"classes/GetGroupDto.html":{},"injectables/GroupService.html":{},"classes/PrismaValidationFilter.html":{}}}],["comments",{"_index":498,"title":{},"body":{"injectables/CallUserHistoryService.html":{},"injectables/ContactService.html":{},"classes/CreateCallUserDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateSchoolDto.html":{},"classes/EditContactDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditSchoolDto.html":{},"injectables/FiszkaService.html":{},"classes/GetCallUserHistoryDto.html":{},"classes/GetContactDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetSchoolDto.html":{},"injectables/SchoolService.html":{}}}],["comments:string",{"_index":718,"title":{},"body":{"classes/CreateFiszkaDto.html":{}}}],["common/helpers/classvalidator",{"_index":960,"title":{},"body":{"injectables/DtoValidatorPipe.html":{},"injectables/DtoValidatorSelfPipe.html":{}}}],["common/helpers/hashpass",{"_index":2276,"title":{},"body":{"injectables/UserService.html":{}}}],["common/helpers/rolevalue",{"_index":2278,"title":{},"body":{"injectables/UserService.html":{}}}],["common/logger.middleware",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["common/validation/http",{"_index":1623,"title":{},"body":{"controllers/LoggerController.html":{},"controllers/UserController.html":{}}}],["condition",{"_index":303,"title":{},"body":{"guards/AuthGuard.html":{}}}],["configure",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["connect",{"_index":503,"title":{},"body":{"injectables/CallUserHistoryService.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"injectables/DirectorService.html":{},"injectables/FiszkaService.html":{},"injectables/GroupService.html":{},"injectables/InterviewsService.html":{},"injectables/RentalCostService.html":{},"injectables/ScheduleService.html":{}}}],["console.log(\"before",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(\"końcowy",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(\"stary",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(\"test",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(\"token",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(\"user",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(await",{"_index":2306,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log(date",{"_index":2215,"title":{},"body":{"controllers/UserController.html":{}}}],["console.log(error",{"_index":1441,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["console.log(exception",{"_index":1812,"title":{},"body":{"classes/PrismaOtherFilter.html":{}}}],["console.log(idphonecalls",{"_index":504,"title":{},"body":{"injectables/CallUserHistoryService.html":{}}}],["console.log(log",{"_index":1648,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["console.log(mappedarray",{"_index":2303,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log(test",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(token",{"_index":307,"title":{},"body":{"guards/AuthGuard.html":{}}}],["console.log(user",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CallUserHistoryService.html":{}}}],["console.log(user.role",{"_index":1913,"title":{},"body":{"guards/RolesGuard.html":{}}}],["const",{"_index":76,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CallUserHistoryService.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"injectables/DirectorService.html":{},"injectables/DtoValidatorPipe.html":{},"injectables/FiszkaService.html":{},"injectables/GroupService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"classes/MatchConstraint.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"controllers/PredicteController.html":{},"injectables/PredicteService.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{},"injectables/RentalCostService.html":{},"interfaces/ReqUserInfo.html":{},"guards/RolesGuard.html":{},"injectables/ScheduleDaysService.html":{},"injectables/ScheduleService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constraints",{"_index":1680,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["constructor",{"_index":38,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CallUserHistoryService.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"injectables/DirectorService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/DtoValidatorPipe.html":{},"injectables/DtoValidatorSelfPipe.html":{},"injectables/FiszkaService.html":{},"injectables/GroupService.html":{},"injectables/InterviewsService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"injectables/PredicteService.html":{},"injectables/RentalCostService.html":{},"guards/RolesGuard.html":{},"injectables/ScheduleDaysService.html":{},"injectables/ScheduleService.html":{},"injectables/SchoolService.html":{},"injectables/UpperCasePipe.html":{},"injectables/UserService.html":{}}}],["constructor(@inject(request",{"_index":951,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/DtoValidatorPipe.html":{},"injectables/DtoValidatorSelfPipe.html":{},"injectables/UpperCasePipe.html":{}}}],["constructor(httpadapterhost",{"_index":39,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["constructor(jwtservice",{"_index":281,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/LoggerMiddleware.html":{}}}],["constructor(prisma",{"_index":489,"title":{},"body":{"injectables/CallUserHistoryService.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"injectables/DirectorService.html":{},"injectables/FiszkaService.html":{},"injectables/GroupService.html":{},"injectables/InterviewsService.html":{},"injectables/LoggerService.html":{},"injectables/PredicteService.html":{},"injectables/RentalCostService.html":{},"injectables/ScheduleDaysService.html":{},"injectables/ScheduleService.html":{},"injectables/SchoolService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":73,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"controllers/CallUserHistoryController.html":{},"injectables/CallUserHistoryService.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"controllers/DirectorController.html":{},"injectables/DirectorService.html":{},"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{},"controllers/LoggerController.html":{},"injectables/LoggerService.html":{},"controllers/PredicteController.html":{},"injectables/PredicteService.html":{},"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{},"guards/RolesGuard.html":{},"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"injectables/ScheduleDaysService.html":{},"injectables/ScheduleService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["constructor(reflector",{"_index":1905,"title":{},"body":{"guards/RolesGuard.html":{}}}],["constructor(req",{"_index":933,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/DtoValidatorPipe.html":{},"injectables/DtoValidatorSelfPipe.html":{},"injectables/UpperCasePipe.html":{}}}],["consumer",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["contact",{"_index":528,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{}}}],["contact.controller",{"_index":570,"title":{},"body":{"modules/ContactModule.html":{}}}],["contact.service",{"_index":547,"title":{},"body":{"controllers/ContactController.html":{},"modules/ContactModule.html":{}}}],["contactcontroller",{"_index":526,"title":{"controllers/ContactController.html":{}},"body":{"controllers/ContactController.html":{},"modules/ContactModule.html":{},"coverage.html":{}}}],["contactmodule",{"_index":136,"title":{"modules/ContactModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ContactModule.html":{},"modules.html":{},"overview.html":{}}}],["contactperson",{"_index":573,"title":{},"body":{"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{}}}],["contactperson.controller",{"_index":609,"title":{},"body":{"modules/ContactPersonModule.html":{}}}],["contactperson.service",{"_index":588,"title":{},"body":{"controllers/ContactPersonController.html":{},"modules/ContactPersonModule.html":{}}}],["contactpersoncontroller",{"_index":571,"title":{"controllers/ContactPersonController.html":{}},"body":{"controllers/ContactPersonController.html":{},"modules/ContactPersonModule.html":{},"coverage.html":{}}}],["contactpersonmodule",{"_index":137,"title":{"modules/ContactPersonModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ContactPersonModule.html":{},"modules.html":{},"overview.html":{}}}],["contactpersonservice",{"_index":587,"title":{"injectables/ContactPersonService.html":{}},"body":{"controllers/ContactPersonController.html":{},"modules/ContactPersonModule.html":{},"injectables/ContactPersonService.html":{},"coverage.html":{},"overview.html":{}}}],["contactservice",{"_index":546,"title":{"injectables/ContactService.html":{}},"body":{"controllers/ContactController.html":{},"modules/ContactModule.html":{},"injectables/ContactService.html":{},"coverage.html":{},"overview.html":{}}}],["context",{"_index":288,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RolesGuard.html":{}}}],["context.getclass",{"_index":301,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RolesGuard.html":{}}}],["context.gethandler",{"_index":300,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RolesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":304,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RolesGuard.html":{}}}],["controller",{"_index":119,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CallUserHistoryController.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/FiszkaController.html":{},"controllers/GroupController.html":{},"controllers/InterviewsController.html":{},"controllers/LoggerController.html":{},"controllers/PredicteController.html":{},"controllers/RentalCostController.html":{},"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"controllers/SchoolController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CallUserHistoryController.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/FiszkaController.html":{},"controllers/GroupController.html":{},"controllers/InterviewsController.html":{},"controllers/PredicteController.html":{},"controllers/RentalCostController.html":{},"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"controllers/SchoolController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller(\"calluserhistory",{"_index":470,"title":{},"body":{"controllers/CallUserHistoryController.html":{}}}],["controller('auth",{"_index":251,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('contact",{"_index":553,"title":{},"body":{"controllers/ContactController.html":{}}}],["controller('contactperson",{"_index":593,"title":{},"body":{"controllers/ContactPersonController.html":{}}}],["controller('director",{"_index":896,"title":{},"body":{"controllers/DirectorController.html":{}}}],["controller('fiszka",{"_index":1139,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["controller('group",{"_index":1385,"title":{},"body":{"controllers/GroupController.html":{}}}],["controller('interviews",{"_index":1500,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["controller('log",{"_index":1624,"title":{},"body":{"controllers/LoggerController.html":{}}}],["controller('predicte",{"_index":1719,"title":{},"body":{"controllers/PredicteController.html":{}}}],["controller('rentalcost",{"_index":1868,"title":{},"body":{"controllers/RentalCostController.html":{}}}],["controller('schedule",{"_index":1936,"title":{},"body":{"controllers/ScheduleController.html":{}}}],["controller('scheduleday",{"_index":1976,"title":{},"body":{"controllers/ScheduleDaysController.html":{}}}],["controller('school",{"_index":2056,"title":{},"body":{"controllers/SchoolController.html":{}}}],["controller('user",{"_index":2183,"title":{},"body":{"controllers/UserController.html":{}}}],["controller,get",{"_index":1620,"title":{},"body":{"controllers/LoggerController.html":{}}}],["controllers",{"_index":121,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CallUserHistoryController.html":{},"modules/CallUserHistoryModule.html":{},"controllers/ContactController.html":{},"modules/ContactModule.html":{},"controllers/ContactPersonController.html":{},"modules/ContactPersonModule.html":{},"controllers/DirectorController.html":{},"modules/DirectorModule.html":{},"controllers/FiszkaController.html":{},"modules/FiszkaModule.html":{},"controllers/GroupController.html":{},"modules/GroupModule.html":{},"controllers/InterviewsController.html":{},"modules/InterviewsModule.html":{},"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"controllers/PredicteController.html":{},"modules/PredicteModule.html":{},"controllers/RentalCostController.html":{},"modules/RentalCostModule.html":{},"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"modules/ScheduleDaysModule.html":{},"modules/ScheduleModule.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["cooperation",{"_index":789,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/EditSchoolDto.html":{},"classes/GetSchoolDto.html":{},"injectables/SchoolService.html":{}}}],["cooperation:boolean",{"_index":827,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/EditSchoolDto.html":{}}}],["correct",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{}}}],["count",{"_index":2301,"title":{},"body":{"injectables/UserService.html":{},"classes/getGraphDateDto.html":{}}}],["count:number",{"_index":2408,"title":{},"body":{"classes/getGraphDateDto.html":{}}}],["coverage",{"_index":2325,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":529,"title":{},"body":{"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"controllers/DirectorController.html":{},"injectables/DirectorService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"injectables/InterviewsService.html":{},"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{},"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"injectables/ScheduleDaysService.html":{},"injectables/ScheduleService.html":{}}}],["create(@body",{"_index":1954,"title":{},"body":{"controllers/ScheduleController.html":{}}}],["create(@param('idschool",{"_index":561,"title":{},"body":{"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/RentalCostController.html":{}}}],["create(@reqinfo",{"_index":1396,"title":{},"body":{"controllers/GroupController.html":{},"controllers/ScheduleDaysController.html":{}}}],["create(body",{"_index":2016,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["create(createscheduledto",{"_index":1920,"title":{},"body":{"controllers/ScheduleController.html":{}}}],["create(idschedule",{"_index":1988,"title":{},"body":{"injectables/ScheduleDaysService.html":{}}}],["create(idschool",{"_index":532,"title":{},"body":{"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"controllers/DirectorController.html":{},"injectables/DirectorService.html":{},"injectables/GroupService.html":{},"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{}}}],["create(reqinfo",{"_index":1366,"title":{},"body":{"controllers/GroupController.html":{},"controllers/ScheduleDaysController.html":{}}}],["createcalluserdto",{"_index":440,"title":{"classes/CreateCallUserDto.html":{}},"body":{"controllers/CallUserHistoryController.html":{},"injectables/CallUserHistoryService.html":{},"classes/CreateCallUserDto.html":{},"coverage.html":{}}}],["createcontactdto",{"_index":533,"title":{"classes/CreateContactDto.html":{}},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{},"classes/CreateContactDto.html":{},"coverage.html":{}}}],["createcontactpersontdto",{"_index":574,"title":{"classes/CreateContactPersontDto.html":{}},"body":{"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{},"classes/CreateContactPersontDto.html":{},"coverage.html":{}}}],["createdfiszka",{"_index":1239,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["createdinterviewusers",{"_index":1571,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["createdirectordto",{"_index":685,"title":{"classes/CreateDirectorDto.html":{}},"body":{"classes/CreateDirectorDto.html":{},"controllers/DirectorController.html":{},"injectables/DirectorService.html":{},"coverage.html":{}}}],["createfiszkadto",{"_index":691,"title":{"classes/CreateFiszkaDto.html":{}},"body":{"classes/CreateFiszkaDto.html":{},"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{},"coverage.html":{}}}],["creategroupdto",{"_index":722,"title":{"classes/CreateGroupDto.html":{}},"body":{"classes/CreateGroupDto.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"coverage.html":{}}}],["createinterview",{"_index":1454,"title":{},"body":{"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{}}}],["createinterview(@body",{"_index":1528,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["createinterview(createinterviewdto",{"_index":1464,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["createinterview(data",{"_index":1545,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["createinterviewdto",{"_index":746,"title":{"classes/CreateInterViewDto.html":{}},"body":{"classes/CreateInterViewDto.html":{},"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{},"coverage.html":{}}}],["createparamdecorator",{"_index":1898,"title":{},"body":{"interfaces/ReqUserInfo.html":{},"miscellaneous/variables.html":{}}}],["createrentalcostdto",{"_index":758,"title":{"classes/CreateRentalCostDto.html":{}},"body":{"classes/CreateRentalCostDto.html":{},"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{},"coverage.html":{}}}],["createscheduledaysdto",{"_index":769,"title":{"classes/CreateScheduleDaysDto.html":{}},"body":{"classes/CreateScheduleDaysDto.html":{},"controllers/ScheduleDaysController.html":{},"injectables/ScheduleDaysService.html":{},"coverage.html":{}}}],["createscheduledto",{"_index":776,"title":{"classes/CreateScheduleDto.html":{}},"body":{"classes/CreateScheduleDto.html":{},"controllers/ScheduleController.html":{},"injectables/ScheduleService.html":{},"coverage.html":{}}}],["createschool",{"_index":2039,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["createschool(@body(dtovalidationpipe",{"_index":2068,"title":{},"body":{"controllers/SchoolController.html":{}}}],["createschool(body",{"_index":2041,"title":{},"body":{"controllers/SchoolController.html":{}}}],["createschool(region",{"_index":2087,"title":{},"body":{"injectables/SchoolService.html":{}}}],["createschooldto",{"_index":786,"title":{"classes/CreateSchoolDto.html":{}},"body":{"classes/CreateSchoolDto.html":{},"injectables/DtoValidationPipe.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"coverage.html":{}}}],["createschooldto):promise",{"_index":2096,"title":{},"body":{"injectables/SchoolService.html":{}}}],["createuser",{"_index":2128,"title":{},"body":{"controllers/UserController.html":{}}}],["createuser(@body(uppercasepipe",{"_index":2198,"title":{},"body":{"controllers/UserController.html":{}}}],["createuser(createuserdto",{"_index":2136,"title":{},"body":{"controllers/UserController.html":{}}}],["createuserdto",{"_index":2139,"title":{},"body":{"controllers/UserController.html":{}}}],["createuserformgtmt",{"_index":2244,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserformgtmt(user",{"_index":2252,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserformgtmtdto",{"_index":835,"title":{"classes/CreateUserForMGTMTDto.html":{}},"body":{"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"injectables/DtoValidatorPipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["createuserforrd",{"_index":2245,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserforrd(user",{"_index":2254,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserforrddto",{"_index":851,"title":{"classes/CreateUserForRdDto.html":{}},"body":{"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"injectables/DtoValidatorPipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["ctx",{"_index":79,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{},"interfaces/ReqUserInfo.html":{},"miscellaneous/variables.html":{}}}],["ctx.getrequest",{"_index":87,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{}}}],["ctx.getresponse",{"_index":89,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1899,"title":{},"body":{"interfaces/ReqUserInfo.html":{},"miscellaneous/variables.html":{}}}],["cuttextfromunique",{"_index":1819,"title":{},"body":{"classes/PrismaValidationFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["cuttextfromunique(exception.message",{"_index":1852,"title":{},"body":{"classes/PrismaValidationFilter.html":{}}}],["cuttextfromunique(text",{"_index":2398,"title":{},"body":{"miscellaneous/functions.html":{}}}],["czasowy",{"_index":2222,"title":{},"body":{"controllers/UserController.html":{}}}],["czasowy(zawsze",{"_index":2228,"title":{},"body":{"controllers/UserController.html":{}}}],["czeka",{"_index":1741,"title":{},"body":{"controllers/PredicteController.html":{}}}],["czenie",{"_index":1749,"title":{},"body":{"controllers/PredicteController.html":{}}}],["czy",{"_index":1613,"title":{},"body":{"injectables/InterviewsService.html":{},"controllers/PredicteController.html":{},"injectables/PredicteService.html":{}}}],["czyli",{"_index":467,"title":{},"body":{"controllers/CallUserHistoryController.html":{}}}],["daje",{"_index":2223,"title":{},"body":{"controllers/UserController.html":{}}}],["dane",{"_index":1770,"title":{},"body":{"controllers/PredicteController.html":{}}}],["danego",{"_index":1201,"title":{},"body":{"controllers/FiszkaController.html":{},"controllers/ScheduleController.html":{},"controllers/SchoolController.html":{}}}],["danej",{"_index":1190,"title":{},"body":{"controllers/FiszkaController.html":{},"controllers/GroupController.html":{},"controllers/ScheduleController.html":{}}}],["dany",{"_index":1959,"title":{},"body":{"controllers/ScheduleController.html":{}}}],["danych",{"_index":1957,"title":{},"body":{"controllers/ScheduleController.html":{}}}],["danym",{"_index":909,"title":{},"body":{"controllers/DirectorController.html":{}}}],["data",{"_index":99,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CallUserHistoryController.html":{},"injectables/CallUserHistoryService.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"injectables/DirectorService.html":{},"injectables/FiszkaService.html":{},"injectables/GroupService.html":{},"injectables/InterviewsService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/RentalCostService.html":{},"interfaces/ReqUserInfo.html":{},"controllers/ScheduleDaysController.html":{},"injectables/ScheduleDaysService.html":{},"injectables/ScheduleService.html":{},"injectables/SchoolService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["data.calldate",{"_index":500,"title":{},"body":{"injectables/CallUserHistoryService.html":{}}}],["data.callnext",{"_index":501,"title":{},"body":{"injectables/CallUserHistoryService.html":{}}}],["data.classnumber",{"_index":1564,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["data.comments",{"_index":502,"title":{},"body":{"injectables/CallUserHistoryService.html":{}}}],["data.date",{"_index":1566,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["data.iduser",{"_index":1577,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["data.iduserlist",{"_index":1587,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["data.map(item",{"_index":2004,"title":{},"body":{"injectables/ScheduleDaysService.html":{}}}],["data.termsnumber",{"_index":1565,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["data.userinterviews.map(userdata",{"_index":1569,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["datapass",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{}}}],["date",{"_index":655,"title":{},"body":{"classes/CreateCallUserDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateInterViewDto.html":{},"classes/CreateScheduleDto.html":{},"classes/EditContactDto.html":{},"classes/EditInterViewDto.html":{},"classes/EditScheduleDto.html":{},"classes/GetCallUserHistoryDto.html":{},"classes/GetContactDto.html":{},"classes/GetInterViewsDto.html":{},"classes/GetScheduleDto.html":{},"classes/GetUserInterViewDto.html":{},"classes/GraphDateDto.html":{},"classes/HttpExceptionFilter.html":{},"injectables/InterviewsService.html":{},"injectables/ScheduleService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/getGraphDateDto.html":{}}}],["date().todatestring",{"_index":1449,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["date().toisostring",{"_index":115,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{}}}],["date().tolocaletimestring",{"_index":1448,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["date.enddate",{"_index":2297,"title":{},"body":{"injectables/UserService.html":{}}}],["date.startdate",{"_index":2295,"title":{},"body":{"injectables/UserService.html":{}}}],["date:body.date",{"_index":2030,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["date:date",{"_index":2407,"title":{},"body":{"classes/getGraphDateDto.html":{}}}],["dateofvisit",{"_index":649,"title":{},"body":{"injectables/ContactService.html":{},"classes/CreateContactDto.html":{},"classes/EditContactDto.html":{},"classes/GetContactDto.html":{}}}],["day",{"_index":771,"title":{},"body":{"classes/CreateScheduleDaysDto.html":{},"classes/EditScheduleDaysDto.html":{},"injectables/ScheduleDaysService.html":{}}}],["day:true",{"_index":1996,"title":{},"body":{"injectables/ScheduleDaysService.html":{}}}],["dayoftheweek",{"_index":725,"title":{},"body":{"classes/CreateGroupDto.html":{},"classes/EditGroupDto.html":{},"classes/GetGroupDto.html":{},"injectables/GroupService.html":{}}}],["dayoftheweek:daysoftheweek",{"_index":743,"title":{},"body":{"classes/CreateGroupDto.html":{},"classes/EditGroupDto.html":{},"classes/GetGroupDto.html":{}}}],["daysoftheweek",{"_index":731,"title":{},"body":{"classes/CreateGroupDto.html":{},"classes/CreateScheduleDaysDto.html":{},"classes/EditGroupDto.html":{},"classes/EditScheduleDaysDto.html":{},"classes/GetGroupDto.html":{}}}],["dałem",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{}}}],["dbml",{"_index":2378,"title":{},"body":{"dependencies.html":{}}}],["decimal",{"_index":762,"title":{},"body":{"classes/CreateRentalCostDto.html":{},"classes/EditRentalCostDto.html":{},"classes/GetRentalCostDto.html":{}}}],["declarations",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CallUserHistoryModule.html":{},"modules/ContactModule.html":{},"modules/ContactPersonModule.html":{},"modules/DirectorModule.html":{},"modules/FiszkaModule.html":{},"modules/GroupModule.html":{},"modules/InterviewsModule.html":{},"modules/LoggerModule.html":{},"modules/PredicteModule.html":{},"modules/RentalCostModule.html":{},"modules/ScheduleDaysModule.html":{},"modules/ScheduleModule.html":{},"modules/SchoolModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["decode:decoded",{"_index":1647,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["decoded",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LoggerMiddleware.html":{}}}],["decoded.email",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LoggerMiddleware.html":{}}}],["decoded.id",{"_index":1644,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["decoded.region",{"_index":1646,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["decoded.role",{"_index":1645,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["decodeddata",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{}}}],["decodeddata.email",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{}}}],["decodedto",{"_index":363,"title":{"classes/DecodeDto.html":{}},"body":{"injectables/AuthService.html":{},"classes/DecodeDto.html":{},"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["decorators",{"_index":13,"title":{},"body":{"classes/AccessTokenDto.html":{},"classes/AddUserInterViewDto.html":{},"classes/AddgroupDto.html":{},"controllers/AuthController.html":{},"controllers/CallUserHistoryController.html":{},"classes/ChangePasswordDto.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"classes/CreateCallUserDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateInterViewDto.html":{},"classes/CreateRentalCostDto.html":{},"classes/CreateScheduleDaysDto.html":{},"classes/CreateScheduleDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"controllers/DirectorController.html":{},"classes/EditContactDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditGroupDto.html":{},"classes/EditInterViewDto.html":{},"classes/EditRentalCostDto.html":{},"classes/EditScheduleDaysDto.html":{},"classes/EditScheduleDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSelfDto.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"controllers/FiszkaController.html":{},"classes/GetCallUserHistoryDto.html":{},"classes/GetContactDto.html":{},"classes/GetContactPersontDto.html":{},"classes/GetDirectorDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetGroupDto.html":{},"classes/GetInterViewsDto.html":{},"classes/GetRentalCostDto.html":{},"classes/GetScheduleDto.html":{},"classes/GetSchoolDto.html":{},"classes/GetUserDto.html":{},"classes/GetUserInterViewDto.html":{},"classes/GraphDateDto.html":{},"controllers/GroupController.html":{},"controllers/InterviewsController.html":{},"controllers/LoggerController.html":{},"classes/LoginUserDto.html":{},"controllers/PredicteController.html":{},"classes/RemoveUserInterViewDto.html":{},"controllers/RentalCostController.html":{},"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"controllers/SchoolController.html":{},"classes/SendFiszkiDto.html":{},"controllers/UserController.html":{},"classes/ValidationdDto.html":{},"classes/getGraphDateDto.html":{}}}],["decorators/match.decorator",{"_index":522,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["decorators/public.decorator",{"_index":232,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{}}}],["decorators/reqinfo.decorator",{"_index":248,"title":{},"body":{"controllers/AuthController.html":{}}}],["decorators/roles.decorator",{"_index":244,"title":{},"body":{"controllers/AuthController.html":{},"guards/RolesGuard.html":{}}}],["default",{"_index":2483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultmessage",{"_index":1664,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["defaultmessage(args",{"_index":1666,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["defined",{"_index":15,"title":{},"body":{"classes/AccessTokenDto.html":{},"classes/AddUserInterViewDto.html":{},"classes/AddgroupDto.html":{},"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CallUserHistoryController.html":{},"injectables/CallUserHistoryService.html":{},"classes/ChangePasswordDto.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"classes/CreateCallUserDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateInterViewDto.html":{},"classes/CreateRentalCostDto.html":{},"classes/CreateScheduleDaysDto.html":{},"classes/CreateScheduleDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/DecodeDto.html":{},"controllers/DirectorController.html":{},"injectables/DirectorService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/DtoValidatorPipe.html":{},"injectables/DtoValidatorSelfPipe.html":{},"classes/EditContactDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditGroupDto.html":{},"classes/EditInterViewDto.html":{},"classes/EditRentalCostDto.html":{},"classes/EditScheduleDaysDto.html":{},"classes/EditScheduleDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSelfDto.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{},"classes/GetCallUserHistoryDto.html":{},"classes/GetContactDto.html":{},"classes/GetContactPersontDto.html":{},"classes/GetDirectorDto.html":{},"classes/GetFindByIdDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetGroupDto.html":{},"classes/GetInterViewsDto.html":{},"classes/GetRentalCostDto.html":{},"classes/GetScheduleDto.html":{},"classes/GetSchoolDto.html":{},"classes/GetUserDto.html":{},"classes/GetUserInterViewDto.html":{},"classes/GraphDateDto.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{},"controllers/LoggerController.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"classes/LoginUserDto.html":{},"classes/MatchConstraint.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"injectables/OptionsPipe.html":{},"controllers/PredicteController.html":{},"injectables/PredicteService.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{},"classes/RemoveUserInterViewDto.html":{},"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{},"guards/RolesGuard.html":{},"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"injectables/ScheduleDaysService.html":{},"injectables/ScheduleService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/SendFiszkiDto.html":{},"injectables/UpperCasePipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/ValidationdDto.html":{},"classes/getGraphDateDto.html":{}}}],["delete",{"_index":228,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CallUserHistoryController.html":{},"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{},"controllers/FiszkaController.html":{}}}],["delete('delete/:idcontactperson",{"_index":602,"title":{},"body":{"controllers/ContactPersonController.html":{}}}],["delete('delete/:idphonecalls",{"_index":479,"title":{},"body":{"controllers/CallUserHistoryController.html":{}}}],["delete('deletefiszka/:idfiszki",{"_index":1168,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["delete('deletefiszka/:idfiszki/fromgroup/:idgroup",{"_index":1178,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["delete('logout",{"_index":269,"title":{},"body":{"controllers/AuthController.html":{}}}],["delete(@param('idcontactperson",{"_index":603,"title":{},"body":{"controllers/ContactPersonController.html":{}}}],["delete(idcontactperson",{"_index":576,"title":{},"body":{"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{}}}],["deletecontactperson",{"_index":638,"title":{},"body":{"injectables/ContactPersonService.html":{}}}],["deletefiszka",{"_index":1081,"title":{},"body":{"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{}}}],["deletefiszka(@param('idfiszki",{"_index":1169,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["deletefiszka(idfiszka",{"_index":1100,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["deletefiszka(idfiszki",{"_index":1213,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["deletefiszkabymy",{"_index":1208,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["deletefiszkabymy(idfiszki",{"_index":1215,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["deletefiszkabyuser",{"_index":1082,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["deletefiszkabyuser(@param('idfiszki",{"_index":1171,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["deletefiszkabyuser(idfiszka",{"_index":1103,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["deletefiszkafromgroup",{"_index":1083,"title":{},"body":{"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{}}}],["deletefiszkafromgroup(@param('idgroup",{"_index":1179,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["deletefiszkafromgroup(idgroup",{"_index":1106,"title":{},"body":{"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{}}}],["deletemany",{"_index":1567,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["deleteusercall",{"_index":437,"title":{},"body":{"controllers/CallUserHistoryController.html":{},"injectables/CallUserHistoryService.html":{}}}],["deleteusercall(@param('idphonecalls",{"_index":480,"title":{},"body":{"controllers/CallUserHistoryController.html":{}}}],["deleteusercall(idphonecalls",{"_index":445,"title":{},"body":{"controllers/CallUserHistoryController.html":{},"injectables/CallUserHistoryService.html":{}}}],["dependencies",{"_index":126,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CallUserHistoryModule.html":{},"modules/ContactModule.html":{},"modules/ContactPersonModule.html":{},"modules/DirectorModule.html":{},"modules/FiszkaModule.html":{},"modules/GroupModule.html":{},"modules/InterviewsModule.html":{},"modules/LoggerModule.html":{},"modules/PredicteModule.html":{},"modules/RentalCostModule.html":{},"modules/ScheduleDaysModule.html":{},"modules/ScheduleModule.html":{},"modules/SchoolModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":2420,"title":{},"body":{"index.html":{},"properties.html":{}}}],["development",{"_index":2429,"title":{},"body":{"index.html":{}}}],["director",{"_index":883,"title":{},"body":{"controllers/DirectorController.html":{},"injectables/DirectorService.html":{}}}],["director.controller",{"_index":917,"title":{},"body":{"modules/DirectorModule.html":{}}}],["director.service",{"_index":891,"title":{},"body":{"controllers/DirectorController.html":{},"modules/DirectorModule.html":{}}}],["directorcontroller",{"_index":881,"title":{"controllers/DirectorController.html":{}},"body":{"controllers/DirectorController.html":{},"modules/DirectorModule.html":{},"coverage.html":{}}}],["directormodule",{"_index":138,"title":{"modules/DirectorModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DirectorModule.html":{},"modules.html":{},"overview.html":{}}}],["directorservice",{"_index":890,"title":{"injectables/DirectorService.html":{}},"body":{"controllers/DirectorController.html":{},"modules/DirectorModule.html":{},"injectables/DirectorService.html":{},"coverage.html":{},"overview.html":{}}}],["disconnect",{"_index":1252,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["dla",{"_index":906,"title":{},"body":{"controllers/DirectorController.html":{},"controllers/GroupController.html":{},"controllers/RentalCostController.html":{},"controllers/ScheduleController.html":{},"controllers/SchoolController.html":{}}}],["dni",{"_index":1728,"title":{},"body":{"controllers/PredicteController.html":{}}}],["documentation",{"_index":2326,"title":{},"body":{"coverage.html":{}}}],["dodanie",{"_index":912,"title":{},"body":{"controllers/DirectorController.html":{},"controllers/FiszkaController.html":{},"controllers/GroupController.html":{},"controllers/RentalCostController.html":{}}}],["dodawa",{"_index":465,"title":{},"body":{"controllers/CallUserHistoryController.html":{}}}],["dodawanie",{"_index":1401,"title":{},"body":{"controllers/GroupController.html":{}}}],["dostaje",{"_index":2220,"title":{},"body":{"controllers/UserController.html":{}}}],["dostaje:id",{"_index":2225,"title":{},"body":{"controllers/UserController.html":{}}}],["dostaje:region",{"_index":2227,"title":{},"body":{"controllers/UserController.html":{}}}],["dr",{"_index":462,"title":{},"body":{"controllers/CallUserHistoryController.html":{},"controllers/DirectorController.html":{},"controllers/FiszkaController.html":{},"controllers/ScheduleController.html":{}}}],["druga",{"_index":1764,"title":{},"body":{"controllers/PredicteController.html":{}}}],["dto",{"_index":2396,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dto/addgroup.dto",{"_index":1136,"title":{},"body":{"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{}}}],["dto/adduserinterview.dto",{"_index":1493,"title":{},"body":{"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{}}}],["dto/authrefreshtoken.dto",{"_index":249,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/changepassword.dto",{"_index":247,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/createcalluser.dto",{"_index":458,"title":{},"body":{"controllers/CallUserHistoryController.html":{},"injectables/CallUserHistoryService.html":{}}}],["dto/createcontact.dto",{"_index":550,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{}}}],["dto/createcontactperson.dto",{"_index":591,"title":{},"body":{"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{}}}],["dto/createdirector.dto",{"_index":893,"title":{},"body":{"controllers/DirectorController.html":{},"injectables/DirectorService.html":{}}}],["dto/createfiszka.dto",{"_index":1135,"title":{},"body":{"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{}}}],["dto/creategroup.dto",{"_index":1383,"title":{},"body":{"controllers/GroupController.html":{},"injectables/GroupService.html":{}}}],["dto/createinterview.dto",{"_index":1492,"title":{},"body":{"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{}}}],["dto/createrentalcost.dto",{"_index":1865,"title":{},"body":{"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{}}}],["dto/createschedule.dto",{"_index":1932,"title":{},"body":{"controllers/ScheduleController.html":{},"injectables/ScheduleService.html":{}}}],["dto/createschool.dto",{"_index":946,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["dto/createsheduledays.dto",{"_index":1972,"title":{},"body":{"controllers/ScheduleDaysController.html":{},"injectables/ScheduleDaysService.html":{}}}],["dto/createuser.dto",{"_index":961,"title":{},"body":{"injectables/DtoValidatorPipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/decode.dto",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{}}}],["dto/editcontact.dto",{"_index":551,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{}}}],["dto/editcontactperson.dto",{"_index":592,"title":{},"body":{"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{}}}],["dto/editdirector.dto",{"_index":892,"title":{},"body":{"controllers/DirectorController.html":{},"injectables/DirectorService.html":{}}}],["dto/editfiszka.dto",{"_index":1134,"title":{},"body":{"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{}}}],["dto/editgroup.dto",{"_index":1384,"title":{},"body":{"controllers/GroupController.html":{},"injectables/GroupService.html":{}}}],["dto/editinterview.dto",{"_index":1494,"title":{},"body":{"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{}}}],["dto/editrentalcost.dto",{"_index":1867,"title":{},"body":{"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{}}}],["dto/editschedule.dto",{"_index":1933,"title":{},"body":{"controllers/ScheduleController.html":{},"injectables/ScheduleService.html":{}}}],["dto/editschool.dto",{"_index":949,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["dto/editsheduledays.dto",{"_index":1973,"title":{},"body":{"controllers/ScheduleDaysController.html":{},"injectables/ScheduleDaysService.html":{}}}],["dto/edituser.dto",{"_index":964,"title":{},"body":{"injectables/DtoValidatorPipe.html":{},"injectables/DtoValidatorSelfPipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/getcalluserhistory.dto",{"_index":460,"title":{},"body":{"controllers/CallUserHistoryController.html":{},"injectables/CallUserHistoryService.html":{}}}],["dto/getclassfromfiszki.dto",{"_index":1718,"title":{},"body":{"controllers/PredicteController.html":{},"injectables/PredicteService.html":{}}}],["dto/getcontact.dto",{"_index":549,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{}}}],["dto/getcontactperson.dto",{"_index":590,"title":{},"body":{"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{}}}],["dto/getdirector.dto",{"_index":895,"title":{},"body":{"controllers/DirectorController.html":{},"injectables/DirectorService.html":{}}}],["dto/getfindbyid.dto",{"_index":1499,"title":{},"body":{"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{}}}],["dto/getfiszka.dto",{"_index":1133,"title":{},"body":{"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{}}}],["dto/getgraphdate.dto",{"_index":2182,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/getgroup.dto",{"_index":1382,"title":{},"body":{"controllers/GroupController.html":{},"injectables/GroupService.html":{}}}],["dto/getinterviews.dto",{"_index":1497,"title":{},"body":{"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{}}}],["dto/getrentalcost.dto",{"_index":1866,"title":{},"body":{"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{}}}],["dto/getschool.dto",{"_index":2054,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["dto/getuser.dto",{"_index":2173,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/getuserinterview.dto",{"_index":1496,"title":{},"body":{"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{}}}],["dto/graphdate.dto",{"_index":2180,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/removeuserinterview.dto",{"_index":1495,"title":{},"body":{"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{}}}],["dto/validation.dto",{"_index":2176,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dtovalidation.pipe",{"_index":2055,"title":{},"body":{"controllers/SchoolController.html":{}}}],["dtovalidationpipe",{"_index":930,"title":{"injectables/DtoValidationPipe.html":{}},"body":{"injectables/DtoValidationPipe.html":{},"controllers/SchoolController.html":{},"coverage.html":{}}}],["dtovalidator.pipe",{"_index":2177,"title":{},"body":{"controllers/UserController.html":{}}}],["dtovalidatorpipe",{"_index":956,"title":{"injectables/DtoValidatorPipe.html":{}},"body":{"injectables/DtoValidatorPipe.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["dtovalidatorself.pipe",{"_index":2179,"title":{},"body":{"controllers/UserController.html":{}}}],["dtovalidatorselfpipe",{"_index":968,"title":{"injectables/DtoValidatorSelfPipe.html":{}},"body":{"injectables/DtoValidatorSelfPipe.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["dyrektora",{"_index":904,"title":{},"body":{"controllers/DirectorController.html":{}}}],["działa",{"_index":1614,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["dzie",{"_index":2224,"title":{},"body":{"controllers/UserController.html":{}}}],["dzieci",{"_index":1721,"title":{},"body":{"controllers/PredicteController.html":{}}}],["dzwoni",{"_index":468,"title":{},"body":{"controllers/CallUserHistoryController.html":{}}}],["e",{"_index":1760,"title":{},"body":{"controllers/PredicteController.html":{}}}],["e2e",{"_index":2439,"title":{},"body":{"index.html":{}}}],["edit",{"_index":530,"title":{},"body":{"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"controllers/DirectorController.html":{},"injectables/DirectorService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"injectables/ScheduleDaysService.html":{},"injectables/ScheduleService.html":{}}}],["edit(@body",{"_index":1952,"title":{},"body":{"controllers/ScheduleController.html":{}}}],["edit(@param('idcontactperson",{"_index":599,"title":{},"body":{"controllers/ContactPersonController.html":{}}}],["edit(@param('idschool",{"_index":564,"title":{},"body":{"controllers/ContactController.html":{},"controllers/DirectorController.html":{}}}],["edit(@reqinfo",{"_index":1399,"title":{},"body":{"controllers/GroupController.html":{},"controllers/ScheduleDaysController.html":{}}}],["edit(body",{"_index":2018,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["edit(editscheduledto",{"_index":1922,"title":{},"body":{"controllers/ScheduleController.html":{}}}],["edit(idcontactperson",{"_index":580,"title":{},"body":{"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{}}}],["edit(idschedule",{"_index":1990,"title":{},"body":{"injectables/ScheduleDaysService.html":{}}}],["edit(idschool",{"_index":537,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{},"controllers/DirectorController.html":{},"injectables/DirectorService.html":{},"injectables/GroupService.html":{}}}],["edit(reqinfo",{"_index":1370,"title":{},"body":{"controllers/GroupController.html":{},"controllers/ScheduleDaysController.html":{}}}],["editcontactdto",{"_index":539,"title":{"classes/EditContactDto.html":{}},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{},"classes/EditContactDto.html":{},"coverage.html":{}}}],["editcontactpersontdto",{"_index":582,"title":{"classes/EditContactPersontDto.html":{}},"body":{"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{},"classes/EditContactPersontDto.html":{},"coverage.html":{}}}],["editcontactpersontdto):promise",{"_index":631,"title":{},"body":{"injectables/ContactPersonService.html":{}}}],["editdirectordto",{"_index":885,"title":{"classes/EditDirectorDto.html":{}},"body":{"controllers/DirectorController.html":{},"injectables/DirectorService.html":{},"classes/EditDirectorDto.html":{},"coverage.html":{}}}],["editfiszkadto",{"_index":987,"title":{"classes/EditFiszkaDto.html":{}},"body":{"classes/EditFiszkaDto.html":{},"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{},"coverage.html":{}}}],["editfiszkard",{"_index":1084,"title":{},"body":{"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{}}}],["editfiszkard(@param('idfiszka",{"_index":1158,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["editfiszkard(idfiszka",{"_index":1110,"title":{},"body":{"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{}}}],["editfiszkauser",{"_index":1085,"title":{},"body":{"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{}}}],["editfiszkauser(@param('idfiszka",{"_index":1162,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["editfiszkauser(idfiszka",{"_index":1113,"title":{},"body":{"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{}}}],["editgroupdto",{"_index":998,"title":{"classes/EditGroupDto.html":{}},"body":{"classes/EditGroupDto.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"coverage.html":{}}}],["editinterview",{"_index":1455,"title":{},"body":{"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{}}}],["editinterview(@param('idinterview",{"_index":1519,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["editinterview(idinterview",{"_index":1467,"title":{},"body":{"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{}}}],["editinterviewdto",{"_index":1006,"title":{"classes/EditInterViewDto.html":{}},"body":{"classes/EditInterViewDto.html":{},"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{},"coverage.html":{}}}],["editrentalcostdto",{"_index":1016,"title":{"classes/EditRentalCostDto.html":{}},"body":{"classes/EditRentalCostDto.html":{},"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{},"coverage.html":{}}}],["editscheduledaysdto",{"_index":1020,"title":{"classes/EditScheduleDaysDto.html":{}},"body":{"classes/EditScheduleDaysDto.html":{},"controllers/ScheduleDaysController.html":{},"injectables/ScheduleDaysService.html":{},"coverage.html":{}}}],["editscheduledto",{"_index":1024,"title":{"classes/EditScheduleDto.html":{}},"body":{"classes/EditScheduleDto.html":{},"controllers/ScheduleController.html":{},"injectables/ScheduleService.html":{},"coverage.html":{}}}],["editschool",{"_index":2040,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["editschool(@param('id",{"_index":2065,"title":{},"body":{"controllers/SchoolController.html":{}}}],["editschool(schoolid",{"_index":2044,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["editschooldto",{"_index":948,"title":{"classes/EditSchoolDto.html":{}},"body":{"injectables/DtoValidationPipe.html":{},"classes/EditSchoolDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"coverage.html":{}}}],["editself",{"_index":2246,"title":{},"body":{"injectables/UserService.html":{}}}],["editself(editselfdto",{"_index":2256,"title":{},"body":{"injectables/UserService.html":{}}}],["editselfdto",{"_index":972,"title":{"classes/EditSelfDto.html":{}},"body":{"injectables/DtoValidatorSelfPipe.html":{},"classes/EditSelfDto.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["edituser",{"_index":1054,"title":{},"body":{"classes/EditSelfDto.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"controllers/UserController.html":{}}}],["edituser(@param('id",{"_index":2202,"title":{},"body":{"controllers/UserController.html":{}}}],["edituser(id",{"_index":2140,"title":{},"body":{"controllers/UserController.html":{}}}],["edituserdto",{"_index":2141,"title":{},"body":{"controllers/UserController.html":{}}}],["edituserformgtmt",{"_index":2247,"title":{},"body":{"injectables/UserService.html":{}}}],["edituserformgtmt(edituserformgtmtdto",{"_index":2258,"title":{},"body":{"injectables/UserService.html":{}}}],["edituserformgtmtdto",{"_index":962,"title":{"classes/EditUserForMGTMTDto.html":{}},"body":{"injectables/DtoValidatorPipe.html":{},"classes/EditSelfDto.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["edituserforrd",{"_index":2248,"title":{},"body":{"injectables/UserService.html":{}}}],["edituserforrd(edituserforrddto",{"_index":2260,"title":{},"body":{"injectables/UserService.html":{}}}],["edituserforrddto",{"_index":963,"title":{"classes/EditUserForRdDto.html":{}},"body":{"injectables/DtoValidatorPipe.html":{},"classes/EditSelfDto.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["edycja",{"_index":913,"title":{},"body":{"controllers/DirectorController.html":{},"controllers/FiszkaController.html":{},"controllers/GroupController.html":{},"controllers/RentalCostController.html":{},"controllers/SchoolController.html":{}}}],["effectiveiduser",{"_index":2211,"title":{},"body":{"controllers/UserController.html":{}}}],["efficient",{"_index":2415,"title":{},"body":{"index.html":{}}}],["email",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ContactPersonService.html":{},"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/DecodeDto.html":{},"injectables/DirectorService.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSelfDto.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"injectables/FiszkaService.html":{},"classes/GetContactPersontDto.html":{},"classes/GetDirectorDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetSchoolDto.html":{},"classes/GetUserDto.html":{},"injectables/InterviewsService.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginUserDto.html":{},"classes/PrismaValidationFilter.html":{},"interfaces/ReqUserInfo.html":{},"injectables/SchoolService.html":{},"injectables/UserService.html":{},"classes/ValidationdDto.html":{}}}],["email:request.user.email",{"_index":1903,"title":{},"body":{"interfaces/ReqUserInfo.html":{},"miscellaneous/variables.html":{}}}],["email:string",{"_index":721,"title":{},"body":{"classes/CreateFiszkaDto.html":{},"classes/DecodeDto.html":{},"interfaces/ReqUserInfo.html":{}}}],["enddate",{"_index":1357,"title":{},"body":{"classes/GraphDateDto.html":{}}}],["enddate:date",{"_index":1362,"title":{},"body":{"classes/GraphDateDto.html":{}}}],["enumerations",{"_index":2385,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["err",{"_index":1697,"title":{},"body":{"classes/NotFoundErrorFilter.html":{}}}],["error",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{}}}],["error:err",{"_index":1701,"title":{},"body":{"classes/NotFoundErrorFilter.html":{}}}],["errorobj",{"_index":1442,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["errorobject",{"_index":2404,"title":{},"body":{"miscellaneous/functions.html":{}}}],["etapu",{"_index":1772,"title":{},"body":{"controllers/PredicteController.html":{}}}],["exception",{"_index":49,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{}}}],["exception.clientversion",{"_index":1816,"title":{},"body":{"classes/PrismaOtherFilter.html":{}}}],["exception.code",{"_index":1835,"title":{},"body":{"classes/PrismaValidationFilter.html":{}}}],["exception.constructor.name",{"_index":85,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.filter",{"_index":72,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"controllers/CallUserHistoryController.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/FiszkaController.html":{},"controllers/GroupController.html":{},"controllers/InterviewsController.html":{},"controllers/LoggerController.html":{},"controllers/PredicteController.html":{},"controllers/RentalCostController.html":{},"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"controllers/SchoolController.html":{},"controllers/UserController.html":{}}}],["exception.filter.ts",{"_index":1435,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:8",{"_index":1436,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.getresponse",{"_index":1440,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.getstatus",{"_index":82,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotFoundExceptionFilter.html":{}}}],["exception.message",{"_index":1445,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/PrismaOtherFilter.html":{}}}],["exception.message.match(/\\(`(.*?)`\\)/)?.[1]?.split('_",{"_index":1827,"title":{},"body":{"classes/PrismaValidationFilter.html":{}}}],["exceptionfilter",{"_index":35,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{}}}],["executioncontext",{"_index":286,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/ReqUserInfo.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["existinguserids",{"_index":1578,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["existinguserids.includes(data.iduser",{"_index":1582,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["existinguserids.includes(id",{"_index":1592,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["existinguserids.includes(userinterviewids[index",{"_index":1595,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["exp",{"_index":868,"title":{},"body":{"classes/DecodeDto.html":{}}}],["exp:number",{"_index":880,"title":{},"body":{"classes/DecodeDto.html":{}}}],["expired",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresin",{"_index":338,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":19,"title":{},"body":{"classes/AccessTokenDto.html":{},"classes/AddUserInterViewDto.html":{},"classes/AddgroupDto.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallUserHistoryController.html":{},"modules/CallUserHistoryModule.html":{},"injectables/CallUserHistoryService.html":{},"classes/ChangePasswordDto.html":{},"controllers/ContactController.html":{},"modules/ContactModule.html":{},"controllers/ContactPersonController.html":{},"modules/ContactPersonModule.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"classes/CreateCallUserDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateInterViewDto.html":{},"classes/CreateRentalCostDto.html":{},"classes/CreateScheduleDaysDto.html":{},"classes/CreateScheduleDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/DecodeDto.html":{},"controllers/DirectorController.html":{},"modules/DirectorModule.html":{},"injectables/DirectorService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/DtoValidatorPipe.html":{},"injectables/DtoValidatorSelfPipe.html":{},"classes/EditContactDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditGroupDto.html":{},"classes/EditInterViewDto.html":{},"classes/EditRentalCostDto.html":{},"classes/EditScheduleDaysDto.html":{},"classes/EditScheduleDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSelfDto.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"controllers/FiszkaController.html":{},"modules/FiszkaModule.html":{},"injectables/FiszkaService.html":{},"classes/GetCallUserHistoryDto.html":{},"classes/GetContactDto.html":{},"classes/GetContactPersontDto.html":{},"classes/GetDirectorDto.html":{},"classes/GetFindByIdDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetGroupDto.html":{},"classes/GetInterViewsDto.html":{},"classes/GetRentalCostDto.html":{},"classes/GetScheduleDto.html":{},"classes/GetSchoolDto.html":{},"classes/GetUserDto.html":{},"classes/GetUserInterViewDto.html":{},"classes/GraphDateDto.html":{},"controllers/GroupController.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/InterviewsController.html":{},"modules/InterviewsModule.html":{},"injectables/InterviewsService.html":{},"controllers/LoggerController.html":{},"injectables/LoggerMiddleware.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/LoginUserDto.html":{},"classes/MatchConstraint.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"injectables/OptionsPipe.html":{},"controllers/PredicteController.html":{},"modules/PredicteModule.html":{},"injectables/PredicteService.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{},"classes/RemoveUserInterViewDto.html":{},"controllers/RentalCostController.html":{},"modules/RentalCostModule.html":{},"injectables/RentalCostService.html":{},"interfaces/ReqUserInfo.html":{},"guards/RolesGuard.html":{},"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"modules/ScheduleDaysModule.html":{},"injectables/ScheduleDaysService.html":{},"modules/ScheduleModule.html":{},"injectables/ScheduleService.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"classes/SendFiszkiDto.html":{},"injectables/UpperCasePipe.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidationdDto.html":{},"classes/getGraphDateDto.html":{}}}],["exports",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CallUserHistoryModule.html":{},"modules/ContactModule.html":{},"modules/ContactPersonModule.html":{},"modules/DirectorModule.html":{},"modules/FiszkaModule.html":{},"modules/GroupModule.html":{},"modules/InterviewsModule.html":{},"modules/LoggerModule.html":{},"modules/PredicteModule.html":{},"modules/RentalCostModule.html":{},"modules/ScheduleDaysModule.html":{},"modules/ScheduleModule.html":{},"modules/SchoolModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":294,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/DtoValidationPipe.html":{},"injectables/DtoValidatorPipe.html":{},"injectables/DtoValidatorSelfPipe.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{},"injectables/UpperCasePipe.html":{},"dependencies.html":{}}}],["extracttokenfromheader",{"_index":280,"title":{},"body":{"guards/AuthGuard.html":{}}}],["extracttokenfromheader(request",{"_index":289,"title":{},"body":{"guards/AuthGuard.html":{}}}],["false",{"_index":432,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["field",{"_index":1842,"title":{},"body":{"classes/PrismaValidationFilter.html":{}}}],["fieldkeys",{"_index":1826,"title":{},"body":{"classes/PrismaValidationFilter.html":{}}}],["fieldkeys.map(key",{"_index":1829,"title":{},"body":{"classes/PrismaValidationFilter.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AccessTokenDto.html":{},"classes/AddUserInterViewDto.html":{},"classes/AddgroupDto.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallUserHistoryController.html":{},"modules/CallUserHistoryModule.html":{},"injectables/CallUserHistoryService.html":{},"classes/ChangePasswordDto.html":{},"controllers/ContactController.html":{},"modules/ContactModule.html":{},"controllers/ContactPersonController.html":{},"modules/ContactPersonModule.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"classes/CreateCallUserDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateInterViewDto.html":{},"classes/CreateRentalCostDto.html":{},"classes/CreateScheduleDaysDto.html":{},"classes/CreateScheduleDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/DecodeDto.html":{},"controllers/DirectorController.html":{},"modules/DirectorModule.html":{},"injectables/DirectorService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/DtoValidatorPipe.html":{},"injectables/DtoValidatorSelfPipe.html":{},"classes/EditContactDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditGroupDto.html":{},"classes/EditInterViewDto.html":{},"classes/EditRentalCostDto.html":{},"classes/EditScheduleDaysDto.html":{},"classes/EditScheduleDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSelfDto.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"controllers/FiszkaController.html":{},"modules/FiszkaModule.html":{},"injectables/FiszkaService.html":{},"classes/GetCallUserHistoryDto.html":{},"classes/GetContactDto.html":{},"classes/GetContactPersontDto.html":{},"classes/GetDirectorDto.html":{},"classes/GetFindByIdDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetGroupDto.html":{},"classes/GetInterViewsDto.html":{},"classes/GetRentalCostDto.html":{},"classes/GetScheduleDto.html":{},"classes/GetSchoolDto.html":{},"classes/GetUserDto.html":{},"classes/GetUserInterViewDto.html":{},"classes/GraphDateDto.html":{},"controllers/GroupController.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/InterviewsController.html":{},"modules/InterviewsModule.html":{},"injectables/InterviewsService.html":{},"controllers/LoggerController.html":{},"injectables/LoggerMiddleware.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/LoginUserDto.html":{},"classes/MatchConstraint.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"injectables/OptionsPipe.html":{},"controllers/PredicteController.html":{},"modules/PredicteModule.html":{},"injectables/PredicteService.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{},"classes/RemoveUserInterViewDto.html":{},"controllers/RentalCostController.html":{},"modules/RentalCostModule.html":{},"injectables/RentalCostService.html":{},"interfaces/ReqUserInfo.html":{},"guards/RolesGuard.html":{},"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"modules/ScheduleDaysModule.html":{},"injectables/ScheduleDaysService.html":{},"modules/ScheduleModule.html":{},"injectables/ScheduleService.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"classes/SendFiszkiDto.html":{},"injectables/UpperCasePipe.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidationdDto.html":{},"coverage.html":{},"classes/getGraphDateDto.html":{}}}],["find",{"_index":925,"title":{},"body":{"injectables/DirectorService.html":{},"injectables/RentalCostService.html":{}}}],["find.director",{"_index":927,"title":{},"body":{"injectables/DirectorService.html":{}}}],["find.rentalcost",{"_index":1890,"title":{},"body":{"injectables/RentalCostService.html":{}}}],["findall",{"_index":1919,"title":{},"body":{"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"injectables/ScheduleDaysService.html":{},"injectables/ScheduleService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findall(@reqinfo",{"_index":1945,"title":{},"body":{"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"controllers/SchoolController.html":{},"controllers/UserController.html":{}}}],["findall(idschedule",{"_index":1992,"title":{},"body":{"injectables/ScheduleDaysService.html":{}}}],["findall(region",{"_index":2020,"title":{},"body":{"injectables/ScheduleService.html":{},"injectables/SchoolService.html":{}}}],["findall(reqinfo",{"_index":1926,"title":{},"body":{"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"controllers/SchoolController.html":{},"controllers/UserController.html":{}}}],["findallbyinterview",{"_index":1086,"title":{},"body":{"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{}}}],["findallbyinterview(@param('idinterview",{"_index":1142,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["findallbyinterview(idinterview",{"_index":1116,"title":{},"body":{"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{}}}],["findallbyregion",{"_index":1456,"title":{},"body":{"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{}}}],["findallbyregion(@reqinfo",{"_index":1505,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["findallbyregion(region",{"_index":1548,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["findallbyregion(reqinfo",{"_index":1470,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["findallbyschool",{"_index":1538,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["findallbyschool(idschool",{"_index":1550,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["findallbyuser",{"_index":1209,"title":{},"body":{"injectables/FiszkaService.html":{},"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{}}}],["findallbyuser(@reqinfo",{"_index":1502,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["findallbyuser(idinterview",{"_index":1221,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["findallbyuser(iduser",{"_index":1552,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["findallbyuser(reqinfo",{"_index":1473,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["findallforgroup",{"_index":1087,"title":{},"body":{"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{}}}],["findallforgroup(@param('idgroup",{"_index":1154,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["findallforgroup(idgroup",{"_index":1120,"title":{},"body":{"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{}}}],["findallformgtm",{"_index":2084,"title":{},"body":{"injectables/SchoolService.html":{}}}],["findallforregion",{"_index":1088,"title":{},"body":{"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{}}}],["findallforregion(@reqinfo",{"_index":1151,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["findallforregion(region",{"_index":1224,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["findallforregion(reqinfo",{"_index":1123,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["findallforuser",{"_index":1089,"title":{},"body":{"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{}}}],["findallforuser(@param('idemployee",{"_index":1148,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["findallforuser(idemployee",{"_index":1226,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["findallforuser(userid",{"_index":1126,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["findallregion",{"_index":2129,"title":{},"body":{"controllers/UserController.html":{}}}],["findallregion(@param('region",{"_index":2192,"title":{},"body":{"controllers/UserController.html":{}}}],["findallregion(region",{"_index":2145,"title":{},"body":{"controllers/UserController.html":{}}}],["findbyid",{"_index":1457,"title":{},"body":{"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{},"controllers/ScheduleController.html":{},"injectables/ScheduleService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findbyid(@param('id",{"_index":2061,"title":{},"body":{"controllers/SchoolController.html":{},"controllers/UserController.html":{}}}],["findbyid(@param('idinterview",{"_index":1508,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["findbyid(@reqinfo",{"_index":1948,"title":{},"body":{"controllers/ScheduleController.html":{}}}],["findbyid(id",{"_index":2148,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findbyid(idinterviews",{"_index":1476,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["findbyid(region",{"_index":1554,"title":{},"body":{"injectables/InterviewsService.html":{},"injectables/ScheduleService.html":{}}}],["findbyid(reqinfo",{"_index":1929,"title":{},"body":{"controllers/ScheduleController.html":{}}}],["findbyid(schoolid",{"_index":2049,"title":{},"body":{"controllers/SchoolController.html":{},"injectables/SchoolService.html":{}}}],["findbyidformgtm",{"_index":2085,"title":{},"body":{"injectables/SchoolService.html":{}}}],["findbyidformgtm(schoolid",{"_index":2093,"title":{},"body":{"injectables/SchoolService.html":{}}}],["findbyregion",{"_index":2249,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyregion(region",{"_index":2265,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyuser",{"_index":1458,"title":{},"body":{"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{}}}],["findbyuser(@param('iduser",{"_index":1516,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["findbyuser(iduser",{"_index":1480,"title":{},"body":{"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{}}}],["findfiszkifordate",{"_index":2130,"title":{},"body":{"controllers/UserController.html":{}}}],["findfiszkifordate(iduser",{"_index":2151,"title":{},"body":{"controllers/UserController.html":{}}}],["findfiszkifordatebyuser",{"_index":2250,"title":{},"body":{"injectables/UserService.html":{}}}],["findfiszkifordatebyuser(userid",{"_index":2267,"title":{},"body":{"injectables/UserService.html":{}}}],["findfiszkifordateininterview",{"_index":2131,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findfiszkifordateininterview(@reqinfo",{"_index":2214,"title":{},"body":{"controllers/UserController.html":{}}}],["findfiszkifordateininterview(reqinfo",{"_index":2154,"title":{},"body":{"controllers/UserController.html":{}}}],["findfiszkifordateininterview(schoolid",{"_index":2269,"title":{},"body":{"injectables/UserService.html":{}}}],["findfiszkifordateinregion",{"_index":2132,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findfiszkifordateinregion(@reqinfo",{"_index":2218,"title":{},"body":{"controllers/UserController.html":{}}}],["findfiszkifordateinregion(region",{"_index":2271,"title":{},"body":{"injectables/UserService.html":{}}}],["findfiszkifordateinregion(reqinfo",{"_index":2157,"title":{},"body":{"controllers/UserController.html":{}}}],["findmybyschool",{"_index":1459,"title":{},"body":{"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{}}}],["findmybyschool(idschool",{"_index":1483,"title":{},"body":{"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{}}}],["findtotalbyid",{"_index":2133,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findtotalbyid(@reqinfo",{"_index":2196,"title":{},"body":{"controllers/UserController.html":{}}}],["findtotalbyid(id",{"_index":2273,"title":{},"body":{"injectables/UserService.html":{}}}],["findtotalbyid(reqinfo",{"_index":2160,"title":{},"body":{"controllers/UserController.html":{}}}],["fiszek",{"_index":1193,"title":{},"body":{"controllers/FiszkaController.html":{},"controllers/UserController.html":{}}}],["fiszka",{"_index":28,"title":{},"body":{"classes/AddgroupDto.html":{},"injectables/CallUserHistoryService.html":{},"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{},"classes/GetFindByIdDto.html":{},"classes/GetGroupDto.html":{},"injectables/UserService.html":{}}}],["fiszka.controller",{"_index":1206,"title":{},"body":{"modules/FiszkaModule.html":{}}}],["fiszka.id",{"_index":1805,"title":{},"body":{"injectables/PredicteService.html":{}}}],["fiszka.interviews?.schoolid",{"_index":1808,"title":{},"body":{"injectables/PredicteService.html":{}}}],["fiszka.service",{"_index":1132,"title":{},"body":{"controllers/FiszkaController.html":{},"modules/FiszkaModule.html":{}}}],["fiszka/options.pipe",{"_index":1498,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["fiszkacontroller",{"_index":1077,"title":{"controllers/FiszkaController.html":{}},"body":{"controllers/FiszkaController.html":{},"modules/FiszkaModule.html":{},"coverage.html":{}}}],["fiszkamodule",{"_index":139,"title":{"modules/FiszkaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FiszkaModule.html":{},"modules.html":{},"overview.html":{}}}],["fiszkaperday",{"_index":2293,"title":{},"body":{"injectables/UserService.html":{}}}],["fiszkaperday).map(item",{"_index":2299,"title":{},"body":{"injectables/UserService.html":{}}}],["fiszkaservice",{"_index":1131,"title":{"injectables/FiszkaService.html":{}},"body":{"controllers/FiszkaController.html":{},"modules/FiszkaModule.html":{},"injectables/FiszkaService.html":{},"coverage.html":{},"overview.html":{}}}],["fiszki",{"_index":1183,"title":{},"body":{"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{},"classes/GetFindByIdDto.html":{},"classes/GetGroupDto.html":{},"injectables/GroupService.html":{},"injectables/InterviewsService.html":{},"injectables/PredicteService.html":{},"injectables/UserService.html":{}}}],["fiszki.map((fiszka",{"_index":1804,"title":{},"body":{"injectables/PredicteService.html":{}}}],["fiszki:fiszka",{"_index":1299,"title":{},"body":{"classes/GetGroupDto.html":{}}}],["fiszkiids",{"_index":1803,"title":{},"body":{"injectables/PredicteService.html":{}}}],["fiszkischooldata",{"_index":1806,"title":{},"body":{"injectables/PredicteService.html":{}}}],["forbiddenexception",{"_index":227,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{},"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{},"injectables/ScheduleDaysService.html":{}}}],["forbiddenexception(`bad",{"_index":2002,"title":{},"body":{"injectables/ScheduleDaysService.html":{}}}],["forbiddenexception(`interview(id:${interviewid",{"_index":1574,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["forbiddenexception(`one",{"_index":1598,"title":{},"body":{"injectables/InterviewsService.html":{},"injectables/ScheduleDaysService.html":{}}}],["forbiddenexception(`this",{"_index":1235,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["forbiddenexception(`userid(id:${data.iduser",{"_index":1583,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["forroutes('school",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":1575,"title":{},"body":{"injectables/InterviewsService.html":{},"injectables/ScheduleDaysService.html":{},"injectables/ScheduleService.html":{}}}],["framework",{"_index":2413,"title":{},"body":{"index.html":{}}}],["friday",{"_index":1802,"title":{},"body":{"injectables/PredicteService.html":{}}}],["function",{"_index":1675,"title":{},"body":{"classes/MatchConstraint.html":{},"coverage.html":{}}}],["functions",{"_index":2387,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generator",{"_index":2379,"title":{},"body":{"dependencies.html":{}}}],["get('find/:idschedule",{"_index":1947,"title":{},"body":{"controllers/ScheduleController.html":{}}}],["get('findall",{"_index":2057,"title":{},"body":{"controllers/SchoolController.html":{},"controllers/UserController.html":{}}}],["get('findall/:idinterview",{"_index":1141,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["get('findall/:idschool",{"_index":1944,"title":{},"body":{"controllers/ScheduleController.html":{}}}],["get('findallbyregion",{"_index":1504,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["get('findallbyschool/:idschool",{"_index":1510,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["get('findallbyuser",{"_index":1501,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["get('findallbyuser/:iduser",{"_index":1515,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["get('findallforgroup/:idgroup",{"_index":1153,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["get('findallforregion",{"_index":1150,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["get('findallforuser/:idemployee",{"_index":1147,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["get('findbyid/:id",{"_index":2060,"title":{},"body":{"controllers/SchoolController.html":{},"controllers/UserController.html":{}}}],["get('findbyid/:idinterview",{"_index":1507,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["get('fiszkiforday/:iduser",{"_index":2209,"title":{},"body":{"controllers/UserController.html":{}}}],["get('fiszkifordaybyinterview",{"_index":2217,"title":{},"body":{"controllers/UserController.html":{}}}],["get('fiszkifordaybyinterview/:idschool",{"_index":2213,"title":{},"body":{"controllers/UserController.html":{}}}],["get('get/:idschool",{"_index":594,"title":{},"body":{"controllers/ContactPersonController.html":{},"controllers/RentalCostController.html":{}}}],["get('getallhistory/:idfiszka",{"_index":473,"title":{},"body":{"controllers/CallUserHistoryController.html":{}}}],["get('getcontact/:idschool",{"_index":554,"title":{},"body":{"controllers/ContactController.html":{}}}],["get('getdirector/:idschool",{"_index":897,"title":{},"body":{"controllers/DirectorController.html":{}}}],["get('group/:idgroup",{"_index":1391,"title":{},"body":{"controllers/GroupController.html":{}}}],["get('group/:idschool",{"_index":1765,"title":{},"body":{"controllers/PredicteController.html":{}}}],["get('groups/:idschool",{"_index":1386,"title":{},"body":{"controllers/GroupController.html":{}}}],["get('profile",{"_index":272,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('region/:region",{"_index":2191,"title":{},"body":{"controllers/UserController.html":{}}}],["get('total",{"_index":2195,"title":{},"body":{"controllers/UserController.html":{}}}],["getallhistory",{"_index":438,"title":{},"body":{"controllers/CallUserHistoryController.html":{},"injectables/CallUserHistoryService.html":{}}}],["getallhistory(@param('idfiszka",{"_index":474,"title":{},"body":{"controllers/CallUserHistoryController.html":{}}}],["getallhistory(idfiszka",{"_index":449,"title":{},"body":{"controllers/CallUserHistoryController.html":{},"injectables/CallUserHistoryService.html":{}}}],["getbyid",{"_index":531,"title":{},"body":{"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/GroupController.html":{},"controllers/RentalCostController.html":{}}}],["getbyid(@param('idschool",{"_index":555,"title":{},"body":{"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/RentalCostController.html":{}}}],["getbyid(@reqinfo",{"_index":1387,"title":{},"body":{"controllers/GroupController.html":{}}}],["getbyid(idschool",{"_index":542,"title":{},"body":{"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/RentalCostController.html":{}}}],["getbyid(reqinfo",{"_index":1373,"title":{},"body":{"controllers/GroupController.html":{}}}],["getbyidformgtmt",{"_index":611,"title":{},"body":{"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"injectables/DirectorService.html":{},"injectables/GroupService.html":{},"injectables/RentalCostService.html":{}}}],["getbyidformgtmt(idschool",{"_index":617,"title":{},"body":{"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"injectables/DirectorService.html":{},"injectables/GroupService.html":{},"injectables/RentalCostService.html":{}}}],["getbyidforrd",{"_index":612,"title":{},"body":{"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"injectables/DirectorService.html":{},"injectables/GroupService.html":{},"injectables/RentalCostService.html":{}}}],["getbyidforrd(idschool",{"_index":619,"title":{},"body":{"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"injectables/DirectorService.html":{},"injectables/GroupService.html":{},"injectables/RentalCostService.html":{}}}],["getbyidgroup",{"_index":1365,"title":{},"body":{"controllers/GroupController.html":{}}}],["getbyidgroup(@reqinfo",{"_index":1392,"title":{},"body":{"controllers/GroupController.html":{}}}],["getbyidgroup(reqinfo",{"_index":1377,"title":{},"body":{"controllers/GroupController.html":{}}}],["getbyidgroupformgtmt",{"_index":1412,"title":{},"body":{"injectables/GroupService.html":{}}}],["getbyidgroupformgtmt(idgroup",{"_index":1419,"title":{},"body":{"injectables/GroupService.html":{}}}],["getbyidgroupforrd",{"_index":1413,"title":{},"body":{"injectables/GroupService.html":{}}}],["getbyidgroupforrd(idgroup",{"_index":1421,"title":{},"body":{"injectables/GroupService.html":{}}}],["getcalluserhistorydto",{"_index":459,"title":{"classes/GetCallUserHistoryDto.html":{}},"body":{"controllers/CallUserHistoryController.html":{},"injectables/CallUserHistoryService.html":{},"classes/GetCallUserHistoryDto.html":{},"coverage.html":{}}}],["getcontactdto",{"_index":548,"title":{"classes/GetContactDto.html":{}},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{},"classes/GetContactDto.html":{},"coverage.html":{}}}],["getcontactpersontdto",{"_index":589,"title":{"classes/GetContactPersontDto.html":{}},"body":{"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{},"classes/GetContactPersontDto.html":{},"coverage.html":{}}}],["getdirectordto",{"_index":894,"title":{"classes/GetDirectorDto.html":{}},"body":{"controllers/DirectorController.html":{},"injectables/DirectorService.html":{},"classes/GetDirectorDto.html":{},"coverage.html":{}}}],["getfindbyiddto",{"_index":1273,"title":{"classes/GetFindByIdDto.html":{}},"body":{"classes/GetFindByIdDto.html":{},"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{},"coverage.html":{}}}],["getfiszka.dto",{"_index":31,"title":{},"body":{"classes/AddgroupDto.html":{}}}],["getfiszkadto",{"_index":29,"title":{"classes/GetFiszkaDto.html":{}},"body":{"classes/AddgroupDto.html":{},"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{},"classes/GetFiszkaDto.html":{},"coverage.html":{}}}],["getgraphdatedto",{"_index":2181,"title":{"classes/getGraphDateDto.html":{}},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"classes/getGraphDateDto.html":{}}}],["getgroupdto",{"_index":1290,"title":{"classes/GetGroupDto.html":{}},"body":{"classes/GetGroupDto.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"coverage.html":{}}}],["getinterviewsdto",{"_index":1300,"title":{"classes/GetInterViewsDto.html":{}},"body":{"classes/GetInterViewsDto.html":{},"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{},"coverage.html":{}}}],["getlog",{"_index":1654,"title":{},"body":{"injectables/LoggerService.html":{}}}],["getprofile",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprofile(@reqinfo",{"_index":273,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprofile(reqinfo",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{}}}],["getrentalcostdto",{"_index":1309,"title":{"classes/GetRentalCostDto.html":{}},"body":{"classes/GetRentalCostDto.html":{},"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{},"coverage.html":{}}}],["getscheduledto",{"_index":1313,"title":{"classes/GetScheduleDto.html":{}},"body":{"classes/GetScheduleDto.html":{},"coverage.html":{}}}],["getschooldto",{"_index":1319,"title":{"classes/GetSchoolDto.html":{}},"body":{"classes/GetSchoolDto.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"coverage.html":{}}}],["getting",{"_index":2409,"title":{"index.html":{}},"body":{}}],["getuserdto",{"_index":239,"title":{"classes/GetUserDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GetUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["getuserinterviewdto",{"_index":1349,"title":{"classes/GetUserInterViewDto.html":{}},"body":{"classes/GetUserInterViewDto.html":{},"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{},"coverage.html":{}}}],["global",{"_index":334,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["godzinie",{"_index":1738,"title":{},"body":{"controllers/PredicteController.html":{}}}],["graphdatedto",{"_index":1355,"title":{"classes/GraphDateDto.html":{}},"body":{"classes/GraphDateDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["graphdatedto):promise",{"_index":2292,"title":{},"body":{"injectables/UserService.html":{}}}],["group",{"_index":1232,"title":{},"body":{"injectables/FiszkaService.html":{},"classes/GetFiszkaDto.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{}}}],["group.controller",{"_index":1410,"title":{},"body":{"modules/GroupModule.html":{}}}],["group.service",{"_index":1381,"title":{},"body":{"controllers/GroupController.html":{},"modules/GroupModule.html":{}}}],["group:group",{"_index":1289,"title":{},"body":{"classes/GetFiszkaDto.html":{}}}],["groupcontroller",{"_index":1363,"title":{"controllers/GroupController.html":{}},"body":{"controllers/GroupController.html":{},"modules/GroupModule.html":{},"coverage.html":{}}}],["groupmodule",{"_index":140,"title":{"modules/GroupModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GroupModule.html":{},"modules.html":{},"overview.html":{}}}],["groupservice",{"_index":1380,"title":{"injectables/GroupService.html":{}},"body":{"controllers/GroupController.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"coverage.html":{},"overview.html":{}}}],["grow",{"_index":2446,"title":{},"body":{"index.html":{}}}],["grup",{"_index":1402,"title":{},"body":{"controllers/GroupController.html":{},"controllers/PredicteController.html":{}}}],["grupa",{"_index":1189,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["grupa=9",{"_index":1763,"title":{},"body":{"controllers/PredicteController.html":{}}}],["grupach",{"_index":1746,"title":{},"body":{"controllers/PredicteController.html":{}}}],["grupie",{"_index":1724,"title":{},"body":{"controllers/PredicteController.html":{}}}],["grupy",{"_index":1186,"title":{},"body":{"controllers/FiszkaController.html":{},"controllers/GroupController.html":{},"classes/PrismaValidationFilter.html":{}}}],["gte",{"_index":2294,"title":{},"body":{"injectables/UserService.html":{}}}],["guard",{"_index":275,"title":{"guards/AuthGuard.html":{},"guards/RolesGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":276,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RolesGuard.html":{},"overview.html":{}}}],["handlers",{"_index":320,"title":{},"body":{"guards/AuthGuard.html":{}}}],["hashpassword",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["hashpassword(`${user.name[0].touppercase()}${user.surname[0].tolowercase()}${user.phone.substring(0",{"_index":2287,"title":{},"body":{"injectables/UserService.html":{}}}],["hashpassword(datapass.newpassword",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{}}}],["hashpassword(pass",{"_index":2400,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hasła",{"_index":516,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["hasło",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{}}}],["headers",{"_index":105,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotFoundExceptionFilter.html":{}}}],["helpers/cuterrormsg",{"_index":1820,"title":{},"body":{"classes/PrismaValidationFilter.html":{}}}],["helpers/translateerror",{"_index":1438,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["here",{"_index":317,"title":{},"body":{"guards/AuthGuard.html":{},"index.html":{}}}],["host",{"_index":46,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{}}}],["host.switchtohttp",{"_index":80,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{}}}],["hour",{"_index":726,"title":{},"body":{"classes/CreateGroupDto.html":{},"classes/EditGroupDto.html":{},"classes/GetGroupDto.html":{},"injectables/GroupService.html":{}}}],["hour:string",{"_index":744,"title":{},"body":{"classes/CreateGroupDto.html":{},"classes/EditGroupDto.html":{},"classes/GetGroupDto.html":{}}}],["http",{"_index":71,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapter",{"_index":77,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapter.getrequesturl(ctx.getrequest",{"_index":117,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapter.reply(ctx.getresponse",{"_index":118,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpadapterhost",{"_index":40,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpcode",{"_index":223,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(httpstatus.ok",{"_index":252,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpexception",{"_index":52,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{},"injectables/ScheduleService.html":{}}}],["httpexception(\"not",{"_index":2034,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["httpexceptionfilter",{"_index":70,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"controllers/CallUserHistoryController.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/FiszkaController.html":{},"controllers/GroupController.html":{},"classes/HttpExceptionFilter.html":{},"controllers/InterviewsController.html":{},"controllers/LoggerController.html":{},"controllers/PredicteController.html":{},"controllers/RentalCostController.html":{},"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"controllers/SchoolController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["httpexceptionfilter())@delete('logout",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpexceptionfilter())@get",{"_index":1618,"title":{},"body":{"controllers/LoggerController.html":{}}}],["httpexceptionfilter())@get('findallbyregion",{"_index":1471,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["httpexceptionfilter())@get('findallbyschool/:idschool",{"_index":1484,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["httpexceptionfilter())@get('findallbyuser",{"_index":1474,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["httpexceptionfilter())@get('findallbyuser/:iduser",{"_index":1481,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["httpexceptionfilter())@get('findbyid/:idinterview",{"_index":1477,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["httpexceptionfilter())@get('group/:idgroup",{"_index":1378,"title":{},"body":{"controllers/GroupController.html":{}}}],["httpexceptionfilter())@get('groups/:idschool",{"_index":1375,"title":{},"body":{"controllers/GroupController.html":{}}}],["httpexceptionfilter())@get('profile",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpexceptionfilter())@patch('adduser/:idinterview",{"_index":1462,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["httpexceptionfilter())@patch('edit/:idinterview",{"_index":1468,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["httpexceptionfilter())@patch('edit/:idschool/:idgroup",{"_index":1371,"title":{},"body":{"controllers/GroupController.html":{}}}],["httpexceptionfilter())@patch('removeuser/:idinterview",{"_index":1488,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["httpexceptionfilter())@post('create",{"_index":1465,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["httpexceptionfilter())@post('create/:idschool",{"_index":1368,"title":{},"body":{"controllers/GroupController.html":{}}}],["httpexceptionfilter())@post('login",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpexceptionfilter())@post('refreshtoken",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpexceptionfilter())@roles(role.ca",{"_index":1096,"title":{},"body":{"controllers/FiszkaController.html":{},"controllers/UserController.html":{}}}],["httpexceptionfilter())@roles(role.mgtmt",{"_index":441,"title":{},"body":{"controllers/CallUserHistoryController.html":{},"controllers/FiszkaController.html":{},"controllers/UserController.html":{}}}],["httpexceptionfilter())@roles(role.mgtmt)@get('region/:region",{"_index":2146,"title":{},"body":{"controllers/UserController.html":{}}}],["httpexceptionfilter())@roles(role.rd",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/FiszkaController.html":{},"controllers/PredicteController.html":{},"controllers/RentalCostController.html":{},"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"controllers/SchoolController.html":{},"controllers/UserController.html":{}}}],["httpexceptionfilter())@roles(role.user",{"_index":1091,"title":{},"body":{"controllers/FiszkaController.html":{},"controllers/UserController.html":{}}}],["httpexceptionfilter())@roles(role.user)@delete('deletefiszka/:idfiszki",{"_index":1104,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["httpexceptionfilter())@roles(role.user)@patch('editfiszka/:idfiszka/:idinterview",{"_index":1114,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["httpexceptionfilter().catch(exception",{"_index":92,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["https://docs.nestjs.com/modules",{"_index":608,"title":{},"body":{"modules/ContactPersonModule.html":{},"modules/PredicteModule.html":{}}}],["https://nestjs.com",{"_index":2462,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":53,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"injectables/ScheduleService.html":{}}}],["httpstatus.internal_server_error",{"_index":83,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["iat",{"_index":869,"title":{},"body":{"classes/DecodeDto.html":{}}}],["iat:number",{"_index":879,"title":{},"body":{"classes/DecodeDto.html":{}}}],["id",{"_index":112,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthService.html":{},"injectables/CallUserHistoryService.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"classes/DecodeDto.html":{},"controllers/DirectorController.html":{},"injectables/DirectorService.html":{},"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{},"classes/GetContactPersontDto.html":{},"classes/GetDirectorDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetInterViewsDto.html":{},"classes/GetSchoolDto.html":{},"classes/GetUserInterViewDto.html":{},"injectables/GroupService.html":{},"injectables/InterviewsService.html":{},"classes/NotFoundExceptionFilter.html":{},"controllers/PredicteController.html":{},"injectables/PredicteService.html":{},"classes/PrismaValidationFilter.html":{},"injectables/RentalCostService.html":{},"interfaces/ReqUserInfo.html":{},"injectables/ScheduleDaysService.html":{},"injectables/ScheduleService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/SendFiszkiDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["id\",httpstatus.not_found",{"_index":2035,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["id:idcontactperson",{"_index":640,"title":{},"body":{"injectables/ContactPersonService.html":{}}}],["id:idgroup",{"_index":1425,"title":{},"body":{"injectables/GroupService.html":{}}}],["id:idphonecalls",{"_index":506,"title":{},"body":{"injectables/CallUserHistoryService.html":{}}}],["id:idschedule",{"_index":2027,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["id:number",{"_index":878,"title":{},"body":{"classes/DecodeDto.html":{}}}],["id:string",{"_index":1266,"title":{},"body":{"classes/GetContactPersontDto.html":{},"classes/GetDirectorDto.html":{},"classes/GetFiszkaDto.html":{}}}],["id:true",{"_index":1998,"title":{},"body":{"injectables/ScheduleDaysService.html":{}}}],["idcontact",{"_index":538,"title":{},"body":{"controllers/ContactController.html":{},"injectables/ContactService.html":{}}}],["idcontactperson",{"_index":579,"title":{},"body":{"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{}}}],["idemployee",{"_index":1228,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["identifier",{"_index":2327,"title":{},"body":{"coverage.html":{}}}],["identyczne",{"_index":519,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["idfiszka",{"_index":444,"title":{},"body":{"controllers/CallUserHistoryController.html":{},"injectables/CallUserHistoryService.html":{},"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{}}}],["idfiszki",{"_index":1107,"title":{},"body":{"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{}}}],["idgroup",{"_index":1099,"title":{},"body":{"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{}}}],["idinterview",{"_index":1094,"title":{},"body":{"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{},"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{}}}],["idinterviews",{"_index":1479,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["idphonecalls",{"_index":448,"title":{},"body":{"controllers/CallUserHistoryController.html":{},"injectables/CallUserHistoryService.html":{}}}],["idschedule",{"_index":1923,"title":{},"body":{"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"injectables/ScheduleDaysService.html":{},"injectables/ScheduleService.html":{}}}],["idschool",{"_index":536,"title":{},"body":{"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"controllers/DirectorController.html":{},"injectables/DirectorService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{},"controllers/PredicteController.html":{},"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{},"controllers/ScheduleController.html":{},"injectables/ScheduleService.html":{},"controllers/UserController.html":{}}}],["idshedule",{"_index":2022,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["iduser",{"_index":24,"title":{},"body":{"classes/AddUserInterViewDto.html":{},"injectables/FiszkaService.html":{},"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{},"injectables/LoggerMiddleware.html":{},"controllers/UserController.html":{}}}],["iduserlist",{"_index":1854,"title":{},"body":{"classes/RemoveUserInterViewDto.html":{}}}],["if((await",{"_index":2032,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["if(exception",{"_index":90,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["ilo",{"_index":1745,"title":{},"body":{"controllers/PredicteController.html":{},"controllers/UserController.html":{}}}],["ilośc",{"_index":2235,"title":{},"body":{"controllers/UserController.html":{}}}],["implements",{"_index":34,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/DtoValidationPipe.html":{},"injectables/DtoValidatorPipe.html":{},"injectables/DtoValidatorSelfPipe.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"classes/MatchConstraint.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"injectables/OptionsPipe.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{},"guards/RolesGuard.html":{},"injectables/UpperCasePipe.html":{}}}],["import",{"_index":17,"title":{},"body":{"classes/AccessTokenDto.html":{},"classes/AddUserInterViewDto.html":{},"classes/AddgroupDto.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallUserHistoryController.html":{},"modules/CallUserHistoryModule.html":{},"injectables/CallUserHistoryService.html":{},"classes/ChangePasswordDto.html":{},"controllers/ContactController.html":{},"modules/ContactModule.html":{},"controllers/ContactPersonController.html":{},"modules/ContactPersonModule.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"classes/CreateCallUserDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateInterViewDto.html":{},"classes/CreateRentalCostDto.html":{},"classes/CreateScheduleDaysDto.html":{},"classes/CreateScheduleDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/DecodeDto.html":{},"controllers/DirectorController.html":{},"modules/DirectorModule.html":{},"injectables/DirectorService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/DtoValidatorPipe.html":{},"injectables/DtoValidatorSelfPipe.html":{},"classes/EditContactDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditGroupDto.html":{},"classes/EditInterViewDto.html":{},"classes/EditRentalCostDto.html":{},"classes/EditScheduleDaysDto.html":{},"classes/EditScheduleDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSelfDto.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"controllers/FiszkaController.html":{},"modules/FiszkaModule.html":{},"injectables/FiszkaService.html":{},"classes/GetCallUserHistoryDto.html":{},"classes/GetContactDto.html":{},"classes/GetContactPersontDto.html":{},"classes/GetDirectorDto.html":{},"classes/GetFindByIdDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetGroupDto.html":{},"classes/GetInterViewsDto.html":{},"classes/GetRentalCostDto.html":{},"classes/GetScheduleDto.html":{},"classes/GetSchoolDto.html":{},"classes/GetUserDto.html":{},"classes/GetUserInterViewDto.html":{},"classes/GraphDateDto.html":{},"controllers/GroupController.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/InterviewsController.html":{},"modules/InterviewsModule.html":{},"injectables/InterviewsService.html":{},"controllers/LoggerController.html":{},"injectables/LoggerMiddleware.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/LoginUserDto.html":{},"classes/MatchConstraint.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"injectables/OptionsPipe.html":{},"controllers/PredicteController.html":{},"modules/PredicteModule.html":{},"injectables/PredicteService.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{},"classes/RemoveUserInterViewDto.html":{},"controllers/RentalCostController.html":{},"modules/RentalCostModule.html":{},"injectables/RentalCostService.html":{},"interfaces/ReqUserInfo.html":{},"guards/RolesGuard.html":{},"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"modules/ScheduleDaysModule.html":{},"injectables/ScheduleDaysService.html":{},"modules/ScheduleModule.html":{},"injectables/ScheduleService.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"classes/SendFiszkiDto.html":{},"injectables/UpperCasePipe.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidationdDto.html":{},"classes/getGraphDateDto.html":{}}}],["imports",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CallUserHistoryModule.html":{},"modules/ContactModule.html":{},"modules/ContactPersonModule.html":{},"modules/DirectorModule.html":{},"modules/FiszkaModule.html":{},"modules/GroupModule.html":{},"modules/InterviewsModule.html":{},"modules/LoggerModule.html":{},"modules/PredicteModule.html":{},"modules/RentalCostModule.html":{},"modules/ScheduleDaysModule.html":{},"modules/ScheduleModule.html":{},"modules/SchoolModule.html":{},"modules/UserModule.html":{}}}],["include",{"_index":1251,"title":{},"body":{"injectables/FiszkaService.html":{},"injectables/GroupService.html":{},"injectables/InterviewsService.html":{},"injectables/ScheduleDaysService.html":{}}}],["increment",{"_index":1245,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["indatabase",{"_index":2320,"title":{},"body":{"injectables/UserService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/AccessTokenDto.html":{},"classes/AddUserInterViewDto.html":{},"classes/AddgroupDto.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CallUserHistoryController.html":{},"injectables/CallUserHistoryService.html":{},"classes/ChangePasswordDto.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"classes/CreateCallUserDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateInterViewDto.html":{},"classes/CreateRentalCostDto.html":{},"classes/CreateScheduleDaysDto.html":{},"classes/CreateScheduleDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/DecodeDto.html":{},"controllers/DirectorController.html":{},"injectables/DirectorService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/DtoValidatorPipe.html":{},"injectables/DtoValidatorSelfPipe.html":{},"classes/EditContactDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditGroupDto.html":{},"classes/EditInterViewDto.html":{},"classes/EditRentalCostDto.html":{},"classes/EditScheduleDaysDto.html":{},"classes/EditScheduleDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSelfDto.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{},"classes/GetCallUserHistoryDto.html":{},"classes/GetContactDto.html":{},"classes/GetContactPersontDto.html":{},"classes/GetDirectorDto.html":{},"classes/GetFindByIdDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetGroupDto.html":{},"classes/GetInterViewsDto.html":{},"classes/GetRentalCostDto.html":{},"classes/GetScheduleDto.html":{},"classes/GetSchoolDto.html":{},"classes/GetUserDto.html":{},"classes/GetUserInterViewDto.html":{},"classes/GraphDateDto.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{},"controllers/LoggerController.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"classes/LoginUserDto.html":{},"classes/MatchConstraint.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"injectables/OptionsPipe.html":{},"controllers/PredicteController.html":{},"injectables/PredicteService.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{},"classes/RemoveUserInterViewDto.html":{},"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{},"interfaces/ReqUserInfo.html":{},"guards/RolesGuard.html":{},"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"injectables/ScheduleDaysService.html":{},"injectables/ScheduleService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/SendFiszkiDto.html":{},"injectables/UpperCasePipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/ValidationdDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"classes/getGraphDateDto.html":{},"miscellaneous/variables.html":{}}}],["indywidualne",{"_index":1753,"title":{},"body":{"controllers/PredicteController.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AccessTokenDto.html":{},"classes/AddUserInterViewDto.html":{},"classes/AddgroupDto.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallUserHistoryController.html":{},"modules/CallUserHistoryModule.html":{},"injectables/CallUserHistoryService.html":{},"classes/ChangePasswordDto.html":{},"controllers/ContactController.html":{},"modules/ContactModule.html":{},"controllers/ContactPersonController.html":{},"modules/ContactPersonModule.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"classes/CreateCallUserDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateInterViewDto.html":{},"classes/CreateRentalCostDto.html":{},"classes/CreateScheduleDaysDto.html":{},"classes/CreateScheduleDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/DecodeDto.html":{},"controllers/DirectorController.html":{},"modules/DirectorModule.html":{},"injectables/DirectorService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/DtoValidatorPipe.html":{},"injectables/DtoValidatorSelfPipe.html":{},"classes/EditContactDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditGroupDto.html":{},"classes/EditInterViewDto.html":{},"classes/EditRentalCostDto.html":{},"classes/EditScheduleDaysDto.html":{},"classes/EditScheduleDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSelfDto.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"controllers/FiszkaController.html":{},"modules/FiszkaModule.html":{},"injectables/FiszkaService.html":{},"classes/GetCallUserHistoryDto.html":{},"classes/GetContactDto.html":{},"classes/GetContactPersontDto.html":{},"classes/GetDirectorDto.html":{},"classes/GetFindByIdDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetGroupDto.html":{},"classes/GetInterViewsDto.html":{},"classes/GetRentalCostDto.html":{},"classes/GetScheduleDto.html":{},"classes/GetSchoolDto.html":{},"classes/GetUserDto.html":{},"classes/GetUserInterViewDto.html":{},"classes/GraphDateDto.html":{},"controllers/GroupController.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/InterviewsController.html":{},"modules/InterviewsModule.html":{},"injectables/InterviewsService.html":{},"controllers/LoggerController.html":{},"injectables/LoggerMiddleware.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/LoginUserDto.html":{},"classes/MatchConstraint.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"injectables/OptionsPipe.html":{},"controllers/PredicteController.html":{},"modules/PredicteModule.html":{},"injectables/PredicteService.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{},"classes/RemoveUserInterViewDto.html":{},"controllers/RentalCostController.html":{},"modules/RentalCostModule.html":{},"injectables/RentalCostService.html":{},"interfaces/ReqUserInfo.html":{},"guards/RolesGuard.html":{},"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"modules/ScheduleDaysModule.html":{},"injectables/ScheduleDaysService.html":{},"modules/ScheduleModule.html":{},"injectables/ScheduleService.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"classes/SendFiszkiDto.html":{},"injectables/UpperCasePipe.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidationdDto.html":{},"classes/getGraphDateDto.html":{}}}],["inject",{"_index":942,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/DtoValidatorPipe.html":{},"injectables/DtoValidatorSelfPipe.html":{},"injectables/UpperCasePipe.html":{}}}],["injectable",{"_index":178,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CallUserHistoryService.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"injectables/DirectorService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/DtoValidatorPipe.html":{},"injectables/DtoValidatorSelfPipe.html":{},"injectables/FiszkaService.html":{},"injectables/GroupService.html":{},"injectables/InterviewsService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"injectables/OptionsPipe.html":{},"injectables/PredicteService.html":{},"injectables/RentalCostService.html":{},"injectables/ScheduleDaysService.html":{},"injectables/ScheduleService.html":{},"injectables/SchoolService.html":{},"injectables/UpperCasePipe.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CallUserHistoryService.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"injectables/DirectorService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/DtoValidatorPipe.html":{},"injectables/DtoValidatorSelfPipe.html":{},"injectables/FiszkaService.html":{},"injectables/GroupService.html":{},"injectables/InterviewsService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"injectables/OptionsPipe.html":{},"injectables/PredicteService.html":{},"injectables/RentalCostService.html":{},"guards/RolesGuard.html":{},"injectables/ScheduleDaysService.html":{},"injectables/ScheduleService.html":{},"injectables/SchoolService.html":{},"injectables/UpperCasePipe.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":180,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CallUserHistoryService.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"injectables/DirectorService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/DtoValidatorPipe.html":{},"injectables/DtoValidatorSelfPipe.html":{},"injectables/FiszkaService.html":{},"injectables/GroupService.html":{},"injectables/InterviewsService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"injectables/OptionsPipe.html":{},"injectables/PredicteService.html":{},"injectables/RentalCostService.html":{},"injectables/ScheduleDaysService.html":{},"injectables/ScheduleService.html":{},"injectables/SchoolService.html":{},"injectables/UpperCasePipe.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["installation",{"_index":2425,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":2427,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":81,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/AuthService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/DtoValidatorPipe.html":{},"injectables/DtoValidatorSelfPipe.html":{},"classes/PrismaOtherFilter.html":{}}}],["interface",{"_index":1895,"title":{"interfaces/ReqUserInfo.html":{}},"body":{"interfaces/ReqUserInfo.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":1896,"title":{},"body":{"interfaces/ReqUserInfo.html":{}}}],["interview",{"_index":1563,"title":{},"body":{"injectables/InterviewsService.html":{},"injectables/UserService.html":{}}}],["interview._count.fiszki",{"_index":1605,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["interview.id",{"_index":1604,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["interview.interviewtotalfiszki",{"_index":2313,"title":{},"body":{"injectables/UserService.html":{}}}],["interview.userinterviews.map((ui",{"_index":1579,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["interviewid",{"_index":1544,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["interviewperday",{"_index":2304,"title":{},"body":{"injectables/UserService.html":{}}}],["interviewperday).map(item",{"_index":2305,"title":{},"body":{"injectables/UserService.html":{}}}],["interviews",{"_index":1230,"title":{},"body":{"injectables/FiszkaService.html":{},"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{},"injectables/PredicteService.html":{},"injectables/UserService.html":{}}}],["interviews.controller",{"_index":1535,"title":{},"body":{"modules/InterviewsModule.html":{}}}],["interviews.map((interview",{"_index":1603,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["interviews.service",{"_index":1491,"title":{},"body":{"controllers/InterviewsController.html":{},"modules/InterviewsModule.html":{}}}],["interviewscontroller",{"_index":1451,"title":{"controllers/InterviewsController.html":{}},"body":{"controllers/InterviewsController.html":{},"modules/InterviewsModule.html":{},"coverage.html":{}}}],["interviewsid",{"_index":1238,"title":{},"body":{"injectables/FiszkaService.html":{},"classes/SendFiszkiDto.html":{}}}],["interviewsmodule",{"_index":141,"title":{"modules/InterviewsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/InterviewsModule.html":{},"modules.html":{},"overview.html":{}}}],["interviewsservice",{"_index":1490,"title":{"injectables/InterviewsService.html":{}},"body":{"controllers/InterviewsController.html":{},"modules/InterviewsModule.html":{},"injectables/InterviewsService.html":{},"coverage.html":{},"overview.html":{}}}],["interviewtotalfiszki",{"_index":1244,"title":{},"body":{"injectables/FiszkaService.html":{},"classes/GetInterViewsDto.html":{},"injectables/InterviewsService.html":{}}}],["interviewtotalfiszki:true",{"_index":2307,"title":{},"body":{"injectables/UserService.html":{}}}],["interviewuser",{"_index":1013,"title":{},"body":{"classes/EditInterViewDto.html":{}}}],["interviewusercreatedata",{"_index":1568,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["interviewusers",{"_index":1609,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["is_public_key",{"_index":295,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isalpha",{"_index":670,"title":{},"body":{"classes/CreateContactDto.html":{},"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateScheduleDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/EditContactDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditScheduleDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSelfDto.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"classes/GetContactDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetUserDto.html":{}}}],["isalpha(\"pl",{"_index":682,"title":{},"body":{"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditSelfDto.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetUserDto.html":{}}}],["isalpha('pl",{"_index":674,"title":{},"body":{"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetUserDto.html":{}}}],["isalpha()@isnotempty",{"_index":865,"title":{},"body":{"classes/CreateUserForRdDto.html":{}}}],["isalpha()@isoptional",{"_index":781,"title":{},"body":{"classes/CreateScheduleDto.html":{},"classes/EditScheduleDto.html":{}}}],["isalpha()@minlength(3)@isnotempty",{"_index":859,"title":{},"body":{"classes/CreateUserForRdDto.html":{}}}],["isalphanumeric",{"_index":661,"title":{},"body":{"classes/CreateCallUserDto.html":{},"classes/CreateSchoolDto.html":{},"classes/EditSchoolDto.html":{}}}],["isalphanumeric(\"pl",{"_index":830,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/EditSchoolDto.html":{}}}],["isascii",{"_index":662,"title":{},"body":{"classes/CreateCallUserDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateSchoolDto.html":{},"classes/EditContactDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditSchoolDto.html":{},"classes/GetCallUserHistoryDto.html":{},"classes/GetContactDto.html":{}}}],["isascii()@isnotempty",{"_index":801,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["isascii()@isoptional",{"_index":666,"title":{},"body":{"classes/CreateContactDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/EditContactDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditSchoolDto.html":{},"classes/GetCallUserHistoryDto.html":{},"classes/GetContactDto.html":{}}}],["isdate",{"_index":663,"title":{},"body":{"classes/CreateCallUserDto.html":{},"classes/CreateContactDto.html":{},"classes/EditContactDto.html":{},"classes/GetCallUserHistoryDto.html":{},"classes/GetContactDto.html":{},"classes/GraphDateDto.html":{}}}],["isdate()@isnotempty",{"_index":668,"title":{},"body":{"classes/CreateContactDto.html":{},"classes/GetCallUserHistoryDto.html":{},"classes/GetContactDto.html":{}}}],["isdate()@isoptional",{"_index":975,"title":{},"body":{"classes/EditContactDto.html":{},"classes/GetCallUserHistoryDto.html":{}}}],["isdecimal",{"_index":766,"title":{},"body":{"classes/CreateRentalCostDto.html":{},"classes/EditRentalCostDto.html":{},"classes/GetRentalCostDto.html":{}}}],["isdecimal()@isoptional",{"_index":763,"title":{},"body":{"classes/CreateRentalCostDto.html":{},"classes/EditRentalCostDto.html":{},"classes/GetRentalCostDto.html":{}}}],["isemail",{"_index":680,"title":{},"body":{"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSelfDto.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetUserDto.html":{},"classes/LoginUserDto.html":{},"classes/ValidationdDto.html":{}}}],["isemail()@isoptional",{"_index":672,"title":{},"body":{"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateSchoolDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditSchoolDto.html":{},"classes/GetFiszkaDto.html":{},"classes/ValidationdDto.html":{}}}],["isempty",{"_index":810,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{}}}],["isenum",{"_index":739,"title":{},"body":{"classes/CreateGroupDto.html":{},"classes/CreateScheduleDaysDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/EditGroupDto.html":{},"classes/EditScheduleDaysDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSelfDto.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"classes/GetGroupDto.html":{},"classes/GetSchoolDto.html":{},"classes/GetUserDto.html":{}}}],["isenum(daysoftheweek",{"_index":742,"title":{},"body":{"classes/CreateGroupDto.html":{},"classes/CreateScheduleDaysDto.html":{},"classes/EditGroupDto.html":{},"classes/EditScheduleDaysDto.html":{},"classes/GetGroupDto.html":{}}}],["isenum(job",{"_index":853,"title":{},"body":{"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/EditSelfDto.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"classes/GetUserDto.html":{}}}],["isenum(province",{"_index":828,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/EditSchoolDto.html":{},"classes/GetSchoolDto.html":{}}}],["isenum(role",{"_index":1348,"title":{},"body":{"classes/GetUserDto.html":{}}}],["isenum(status",{"_index":824,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/EditSchoolDto.html":{},"classes/GetSchoolDto.html":{}}}],["isenum(type",{"_index":826,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/EditSchoolDto.html":{},"classes/GetSchoolDto.html":{}}}],["isfirstlogin",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"classes/GetUserDto.html":{},"injectables/UserService.html":{}}}],["isfirstlogin:boolean",{"_index":1053,"title":{},"body":{"classes/EditSelfDto.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"classes/GetUserDto.html":{}}}],["ismatch",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{}}}],["isnotempty",{"_index":14,"title":{},"body":{"classes/AccessTokenDto.html":{},"classes/AddUserInterViewDto.html":{},"classes/AddgroupDto.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateCallUserDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateInterViewDto.html":{},"classes/CreateRentalCostDto.html":{},"classes/CreateScheduleDaysDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/EditContactDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditGroupDto.html":{},"classes/EditRentalCostDto.html":{},"classes/EditScheduleDaysDto.html":{},"classes/GetCallUserHistoryDto.html":{},"classes/GetContactDto.html":{},"classes/GetContactPersontDto.html":{},"classes/GetDirectorDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetGroupDto.html":{},"classes/GetInterViewsDto.html":{},"classes/GetRentalCostDto.html":{},"classes/GetScheduleDto.html":{},"classes/GetSchoolDto.html":{},"classes/GetUserDto.html":{},"classes/GetUserInterViewDto.html":{},"classes/GraphDateDto.html":{},"classes/LoginUserDto.html":{},"classes/RemoveUserInterViewDto.html":{},"classes/SendFiszkiDto.html":{},"classes/getGraphDateDto.html":{}}}],["isnotempty()@isemail",{"_index":840,"title":{},"body":{"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/GetUserDto.html":{},"classes/LoginUserDto.html":{}}}],["isnotempty()@isenum(daysoftheweek",{"_index":773,"title":{},"body":{"classes/CreateScheduleDaysDto.html":{},"classes/EditScheduleDaysDto.html":{}}}],["isnotempty()@isenum(job",{"_index":842,"title":{},"body":{"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/GetUserDto.html":{}}}],["isnotempty()@isenum(province",{"_index":808,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/GetSchoolDto.html":{}}}],["isnotempty()@isenum(role",{"_index":1344,"title":{},"body":{"classes/GetUserDto.html":{}}}],["isnotempty()@isenum(status",{"_index":812,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/GetSchoolDto.html":{}}}],["isnotempty()@isenum(type",{"_index":819,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/GetSchoolDto.html":{}}}],["isnotempty()@notcontains('mgtmt",{"_index":847,"title":{},"body":{"classes/CreateUserForMGTMTDto.html":{}}}],["isnotempty()@notcontains('mgtmt')@notcontains('rd",{"_index":863,"title":{},"body":{"classes/CreateUserForRdDto.html":{}}}],["isnumber",{"_index":708,"title":{},"body":{"classes/CreateFiszkaDto.html":{},"classes/CreateScheduleDto.html":{},"classes/CreateSchoolDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditInterViewDto.html":{},"classes/EditScheduleDto.html":{},"classes/EditSchoolDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetInterViewsDto.html":{}}}],["isnumber()@min(0)@max(8)@isoptional",{"_index":696,"title":{},"body":{"classes/CreateFiszkaDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditInterViewDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetInterViewsDto.html":{}}}],["isoptional",{"_index":657,"title":{},"body":{"classes/CreateCallUserDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateInterViewDto.html":{},"classes/CreateRentalCostDto.html":{},"classes/CreateScheduleDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/EditContactDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditGroupDto.html":{},"classes/EditInterViewDto.html":{},"classes/EditRentalCostDto.html":{},"classes/EditScheduleDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSelfDto.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"classes/GetCallUserHistoryDto.html":{},"classes/GetContactDto.html":{},"classes/GetContactPersontDto.html":{},"classes/GetDirectorDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetGroupDto.html":{},"classes/GetInterViewsDto.html":{},"classes/GetRentalCostDto.html":{},"classes/GetScheduleDto.html":{},"classes/GetSchoolDto.html":{},"classes/ValidationdDto.html":{}}}],["isoptional()@isascii",{"_index":659,"title":{},"body":{"classes/CreateCallUserDto.html":{}}}],["isoptional()@isemail",{"_index":1049,"title":{},"body":{"classes/EditSelfDto.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{}}}],["isoptional()@isenum(daysoftheweek",{"_index":732,"title":{},"body":{"classes/CreateGroupDto.html":{},"classes/EditGroupDto.html":{},"classes/GetGroupDto.html":{}}}],["isoptional()@isenum(job",{"_index":1058,"title":{},"body":{"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{}}}],["isoptional()@isenum(province",{"_index":1039,"title":{},"body":{"classes/EditSchoolDto.html":{}}}],["isoptional()@isenum(status",{"_index":1041,"title":{},"body":{"classes/EditSchoolDto.html":{}}}],["isoptional()@isenum(type",{"_index":1046,"title":{},"body":{"classes/EditSchoolDto.html":{}}}],["isoptional()@notcontains('mgtmt",{"_index":1064,"title":{},"body":{"classes/EditUserForMGTMTDto.html":{}}}],["isoptional()@notcontains('mgtmt')@notcontains('rd",{"_index":1074,"title":{},"body":{"classes/EditUserForRdDto.html":{}}}],["isphonenumber",{"_index":681,"title":{},"body":{"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSelfDto.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"classes/GetFiszkaDto.html":{},"classes/ValidationdDto.html":{}}}],["isphonenumber(\"pl",{"_index":684,"title":{},"body":{"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSelfDto.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"classes/ValidationdDto.html":{}}}],["isphonenumber('pl",{"_index":719,"title":{},"body":{"classes/CreateFiszkaDto.html":{},"classes/EditFiszkaDto.html":{},"classes/GetFiszkaDto.html":{}}}],["isphonenumber('pl')@isnotempty",{"_index":705,"title":{},"body":{"classes/CreateFiszkaDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/GetFiszkaDto.html":{}}}],["isphonenumber('pl')@isoptional",{"_index":677,"title":{},"body":{"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSelfDto.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"classes/ValidationdDto.html":{}}}],["ispostalcode",{"_index":822,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/EditSchoolDto.html":{}}}],["ispostalcode(\"pl",{"_index":832,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/EditSchoolDto.html":{}}}],["ispostalcode('pl')@isnotempty",{"_index":806,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["ispostalcode('pl')@isoptional",{"_index":1037,"title":{},"body":{"classes/EditSchoolDto.html":{}}}],["ispublic",{"_index":298,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["isstring",{"_index":664,"title":{},"body":{"classes/CreateCallUserDto.html":{},"classes/CreateSchoolDto.html":{},"classes/EditSchoolDto.html":{}}}],["isstring()@isnotempty",{"_index":814,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["isstring()@isoptional",{"_index":1043,"title":{},"body":{"classes/EditSchoolDto.html":{}}}],["isuseridinarray",{"_index":1581,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["it's",{"_index":1584,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["item._count.fiszki",{"_index":2302,"title":{},"body":{"injectables/UserService.html":{}}}],["item.date",{"_index":2300,"title":{},"body":{"injectables/UserService.html":{}}}],["item.day",{"_index":2005,"title":{},"body":{"injectables/ScheduleDaysService.html":{}}}],["item.numberlesson",{"_index":2006,"title":{},"body":{"injectables/ScheduleDaysService.html":{}}}],["jak",{"_index":1941,"title":{},"body":{"controllers/ScheduleController.html":{}}}],["jej",{"_index":2076,"title":{},"body":{"controllers/SchoolController.html":{}}}],["jest",{"_index":1747,"title":{},"body":{"controllers/PredicteController.html":{},"classes/PrismaValidationFilter.html":{}}}],["jeszcze",{"_index":1938,"title":{},"body":{"controllers/ScheduleController.html":{}}}],["jeśli",{"_index":1758,"title":{},"body":{"controllers/PredicteController.html":{}}}],["job",{"_index":838,"title":{},"body":{"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/EditSelfDto.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"classes/GetUserDto.html":{},"injectables/UserService.html":{}}}],["join",{"_index":2453,"title":{},"body":{"index.html":{}}}],["json",{"_index":1444,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{}}}],["json.parse(decoded",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{}}}],["jsonwebtoken",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{}}}],["ju",{"_index":1840,"title":{},"body":{"classes/PrismaValidationFilter.html":{}}}],["jwt",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwt.tokenexpirederror",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtconstants",{"_index":2335,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.secret",{"_index":336,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule",{"_index":330,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":333,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtsecretkey",{"_index":296,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtservice",{"_index":282,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/LoggerMiddleware.html":{}}}],["kamil",{"_index":2459,"title":{},"body":{"index.html":{}}}],["kandydatów",{"_index":469,"title":{},"body":{"controllers/CallUserHistoryController.html":{}}}],["key).join",{"_index":1834,"title":{},"body":{"classes/PrismaValidationFilter.html":{}}}],["key.replace(/`/g",{"_index":1830,"title":{},"body":{"classes/PrismaValidationFilter.html":{}}}],["kiedy",{"_index":1729,"title":{},"body":{"controllers/PredicteController.html":{}}}],["klasami",{"_index":1751,"title":{},"body":{"controllers/PredicteController.html":{}}}],["klasy",{"_index":1733,"title":{},"body":{"controllers/PredicteController.html":{}}}],["kod",{"_index":1823,"title":{},"body":{"classes/PrismaValidationFilter.html":{}}}],["konkretna",{"_index":2073,"title":{},"body":{"controllers/SchoolController.html":{}}}],["konkretnych",{"_index":1722,"title":{},"body":{"controllers/PredicteController.html":{}}}],["koszty",{"_index":1875,"title":{},"body":{"controllers/RentalCostController.html":{}}}],["kosztów",{"_index":1878,"title":{},"body":{"controllers/RentalCostController.html":{}}}],["kończ",{"_index":1734,"title":{},"body":{"controllers/PredicteController.html":{}}}],["które",{"_index":1773,"title":{},"body":{"controllers/PredicteController.html":{}}}],["legend",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CallUserHistoryModule.html":{},"modules/ContactModule.html":{},"modules/ContactPersonModule.html":{},"modules/DirectorModule.html":{},"modules/FiszkaModule.html":{},"modules/GroupModule.html":{},"modules/InterviewsModule.html":{},"modules/LoggerModule.html":{},"modules/PredicteModule.html":{},"modules/RentalCostModule.html":{},"modules/ScheduleDaysModule.html":{},"modules/ScheduleModule.html":{},"modules/SchoolModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["length",{"_index":823,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/EditSchoolDto.html":{}}}],["length(1",{"_index":816,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/EditSchoolDto.html":{}}}],["length(1,5",{"_index":829,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/EditSchoolDto.html":{}}}],["license",{"_index":2465,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":2443,"title":{},"body":{"index.html":{}}}],["lista",{"_index":1197,"title":{},"body":{"controllers/FiszkaController.html":{},"controllers/PredicteController.html":{},"controllers/SchoolController.html":{}}}],["literal",{"_index":1306,"title":{},"body":{"classes/GetInterViewsDto.html":{}}}],["log",{"_index":1617,"title":{},"body":{"controllers/LoggerController.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{}}}],["logger.controller",{"_index":1652,"title":{},"body":{"modules/LoggerModule.html":{}}}],["logger.service",{"_index":1622,"title":{},"body":{"controllers/LoggerController.html":{},"modules/LoggerModule.html":{}}}],["loggercontroller",{"_index":1615,"title":{"controllers/LoggerController.html":{}},"body":{"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"coverage.html":{}}}],["loggermiddleware",{"_index":170,"title":{"injectables/LoggerMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["loggermodule",{"_index":142,"title":{"modules/LoggerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LoggerModule.html":{},"modules.html":{},"overview.html":{}}}],["loggerservice",{"_index":1621,"title":{"injectables/LoggerService.html":{}},"body":{"controllers/LoggerController.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"coverage.html":{},"overview.html":{}}}],["loginuserdto",{"_index":218,"title":{"classes/LoginUserDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/LoginUserDto.html":{},"coverage.html":{}}}],["logout",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["lte",{"_index":2296,"title":{},"body":{"injectables/UserService.html":{}}}],["lub",{"_index":1848,"title":{},"body":{"classes/PrismaValidationFilter.html":{},"controllers/SchoolController.html":{}}}],["ma",{"_index":1942,"title":{},"body":{"controllers/ScheduleController.html":{}}}],["mappedarray",{"_index":2298,"title":{},"body":{"injectables/UserService.html":{}}}],["match",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{},"classes/ChangePasswordDto.html":{},"classes/MatchConstraint.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["match('newpassword",{"_index":524,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["match(property",{"_index":1676,"title":{},"body":{"classes/MatchConstraint.html":{},"miscellaneous/functions.html":{}}}],["matchconstraint",{"_index":1661,"title":{"classes/MatchConstraint.html":{}},"body":{"classes/MatchConstraint.html":{},"coverage.html":{}}}],["matching",{"_index":21,"title":{},"body":{"classes/AccessTokenDto.html":{},"classes/AddUserInterViewDto.html":{},"classes/AddgroupDto.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallUserHistoryController.html":{},"modules/CallUserHistoryModule.html":{},"injectables/CallUserHistoryService.html":{},"classes/ChangePasswordDto.html":{},"controllers/ContactController.html":{},"modules/ContactModule.html":{},"controllers/ContactPersonController.html":{},"modules/ContactPersonModule.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"classes/CreateCallUserDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateInterViewDto.html":{},"classes/CreateRentalCostDto.html":{},"classes/CreateScheduleDaysDto.html":{},"classes/CreateScheduleDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/DecodeDto.html":{},"controllers/DirectorController.html":{},"modules/DirectorModule.html":{},"injectables/DirectorService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/DtoValidatorPipe.html":{},"injectables/DtoValidatorSelfPipe.html":{},"classes/EditContactDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditGroupDto.html":{},"classes/EditInterViewDto.html":{},"classes/EditRentalCostDto.html":{},"classes/EditScheduleDaysDto.html":{},"classes/EditScheduleDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSelfDto.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"controllers/FiszkaController.html":{},"modules/FiszkaModule.html":{},"injectables/FiszkaService.html":{},"classes/GetCallUserHistoryDto.html":{},"classes/GetContactDto.html":{},"classes/GetContactPersontDto.html":{},"classes/GetDirectorDto.html":{},"classes/GetFindByIdDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetGroupDto.html":{},"classes/GetInterViewsDto.html":{},"classes/GetRentalCostDto.html":{},"classes/GetScheduleDto.html":{},"classes/GetSchoolDto.html":{},"classes/GetUserDto.html":{},"classes/GetUserInterViewDto.html":{},"classes/GraphDateDto.html":{},"controllers/GroupController.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/InterviewsController.html":{},"modules/InterviewsModule.html":{},"injectables/InterviewsService.html":{},"controllers/LoggerController.html":{},"injectables/LoggerMiddleware.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/LoginUserDto.html":{},"classes/MatchConstraint.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"injectables/OptionsPipe.html":{},"controllers/PredicteController.html":{},"modules/PredicteModule.html":{},"injectables/PredicteService.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{},"classes/RemoveUserInterViewDto.html":{},"controllers/RentalCostController.html":{},"modules/RentalCostModule.html":{},"injectables/RentalCostService.html":{},"interfaces/ReqUserInfo.html":{},"guards/RolesGuard.html":{},"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"modules/ScheduleDaysModule.html":{},"injectables/ScheduleDaysService.html":{},"modules/ScheduleModule.html":{},"injectables/ScheduleService.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"classes/SendFiszkiDto.html":{},"injectables/UpperCasePipe.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidationdDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"classes/getGraphDateDto.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["matcholdpass",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{}}}],["matcholdpass.password",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{}}}],["max",{"_index":709,"title":{},"body":{"classes/CreateFiszkaDto.html":{},"classes/CreateInterViewDto.html":{},"classes/CreateScheduleDto.html":{},"classes/CreateSchoolDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditInterViewDto.html":{},"classes/EditScheduleDto.html":{},"classes/EditSchoolDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetInterViewsDto.html":{},"controllers/PredicteController.html":{}}}],["max(50",{"_index":833,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/EditSchoolDto.html":{}}}],["max(8",{"_index":716,"title":{},"body":{"classes/CreateFiszkaDto.html":{},"classes/CreateInterViewDto.html":{},"classes/CreateScheduleDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditInterViewDto.html":{},"classes/EditScheduleDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetInterViewsDto.html":{}}}],["max(8)@min(0)@isnumber()@isoptional",{"_index":779,"title":{},"body":{"classes/CreateScheduleDto.html":{},"classes/EditScheduleDto.html":{}}}],["message",{"_index":515,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["metadata",{"_index":937,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/DtoValidatorPipe.html":{},"injectables/DtoValidatorSelfPipe.html":{},"injectables/OptionsPipe.html":{},"injectables/UpperCasePipe.html":{},"dependencies.html":{}}}],["method",{"_index":103,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/LoggerMiddleware.html":{},"classes/NotFoundExceptionFilter.html":{}}}],["methods",{"_index":36,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CallUserHistoryController.html":{},"injectables/CallUserHistoryService.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"controllers/DirectorController.html":{},"injectables/DirectorService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/DtoValidatorPipe.html":{},"injectables/DtoValidatorSelfPipe.html":{},"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{},"controllers/LoggerController.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"classes/MatchConstraint.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"injectables/OptionsPipe.html":{},"controllers/PredicteController.html":{},"injectables/PredicteService.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{},"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{},"guards/RolesGuard.html":{},"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"injectables/ScheduleDaysService.html":{},"injectables/ScheduleService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"injectables/UpperCasePipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["mgtm",{"_index":1405,"title":{},"body":{"controllers/GroupController.html":{}}}],["mgtmt",{"_index":1877,"title":{},"body":{"controllers/RentalCostController.html":{},"controllers/ScheduleController.html":{},"controllers/SchoolController.html":{},"miscellaneous/enumerations.html":{}}}],["middlewareconsumer",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["min",{"_index":710,"title":{},"body":{"classes/CreateFiszkaDto.html":{},"classes/CreateInterViewDto.html":{},"classes/CreateScheduleDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditInterViewDto.html":{},"classes/EditScheduleDto.html":{},"classes/EditSchoolDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetInterViewsDto.html":{},"classes/GetUserDto.html":{}}}],["min(0",{"_index":715,"title":{},"body":{"classes/CreateFiszkaDto.html":{},"classes/CreateInterViewDto.html":{},"classes/CreateScheduleDto.html":{},"classes/CreateSchoolDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditInterViewDto.html":{},"classes/EditScheduleDto.html":{},"classes/EditSchoolDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetInterViewsDto.html":{},"classes/GetUserDto.html":{}}}],["min(0)@isnotempty",{"_index":755,"title":{},"body":{"classes/CreateInterViewDto.html":{},"classes/GetUserDto.html":{}}}],["min(0)@isoptional",{"_index":1011,"title":{},"body":{"classes/EditInterViewDto.html":{},"classes/GetInterViewsDto.html":{}}}],["min(0)@max(50)@isnumber()@isoptional",{"_index":803,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/EditSchoolDto.html":{}}}],["min(0)@max(8)@isnotempty",{"_index":751,"title":{},"body":{"classes/CreateInterViewDto.html":{}}}],["minlength",{"_index":521,"title":{},"body":{"classes/ChangePasswordDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/EditSchoolDto.html":{}}}],["minlength(1",{"_index":834,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/EditSchoolDto.html":{}}}],["minlength(1)@isascii()@isoptional",{"_index":797,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/EditSchoolDto.html":{}}}],["minlength(3",{"_index":852,"title":{},"body":{"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{}}}],["minlength(6",{"_index":523,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["minlength(6)@isnotempty",{"_index":511,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["minlength(6)@isnotempty()@match('newpassword",{"_index":514,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["minnimum",{"_index":1723,"title":{},"body":{"controllers/PredicteController.html":{}}}],["miscellaneous",{"_index":2384,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":2442,"title":{},"body":{"index.html":{}}}],["między",{"_index":1750,"title":{},"body":{"controllers/PredicteController.html":{}}}],["mngmt",{"_index":907,"title":{},"body":{"controllers/DirectorController.html":{}}}],["mode",{"_index":2433,"title":{},"body":{"index.html":{}}}],["models/calluserhistory/calluserhistory.module",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["models/contact/contact.module",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["models/director/director.module",{"_index":160,"title":{},"body":{"modules/AppModule.html":{}}}],["models/fiszka/fiszka.module",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["models/group/group.module",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["models/interviews/interviews.module",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["models/log/logger.module",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["models/personcontact/contactperson.module",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["models/rentalcost/rentalcost.module",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["models/schedule/schedule.module",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["models/scheduledays/scheduledays.module",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["models/school/school.module",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["models/user/user.module",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["module",{"_index":123,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CallUserHistoryModule.html":{},"modules/ContactModule.html":{},"modules/ContactPersonModule.html":{},"modules/DirectorModule.html":{},"modules/FiszkaModule.html":{},"modules/GroupModule.html":{},"modules/InterviewsModule.html":{},"modules/LoggerModule.html":{},"modules/PredicteModule.html":{},"modules/RentalCostModule.html":{},"modules/ScheduleDaysModule.html":{},"modules/ScheduleModule.html":{},"modules/SchoolModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CallUserHistoryModule.html":{},"modules/ContactModule.html":{},"modules/ContactPersonModule.html":{},"modules/DirectorModule.html":{},"modules/FiszkaModule.html":{},"modules/GroupModule.html":{},"modules/InterviewsModule.html":{},"modules/LoggerModule.html":{},"modules/PredicteModule.html":{},"modules/RentalCostModule.html":{},"modules/ScheduleDaysModule.html":{},"modules/ScheduleModule.html":{},"modules/SchoolModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":125,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CallUserHistoryModule.html":{},"modules/ContactModule.html":{},"modules/ContactPersonModule.html":{},"modules/DirectorModule.html":{},"modules/FiszkaModule.html":{},"modules/GroupModule.html":{},"modules/InterviewsModule.html":{},"modules/LoggerModule.html":{},"modules/PredicteModule.html":{},"modules/RentalCostModule.html":{},"modules/ScheduleDaysModule.html":{},"modules/ScheduleModule.html":{},"modules/SchoolModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["modyfikacja",{"_index":1962,"title":{},"body":{"controllers/ScheduleController.html":{}}}],["mog",{"_index":1740,"title":{},"body":{"controllers/PredicteController.html":{}}}],["monday",{"_index":1790,"title":{},"body":{"injectables/PredicteService.html":{}}}],["more",{"_index":1599,"title":{},"body":{"injectables/InterviewsService.html":{},"injectables/ScheduleDaysService.html":{},"index.html":{}}}],["może",{"_index":464,"title":{},"body":{"controllers/CallUserHistoryController.html":{},"controllers/PredicteController.html":{}}}],["msg",{"_index":102,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/NotFoundExceptionFilter.html":{}}}],["musi",{"_index":1691,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["myśliwiec",{"_index":2460,"title":{},"body":{"index.html":{}}}],["na",{"_index":1731,"title":{},"body":{"controllers/PredicteController.html":{},"controllers/UserController.html":{}}}],["najmu",{"_index":1876,"title":{},"body":{"controllers/RentalCostController.html":{}}}],["name",{"_index":43,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CallUserHistoryController.html":{},"injectables/CallUserHistoryService.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"controllers/DirectorController.html":{},"injectables/DirectorService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/DtoValidatorPipe.html":{},"injectables/DtoValidatorSelfPipe.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSelfDto.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{},"classes/GetContactPersontDto.html":{},"classes/GetDirectorDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetInterViewsDto.html":{},"classes/GetSchoolDto.html":{},"classes/GetUserDto.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"classes/MatchConstraint.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"injectables/OptionsPipe.html":{},"controllers/PredicteController.html":{},"injectables/PredicteService.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{},"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{},"guards/RolesGuard.html":{},"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"injectables/ScheduleDaysService.html":{},"injectables/ScheduleService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"injectables/UpperCasePipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["name,phone':\"imie",{"_index":1825,"title":{},"body":{"classes/PrismaValidationFilter.html":{}}}],["name:\"imie",{"_index":1824,"title":{},"body":{"classes/PrismaValidationFilter.html":{}}}],["name:exception.name",{"_index":1706,"title":{},"body":{"classes/NotFoundExceptionFilter.html":{}}}],["name:string",{"_index":712,"title":{},"body":{"classes/CreateFiszkaDto.html":{}}}],["nameerror",{"_index":84,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["narazie",{"_index":1939,"title":{},"body":{"controllers/ScheduleController.html":{}}}],["nazwa",{"_index":1187,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["nest",{"_index":2421,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":2464,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":55,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallUserHistoryController.html":{},"modules/CallUserHistoryModule.html":{},"injectables/CallUserHistoryService.html":{},"controllers/ContactController.html":{},"modules/ContactModule.html":{},"controllers/ContactPersonController.html":{},"modules/ContactPersonModule.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"controllers/DirectorController.html":{},"modules/DirectorModule.html":{},"injectables/DirectorService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/DtoValidatorPipe.html":{},"injectables/DtoValidatorSelfPipe.html":{},"controllers/FiszkaController.html":{},"modules/FiszkaModule.html":{},"injectables/FiszkaService.html":{},"controllers/GroupController.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/InterviewsController.html":{},"modules/InterviewsModule.html":{},"injectables/InterviewsService.html":{},"controllers/LoggerController.html":{},"injectables/LoggerMiddleware.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"injectables/OptionsPipe.html":{},"controllers/PredicteController.html":{},"modules/PredicteModule.html":{},"injectables/PredicteService.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{},"controllers/RentalCostController.html":{},"modules/RentalCostModule.html":{},"injectables/RentalCostService.html":{},"interfaces/ReqUserInfo.html":{},"guards/RolesGuard.html":{},"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"modules/ScheduleDaysModule.html":{},"injectables/ScheduleDaysService.html":{},"modules/ScheduleModule.html":{},"injectables/ScheduleService.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"injectables/UpperCasePipe.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":2364,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core",{"_index":56,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"guards/RolesGuard.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestjs/core/router",{"_index":947,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/DtoValidatorPipe.html":{},"injectables/DtoValidatorSelfPipe.html":{},"injectables/UpperCasePipe.html":{}}}],["nestjs/jwt",{"_index":293,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LoggerMiddleware.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":2367,"title":{},"body":{"dependencies.html":{}}}],["nestjs/schedule",{"_index":2368,"title":{},"body":{"dependencies.html":{}}}],["nestmiddleware",{"_index":1634,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["nestmodule",{"_index":166,"title":{},"body":{"modules/AppModule.html":{}}}],["new",{"_index":91,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/FiszkaService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/InterviewsService.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{},"injectables/ScheduleDaysService.html":{},"injectables/ScheduleService.html":{},"coverage.html":{}}}],["newpassword",{"_index":508,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["next",{"_index":1631,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["nextfunction",{"_index":1632,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["nie",{"_index":517,"title":{},"body":{"classes/ChangePasswordDto.html":{},"injectables/InterviewsService.html":{},"classes/PrismaValidationFilter.html":{},"controllers/ScheduleController.html":{}}}],["node.js",{"_index":2412,"title":{},"body":{"index.html":{}}}],["notcontains",{"_index":850,"title":{},"body":{"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/EditSelfDto.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{}}}],["notcontains(\"mgtmt",{"_index":854,"title":{},"body":{"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/EditSelfDto.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{}}}],["notcontains(\"rd",{"_index":855,"title":{},"body":{"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/EditSelfDto.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{}}}],["notfounderror",{"_index":57,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/NotFoundErrorFilter.html":{}}}],["notfounderrorfilter",{"_index":59,"title":{"classes/NotFoundErrorFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"classes/NotFoundErrorFilter.html":{},"coverage.html":{}}}],["notfounderrorfilter().catch(exception",{"_index":94,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["notfounderrorfilter.filter",{"_index":60,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["notfoundexception",{"_index":54,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/NotFoundExceptionFilter.html":{}}}],["notfoundexception.filter",{"_index":62,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["notfoundexceptionfilter",{"_index":61,"title":{"classes/NotFoundExceptionFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"coverage.html":{}}}],["notfoundexceptionfilter().catch(exception",{"_index":95,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["nowego",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{}}}],["nowej",{"_index":2078,"title":{},"body":{"controllers/SchoolController.html":{}}}],["np.1",{"_index":1742,"title":{},"body":{"controllers/PredicteController.html":{}}}],["npm",{"_index":2426,"title":{},"body":{"index.html":{}}}],["null",{"_index":1791,"title":{},"body":{"injectables/PredicteService.html":{},"controllers/UserController.html":{}}}],["number",{"_index":695,"title":{},"body":{"classes/CreateFiszkaDto.html":{},"classes/CreateInterViewDto.html":{},"classes/CreateScheduleDaysDto.html":{},"classes/CreateScheduleDto.html":{},"classes/CreateSchoolDto.html":{},"classes/DecodeDto.html":{},"injectables/DtoValidationPipe.html":{},"injectables/DtoValidatorPipe.html":{},"injectables/DtoValidatorSelfPipe.html":{},"classes/EditFiszkaDto.html":{},"classes/EditInterViewDto.html":{},"classes/EditScheduleDaysDto.html":{},"classes/EditScheduleDto.html":{},"classes/EditSchoolDto.html":{},"controllers/FiszkaController.html":{},"classes/GetFiszkaDto.html":{},"classes/GetInterViewsDto.html":{},"classes/GetSchoolDto.html":{},"classes/GetUserDto.html":{},"classes/GetUserInterViewDto.html":{},"controllers/InterviewsController.html":{},"injectables/OptionsPipe.html":{},"classes/getGraphDateDto.html":{}}}],["numberlesson",{"_index":772,"title":{},"body":{"classes/CreateScheduleDaysDto.html":{},"classes/EditScheduleDaysDto.html":{},"injectables/ScheduleDaysService.html":{}}}],["numberlesson:true",{"_index":1997,"title":{},"body":{"injectables/ScheduleDaysService.html":{}}}],["numberofclasses",{"_index":790,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/EditSchoolDto.html":{},"classes/GetSchoolDto.html":{},"injectables/SchoolService.html":{}}}],["o",{"_index":1735,"title":{},"body":{"controllers/PredicteController.html":{}}}],["obj",{"_index":2397,"title":{},"body":{"miscellaneous/functions.html":{}}}],["object",{"_index":316,"title":{},"body":{"guards/AuthGuard.html":{},"classes/HttpExceptionFilter.html":{},"classes/MatchConstraint.html":{},"miscellaneous/variables.html":{}}}],["object.constructor",{"_index":1679,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["object.keys(rolevalue",{"_index":2484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["odpowiedniego",{"_index":1845,"title":{},"body":{"classes/PrismaValidationFilter.html":{}}}],["oldpassword",{"_index":509,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["oldtoken",{"_index":216,"title":{},"body":{"controllers/AuthController.html":{}}}],["open",{"_index":2444,"title":{},"body":{"index.html":{}}}],["optional",{"_index":44,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CallUserHistoryController.html":{},"injectables/CallUserHistoryService.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"controllers/DirectorController.html":{},"injectables/DirectorService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/DtoValidatorPipe.html":{},"injectables/DtoValidatorSelfPipe.html":{},"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"classes/MatchConstraint.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"injectables/OptionsPipe.html":{},"controllers/PredicteController.html":{},"injectables/PredicteService.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{},"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{},"guards/RolesGuard.html":{},"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"injectables/ScheduleDaysService.html":{},"injectables/ScheduleService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"injectables/UpperCasePipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":1682,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["options.pipe",{"_index":1138,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["optionspipe",{"_index":1137,"title":{"injectables/OptionsPipe.html":{}},"body":{"controllers/FiszkaController.html":{},"controllers/InterviewsController.html":{},"injectables/OptionsPipe.html":{},"coverage.html":{}}}],["originurl",{"_index":1640,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["otrzymujemy",{"_index":1775,"title":{},"body":{"controllers/PredicteController.html":{}}}],["out",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CallUserHistoryModule.html":{},"modules/ContactModule.html":{},"modules/ContactPersonModule.html":{},"modules/DirectorModule.html":{},"modules/FiszkaModule.html":{},"modules/GroupModule.html":{},"modules/InterviewsModule.html":{},"modules/LoggerModule.html":{},"modules/PredicteModule.html":{},"modules/RentalCostModule.html":{},"modules/ScheduleDaysModule.html":{},"modules/ScheduleModule.html":{},"modules/SchoolModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":2469,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p2002",{"_index":1836,"title":{},"body":{"classes/PrismaValidationFilter.html":{}}}],["p2025",{"_index":1843,"title":{},"body":{"classes/PrismaValidationFilter.html":{}}}],["package",{"_index":2362,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":453,"title":{},"body":{"controllers/CallUserHistoryController.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/FiszkaController.html":{},"controllers/GroupController.html":{},"controllers/InterviewsController.html":{},"controllers/PredicteController.html":{},"controllers/RentalCostController.html":{},"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"controllers/SchoolController.html":{},"controllers/UserController.html":{}}}],["param('idcontact",{"_index":565,"title":{},"body":{"controllers/ContactController.html":{}}}],["param('idgroup",{"_index":1393,"title":{},"body":{"controllers/GroupController.html":{}}}],["param('idinterview",{"_index":1163,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["param('idschedule",{"_index":1949,"title":{},"body":{"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{}}}],["param('idschool",{"_index":1388,"title":{},"body":{"controllers/GroupController.html":{},"controllers/InterviewsController.html":{},"controllers/PredicteController.html":{},"controllers/ScheduleController.html":{},"controllers/UserController.html":{}}}],["param('iduser",{"_index":2210,"title":{},"body":{"controllers/UserController.html":{}}}],["param('schoolid",{"_index":600,"title":{},"body":{"controllers/ContactPersonController.html":{}}}],["parameters",{"_index":42,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CallUserHistoryController.html":{},"injectables/CallUserHistoryService.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"controllers/DirectorController.html":{},"injectables/DirectorService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/DtoValidatorPipe.html":{},"injectables/DtoValidatorSelfPipe.html":{},"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"classes/MatchConstraint.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"injectables/OptionsPipe.html":{},"controllers/PredicteController.html":{},"injectables/PredicteService.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{},"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{},"guards/RolesGuard.html":{},"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"injectables/ScheduleDaysService.html":{},"injectables/ScheduleService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"injectables/UpperCasePipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["pasowa",{"_index":1692,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["pass",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/functions.html":{}}}],["password",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{},"classes/EditSelfDto.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"classes/LoginUserDto.html":{},"injectables/UserService.html":{}}}],["patch",{"_index":545,"title":{},"body":{"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"injectables/DtoValidationPipe.html":{},"injectables/DtoValidatorPipe.html":{},"controllers/FiszkaController.html":{},"controllers/GroupController.html":{},"controllers/InterviewsController.html":{},"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{},"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"controllers/SchoolController.html":{},"controllers/UserController.html":{}}}],["patch('addgroup/:idgroup",{"_index":1175,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["patch('adduser/:idinterview",{"_index":1521,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["patch('edit/:id",{"_index":2064,"title":{},"body":{"controllers/SchoolController.html":{}}}],["patch('edit/:idinterview",{"_index":1518,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["patch('edit/:idschedule",{"_index":1951,"title":{},"body":{"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{}}}],["patch('edit/:idschool",{"_index":901,"title":{},"body":{"controllers/DirectorController.html":{},"controllers/RentalCostController.html":{}}}],["patch('edit/:idschool/:idcontact",{"_index":563,"title":{},"body":{"controllers/ContactController.html":{}}}],["patch('edit/:idschool/:idgroup",{"_index":1398,"title":{},"body":{"controllers/GroupController.html":{}}}],["patch('edit/:schoolid/:idcontactperson",{"_index":598,"title":{},"body":{"controllers/ContactPersonController.html":{}}}],["patch('editfiszka/:idfiszka",{"_index":1157,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["patch('editfiszka/:idfiszka/:idinterview",{"_index":1161,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["patch('edituser/:id",{"_index":2201,"title":{},"body":{"controllers/UserController.html":{}}}],["patch('removeuser/:idinterview",{"_index":1524,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["patch('self",{"_index":2206,"title":{},"body":{"controllers/UserController.html":{}}}],["patch(@param('idschool",{"_index":1873,"title":{},"body":{"controllers/RentalCostController.html":{}}}],["patch(idschool",{"_index":1861,"title":{},"body":{"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{}}}],["path",{"_index":116,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{}}}],["payload",{"_index":310,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["payload\",payload",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{}}}],["per",{"_index":1199,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["phone",{"_index":623,"title":{},"body":{"injectables/ContactPersonService.html":{},"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"injectables/DirectorService.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSelfDto.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"injectables/FiszkaService.html":{},"classes/GetContactPersontDto.html":{},"classes/GetDirectorDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetSchoolDto.html":{},"injectables/InterviewsService.html":{},"classes/PrismaValidationFilter.html":{},"injectables/SchoolService.html":{},"injectables/UserService.html":{},"classes/ValidationdDto.html":{}}}],["phone:string",{"_index":720,"title":{},"body":{"classes/CreateFiszkaDto.html":{}}}],["phonecalls",{"_index":1231,"title":{},"body":{"injectables/FiszkaService.html":{},"classes/GetFiszkaDto.html":{},"classes/GetGroupDto.html":{}}}],["phonecalls:true",{"_index":1427,"title":{},"body":{"injectables/GroupService.html":{}}}],["pierwszego",{"_index":1771,"title":{},"body":{"controllers/PredicteController.html":{}}}],["pipetransform",{"_index":940,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/DtoValidatorPipe.html":{},"injectables/DtoValidatorSelfPipe.html":{},"injectables/OptionsPipe.html":{},"injectables/UpperCasePipe.html":{}}}],["pl",{"_index":683,"title":{},"body":{"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSelfDto.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetUserDto.html":{}}}],["pl')@isnotempty",{"_index":675,"title":{},"body":{"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetUserDto.html":{}}}],["pl')@isoptional",{"_index":698,"title":{},"body":{"classes/CreateFiszkaDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"classes/GetFiszkaDto.html":{}}}],["placówek",{"_index":2070,"title":{},"body":{"controllers/SchoolController.html":{}}}],["placówka",{"_index":2074,"title":{},"body":{"controllers/SchoolController.html":{}}}],["placówki",{"_index":905,"title":{},"body":{"controllers/DirectorController.html":{},"controllers/SchoolController.html":{}}}],["planu",{"_index":1963,"title":{},"body":{"controllers/ScheduleController.html":{}}}],["plany",{"_index":1754,"title":{},"body":{"controllers/PredicteController.html":{}}}],["planów",{"_index":1960,"title":{},"body":{"controllers/ScheduleController.html":{}}}],["please",{"_index":2454,"title":{},"body":{"index.html":{}}}],["po",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{},"controllers/DirectorController.html":{},"controllers/SchoolController.html":{}}}],["podane/y",{"_index":1839,"title":{},"body":{"classes/PrismaValidationFilter.html":{}}}],["podaniu",{"_index":2075,"title":{},"body":{"controllers/SchoolController.html":{}}}],["podstawie",{"_index":1732,"title":{},"body":{"controllers/PredicteController.html":{}}}],["podzia",{"_index":1776,"title":{},"body":{"controllers/PredicteController.html":{},"controllers/UserController.html":{}}}],["pokaza",{"_index":1727,"title":{},"body":{"controllers/PredicteController.html":{}}}],["pola",{"_index":1693,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["pole",{"_index":1689,"title":{},"body":{"classes/MatchConstraint.html":{},"classes/PrismaValidationFilter.html":{}}}],["post",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CallUserHistoryController.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"injectables/DtoValidationPipe.html":{},"injectables/DtoValidatorPipe.html":{},"controllers/FiszkaController.html":{},"controllers/GroupController.html":{},"controllers/InterviewsController.html":{},"controllers/RentalCostController.html":{},"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"controllers/SchoolController.html":{},"controllers/UserController.html":{}}}],["post('addcalluser/:idfiszka",{"_index":476,"title":{},"body":{"controllers/CallUserHistoryController.html":{}}}],["post('addfiszki/:idinterview",{"_index":1165,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["post('changepassword",{"_index":261,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('create",{"_index":1527,"title":{},"body":{"controllers/InterviewsController.html":{},"controllers/SchoolController.html":{}}}],["post('create/:idschedule",{"_index":1979,"title":{},"body":{"controllers/ScheduleDaysController.html":{}}}],["post('create/:idschool",{"_index":560,"title":{},"body":{"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/GroupController.html":{},"controllers/RentalCostController.html":{},"controllers/ScheduleController.html":{}}}],["post('findall/:idschedule",{"_index":1977,"title":{},"body":{"controllers/ScheduleDaysController.html":{}}}],["post('login",{"_index":253,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('refreshtoken",{"_index":266,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('validation",{"_index":2184,"title":{},"body":{"controllers/UserController.html":{}}}],["postcode",{"_index":791,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/EditSchoolDto.html":{},"classes/GetSchoolDto.html":{},"injectables/SchoolService.html":{}}}],["potrzebne",{"_index":1769,"title":{},"body":{"controllers/PredicteController.html":{}}}],["pr",{"_index":1194,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["pracownika",{"_index":1196,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["pre",{"_index":2237,"title":{},"body":{"controllers/UserController.html":{}}}],["predicte",{"_index":1711,"title":{},"body":{"controllers/PredicteController.html":{},"injectables/PredicteService.html":{}}}],["predicte(@req",{"_index":1766,"title":{},"body":{"controllers/PredicteController.html":{}}}],["predicte(region",{"_index":1784,"title":{},"body":{"injectables/PredicteService.html":{}}}],["predicte(req",{"_index":1712,"title":{},"body":{"controllers/PredicteController.html":{}}}],["predicte.controller",{"_index":1781,"title":{},"body":{"modules/PredicteModule.html":{}}}],["predicte.service",{"_index":1717,"title":{},"body":{"controllers/PredicteController.html":{},"modules/PredicteModule.html":{}}}],["predictecontroller",{"_index":1709,"title":{"controllers/PredicteController.html":{}},"body":{"controllers/PredicteController.html":{},"modules/PredicteModule.html":{},"coverage.html":{}}}],["predictemodule",{"_index":1777,"title":{"modules/PredicteModule.html":{}},"body":{"modules/PredicteModule.html":{},"modules.html":{},"overview.html":{}}}],["predicteservice",{"_index":1716,"title":{"injectables/PredicteService.html":{}},"body":{"controllers/PredicteController.html":{},"modules/PredicteModule.html":{},"injectables/PredicteService.html":{},"coverage.html":{},"overview.html":{}}}],["predictesheduleschool",{"_index":2344,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["prefix",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CallUserHistoryController.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/FiszkaController.html":{},"controllers/GroupController.html":{},"controllers/InterviewsController.html":{},"controllers/LoggerController.html":{},"controllers/PredicteController.html":{},"controllers/RentalCostController.html":{},"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"controllers/SchoolController.html":{},"controllers/UserController.html":{}}}],["prisma",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CallUserHistoryService.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"injectables/DirectorService.html":{},"injectables/FiszkaService.html":{},"injectables/GroupService.html":{},"injectables/InterviewsService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"injectables/PredicteService.html":{},"classes/PrismaOtherFilter.html":{},"injectables/RentalCostService.html":{},"injectables/ScheduleDaysService.html":{},"injectables/ScheduleService.html":{},"injectables/SchoolService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["prisma.prismaclientknownrequesterror",{"_index":1811,"title":{},"body":{"classes/PrismaOtherFilter.html":{}}}],["prisma/client",{"_index":242,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CallUserHistoryController.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{},"classes/CreateGroupDto.html":{},"classes/CreateInterViewDto.html":{},"classes/CreateScheduleDaysDto.html":{},"classes/CreateScheduleDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/DecodeDto.html":{},"controllers/DirectorController.html":{},"injectables/DtoValidatorPipe.html":{},"classes/EditGroupDto.html":{},"classes/EditInterViewDto.html":{},"classes/EditScheduleDaysDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSelfDto.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"controllers/FiszkaController.html":{},"classes/GetFindByIdDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetGroupDto.html":{},"classes/GetScheduleDto.html":{},"classes/GetSchoolDto.html":{},"classes/GetUserDto.html":{},"controllers/GroupController.html":{},"controllers/InterviewsController.html":{},"controllers/PredicteController.html":{},"classes/PrismaOtherFilter.html":{},"controllers/RentalCostController.html":{},"interfaces/ReqUserInfo.html":{},"guards/RolesGuard.html":{},"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"controllers/SchoolController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["prisma/client/runtime/library",{"_index":69,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/CreateRentalCostDto.html":{},"classes/EditRentalCostDto.html":{},"classes/GetRentalCostDto.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{}}}],["prisma/prisma.module",{"_index":487,"title":{},"body":{"modules/CallUserHistoryModule.html":{},"modules/ContactModule.html":{},"modules/ContactPersonModule.html":{},"modules/DirectorModule.html":{},"modules/InterviewsModule.html":{},"modules/LoggerModule.html":{},"modules/PredicteModule.html":{},"modules/RentalCostModule.html":{},"modules/ScheduleDaysModule.html":{},"modules/ScheduleModule.html":{},"modules/SchoolModule.html":{}}}],["prisma/prisma.service",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CallUserHistoryService.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"injectables/DirectorService.html":{},"injectables/FiszkaService.html":{},"injectables/GroupService.html":{},"injectables/InterviewsService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"injectables/PredicteService.html":{},"injectables/RentalCostService.html":{},"injectables/ScheduleDaysService.html":{},"injectables/ScheduleService.html":{},"injectables/SchoolService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["prismaclientknownrequesterror",{"_index":67,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/PrismaValidationFilter.html":{}}}],["prismaclientunknownrequesterror",{"_index":68,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/PrismaOtherFilter.html":{}}}],["prismaclientvalidationerror",{"_index":97,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["prismaclientvalidationerror.filter",{"_index":64,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["prismaerror",{"_index":1838,"title":{},"body":{"classes/PrismaValidationFilter.html":{}}}],["prismamodule",{"_index":486,"title":{},"body":{"modules/CallUserHistoryModule.html":{},"modules/ContactModule.html":{},"modules/ContactPersonModule.html":{},"modules/DirectorModule.html":{},"modules/InterviewsModule.html":{},"modules/LoggerModule.html":{},"modules/PredicteModule.html":{},"modules/RentalCostModule.html":{},"modules/ScheduleDaysModule.html":{},"modules/ScheduleModule.html":{},"modules/SchoolModule.html":{}}}],["prismaothererror",{"_index":1814,"title":{},"body":{"classes/PrismaOtherFilter.html":{}}}],["prismaothererror.filter",{"_index":66,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["prismaotherfilter",{"_index":65,"title":{"classes/PrismaOtherFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"classes/PrismaOtherFilter.html":{},"coverage.html":{}}}],["prismaotherfilter().catch(exception",{"_index":98,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["prismaservice",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CallUserHistoryService.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"injectables/DirectorService.html":{},"injectables/FiszkaService.html":{},"injectables/GroupService.html":{},"injectables/InterviewsService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"injectables/PredicteService.html":{},"injectables/RentalCostService.html":{},"injectables/ScheduleDaysService.html":{},"injectables/ScheduleService.html":{},"injectables/SchoolService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["prismavalidationfilter",{"_index":63,"title":{"classes/PrismaValidationFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"classes/PrismaValidationFilter.html":{},"coverage.html":{}}}],["prismavalidationfilter().catch(exception",{"_index":96,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["private",{"_index":279,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/LoggerMiddleware.html":{}}}],["process.env.jwt_secret",{"_index":297,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["production",{"_index":2435,"title":{},"body":{"index.html":{}}}],["profil",{"_index":2232,"title":{},"body":{"controllers/UserController.html":{}}}],["profile",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{}}}],["profile(email",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{}}}],["progressive",{"_index":2411,"title":{},"body":{"index.html":{}}}],["project",{"_index":2445,"title":{},"body":{"index.html":{}}}],["promise",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CallUserHistoryController.html":{},"injectables/CallUserHistoryService.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"controllers/DirectorController.html":{},"injectables/DirectorService.html":{},"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{},"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["promise.all(updatepromises",{"_index":1606,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"classes/AccessTokenDto.html":{},"classes/AddUserInterViewDto.html":{},"classes/AddgroupDto.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateCallUserDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateInterViewDto.html":{},"classes/CreateRentalCostDto.html":{},"classes/CreateScheduleDaysDto.html":{},"classes/CreateScheduleDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/DecodeDto.html":{},"classes/EditContactDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditGroupDto.html":{},"classes/EditInterViewDto.html":{},"classes/EditRentalCostDto.html":{},"classes/EditScheduleDaysDto.html":{},"classes/EditScheduleDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSelfDto.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"classes/GetCallUserHistoryDto.html":{},"classes/GetContactDto.html":{},"classes/GetContactPersontDto.html":{},"classes/GetDirectorDto.html":{},"classes/GetFindByIdDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetGroupDto.html":{},"classes/GetInterViewsDto.html":{},"classes/GetRentalCostDto.html":{},"classes/GetScheduleDto.html":{},"classes/GetSchoolDto.html":{},"classes/GetUserDto.html":{},"classes/GetUserInterViewDto.html":{},"classes/GraphDateDto.html":{},"classes/LoginUserDto.html":{},"classes/RemoveUserInterViewDto.html":{},"interfaces/ReqUserInfo.html":{},"classes/SendFiszkiDto.html":{},"classes/ValidationdDto.html":{},"classes/getGraphDateDto.html":{},"properties.html":{}}}],["property",{"_index":1681,"title":{},"body":{"classes/MatchConstraint.html":{},"miscellaneous/functions.html":{}}}],["propertyname",{"_index":1677,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["protected",{"_index":952,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/DtoValidatorPipe.html":{},"injectables/DtoValidatorSelfPipe.html":{},"injectables/UpperCasePipe.html":{}}}],["provide",{"_index":340,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["providers",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CallUserHistoryModule.html":{},"modules/ContactModule.html":{},"modules/ContactPersonModule.html":{},"modules/DirectorModule.html":{},"modules/FiszkaModule.html":{},"modules/GroupModule.html":{},"modules/InterviewsModule.html":{},"modules/LoggerModule.html":{},"modules/PredicteModule.html":{},"modules/RentalCostModule.html":{},"modules/ScheduleDaysModule.html":{},"modules/ScheduleModule.html":{},"modules/SchoolModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["province",{"_index":792,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/EditSchoolDto.html":{},"classes/GetSchoolDto.html":{},"injectables/SchoolService.html":{}}}],["przedzia",{"_index":2221,"title":{},"body":{"controllers/UserController.html":{}}}],["przez",{"_index":1958,"title":{},"body":{"controllers/ScheduleController.html":{}}}],["przyjmujemy",{"_index":1752,"title":{},"body":{"controllers/PredicteController.html":{}}}],["public",{"_index":231,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@httpcode(httpstatus.ok)@usefilters(new",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{}}}],["query",{"_index":1130,"title":{},"body":{"controllers/FiszkaController.html":{},"controllers/InterviewsController.html":{},"controllers/UserController.html":{}}}],["query('self",{"_index":1143,"title":{},"body":{"controllers/FiszkaController.html":{},"controllers/InterviewsController.html":{}}}],["rd",{"_index":911,"title":{},"body":{"controllers/DirectorController.html":{},"controllers/GroupController.html":{},"controllers/RentalCostController.html":{},"controllers/SchoolController.html":{},"miscellaneous/enumerations.html":{}}}],["read",{"_index":2455,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":74,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/DtoValidationPipe.html":{},"injectables/DtoValidatorPipe.html":{},"injectables/DtoValidatorSelfPipe.html":{},"injectables/UpperCasePipe.html":{}}}],["reflect",{"_index":2381,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":283,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RolesGuard.html":{}}}],["refresh",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshed",{"_index":1608,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["refreshtoken",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["refreshtoken(@body",{"_index":267,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshtoken(oldtoken",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshtoken(refreshtoken",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtoken.access_token",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtotalfiszki",{"_index":1539,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["region",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/DecodeDto.html":{},"injectables/DirectorService.html":{},"classes/EditSelfDto.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"injectables/FiszkaService.html":{},"classes/GetSchoolDto.html":{},"classes/GetUserDto.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"injectables/InterviewsService.html":{},"injectables/LoggerMiddleware.html":{},"controllers/PredicteController.html":{},"injectables/PredicteService.html":{},"classes/PrismaValidationFilter.html":{},"injectables/RentalCostService.html":{},"interfaces/ReqUserInfo.html":{},"controllers/ScheduleController.html":{},"injectables/ScheduleDaysService.html":{},"injectables/ScheduleService.html":{},"injectables/SchoolService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["region.touppercase",{"_index":2283,"title":{},"body":{"injectables/UserService.html":{}}}],["region:region",{"_index":641,"title":{},"body":{"injectables/ContactPersonService.html":{},"injectables/GroupService.html":{},"injectables/UserService.html":{}}}],["region:string",{"_index":877,"title":{},"body":{"classes/DecodeDto.html":{}}}],["regionie",{"_index":910,"title":{},"body":{"controllers/DirectorController.html":{}}}],["regionu",{"_index":1185,"title":{},"body":{"controllers/FiszkaController.html":{},"controllers/SchoolController.html":{}}}],["registerdecorator",{"_index":1672,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["rekordu",{"_index":1846,"title":{},"body":{"classes/PrismaValidationFilter.html":{}}}],["relatedpropertyname",{"_index":1684,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["relatedvalue",{"_index":1686,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["removeduserids",{"_index":1590,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["removeduserids.length",{"_index":1596,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["removeduserinterviewids",{"_index":1593,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["removeuserfrominterview",{"_index":1540,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["removeuserfrominterview(interviewid",{"_index":1559,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["removeuserinterviewdto",{"_index":1487,"title":{"classes/RemoveUserInterViewDto.html":{}},"body":{"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{},"classes/RemoveUserInterViewDto.html":{},"coverage.html":{}}}],["removeusertointerview",{"_index":1460,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["removeusertointerview(@param('idinterview",{"_index":1525,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["removeusertointerview(idinterview",{"_index":1486,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["rentalcost",{"_index":1858,"title":{},"body":{"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{}}}],["rentalcost','calluserhistory",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["rentalcost.controller",{"_index":1882,"title":{},"body":{"modules/RentalCostModule.html":{}}}],["rentalcost.service",{"_index":1864,"title":{},"body":{"controllers/RentalCostController.html":{},"modules/RentalCostModule.html":{}}}],["rentalcostcontroller",{"_index":1856,"title":{"controllers/RentalCostController.html":{}},"body":{"controllers/RentalCostController.html":{},"modules/RentalCostModule.html":{},"coverage.html":{}}}],["rentalcostmodule",{"_index":143,"title":{"modules/RentalCostModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RentalCostModule.html":{},"modules.html":{},"overview.html":{}}}],["rentalcostservice",{"_index":1863,"title":{"injectables/RentalCostService.html":{}},"body":{"controllers/RentalCostController.html":{},"modules/RentalCostModule.html":{},"injectables/RentalCostService.html":{},"coverage.html":{},"overview.html":{}}}],["repeatnewpassword",{"_index":510,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["repeatnewpassword:string",{"_index":525,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["repository",{"_index":2424,"title":{},"body":{"index.html":{}}}],["req",{"_index":935,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/DtoValidatorPipe.html":{},"injectables/DtoValidatorSelfPipe.html":{},"injectables/LoggerMiddleware.html":{},"controllers/PredicteController.html":{},"injectables/UpperCasePipe.html":{}}}],["req.headers.host",{"_index":1643,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["req.method",{"_index":1642,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["req.originalurl",{"_index":1641,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["req.url",{"_index":1639,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["req['user'].region",{"_index":1767,"title":{},"body":{"controllers/PredicteController.html":{}}}],["reqinfo",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/FiszkaController.html":{},"controllers/GroupController.html":{},"controllers/InterviewsController.html":{},"controllers/RentalCostController.html":{},"interfaces/ReqUserInfo.html":{},"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"controllers/SchoolController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["reqinfo.id",{"_index":265,"title":{},"body":{"controllers/AuthController.html":{},"controllers/FiszkaController.html":{},"controllers/InterviewsController.html":{},"controllers/UserController.html":{}}}],["reqinfo.region",{"_index":559,"title":{},"body":{"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/GroupController.html":{},"controllers/RentalCostController.html":{},"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"controllers/SchoolController.html":{},"controllers/UserController.html":{}}}],["reqinfo.role",{"_index":2190,"title":{},"body":{"controllers/UserController.html":{}}}],["reqinfo.role.match(role.ca",{"_index":2188,"title":{},"body":{"controllers/UserController.html":{}}}],["reqinfo.role.match(role.mgtmt",{"_index":556,"title":{},"body":{"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/GroupController.html":{},"controllers/RentalCostController.html":{},"controllers/SchoolController.html":{},"controllers/UserController.html":{}}}],["reqinfo.role.match(role.rd",{"_index":1511,"title":{},"body":{"controllers/InterviewsController.html":{},"controllers/UserController.html":{}}}],["reqinfo.role.match(role.user",{"_index":1144,"title":{},"body":{"controllers/FiszkaController.html":{},"controllers/UserController.html":{}}}],["request",{"_index":86,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"guards/AuthGuard.html":{},"injectables/DtoValidationPipe.html":{},"injectables/DtoValidatorPipe.html":{},"injectables/DtoValidatorSelfPipe.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"controllers/PredicteController.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{},"interfaces/ReqUserInfo.html":{},"injectables/UpperCasePipe.html":{},"miscellaneous/variables.html":{}}}],["request.headers",{"_index":106,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotFoundExceptionFilter.html":{}}}],["request.headers.authorization?.split",{"_index":322,"title":{},"body":{"guards/AuthGuard.html":{}}}],["request.headers['user",{"_index":108,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/NotFoundExceptionFilter.html":{}}}],["request.method",{"_index":104,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/NotFoundExceptionFilter.html":{}}}],["request.url",{"_index":1450,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{}}}],["request.user.id",{"_index":1900,"title":{},"body":{"interfaces/ReqUserInfo.html":{},"miscellaneous/variables.html":{}}}],["request.user.region",{"_index":1902,"title":{},"body":{"interfaces/ReqUserInfo.html":{},"miscellaneous/variables.html":{}}}],["request.user.role",{"_index":1901,"title":{},"body":{"interfaces/ReqUserInfo.html":{},"miscellaneous/variables.html":{}}}],["request['user",{"_index":321,"title":{},"body":{"guards/AuthGuard.html":{}}}],["requestid",{"_index":110,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/NotFoundExceptionFilter.html":{}}}],["requiredroles",{"_index":1909,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requiredroles.some((role",{"_index":1914,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requiredroles.some((role)=>user.role.includes(role",{"_index":1912,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requserinfo",{"_index":195,"title":{"interfaces/ReqUserInfo.html":{}},"body":{"controllers/AuthController.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/FiszkaController.html":{},"controllers/GroupController.html":{},"controllers/InterviewsController.html":{},"controllers/RentalCostController.html":{},"interfaces/ReqUserInfo.html":{},"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"controllers/SchoolController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["requserinfo):promise",{"_index":263,"title":{},"body":{"controllers/AuthController.html":{}}}],["res",{"_index":1630,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["reset",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CallUserHistoryModule.html":{},"modules/ContactModule.html":{},"modules/ContactPersonModule.html":{},"modules/DirectorModule.html":{},"modules/FiszkaModule.html":{},"modules/GroupModule.html":{},"modules/InterviewsModule.html":{},"modules/LoggerModule.html":{},"modules/PredicteModule.html":{},"modules/RentalCostModule.html":{},"modules/ScheduleDaysModule.html":{},"modules/ScheduleModule.html":{},"modules/SchoolModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resignation",{"_index":989,"title":{},"body":{"classes/EditFiszkaDto.html":{},"injectables/FiszkaService.html":{},"classes/GetFiszkaDto.html":{}}}],["response",{"_index":88,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoggerMiddleware.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{},"injectables/UserService.html":{}}}],["response).map(school",{"_index":2309,"title":{},"body":{"injectables/UserService.html":{}}}],["response.getheaders()['x",{"_index":111,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/NotFoundExceptionFilter.html":{}}}],["responsebody",{"_index":101,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["result",{"_index":1513,"title":{},"body":{"controllers/InterviewsController.html":{},"injectables/PredicteService.html":{}}}],["result.map((fiszka",{"_index":1807,"title":{},"body":{"injectables/PredicteService.html":{}}}],["results",{"_index":20,"title":{},"body":{"classes/AccessTokenDto.html":{},"classes/AddUserInterViewDto.html":{},"classes/AddgroupDto.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallUserHistoryController.html":{},"modules/CallUserHistoryModule.html":{},"injectables/CallUserHistoryService.html":{},"classes/ChangePasswordDto.html":{},"controllers/ContactController.html":{},"modules/ContactModule.html":{},"controllers/ContactPersonController.html":{},"modules/ContactPersonModule.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"classes/CreateCallUserDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateInterViewDto.html":{},"classes/CreateRentalCostDto.html":{},"classes/CreateScheduleDaysDto.html":{},"classes/CreateScheduleDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/DecodeDto.html":{},"controllers/DirectorController.html":{},"modules/DirectorModule.html":{},"injectables/DirectorService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/DtoValidatorPipe.html":{},"injectables/DtoValidatorSelfPipe.html":{},"classes/EditContactDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditGroupDto.html":{},"classes/EditInterViewDto.html":{},"classes/EditRentalCostDto.html":{},"classes/EditScheduleDaysDto.html":{},"classes/EditScheduleDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSelfDto.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"controllers/FiszkaController.html":{},"modules/FiszkaModule.html":{},"injectables/FiszkaService.html":{},"classes/GetCallUserHistoryDto.html":{},"classes/GetContactDto.html":{},"classes/GetContactPersontDto.html":{},"classes/GetDirectorDto.html":{},"classes/GetFindByIdDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetGroupDto.html":{},"classes/GetInterViewsDto.html":{},"classes/GetRentalCostDto.html":{},"classes/GetScheduleDto.html":{},"classes/GetSchoolDto.html":{},"classes/GetUserDto.html":{},"classes/GetUserInterViewDto.html":{},"classes/GraphDateDto.html":{},"controllers/GroupController.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/InterviewsController.html":{},"modules/InterviewsModule.html":{},"injectables/InterviewsService.html":{},"controllers/LoggerController.html":{},"injectables/LoggerMiddleware.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/LoginUserDto.html":{},"classes/MatchConstraint.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"injectables/OptionsPipe.html":{},"controllers/PredicteController.html":{},"modules/PredicteModule.html":{},"injectables/PredicteService.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{},"classes/RemoveUserInterViewDto.html":{},"controllers/RentalCostController.html":{},"modules/RentalCostModule.html":{},"injectables/RentalCostService.html":{},"interfaces/ReqUserInfo.html":{},"guards/RolesGuard.html":{},"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"modules/ScheduleDaysModule.html":{},"injectables/ScheduleDaysService.html":{},"modules/ScheduleModule.html":{},"injectables/ScheduleService.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"classes/SendFiszkiDto.html":{},"injectables/UpperCasePipe.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidationdDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"classes/getGraphDateDto.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":93,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CallUserHistoryController.html":{},"injectables/CallUserHistoryService.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"controllers/DirectorController.html":{},"injectables/DirectorService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/DtoValidatorPipe.html":{},"injectables/DtoValidatorSelfPipe.html":{},"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{},"controllers/LoggerController.html":{},"injectables/LoggerService.html":{},"classes/MatchConstraint.html":{},"injectables/OptionsPipe.html":{},"controllers/PredicteController.html":{},"injectables/PredicteService.html":{},"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{},"interfaces/ReqUserInfo.html":{},"guards/RolesGuard.html":{},"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"injectables/ScheduleDaysService.html":{},"injectables/ScheduleService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"injectables/UpperCasePipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":50,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CallUserHistoryController.html":{},"injectables/CallUserHistoryService.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"controllers/DirectorController.html":{},"injectables/DirectorService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/DtoValidatorPipe.html":{},"injectables/DtoValidatorSelfPipe.html":{},"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{},"controllers/LoggerController.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"classes/MatchConstraint.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"injectables/OptionsPipe.html":{},"controllers/PredicteController.html":{},"injectables/PredicteService.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{},"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{},"guards/RolesGuard.html":{},"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"injectables/ScheduleDaysService.html":{},"injectables/ScheduleService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"injectables/UpperCasePipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["rok",{"_index":2229,"title":{},"body":{"controllers/UserController.html":{}}}],["rol",{"_index":2071,"title":{},"body":{"controllers/SchoolController.html":{}}}],["rola",{"_index":1850,"title":{},"body":{"classes/PrismaValidationFilter.html":{}}}],["role",{"_index":241,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CallUserHistoryController.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/DecodeDto.html":{},"controllers/DirectorController.html":{},"injectables/DtoValidatorPipe.html":{},"classes/EditSelfDto.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"controllers/FiszkaController.html":{},"classes/GetUserDto.html":{},"controllers/GroupController.html":{},"controllers/InterviewsController.html":{},"injectables/LoggerMiddleware.html":{},"controllers/PredicteController.html":{},"controllers/RentalCostController.html":{},"interfaces/ReqUserInfo.html":{},"guards/RolesGuard.html":{},"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"controllers/SchoolController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["role.ca",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CallUserHistoryController.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/FiszkaController.html":{},"controllers/InterviewsController.html":{},"controllers/PredicteController.html":{},"controllers/RentalCostController.html":{},"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"controllers/SchoolController.html":{},"controllers/UserController.html":{}}}],["role.ca)@delete('delete/:idcontactperson",{"_index":577,"title":{},"body":{"controllers/ContactPersonController.html":{}}}],["role.ca)@get('find/:idschedule",{"_index":1930,"title":{},"body":{"controllers/ScheduleController.html":{}}}],["role.ca)@get('findall/:idschool",{"_index":1927,"title":{},"body":{"controllers/ScheduleController.html":{}}}],["role.ca)@get('findallforgroup/:idgroup",{"_index":1121,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["role.ca)@get('findallforregion",{"_index":1124,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["role.ca)@get('findallforuser/:idemployee",{"_index":1127,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["role.ca)@get('findbyid/:id",{"_index":2050,"title":{},"body":{"controllers/SchoolController.html":{}}}],["role.ca)@get('getallhistory/:idfiszka",{"_index":451,"title":{},"body":{"controllers/CallUserHistoryController.html":{}}}],["role.ca)@get('group/:idschool",{"_index":1714,"title":{},"body":{"controllers/PredicteController.html":{}}}],["role.ca)@patch('edit/:id",{"_index":2045,"title":{},"body":{"controllers/SchoolController.html":{}}}],["role.ca)@patch('edit/:idschedule",{"_index":1924,"title":{},"body":{"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{}}}],["role.ca)@patch('edit/:idschool",{"_index":886,"title":{},"body":{"controllers/DirectorController.html":{},"controllers/RentalCostController.html":{}}}],["role.ca)@patch('edit/:idschool/:idcontact",{"_index":540,"title":{},"body":{"controllers/ContactController.html":{}}}],["role.ca)@patch('edit/:schoolid/:idcontactperson",{"_index":583,"title":{},"body":{"controllers/ContactPersonController.html":{}}}],["role.ca)@post('create",{"_index":2042,"title":{},"body":{"controllers/SchoolController.html":{}}}],["role.ca)@post('create/:idschedule",{"_index":1967,"title":{},"body":{"controllers/ScheduleDaysController.html":{}}}],["role.ca)@post('create/:idschool",{"_index":534,"title":{},"body":{"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/RentalCostController.html":{},"controllers/ScheduleController.html":{}}}],["role.ca)@post('findall/:idschedule",{"_index":1970,"title":{},"body":{"controllers/ScheduleDaysController.html":{}}}],["role.ca,role.mgtmt",{"_index":1869,"title":{},"body":{"controllers/RentalCostController.html":{}}}],["role.ca,role.user",{"_index":1140,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["role.mgtmt",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/FiszkaController.html":{},"controllers/GroupController.html":{},"controllers/SchoolController.html":{},"controllers/UserController.html":{}}}],["role.mgtmt)@get('findall",{"_index":2047,"title":{},"body":{"controllers/SchoolController.html":{},"controllers/UserController.html":{}}}],["role.mgtmt)@get('findbyid/:id",{"_index":2149,"title":{},"body":{"controllers/UserController.html":{}}}],["role.mgtmt)@get('get/:idschool",{"_index":585,"title":{},"body":{"controllers/ContactPersonController.html":{},"controllers/RentalCostController.html":{}}}],["role.mgtmt)@get('getcontact/:idschool",{"_index":543,"title":{},"body":{"controllers/ContactController.html":{}}}],["role.mgtmt)@get('getdirector/:idschool",{"_index":888,"title":{},"body":{"controllers/DirectorController.html":{}}}],["role.mgtmt)@patch('edituser/:id",{"_index":2142,"title":{},"body":{"controllers/UserController.html":{}}}],["role.mgtmt)@post",{"_index":2137,"title":{},"body":{"controllers/UserController.html":{}}}],["role.mgtmt)@post('validation",{"_index":2168,"title":{},"body":{"controllers/UserController.html":{}}}],["role.mgtmt)@usefilters(new",{"_index":1374,"title":{},"body":{"controllers/GroupController.html":{}}}],["role.rd",{"_index":450,"title":{},"body":{"controllers/CallUserHistoryController.html":{},"controllers/FiszkaController.html":{},"controllers/GroupController.html":{},"controllers/InterviewsController.html":{},"controllers/UserController.html":{}}}],["role.rd)@delete('delete/:idphonecalls",{"_index":446,"title":{},"body":{"controllers/CallUserHistoryController.html":{}}}],["role.rd)@delete('deletefiszka/:idfiszki",{"_index":1101,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["role.rd)@delete('deletefiszka/:idfiszki/fromgroup/:idgroup",{"_index":1108,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["role.rd)@get('fiszkifordaybyinterview",{"_index":2158,"title":{},"body":{"controllers/UserController.html":{}}}],["role.rd)@get('fiszkifordaybyinterview/:idschool",{"_index":2155,"title":{},"body":{"controllers/UserController.html":{}}}],["role.rd)@get('total",{"_index":2161,"title":{},"body":{"controllers/UserController.html":{}}}],["role.rd)@patch('addgroup/:idgroup",{"_index":1097,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["role.rd)@patch('editfiszka/:idfiszka",{"_index":1111,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["role.rd)@post('addcalluser/:idfiszka",{"_index":442,"title":{},"body":{"controllers/CallUserHistoryController.html":{}}}],["role.rd)@post('addfiszki/:idinterview",{"_index":1092,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["role.rd)@usefilters(new",{"_index":1367,"title":{},"body":{"controllers/GroupController.html":{},"controllers/InterviewsController.html":{}}}],["role.tostring",{"_index":2282,"title":{},"body":{"injectables/UserService.html":{}}}],["role.user",{"_index":257,"title":{},"body":{"controllers/AuthController.html":{},"controllers/InterviewsController.html":{},"controllers/UserController.html":{}}}],["role.user)@get('findall/:idinterview",{"_index":1118,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["role.user)@get('fiszkiforday/:iduser",{"_index":2152,"title":{},"body":{"controllers/UserController.html":{}}}],["role.user)@patch('self",{"_index":2164,"title":{},"body":{"controllers/UserController.html":{}}}],["role.user)@usefilters(new",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{},"controllers/InterviewsController.html":{}}}],["role.user)@usepipes(new",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{}}}],["role:role",{"_index":876,"title":{},"body":{"classes/DecodeDto.html":{}}}],["role?.map(role",{"_index":2281,"title":{},"body":{"injectables/UserService.html":{}}}],["roles",{"_index":243,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CallUserHistoryController.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/FiszkaController.html":{},"controllers/GroupController.html":{},"controllers/InterviewsController.html":{},"controllers/PredicteController.html":{},"controllers/RentalCostController.html":{},"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"controllers/SchoolController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles(role.ca",{"_index":1174,"title":{},"body":{"controllers/FiszkaController.html":{},"controllers/GroupController.html":{},"controllers/InterviewsController.html":{},"controllers/UserController.html":{}}}],["roles(role.mgtmt",{"_index":472,"title":{},"body":{"controllers/CallUserHistoryController.html":{},"controllers/FiszkaController.html":{},"controllers/UserController.html":{}}}],["roles(role.rd",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/FiszkaController.html":{},"controllers/InterviewsController.html":{},"controllers/PredicteController.html":{},"controllers/RentalCostController.html":{},"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"controllers/SchoolController.html":{},"controllers/UserController.html":{}}}],["roles(role.user",{"_index":1160,"title":{},"body":{"controllers/FiszkaController.html":{},"controllers/UserController.html":{}}}],["roles.guard",{"_index":246,"title":{},"body":{"controllers/AuthController.html":{}}}],["roles_key",{"_index":1908,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rolesguard",{"_index":245,"title":{"guards/RolesGuard.html":{}},"body":{"controllers/AuthController.html":{},"controllers/CallUserHistoryController.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/FiszkaController.html":{},"controllers/GroupController.html":{},"controllers/InterviewsController.html":{},"controllers/PredicteController.html":{},"controllers/RentalCostController.html":{},"guards/RolesGuard.html":{},"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"controllers/SchoolController.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["roleuser.match(role.mgtmt",{"_index":967,"title":{},"body":{"injectables/DtoValidatorPipe.html":{}}}],["roleuser:role",{"_index":965,"title":{},"body":{"injectables/DtoValidatorPipe.html":{}}}],["rolevalue",{"_index":2277,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["rolevalue(role",{"_index":2280,"title":{},"body":{"injectables/UserService.html":{}}}],["rolevalue(yourrole",{"_index":2401,"title":{},"body":{"miscellaneous/functions.html":{}}}],["route",{"_index":319,"title":{},"body":{"guards/AuthGuard.html":{}}}],["rozmowy",{"_index":466,"title":{},"body":{"controllers/CallUserHistoryController.html":{}}}],["run",{"_index":2430,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":58,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/NotFoundErrorFilter.html":{},"dependencies.html":{}}}],["s",{"_index":518,"title":{},"body":{"classes/ChangePasswordDto.html":{},"controllers/PredicteController.html":{}}}],["samej",{"_index":1737,"title":{},"body":{"controllers/PredicteController.html":{}}}],["scalable",{"_index":2416,"title":{},"body":{"index.html":{}}}],["schedule",{"_index":1918,"title":{},"body":{"controllers/ScheduleController.html":{},"injectables/ScheduleDaysService.html":{},"injectables/ScheduleService.html":{}}}],["schedule).length===0",{"_index":2033,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["schedule.controller",{"_index":2013,"title":{},"body":{"modules/ScheduleModule.html":{}}}],["schedule.id",{"_index":2007,"title":{},"body":{"injectables/ScheduleDaysService.html":{}}}],["schedule.school?.region",{"_index":2001,"title":{},"body":{"injectables/ScheduleDaysService.html":{}}}],["schedule.service",{"_index":1935,"title":{},"body":{"controllers/ScheduleController.html":{},"modules/ScheduleModule.html":{}}}],["schedulecontroller",{"_index":1916,"title":{"controllers/ScheduleController.html":{}},"body":{"controllers/ScheduleController.html":{},"modules/ScheduleModule.html":{},"coverage.html":{}}}],["scheduleday",{"_index":1966,"title":{},"body":{"controllers/ScheduleDaysController.html":{}}}],["scheduledays",{"_index":778,"title":{},"body":{"classes/CreateScheduleDto.html":{},"classes/GetScheduleDto.html":{},"injectables/ScheduleService.html":{}}}],["scheduledays.controller",{"_index":1985,"title":{},"body":{"modules/ScheduleDaysModule.html":{}}}],["scheduledays.service",{"_index":1975,"title":{},"body":{"controllers/ScheduleDaysController.html":{},"modules/ScheduleDaysModule.html":{}}}],["scheduledays:scheduledays",{"_index":785,"title":{},"body":{"classes/CreateScheduleDto.html":{},"classes/GetScheduleDto.html":{}}}],["scheduledayscontroller",{"_index":1964,"title":{"controllers/ScheduleDaysController.html":{}},"body":{"controllers/ScheduleDaysController.html":{},"modules/ScheduleDaysModule.html":{},"coverage.html":{}}}],["scheduledaysmodule",{"_index":144,"title":{"modules/ScheduleDaysModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ScheduleDaysModule.html":{},"modules.html":{},"overview.html":{}}}],["scheduledaysservice",{"_index":1974,"title":{"injectables/ScheduleDaysService.html":{}},"body":{"controllers/ScheduleDaysController.html":{},"modules/ScheduleDaysModule.html":{},"injectables/ScheduleDaysService.html":{},"coverage.html":{},"overview.html":{}}}],["scheduleid",{"_index":1995,"title":{},"body":{"injectables/ScheduleDaysService.html":{}}}],["schedulemodule",{"_index":145,"title":{"modules/ScheduleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ScheduleModule.html":{},"modules.html":{},"overview.html":{}}}],["scheduleservice",{"_index":1934,"title":{"injectables/ScheduleService.html":{}},"body":{"controllers/ScheduleController.html":{},"modules/ScheduleModule.html":{},"injectables/ScheduleService.html":{},"coverage.html":{},"overview.html":{}}}],["school",{"_index":624,"title":{},"body":{"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"injectables/DirectorService.html":{},"classes/GetFindByIdDto.html":{},"classes/GetInterViewsDto.html":{},"injectables/GroupService.html":{},"injectables/InterviewsService.html":{},"injectables/PredicteService.html":{},"injectables/RentalCostService.html":{},"injectables/ScheduleDaysService.html":{},"injectables/ScheduleService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"injectables/UserService.html":{}}}],["school.controller",{"_index":2082,"title":{},"body":{"modules/SchoolModule.html":{}}}],["school.interviews.reduce((sum",{"_index":2311,"title":{},"body":{"injectables/UserService.html":{}}}],["school.name",{"_index":2310,"title":{},"body":{"injectables/UserService.html":{}}}],["school.service",{"_index":2053,"title":{},"body":{"controllers/SchoolController.html":{},"modules/SchoolModule.html":{}}}],["schoolcontroller",{"_index":2037,"title":{"controllers/SchoolController.html":{}},"body":{"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"coverage.html":{}}}],["schoolid",{"_index":581,"title":{},"body":{"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"classes/CreateInterViewDto.html":{},"injectables/DirectorService.html":{},"injectables/InterviewsService.html":{},"injectables/PredicteService.html":{},"injectables/RentalCostService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"injectables/UserService.html":{}}}],["schoolmodule",{"_index":146,"title":{"modules/SchoolModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SchoolModule.html":{},"modules.html":{},"overview.html":{}}}],["schoolnameandtotalfiszki",{"_index":2308,"title":{},"body":{"injectables/UserService.html":{}}}],["schoolregion",{"_index":2000,"title":{},"body":{"injectables/ScheduleDaysService.html":{}}}],["schoolservice",{"_index":2052,"title":{"injectables/SchoolService.html":{}},"body":{"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"coverage.html":{},"overview.html":{}}}],["scope",{"_index":943,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/DtoValidatorPipe.html":{},"injectables/DtoValidatorSelfPipe.html":{},"injectables/UpperCasePipe.html":{},"injectables/UserService.html":{}}}],["scope.request",{"_index":950,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/DtoValidatorPipe.html":{},"injectables/DtoValidatorSelfPipe.html":{},"injectables/UpperCasePipe.html":{},"injectables/UserService.html":{}}}],["secret",{"_index":313,"title":{},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["secret:jwtsecretkey",{"_index":335,"title":{},"body":{"modules/AuthModule.html":{}}}],["see",{"_index":302,"title":{},"body":{"guards/AuthGuard.html":{}}}],["select",{"_index":495,"title":{},"body":{"injectables/CallUserHistoryService.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"injectables/DirectorService.html":{},"injectables/FiszkaService.html":{},"injectables/GroupService.html":{},"injectables/InterviewsService.html":{},"injectables/PredicteService.html":{},"injectables/RentalCostService.html":{},"injectables/ScheduleDaysService.html":{},"injectables/ScheduleService.html":{},"injectables/SchoolService.html":{},"injectables/UserService.html":{}}}],["self",{"_index":1117,"title":{},"body":{"controllers/FiszkaController.html":{},"controllers/InterviewsController.html":{}}}],["selfedit",{"_index":2134,"title":{},"body":{"controllers/UserController.html":{}}}],["selfedit(@body(uppercasepipe",{"_index":2207,"title":{},"body":{"controllers/UserController.html":{}}}],["selfedit(edituserdto",{"_index":2163,"title":{},"body":{"controllers/UserController.html":{}}}],["sendfiszkidto",{"_index":1713,"title":{"classes/SendFiszkiDto.html":{}},"body":{"controllers/PredicteController.html":{},"injectables/PredicteService.html":{},"classes/SendFiszkiDto.html":{},"coverage.html":{}}}],["server",{"_index":2417,"title":{},"body":{"index.html":{}}}],["setmetadata(is_public_key",{"_index":2485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(roles_key",{"_index":2486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sheduleid",{"_index":2009,"title":{},"body":{"injectables/ScheduleDaysService.html":{}}}],["si",{"_index":1787,"title":{},"body":{"injectables/PredicteService.html":{},"controllers/ScheduleController.html":{}}}],["side",{"_index":2418,"title":{},"body":{"index.html":{}}}],["signin",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signin(@body",{"_index":254,"title":{},"body":{"controllers/AuthController.html":{}}}],["signin(email",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{}}}],["signin(signindto",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{}}}],["signindto",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{}}}],["signindto.password",{"_index":256,"title":{},"body":{"controllers/AuthController.html":{}}}],["signoptions",{"_index":337,"title":{},"body":{"modules/AuthModule.html":{}}}],["skipduplicates",{"_index":1573,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AccessTokenDto.html":{},"classes/AddUserInterViewDto.html":{},"classes/AddgroupDto.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CallUserHistoryController.html":{},"modules/CallUserHistoryModule.html":{},"injectables/CallUserHistoryService.html":{},"classes/ChangePasswordDto.html":{},"controllers/ContactController.html":{},"modules/ContactModule.html":{},"controllers/ContactPersonController.html":{},"modules/ContactPersonModule.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"classes/CreateCallUserDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateInterViewDto.html":{},"classes/CreateRentalCostDto.html":{},"classes/CreateScheduleDaysDto.html":{},"classes/CreateScheduleDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/DecodeDto.html":{},"controllers/DirectorController.html":{},"modules/DirectorModule.html":{},"injectables/DirectorService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/DtoValidatorPipe.html":{},"injectables/DtoValidatorSelfPipe.html":{},"classes/EditContactDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditGroupDto.html":{},"classes/EditInterViewDto.html":{},"classes/EditRentalCostDto.html":{},"classes/EditScheduleDaysDto.html":{},"classes/EditScheduleDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSelfDto.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"controllers/FiszkaController.html":{},"modules/FiszkaModule.html":{},"injectables/FiszkaService.html":{},"classes/GetCallUserHistoryDto.html":{},"classes/GetContactDto.html":{},"classes/GetContactPersontDto.html":{},"classes/GetDirectorDto.html":{},"classes/GetFindByIdDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetGroupDto.html":{},"classes/GetInterViewsDto.html":{},"classes/GetRentalCostDto.html":{},"classes/GetScheduleDto.html":{},"classes/GetSchoolDto.html":{},"classes/GetUserDto.html":{},"classes/GetUserInterViewDto.html":{},"classes/GraphDateDto.html":{},"controllers/GroupController.html":{},"modules/GroupModule.html":{},"injectables/GroupService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/InterviewsController.html":{},"modules/InterviewsModule.html":{},"injectables/InterviewsService.html":{},"controllers/LoggerController.html":{},"injectables/LoggerMiddleware.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/LoginUserDto.html":{},"classes/MatchConstraint.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"injectables/OptionsPipe.html":{},"controllers/PredicteController.html":{},"modules/PredicteModule.html":{},"injectables/PredicteService.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{},"classes/RemoveUserInterViewDto.html":{},"controllers/RentalCostController.html":{},"modules/RentalCostModule.html":{},"injectables/RentalCostService.html":{},"interfaces/ReqUserInfo.html":{},"guards/RolesGuard.html":{},"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"modules/ScheduleDaysModule.html":{},"injectables/ScheduleDaysService.html":{},"modules/ScheduleModule.html":{},"injectables/ScheduleService.html":{},"controllers/SchoolController.html":{},"modules/SchoolModule.html":{},"injectables/SchoolService.html":{},"classes/SendFiszkiDto.html":{},"injectables/UpperCasePipe.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/ValidationdDto.html":{},"classes/getGraphDateDto.html":{},"index.html":{}}}],["sponsors",{"_index":2448,"title":{},"body":{"index.html":{}}}],["sprawdzałem",{"_index":1612,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["sprawdzenie",{"_index":1786,"title":{},"body":{"injectables/PredicteService.html":{}}}],["src/.../auth.guard.ts",{"_index":2479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.module.ts",{"_index":2480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../classvalidator.ts",{"_index":2389,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../constants.ts",{"_index":2478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cuterrormsg.ts",{"_index":2390,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../hashpass.ts",{"_index":2391,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":2388,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../match.decorator.ts",{"_index":2392,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../predictesheduleinschool.ts",{"_index":2393,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../public.decorator.ts",{"_index":2477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../reqinfo.decorator.ts",{"_index":2481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../roles.decorator.ts",{"_index":2482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../rolevalue.ts",{"_index":2386,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../translateerror.ts",{"_index":2394,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":122,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:45",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":181,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:37",{"_index":220,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:45",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:53",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:61",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:68",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.guard.ts",{"_index":277,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/auth.guard.ts:14",{"_index":284,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/auth/auth.guard.ts:17",{"_index":287,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/auth/auth.guard.ts:51",{"_index":290,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/auth/auth.module.ts",{"_index":328,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/auth.service.ts",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:101",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:116",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:14",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:20",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:68",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:73",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/constants.ts",{"_index":2334,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/decorators/match.decorator.ts",{"_index":1662,"title":{},"body":{"classes/MatchConstraint.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/auth/decorators/match.decorator.ts:19",{"_index":1671,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["src/auth/decorators/match.decorator.ts:24",{"_index":1668,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["src/auth/decorators/public.decorator.ts",{"_index":2337,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/decorators/reqinfo.decorator",{"_index":552,"title":{},"body":{"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/FiszkaController.html":{},"controllers/GroupController.html":{},"controllers/InterviewsController.html":{},"controllers/RentalCostController.html":{},"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"controllers/SchoolController.html":{}}}],["src/auth/decorators/reqinfo.decorator.ts",{"_index":1897,"title":{},"body":{"interfaces/ReqUserInfo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/decorators/roles.decorator",{"_index":455,"title":{},"body":{"controllers/CallUserHistoryController.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/FiszkaController.html":{},"controllers/GroupController.html":{},"controllers/InterviewsController.html":{},"controllers/PredicteController.html":{},"controllers/RentalCostController.html":{},"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"controllers/SchoolController.html":{}}}],["src/auth/decorators/roles.decorator.ts",{"_index":2339,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/dto/authrefreshtoken.dto.ts",{"_index":6,"title":{},"body":{"classes/AccessTokenDto.html":{},"coverage.html":{}}}],["src/auth/dto/authrefreshtoken.dto.ts:6",{"_index":16,"title":{},"body":{"classes/AccessTokenDto.html":{}}}],["src/auth/dto/authuser.dto",{"_index":237,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/dto/authuser.dto.ts",{"_index":1658,"title":{},"body":{"classes/LoginUserDto.html":{},"coverage.html":{}}}],["src/auth/dto/authuser.dto.ts:10",{"_index":1660,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["src/auth/dto/authuser.dto.ts:7",{"_index":1659,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["src/auth/dto/changepassword.dto.ts",{"_index":507,"title":{},"body":{"classes/ChangePasswordDto.html":{},"coverage.html":{}}}],["src/auth/dto/changepassword.dto.ts:11",{"_index":512,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["src/auth/dto/changepassword.dto.ts:16",{"_index":520,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["src/auth/dto/changepassword.dto.ts:7",{"_index":513,"title":{},"body":{"classes/ChangePasswordDto.html":{}}}],["src/auth/dto/decode.dto",{"_index":1635,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["src/auth/dto/decode.dto.ts",{"_index":867,"title":{},"body":{"classes/DecodeDto.html":{},"coverage.html":{}}}],["src/auth/dto/decode.dto.ts:11",{"_index":873,"title":{},"body":{"classes/DecodeDto.html":{}}}],["src/auth/dto/decode.dto.ts:13",{"_index":872,"title":{},"body":{"classes/DecodeDto.html":{}}}],["src/auth/dto/decode.dto.ts:15",{"_index":871,"title":{},"body":{"classes/DecodeDto.html":{}}}],["src/auth/dto/decode.dto.ts:5",{"_index":870,"title":{},"body":{"classes/DecodeDto.html":{}}}],["src/auth/dto/decode.dto.ts:7",{"_index":875,"title":{},"body":{"classes/DecodeDto.html":{}}}],["src/auth/dto/decode.dto.ts:9",{"_index":874,"title":{},"body":{"classes/DecodeDto.html":{}}}],["src/auth/roles.guard",{"_index":454,"title":{},"body":{"controllers/CallUserHistoryController.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/FiszkaController.html":{},"controllers/GroupController.html":{},"controllers/InterviewsController.html":{},"controllers/PredicteController.html":{},"controllers/RentalCostController.html":{},"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"controllers/SchoolController.html":{}}}],["src/auth/roles.guard.ts",{"_index":1904,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/auth/roles.guard.ts:10",{"_index":1907,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/roles.guard.ts:7",{"_index":1906,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/common/helpers/classvalidator",{"_index":945,"title":{},"body":{"injectables/DtoValidationPipe.html":{}}}],["src/common/helpers/classvalidator.ts",{"_index":2341,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/common/helpers/cuterrormsg.ts",{"_index":2342,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/common/helpers/hashpass",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/common/helpers/hashpass.ts",{"_index":2345,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/common/helpers/predictesheduleinschool.ts",{"_index":2343,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/common/helpers/rolevalue.ts",{"_index":2346,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/common/helpers/translateerror.ts",{"_index":2348,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/common/logger.middleware.ts",{"_index":1626,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["src/common/logger.middleware.ts:14",{"_index":1633,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["src/common/logger.middleware.ts:9",{"_index":1628,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["src/common/validation/allexceptionsfilter.filter.ts",{"_index":33,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["src/common/validation/allexceptionsfilter.filter.ts:22",{"_index":41,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["src/common/validation/allexceptionsfilter.filter.ts:26",{"_index":48,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["src/common/validation/http",{"_index":238,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CallUserHistoryController.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/FiszkaController.html":{},"controllers/GroupController.html":{},"classes/HttpExceptionFilter.html":{},"controllers/InterviewsController.html":{},"controllers/PredicteController.html":{},"controllers/RentalCostController.html":{},"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"controllers/SchoolController.html":{},"coverage.html":{}}}],["src/common/validation/notfounderrorfilter.filter.ts",{"_index":1694,"title":{},"body":{"classes/NotFoundErrorFilter.html":{},"coverage.html":{}}}],["src/common/validation/notfounderrorfilter.filter.ts:7",{"_index":1695,"title":{},"body":{"classes/NotFoundErrorFilter.html":{}}}],["src/common/validation/notfoundexception.filter.ts",{"_index":1702,"title":{},"body":{"classes/NotFoundExceptionFilter.html":{},"coverage.html":{}}}],["src/common/validation/notfoundexception.filter.ts:7",{"_index":1703,"title":{},"body":{"classes/NotFoundExceptionFilter.html":{}}}],["src/common/validation/prismaclientvalidationerror.filter.ts",{"_index":1817,"title":{},"body":{"classes/PrismaValidationFilter.html":{},"coverage.html":{}}}],["src/common/validation/prismaclientvalidationerror.filter.ts:9",{"_index":1818,"title":{},"body":{"classes/PrismaValidationFilter.html":{}}}],["src/common/validation/prismaothererror.filter.ts",{"_index":1809,"title":{},"body":{"classes/PrismaOtherFilter.html":{},"coverage.html":{}}}],["src/common/validation/prismaothererror.filter.ts:10",{"_index":1810,"title":{},"body":{"classes/PrismaOtherFilter.html":{}}}],["src/main.ts",{"_index":2349,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/models/calluserhistory/calluserhistory.controller.ts",{"_index":434,"title":{},"body":{"controllers/CallUserHistoryController.html":{},"coverage.html":{}}}],["src/models/calluserhistory/calluserhistory.controller.ts:22",{"_index":452,"title":{},"body":{"controllers/CallUserHistoryController.html":{}}}],["src/models/calluserhistory/calluserhistory.controller.ts:28",{"_index":443,"title":{},"body":{"controllers/CallUserHistoryController.html":{}}}],["src/models/calluserhistory/calluserhistory.controller.ts:34",{"_index":447,"title":{},"body":{"controllers/CallUserHistoryController.html":{}}}],["src/models/calluserhistory/calluserhistory.module.ts",{"_index":484,"title":{},"body":{"modules/CallUserHistoryModule.html":{}}}],["src/models/calluserhistory/calluserhistory.service.ts",{"_index":488,"title":{},"body":{"injectables/CallUserHistoryService.html":{},"coverage.html":{}}}],["src/models/calluserhistory/calluserhistory.service.ts:10",{"_index":493,"title":{},"body":{"injectables/CallUserHistoryService.html":{}}}],["src/models/calluserhistory/calluserhistory.service.ts:25",{"_index":491,"title":{},"body":{"injectables/CallUserHistoryService.html":{}}}],["src/models/calluserhistory/calluserhistory.service.ts:40",{"_index":492,"title":{},"body":{"injectables/CallUserHistoryService.html":{}}}],["src/models/calluserhistory/calluserhistory.service.ts:7",{"_index":490,"title":{},"body":{"injectables/CallUserHistoryService.html":{}}}],["src/models/calluserhistory/dto/createcalluser.dto.ts",{"_index":654,"title":{},"body":{"classes/CreateCallUserDto.html":{},"coverage.html":{}}}],["src/models/calluserhistory/dto/createcalluser.dto.ts:11",{"_index":658,"title":{},"body":{"classes/CreateCallUserDto.html":{}}}],["src/models/calluserhistory/dto/createcalluser.dto.ts:15",{"_index":660,"title":{},"body":{"classes/CreateCallUserDto.html":{}}}],["src/models/calluserhistory/dto/createcalluser.dto.ts:7",{"_index":656,"title":{},"body":{"classes/CreateCallUserDto.html":{}}}],["src/models/calluserhistory/dto/getcalluserhistory.dto.ts",{"_index":1253,"title":{},"body":{"classes/GetCallUserHistoryDto.html":{},"coverage.html":{}}}],["src/models/calluserhistory/dto/getcalluserhistory.dto.ts:11",{"_index":1255,"title":{},"body":{"classes/GetCallUserHistoryDto.html":{}}}],["src/models/calluserhistory/dto/getcalluserhistory.dto.ts:15",{"_index":1256,"title":{},"body":{"classes/GetCallUserHistoryDto.html":{}}}],["src/models/calluserhistory/dto/getcalluserhistory.dto.ts:7",{"_index":1254,"title":{},"body":{"classes/GetCallUserHistoryDto.html":{}}}],["src/models/contact/contact.controller.ts",{"_index":527,"title":{},"body":{"controllers/ContactController.html":{},"coverage.html":{}}}],["src/models/contact/contact.controller.ts:20",{"_index":544,"title":{},"body":{"controllers/ContactController.html":{}}}],["src/models/contact/contact.controller.ts:31",{"_index":535,"title":{},"body":{"controllers/ContactController.html":{}}}],["src/models/contact/contact.controller.ts:38",{"_index":541,"title":{},"body":{"controllers/ContactController.html":{}}}],["src/models/contact/contact.module.ts",{"_index":569,"title":{},"body":{"modules/ContactModule.html":{}}}],["src/models/contact/contact.service.ts",{"_index":642,"title":{},"body":{"injectables/ContactService.html":{},"coverage.html":{}}}],["src/models/contact/contact.service.ts:11",{"_index":646,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/models/contact/contact.service.ts:23",{"_index":647,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/models/contact/contact.service.ts:40",{"_index":644,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/models/contact/contact.service.ts:57",{"_index":645,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/models/contact/contact.service.ts:8",{"_index":643,"title":{},"body":{"injectables/ContactService.html":{}}}],["src/models/contact/dto/createcontact.dto.ts",{"_index":665,"title":{},"body":{"classes/CreateContactDto.html":{},"coverage.html":{}}}],["src/models/contact/dto/createcontact.dto.ts:10",{"_index":667,"title":{},"body":{"classes/CreateContactDto.html":{}}}],["src/models/contact/dto/createcontact.dto.ts:6",{"_index":669,"title":{},"body":{"classes/CreateContactDto.html":{}}}],["src/models/contact/dto/editcontact.dto.ts",{"_index":973,"title":{},"body":{"classes/EditContactDto.html":{},"coverage.html":{}}}],["src/models/contact/dto/editcontact.dto.ts:10",{"_index":974,"title":{},"body":{"classes/EditContactDto.html":{}}}],["src/models/contact/dto/editcontact.dto.ts:6",{"_index":976,"title":{},"body":{"classes/EditContactDto.html":{}}}],["src/models/contact/dto/getcontact.dto.ts",{"_index":1257,"title":{},"body":{"classes/GetContactDto.html":{},"coverage.html":{}}}],["src/models/contact/dto/getcontact.dto.ts:10",{"_index":1258,"title":{},"body":{"classes/GetContactDto.html":{}}}],["src/models/contact/dto/getcontact.dto.ts:6",{"_index":1259,"title":{},"body":{"classes/GetContactDto.html":{}}}],["src/models/director/director.controller.ts",{"_index":882,"title":{},"body":{"controllers/DirectorController.html":{},"coverage.html":{}}}],["src/models/director/director.controller.ts:21",{"_index":889,"title":{},"body":{"controllers/DirectorController.html":{}}}],["src/models/director/director.controller.ts:32",{"_index":884,"title":{},"body":{"controllers/DirectorController.html":{}}}],["src/models/director/director.controller.ts:38",{"_index":887,"title":{},"body":{"controllers/DirectorController.html":{}}}],["src/models/director/director.module.ts",{"_index":916,"title":{},"body":{"modules/DirectorModule.html":{}}}],["src/models/director/director.service.ts",{"_index":918,"title":{},"body":{"injectables/DirectorService.html":{},"coverage.html":{}}}],["src/models/director/director.service.ts:11",{"_index":922,"title":{},"body":{"injectables/DirectorService.html":{}}}],["src/models/director/director.service.ts:26",{"_index":923,"title":{},"body":{"injectables/DirectorService.html":{}}}],["src/models/director/director.service.ts:52",{"_index":920,"title":{},"body":{"injectables/DirectorService.html":{}}}],["src/models/director/director.service.ts:73",{"_index":921,"title":{},"body":{"injectables/DirectorService.html":{}}}],["src/models/director/director.service.ts:8",{"_index":919,"title":{},"body":{"injectables/DirectorService.html":{}}}],["src/models/director/dto/createdirector.dto.ts",{"_index":686,"title":{},"body":{"classes/CreateDirectorDto.html":{},"coverage.html":{}}}],["src/models/director/dto/createdirector.dto.ts:11",{"_index":690,"title":{},"body":{"classes/CreateDirectorDto.html":{}}}],["src/models/director/dto/createdirector.dto.ts:15",{"_index":687,"title":{},"body":{"classes/CreateDirectorDto.html":{}}}],["src/models/director/dto/createdirector.dto.ts:19",{"_index":689,"title":{},"body":{"classes/CreateDirectorDto.html":{}}}],["src/models/director/dto/createdirector.dto.ts:7",{"_index":688,"title":{},"body":{"classes/CreateDirectorDto.html":{}}}],["src/models/director/dto/editdirector.dto.ts",{"_index":982,"title":{},"body":{"classes/EditDirectorDto.html":{},"coverage.html":{}}}],["src/models/director/dto/editdirector.dto.ts:11",{"_index":986,"title":{},"body":{"classes/EditDirectorDto.html":{}}}],["src/models/director/dto/editdirector.dto.ts:15",{"_index":983,"title":{},"body":{"classes/EditDirectorDto.html":{}}}],["src/models/director/dto/editdirector.dto.ts:19",{"_index":985,"title":{},"body":{"classes/EditDirectorDto.html":{}}}],["src/models/director/dto/editdirector.dto.ts:7",{"_index":984,"title":{},"body":{"classes/EditDirectorDto.html":{}}}],["src/models/director/dto/getdirector.dto.ts",{"_index":1267,"title":{},"body":{"classes/GetDirectorDto.html":{},"coverage.html":{}}}],["src/models/director/dto/getdirector.dto.ts:12",{"_index":1272,"title":{},"body":{"classes/GetDirectorDto.html":{}}}],["src/models/director/dto/getdirector.dto.ts:15",{"_index":1268,"title":{},"body":{"classes/GetDirectorDto.html":{}}}],["src/models/director/dto/getdirector.dto.ts:18",{"_index":1271,"title":{},"body":{"classes/GetDirectorDto.html":{}}}],["src/models/director/dto/getdirector.dto.ts:6",{"_index":1269,"title":{},"body":{"classes/GetDirectorDto.html":{}}}],["src/models/director/dto/getdirector.dto.ts:9",{"_index":1270,"title":{},"body":{"classes/GetDirectorDto.html":{}}}],["src/models/fiszka/dto/addgroup.dto.ts",{"_index":27,"title":{},"body":{"classes/AddgroupDto.html":{},"coverage.html":{}}}],["src/models/fiszka/dto/addgroup.dto.ts:7",{"_index":30,"title":{},"body":{"classes/AddgroupDto.html":{}}}],["src/models/fiszka/dto/createfiszka.dto.ts",{"_index":692,"title":{},"body":{"classes/CreateFiszkaDto.html":{},"coverage.html":{}}}],["src/models/fiszka/dto/createfiszka.dto.ts:11",{"_index":707,"title":{},"body":{"classes/CreateFiszkaDto.html":{}}}],["src/models/fiszka/dto/createfiszka.dto.ts:15",{"_index":699,"title":{},"body":{"classes/CreateFiszkaDto.html":{}}}],["src/models/fiszka/dto/createfiszka.dto.ts:21",{"_index":697,"title":{},"body":{"classes/CreateFiszkaDto.html":{}}}],["src/models/fiszka/dto/createfiszka.dto.ts:26",{"_index":702,"title":{},"body":{"classes/CreateFiszkaDto.html":{}}}],["src/models/fiszka/dto/createfiszka.dto.ts:30",{"_index":706,"title":{},"body":{"classes/CreateFiszkaDto.html":{}}}],["src/models/fiszka/dto/createfiszka.dto.ts:34",{"_index":703,"title":{},"body":{"classes/CreateFiszkaDto.html":{}}}],["src/models/fiszka/dto/createfiszka.dto.ts:7",{"_index":704,"title":{},"body":{"classes/CreateFiszkaDto.html":{}}}],["src/models/fiszka/dto/editfiszka.dto.ts",{"_index":988,"title":{},"body":{"classes/EditFiszkaDto.html":{},"coverage.html":{}}}],["src/models/fiszka/dto/editfiszka.dto.ts:11",{"_index":997,"title":{},"body":{"classes/EditFiszkaDto.html":{}}}],["src/models/fiszka/dto/editfiszka.dto.ts:15",{"_index":991,"title":{},"body":{"classes/EditFiszkaDto.html":{}}}],["src/models/fiszka/dto/editfiszka.dto.ts:21",{"_index":990,"title":{},"body":{"classes/EditFiszkaDto.html":{}}}],["src/models/fiszka/dto/editfiszka.dto.ts:26",{"_index":992,"title":{},"body":{"classes/EditFiszkaDto.html":{}}}],["src/models/fiszka/dto/editfiszka.dto.ts:30",{"_index":995,"title":{},"body":{"classes/EditFiszkaDto.html":{}}}],["src/models/fiszka/dto/editfiszka.dto.ts:34",{"_index":993,"title":{},"body":{"classes/EditFiszkaDto.html":{}}}],["src/models/fiszka/dto/editfiszka.dto.ts:37",{"_index":996,"title":{},"body":{"classes/EditFiszkaDto.html":{}}}],["src/models/fiszka/dto/editfiszka.dto.ts:7",{"_index":994,"title":{},"body":{"classes/EditFiszkaDto.html":{}}}],["src/models/fiszka/dto/getfiszka.dto.ts",{"_index":1277,"title":{},"body":{"classes/GetFiszkaDto.html":{},"coverage.html":{}}}],["src/models/fiszka/dto/getfiszka.dto.ts:11",{"_index":1284,"title":{},"body":{"classes/GetFiszkaDto.html":{}}}],["src/models/fiszka/dto/getfiszka.dto.ts:15",{"_index":1288,"title":{},"body":{"classes/GetFiszkaDto.html":{}}}],["src/models/fiszka/dto/getfiszka.dto.ts:19",{"_index":1279,"title":{},"body":{"classes/GetFiszkaDto.html":{}}}],["src/models/fiszka/dto/getfiszka.dto.ts:25",{"_index":1278,"title":{},"body":{"classes/GetFiszkaDto.html":{}}}],["src/models/fiszka/dto/getfiszka.dto.ts:28",{"_index":1280,"title":{},"body":{"classes/GetFiszkaDto.html":{}}}],["src/models/fiszka/dto/getfiszka.dto.ts:32",{"_index":1285,"title":{},"body":{"classes/GetFiszkaDto.html":{}}}],["src/models/fiszka/dto/getfiszka.dto.ts:36",{"_index":1281,"title":{},"body":{"classes/GetFiszkaDto.html":{}}}],["src/models/fiszka/dto/getfiszka.dto.ts:39",{"_index":1287,"title":{},"body":{"classes/GetFiszkaDto.html":{}}}],["src/models/fiszka/dto/getfiszka.dto.ts:42",{"_index":1286,"title":{},"body":{"classes/GetFiszkaDto.html":{}}}],["src/models/fiszka/dto/getfiszka.dto.ts:45",{"_index":1282,"title":{},"body":{"classes/GetFiszkaDto.html":{}}}],["src/models/fiszka/dto/getfiszka.dto.ts:7",{"_index":1283,"title":{},"body":{"classes/GetFiszkaDto.html":{}}}],["src/models/fiszka/fiszka.controller.ts",{"_index":1078,"title":{},"body":{"controllers/FiszkaController.html":{},"coverage.html":{}}}],["src/models/fiszka/fiszka.controller.ts:22",{"_index":1119,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["src/models/fiszka/fiszka.controller.ts:38",{"_index":1128,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["src/models/fiszka/fiszka.controller.ts:45",{"_index":1125,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["src/models/fiszka/fiszka.controller.ts:51",{"_index":1122,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["src/models/fiszka/fiszka.controller.ts:58",{"_index":1112,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["src/models/fiszka/fiszka.controller.ts:64",{"_index":1115,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["src/models/fiszka/fiszka.controller.ts:70",{"_index":1093,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["src/models/fiszka/fiszka.controller.ts:77",{"_index":1102,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["src/models/fiszka/fiszka.controller.ts:83",{"_index":1105,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["src/models/fiszka/fiszka.controller.ts:90",{"_index":1098,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["src/models/fiszka/fiszka.controller.ts:97",{"_index":1109,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["src/models/fiszka/fiszka.module.ts",{"_index":1205,"title":{},"body":{"modules/FiszkaModule.html":{}}}],["src/models/fiszka/fiszka.service.ts",{"_index":1207,"title":{},"body":{"injectables/FiszkaService.html":{},"coverage.html":{}}}],["src/models/fiszka/fiszka.service.ts:10",{"_index":1210,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["src/models/fiszka/fiszka.service.ts:118",{"_index":1223,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["src/models/fiszka/fiszka.service.ts:13",{"_index":1220,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["src/models/fiszka/fiszka.service.ts:150",{"_index":1218,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["src/models/fiszka/fiszka.service.ts:169",{"_index":1219,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["src/models/fiszka/fiszka.service.ts:190",{"_index":1211,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["src/models/fiszka/fiszka.service.ts:229",{"_index":1214,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["src/models/fiszka/fiszka.service.ts:237",{"_index":1216,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["src/models/fiszka/fiszka.service.ts:246",{"_index":1212,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["src/models/fiszka/fiszka.service.ts:266",{"_index":1217,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["src/models/fiszka/fiszka.service.ts:42",{"_index":1222,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["src/models/fiszka/fiszka.service.ts:68",{"_index":1227,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["src/models/fiszka/fiszka.service.ts:90",{"_index":1225,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["src/models/fiszka/options.pipe.ts",{"_index":1707,"title":{},"body":{"injectables/OptionsPipe.html":{},"coverage.html":{}}}],["src/models/fiszka/options.pipe.ts:5",{"_index":1708,"title":{},"body":{"injectables/OptionsPipe.html":{}}}],["src/models/group/dto/creategroup.dto.ts",{"_index":723,"title":{},"body":{"classes/CreateGroupDto.html":{},"coverage.html":{}}}],["src/models/group/dto/creategroup.dto.ts:10",{"_index":736,"title":{},"body":{"classes/CreateGroupDto.html":{}}}],["src/models/group/dto/creategroup.dto.ts:13",{"_index":735,"title":{},"body":{"classes/CreateGroupDto.html":{}}}],["src/models/group/dto/creategroup.dto.ts:17",{"_index":733,"title":{},"body":{"classes/CreateGroupDto.html":{}}}],["src/models/group/dto/creategroup.dto.ts:20",{"_index":734,"title":{},"body":{"classes/CreateGroupDto.html":{}}}],["src/models/group/dto/creategroup.dto.ts:23",{"_index":738,"title":{},"body":{"classes/CreateGroupDto.html":{}}}],["src/models/group/dto/creategroup.dto.ts:7",{"_index":730,"title":{},"body":{"classes/CreateGroupDto.html":{}}}],["src/models/group/dto/editgroup.dto.ts",{"_index":999,"title":{},"body":{"classes/EditGroupDto.html":{},"coverage.html":{}}}],["src/models/group/dto/editgroup.dto.ts:10",{"_index":1004,"title":{},"body":{"classes/EditGroupDto.html":{}}}],["src/models/group/dto/editgroup.dto.ts:13",{"_index":1003,"title":{},"body":{"classes/EditGroupDto.html":{}}}],["src/models/group/dto/editgroup.dto.ts:17",{"_index":1001,"title":{},"body":{"classes/EditGroupDto.html":{}}}],["src/models/group/dto/editgroup.dto.ts:20",{"_index":1002,"title":{},"body":{"classes/EditGroupDto.html":{}}}],["src/models/group/dto/editgroup.dto.ts:23",{"_index":1005,"title":{},"body":{"classes/EditGroupDto.html":{}}}],["src/models/group/dto/editgroup.dto.ts:7",{"_index":1000,"title":{},"body":{"classes/EditGroupDto.html":{}}}],["src/models/group/dto/getgroup.dto.ts",{"_index":1291,"title":{},"body":{"classes/GetGroupDto.html":{},"coverage.html":{}}}],["src/models/group/dto/getgroup.dto.ts:10",{"_index":1297,"title":{},"body":{"classes/GetGroupDto.html":{}}}],["src/models/group/dto/getgroup.dto.ts:13",{"_index":1296,"title":{},"body":{"classes/GetGroupDto.html":{}}}],["src/models/group/dto/getgroup.dto.ts:17",{"_index":1293,"title":{},"body":{"classes/GetGroupDto.html":{}}}],["src/models/group/dto/getgroup.dto.ts:20",{"_index":1295,"title":{},"body":{"classes/GetGroupDto.html":{}}}],["src/models/group/dto/getgroup.dto.ts:23",{"_index":1298,"title":{},"body":{"classes/GetGroupDto.html":{}}}],["src/models/group/dto/getgroup.dto.ts:26",{"_index":1294,"title":{},"body":{"classes/GetGroupDto.html":{}}}],["src/models/group/dto/getgroup.dto.ts:7",{"_index":1292,"title":{},"body":{"classes/GetGroupDto.html":{}}}],["src/models/group/group.controller.ts",{"_index":1364,"title":{},"body":{"controllers/GroupController.html":{},"coverage.html":{}}}],["src/models/group/group.controller.ts:21",{"_index":1376,"title":{},"body":{"controllers/GroupController.html":{}}}],["src/models/group/group.controller.ts:31",{"_index":1379,"title":{},"body":{"controllers/GroupController.html":{}}}],["src/models/group/group.controller.ts:41",{"_index":1369,"title":{},"body":{"controllers/GroupController.html":{}}}],["src/models/group/group.controller.ts:47",{"_index":1372,"title":{},"body":{"controllers/GroupController.html":{}}}],["src/models/group/group.module.ts",{"_index":1409,"title":{},"body":{"modules/GroupModule.html":{}}}],["src/models/group/group.service.ts",{"_index":1411,"title":{},"body":{"injectables/GroupService.html":{},"coverage.html":{}}}],["src/models/group/group.service.ts:11",{"_index":1418,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/models/group/group.service.ts:113",{"_index":1416,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/models/group/group.service.ts:31",{"_index":1422,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/models/group/group.service.ts:57",{"_index":1417,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/models/group/group.service.ts:76",{"_index":1420,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/models/group/group.service.ts:8",{"_index":1414,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/models/group/group.service.ts:93",{"_index":1415,"title":{},"body":{"injectables/GroupService.html":{}}}],["src/models/interviews/dto/adduserinterview.dto.ts",{"_index":23,"title":{},"body":{"classes/AddUserInterViewDto.html":{},"coverage.html":{}}}],["src/models/interviews/dto/adduserinterview.dto.ts:6",{"_index":25,"title":{},"body":{"classes/AddUserInterViewDto.html":{}}}],["src/models/interviews/dto/createinterview.dto.ts",{"_index":747,"title":{},"body":{"classes/CreateInterViewDto.html":{},"coverage.html":{}}}],["src/models/interviews/dto/createinterview.dto.ts:13",{"_index":756,"title":{},"body":{"classes/CreateInterViewDto.html":{}}}],["src/models/interviews/dto/createinterview.dto.ts:16",{"_index":754,"title":{},"body":{"classes/CreateInterViewDto.html":{}}}],["src/models/interviews/dto/createinterview.dto.ts:19",{"_index":757,"title":{},"body":{"classes/CreateInterViewDto.html":{}}}],["src/models/interviews/dto/createinterview.dto.ts:22",{"_index":753,"title":{},"body":{"classes/CreateInterViewDto.html":{}}}],["src/models/interviews/dto/createinterview.dto.ts:9",{"_index":752,"title":{},"body":{"classes/CreateInterViewDto.html":{}}}],["src/models/interviews/dto/editinterview.dto.ts",{"_index":1007,"title":{},"body":{"classes/EditInterViewDto.html":{},"coverage.html":{}}}],["src/models/interviews/dto/editinterview.dto.ts:10",{"_index":1009,"title":{},"body":{"classes/EditInterViewDto.html":{}}}],["src/models/interviews/dto/editinterview.dto.ts:14",{"_index":1012,"title":{},"body":{"classes/EditInterViewDto.html":{}}}],["src/models/interviews/dto/editinterview.dto.ts:17",{"_index":1010,"title":{},"body":{"classes/EditInterViewDto.html":{}}}],["src/models/interviews/dto/editinterview.dto.ts:20",{"_index":1014,"title":{},"body":{"classes/EditInterViewDto.html":{}}}],["src/models/interviews/dto/getfindbyid.dto.ts",{"_index":1274,"title":{},"body":{"classes/GetFindByIdDto.html":{},"coverage.html":{}}}],["src/models/interviews/dto/getfindbyid.dto.ts:4",{"_index":1275,"title":{},"body":{"classes/GetFindByIdDto.html":{}}}],["src/models/interviews/dto/getfindbyid.dto.ts:5",{"_index":1276,"title":{},"body":{"classes/GetFindByIdDto.html":{}}}],["src/models/interviews/dto/getinterviews.dto.ts",{"_index":1301,"title":{},"body":{"classes/GetInterViewsDto.html":{},"coverage.html":{}}}],["src/models/interviews/dto/getinterviews.dto.ts:15",{"_index":1305,"title":{},"body":{"classes/GetInterViewsDto.html":{}}}],["src/models/interviews/dto/getinterviews.dto.ts:21",{"_index":1302,"title":{},"body":{"classes/GetInterViewsDto.html":{}}}],["src/models/interviews/dto/getinterviews.dto.ts:24",{"_index":1308,"title":{},"body":{"classes/GetInterViewsDto.html":{}}}],["src/models/interviews/dto/getinterviews.dto.ts:27",{"_index":1303,"title":{},"body":{"classes/GetInterViewsDto.html":{}}}],["src/models/interviews/dto/getinterviews.dto.ts:6",{"_index":1304,"title":{},"body":{"classes/GetInterViewsDto.html":{}}}],["src/models/interviews/dto/getinterviews.dto.ts:9",{"_index":1307,"title":{},"body":{"classes/GetInterViewsDto.html":{}}}],["src/models/interviews/dto/getuserinterview.dto.ts",{"_index":1350,"title":{},"body":{"classes/GetUserInterViewDto.html":{},"coverage.html":{}}}],["src/models/interviews/dto/getuserinterview.dto.ts:12",{"_index":1354,"title":{},"body":{"classes/GetUserInterViewDto.html":{}}}],["src/models/interviews/dto/getuserinterview.dto.ts:15",{"_index":1352,"title":{},"body":{"classes/GetUserInterViewDto.html":{}}}],["src/models/interviews/dto/getuserinterview.dto.ts:6",{"_index":1353,"title":{},"body":{"classes/GetUserInterViewDto.html":{}}}],["src/models/interviews/dto/getuserinterview.dto.ts:9",{"_index":1351,"title":{},"body":{"classes/GetUserInterViewDto.html":{}}}],["src/models/interviews/dto/removeuserinterview.dto.ts",{"_index":1853,"title":{},"body":{"classes/RemoveUserInterViewDto.html":{},"coverage.html":{}}}],["src/models/interviews/dto/removeuserinterview.dto.ts:6",{"_index":1855,"title":{},"body":{"classes/RemoveUserInterViewDto.html":{}}}],["src/models/interviews/interviews.controller.ts",{"_index":1452,"title":{},"body":{"controllers/InterviewsController.html":{},"coverage.html":{}}}],["src/models/interviews/interviews.controller.ts:26",{"_index":1475,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["src/models/interviews/interviews.controller.ts:34",{"_index":1472,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["src/models/interviews/interviews.controller.ts:41",{"_index":1478,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["src/models/interviews/interviews.controller.ts:49",{"_index":1485,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["src/models/interviews/interviews.controller.ts:66",{"_index":1482,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["src/models/interviews/interviews.controller.ts:73",{"_index":1469,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["src/models/interviews/interviews.controller.ts:79",{"_index":1463,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["src/models/interviews/interviews.controller.ts:85",{"_index":1489,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["src/models/interviews/interviews.controller.ts:91",{"_index":1466,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["src/models/interviews/interviews.module.ts",{"_index":1533,"title":{},"body":{"modules/InterviewsModule.html":{}}}],["src/models/interviews/interviews.service.ts",{"_index":1537,"title":{},"body":{"injectables/InterviewsService.html":{},"coverage.html":{}}}],["src/models/interviews/interviews.service.ts:110",{"_index":1549,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["src/models/interviews/interviews.service.ts:13",{"_index":1541,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["src/models/interviews/interviews.service.ts:141",{"_index":1556,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["src/models/interviews/interviews.service.ts:160",{"_index":1547,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["src/models/interviews/interviews.service.ts:17",{"_index":1553,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["src/models/interviews/interviews.service.ts:198",{"_index":1543,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["src/models/interviews/interviews.service.ts:236",{"_index":1560,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["src/models/interviews/interviews.service.ts:263",{"_index":1558,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["src/models/interviews/interviews.service.ts:285",{"_index":1546,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["src/models/interviews/interviews.service.ts:41",{"_index":1557,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["src/models/interviews/interviews.service.ts:66",{"_index":1555,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["src/models/interviews/interviews.service.ts:82",{"_index":1551,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["src/models/log/logger.controller.ts",{"_index":1616,"title":{},"body":{"controllers/LoggerController.html":{},"coverage.html":{}}}],["src/models/log/logger.controller.ts:14",{"_index":1619,"title":{},"body":{"controllers/LoggerController.html":{}}}],["src/models/log/logger.module.ts",{"_index":1651,"title":{},"body":{"modules/LoggerModule.html":{}}}],["src/models/log/logger.service.ts",{"_index":1653,"title":{},"body":{"injectables/LoggerService.html":{},"coverage.html":{}}}],["src/models/log/logger.service.ts:5",{"_index":1655,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/models/log/logger.service.ts:9",{"_index":1656,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/models/personcontact/contactperson.controller.ts",{"_index":572,"title":{},"body":{"controllers/ContactPersonController.html":{},"coverage.html":{}}}],["src/models/personcontact/contactperson.controller.ts:21",{"_index":586,"title":{},"body":{"controllers/ContactPersonController.html":{}}}],["src/models/personcontact/contactperson.controller.ts:32",{"_index":575,"title":{},"body":{"controllers/ContactPersonController.html":{}}}],["src/models/personcontact/contactperson.controller.ts:39",{"_index":584,"title":{},"body":{"controllers/ContactPersonController.html":{}}}],["src/models/personcontact/contactperson.controller.ts:46",{"_index":578,"title":{},"body":{"controllers/ContactPersonController.html":{}}}],["src/models/personcontact/contactperson.module.ts",{"_index":607,"title":{},"body":{"modules/ContactPersonModule.html":{}}}],["src/models/personcontact/contactperson.service.ts",{"_index":610,"title":{},"body":{"injectables/ContactPersonService.html":{},"coverage.html":{}}}],["src/models/personcontact/contactperson.service.ts:12",{"_index":618,"title":{},"body":{"injectables/ContactPersonService.html":{}}}],["src/models/personcontact/contactperson.service.ts:27",{"_index":620,"title":{},"body":{"injectables/ContactPersonService.html":{}}}],["src/models/personcontact/contactperson.service.ts:47",{"_index":614,"title":{},"body":{"injectables/ContactPersonService.html":{}}}],["src/models/personcontact/contactperson.service.ts:68",{"_index":616,"title":{},"body":{"injectables/ContactPersonService.html":{}}}],["src/models/personcontact/contactperson.service.ts:9",{"_index":613,"title":{},"body":{"injectables/ContactPersonService.html":{}}}],["src/models/personcontact/contactperson.service.ts:93",{"_index":615,"title":{},"body":{"injectables/ContactPersonService.html":{}}}],["src/models/personcontact/dto/createcontactperson.dto.ts",{"_index":671,"title":{},"body":{"classes/CreateContactPersontDto.html":{},"coverage.html":{}}}],["src/models/personcontact/dto/createcontactperson.dto.ts:11",{"_index":679,"title":{},"body":{"classes/CreateContactPersontDto.html":{}}}],["src/models/personcontact/dto/createcontactperson.dto.ts:15",{"_index":673,"title":{},"body":{"classes/CreateContactPersontDto.html":{}}}],["src/models/personcontact/dto/createcontactperson.dto.ts:19",{"_index":678,"title":{},"body":{"classes/CreateContactPersontDto.html":{}}}],["src/models/personcontact/dto/createcontactperson.dto.ts:7",{"_index":676,"title":{},"body":{"classes/CreateContactPersontDto.html":{}}}],["src/models/personcontact/dto/editcontactperson.dto.ts",{"_index":977,"title":{},"body":{"classes/EditContactPersontDto.html":{},"coverage.html":{}}}],["src/models/personcontact/dto/editcontactperson.dto.ts:11",{"_index":981,"title":{},"body":{"classes/EditContactPersontDto.html":{}}}],["src/models/personcontact/dto/editcontactperson.dto.ts:15",{"_index":978,"title":{},"body":{"classes/EditContactPersontDto.html":{}}}],["src/models/personcontact/dto/editcontactperson.dto.ts:19",{"_index":980,"title":{},"body":{"classes/EditContactPersontDto.html":{}}}],["src/models/personcontact/dto/editcontactperson.dto.ts:7",{"_index":979,"title":{},"body":{"classes/EditContactPersontDto.html":{}}}],["src/models/personcontact/dto/getcontactperson.dto.ts",{"_index":1260,"title":{},"body":{"classes/GetContactPersontDto.html":{},"coverage.html":{}}}],["src/models/personcontact/dto/getcontactperson.dto.ts:12",{"_index":1265,"title":{},"body":{"classes/GetContactPersontDto.html":{}}}],["src/models/personcontact/dto/getcontactperson.dto.ts:15",{"_index":1261,"title":{},"body":{"classes/GetContactPersontDto.html":{}}}],["src/models/personcontact/dto/getcontactperson.dto.ts:18",{"_index":1264,"title":{},"body":{"classes/GetContactPersontDto.html":{}}}],["src/models/personcontact/dto/getcontactperson.dto.ts:6",{"_index":1262,"title":{},"body":{"classes/GetContactPersontDto.html":{}}}],["src/models/personcontact/dto/getcontactperson.dto.ts:9",{"_index":1263,"title":{},"body":{"classes/GetContactPersontDto.html":{}}}],["src/models/predicte/dto/getclassfromfiszki.dto.ts",{"_index":2107,"title":{},"body":{"classes/SendFiszkiDto.html":{},"coverage.html":{}}}],["src/models/predicte/dto/getclassfromfiszki.dto.ts:6",{"_index":2108,"title":{},"body":{"classes/SendFiszkiDto.html":{}}}],["src/models/predicte/dto/getclassfromfiszki.dto.ts:9",{"_index":2109,"title":{},"body":{"classes/SendFiszkiDto.html":{}}}],["src/models/predicte/predicte.controller.ts",{"_index":1710,"title":{},"body":{"controllers/PredicteController.html":{},"coverage.html":{}}}],["src/models/predicte/predicte.controller.ts:21",{"_index":1715,"title":{},"body":{"controllers/PredicteController.html":{}}}],["src/models/predicte/predicte.module.ts",{"_index":1780,"title":{},"body":{"modules/PredicteModule.html":{}}}],["src/models/predicte/predicte.service.ts",{"_index":1782,"title":{},"body":{"injectables/PredicteService.html":{},"coverage.html":{}}}],["src/models/predicte/predicte.service.ts:6",{"_index":1783,"title":{},"body":{"injectables/PredicteService.html":{}}}],["src/models/predicte/predicte.service.ts:9",{"_index":1785,"title":{},"body":{"injectables/PredicteService.html":{}}}],["src/models/rentalcost/dto/createrentalcost.dto.ts",{"_index":759,"title":{},"body":{"classes/CreateRentalCostDto.html":{},"coverage.html":{}}}],["src/models/rentalcost/dto/createrentalcost.dto.ts:13",{"_index":765,"title":{},"body":{"classes/CreateRentalCostDto.html":{}}}],["src/models/rentalcost/dto/createrentalcost.dto.ts:9",{"_index":764,"title":{},"body":{"classes/CreateRentalCostDto.html":{}}}],["src/models/rentalcost/dto/editrentalcost.dto.ts",{"_index":1017,"title":{},"body":{"classes/EditRentalCostDto.html":{},"coverage.html":{}}}],["src/models/rentalcost/dto/editrentalcost.dto.ts:12",{"_index":1019,"title":{},"body":{"classes/EditRentalCostDto.html":{}}}],["src/models/rentalcost/dto/editrentalcost.dto.ts:8",{"_index":1018,"title":{},"body":{"classes/EditRentalCostDto.html":{}}}],["src/models/rentalcost/dto/getrentalcost.dto.ts",{"_index":1310,"title":{},"body":{"classes/GetRentalCostDto.html":{},"coverage.html":{}}}],["src/models/rentalcost/dto/getrentalcost.dto.ts:12",{"_index":1312,"title":{},"body":{"classes/GetRentalCostDto.html":{}}}],["src/models/rentalcost/dto/getrentalcost.dto.ts:8",{"_index":1311,"title":{},"body":{"classes/GetRentalCostDto.html":{}}}],["src/models/rentalcost/rentalcost.controller.ts",{"_index":1857,"title":{},"body":{"controllers/RentalCostController.html":{},"coverage.html":{}}}],["src/models/rentalcost/rentalcost.controller.ts:22",{"_index":1860,"title":{},"body":{"controllers/RentalCostController.html":{}}}],["src/models/rentalcost/rentalcost.controller.ts:34",{"_index":1859,"title":{},"body":{"controllers/RentalCostController.html":{}}}],["src/models/rentalcost/rentalcost.controller.ts:40",{"_index":1862,"title":{},"body":{"controllers/RentalCostController.html":{}}}],["src/models/rentalcost/rentalcost.module.ts",{"_index":1881,"title":{},"body":{"modules/RentalCostModule.html":{}}}],["src/models/rentalcost/rentalcost.service.ts",{"_index":1883,"title":{},"body":{"injectables/RentalCostService.html":{},"coverage.html":{}}}],["src/models/rentalcost/rentalcost.service.ts:11",{"_index":1886,"title":{},"body":{"injectables/RentalCostService.html":{}}}],["src/models/rentalcost/rentalcost.service.ts:22",{"_index":1887,"title":{},"body":{"injectables/RentalCostService.html":{}}}],["src/models/rentalcost/rentalcost.service.ts:43",{"_index":1885,"title":{},"body":{"injectables/RentalCostService.html":{}}}],["src/models/rentalcost/rentalcost.service.ts:60",{"_index":1888,"title":{},"body":{"injectables/RentalCostService.html":{}}}],["src/models/rentalcost/rentalcost.service.ts:8",{"_index":1884,"title":{},"body":{"injectables/RentalCostService.html":{}}}],["src/models/schedule/dto/createschedule.dto.ts",{"_index":777,"title":{},"body":{"classes/CreateScheduleDto.html":{},"coverage.html":{}}}],["src/models/schedule/dto/createschedule.dto.ts:15",{"_index":780,"title":{},"body":{"classes/CreateScheduleDto.html":{}}}],["src/models/schedule/dto/createschedule.dto.ts:18",{"_index":783,"title":{},"body":{"classes/CreateScheduleDto.html":{}}}],["src/models/schedule/dto/createschedule.dto.ts:21",{"_index":784,"title":{},"body":{"classes/CreateScheduleDto.html":{}}}],["src/models/schedule/dto/createschedule.dto.ts:9",{"_index":782,"title":{},"body":{"classes/CreateScheduleDto.html":{}}}],["src/models/schedule/dto/editschedule.dto.ts",{"_index":1025,"title":{},"body":{"classes/EditScheduleDto.html":{},"coverage.html":{}}}],["src/models/schedule/dto/editschedule.dto.ts:14",{"_index":1026,"title":{},"body":{"classes/EditScheduleDto.html":{}}}],["src/models/schedule/dto/editschedule.dto.ts:17",{"_index":1028,"title":{},"body":{"classes/EditScheduleDto.html":{}}}],["src/models/schedule/dto/editschedule.dto.ts:8",{"_index":1027,"title":{},"body":{"classes/EditScheduleDto.html":{}}}],["src/models/schedule/dto/getschedule.dto.ts",{"_index":1314,"title":{},"body":{"classes/GetScheduleDto.html":{},"coverage.html":{}}}],["src/models/schedule/dto/getschedule.dto.ts:10",{"_index":1315,"title":{},"body":{"classes/GetScheduleDto.html":{}}}],["src/models/schedule/dto/getschedule.dto.ts:13",{"_index":1317,"title":{},"body":{"classes/GetScheduleDto.html":{}}}],["src/models/schedule/dto/getschedule.dto.ts:16",{"_index":1318,"title":{},"body":{"classes/GetScheduleDto.html":{}}}],["src/models/schedule/dto/getschedule.dto.ts:7",{"_index":1316,"title":{},"body":{"classes/GetScheduleDto.html":{}}}],["src/models/schedule/schedule.controller.ts",{"_index":1917,"title":{},"body":{"controllers/ScheduleController.html":{},"coverage.html":{}}}],["src/models/schedule/schedule.controller.ts:20",{"_index":1928,"title":{},"body":{"controllers/ScheduleController.html":{}}}],["src/models/schedule/schedule.controller.ts:26",{"_index":1931,"title":{},"body":{"controllers/ScheduleController.html":{}}}],["src/models/schedule/schedule.controller.ts:33",{"_index":1925,"title":{},"body":{"controllers/ScheduleController.html":{}}}],["src/models/schedule/schedule.controller.ts:40",{"_index":1921,"title":{},"body":{"controllers/ScheduleController.html":{}}}],["src/models/schedule/schedule.module.ts",{"_index":2012,"title":{},"body":{"modules/ScheduleModule.html":{}}}],["src/models/schedule/schedule.service.ts",{"_index":2014,"title":{},"body":{"injectables/ScheduleService.html":{},"coverage.html":{}}}],["src/models/schedule/schedule.service.ts:12",{"_index":2017,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["src/models/schedule/schedule.service.ts:33",{"_index":2019,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["src/models/schedule/schedule.service.ts:48",{"_index":2021,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["src/models/schedule/schedule.service.ts:69",{"_index":2023,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["src/models/schedule/schedule.service.ts:9",{"_index":2015,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["src/models/scheduledays/dto/createsheduledays.dto.ts",{"_index":770,"title":{},"body":{"classes/CreateScheduleDaysDto.html":{},"coverage.html":{}}}],["src/models/scheduledays/dto/createsheduledays.dto.ts:12",{"_index":775,"title":{},"body":{"classes/CreateScheduleDaysDto.html":{}}}],["src/models/scheduledays/dto/createsheduledays.dto.ts:9",{"_index":774,"title":{},"body":{"classes/CreateScheduleDaysDto.html":{}}}],["src/models/scheduledays/dto/editsheduledays.dto.ts",{"_index":1021,"title":{},"body":{"classes/EditScheduleDaysDto.html":{},"coverage.html":{}}}],["src/models/scheduledays/dto/editsheduledays.dto.ts:12",{"_index":1023,"title":{},"body":{"classes/EditScheduleDaysDto.html":{}}}],["src/models/scheduledays/dto/editsheduledays.dto.ts:9",{"_index":1022,"title":{},"body":{"classes/EditScheduleDaysDto.html":{}}}],["src/models/scheduledays/scheduledays.controller.ts",{"_index":1965,"title":{},"body":{"controllers/ScheduleDaysController.html":{},"coverage.html":{}}}],["src/models/scheduledays/scheduledays.controller.ts:19",{"_index":1971,"title":{},"body":{"controllers/ScheduleDaysController.html":{}}}],["src/models/scheduledays/scheduledays.controller.ts:26",{"_index":1968,"title":{},"body":{"controllers/ScheduleDaysController.html":{}}}],["src/models/scheduledays/scheduledays.controller.ts:33",{"_index":1969,"title":{},"body":{"controllers/ScheduleDaysController.html":{}}}],["src/models/scheduledays/scheduledays.module.ts",{"_index":1984,"title":{},"body":{"modules/ScheduleDaysModule.html":{}}}],["src/models/scheduledays/scheduledays.service.ts",{"_index":1986,"title":{},"body":{"injectables/ScheduleDaysService.html":{},"coverage.html":{}}}],["src/models/scheduledays/scheduledays.service.ts:12",{"_index":1993,"title":{},"body":{"injectables/ScheduleDaysService.html":{}}}],["src/models/scheduledays/scheduledays.service.ts:30",{"_index":1989,"title":{},"body":{"injectables/ScheduleDaysService.html":{}}}],["src/models/scheduledays/scheduledays.service.ts:52",{"_index":1991,"title":{},"body":{"injectables/ScheduleDaysService.html":{}}}],["src/models/scheduledays/scheduledays.service.ts:9",{"_index":1987,"title":{},"body":{"injectables/ScheduleDaysService.html":{}}}],["src/models/school/dto/createschool.dto.ts",{"_index":787,"title":{},"body":{"classes/CreateSchoolDto.html":{},"coverage.html":{}}}],["src/models/school/dto/createschool.dto.ts:13",{"_index":796,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["src/models/school/dto/createschool.dto.ts:17",{"_index":813,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["src/models/school/dto/createschool.dto.ts:21",{"_index":820,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["src/models/school/dto/createschool.dto.ts:24",{"_index":799,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["src/models/school/dto/createschool.dto.ts:28",{"_index":805,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["src/models/school/dto/createschool.dto.ts:33",{"_index":809,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["src/models/school/dto/createschool.dto.ts:37",{"_index":800,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["src/models/school/dto/createschool.dto.ts:40",{"_index":811,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["src/models/school/dto/createschool.dto.ts:44",{"_index":815,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["src/models/school/dto/createschool.dto.ts:49",{"_index":818,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["src/models/school/dto/createschool.dto.ts:53",{"_index":807,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["src/models/school/dto/createschool.dto.ts:59",{"_index":804,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["src/models/school/dto/createschool.dto.ts:64",{"_index":798,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["src/models/school/dto/createschool.dto.ts:9",{"_index":802,"title":{},"body":{"classes/CreateSchoolDto.html":{}}}],["src/models/school/dto/editschool.dto.ts",{"_index":1029,"title":{},"body":{"classes/EditSchoolDto.html":{},"coverage.html":{}}}],["src/models/school/dto/editschool.dto.ts:12",{"_index":1030,"title":{},"body":{"classes/EditSchoolDto.html":{}}}],["src/models/school/dto/editschool.dto.ts:16",{"_index":1042,"title":{},"body":{"classes/EditSchoolDto.html":{}}}],["src/models/school/dto/editschool.dto.ts:20",{"_index":1047,"title":{},"body":{"classes/EditSchoolDto.html":{}}}],["src/models/school/dto/editschool.dto.ts:23",{"_index":1032,"title":{},"body":{"classes/EditSchoolDto.html":{}}}],["src/models/school/dto/editschool.dto.ts:27",{"_index":1036,"title":{},"body":{"classes/EditSchoolDto.html":{}}}],["src/models/school/dto/editschool.dto.ts:32",{"_index":1040,"title":{},"body":{"classes/EditSchoolDto.html":{}}}],["src/models/school/dto/editschool.dto.ts:36",{"_index":1033,"title":{},"body":{"classes/EditSchoolDto.html":{}}}],["src/models/school/dto/editschool.dto.ts:40",{"_index":1044,"title":{},"body":{"classes/EditSchoolDto.html":{}}}],["src/models/school/dto/editschool.dto.ts:45",{"_index":1045,"title":{},"body":{"classes/EditSchoolDto.html":{}}}],["src/models/school/dto/editschool.dto.ts:49",{"_index":1038,"title":{},"body":{"classes/EditSchoolDto.html":{}}}],["src/models/school/dto/editschool.dto.ts:55",{"_index":1035,"title":{},"body":{"classes/EditSchoolDto.html":{}}}],["src/models/school/dto/editschool.dto.ts:60",{"_index":1031,"title":{},"body":{"classes/EditSchoolDto.html":{}}}],["src/models/school/dto/editschool.dto.ts:9",{"_index":1034,"title":{},"body":{"classes/EditSchoolDto.html":{}}}],["src/models/school/dto/getschool.dto.ts",{"_index":1320,"title":{},"body":{"classes/GetSchoolDto.html":{},"coverage.html":{}}}],["src/models/school/dto/getschool.dto.ts:12",{"_index":1331,"title":{},"body":{"classes/GetSchoolDto.html":{}}}],["src/models/school/dto/getschool.dto.ts:16",{"_index":1332,"title":{},"body":{"classes/GetSchoolDto.html":{}}}],["src/models/school/dto/getschool.dto.ts:19",{"_index":1321,"title":{},"body":{"classes/GetSchoolDto.html":{}}}],["src/models/school/dto/getschool.dto.ts:23",{"_index":1335,"title":{},"body":{"classes/GetSchoolDto.html":{}}}],["src/models/school/dto/getschool.dto.ts:26",{"_index":1323,"title":{},"body":{"classes/GetSchoolDto.html":{}}}],["src/models/school/dto/getschool.dto.ts:29",{"_index":1328,"title":{},"body":{"classes/GetSchoolDto.html":{}}}],["src/models/school/dto/getschool.dto.ts:33",{"_index":1330,"title":{},"body":{"classes/GetSchoolDto.html":{}}}],["src/models/school/dto/getschool.dto.ts:36",{"_index":1324,"title":{},"body":{"classes/GetSchoolDto.html":{}}}],["src/models/school/dto/getschool.dto.ts:39",{"_index":1333,"title":{},"body":{"classes/GetSchoolDto.html":{}}}],["src/models/school/dto/getschool.dto.ts:42",{"_index":1334,"title":{},"body":{"classes/GetSchoolDto.html":{}}}],["src/models/school/dto/getschool.dto.ts:45",{"_index":1329,"title":{},"body":{"classes/GetSchoolDto.html":{}}}],["src/models/school/dto/getschool.dto.ts:48",{"_index":1327,"title":{},"body":{"classes/GetSchoolDto.html":{}}}],["src/models/school/dto/getschool.dto.ts:51",{"_index":1322,"title":{},"body":{"classes/GetSchoolDto.html":{}}}],["src/models/school/dto/getschool.dto.ts:6",{"_index":1325,"title":{},"body":{"classes/GetSchoolDto.html":{}}}],["src/models/school/dto/getschool.dto.ts:9",{"_index":1326,"title":{},"body":{"classes/GetSchoolDto.html":{}}}],["src/models/school/dtovalidation.pipe.ts",{"_index":931,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"coverage.html":{}}}],["src/models/school/dtovalidation.pipe.ts:10",{"_index":934,"title":{},"body":{"injectables/DtoValidationPipe.html":{}}}],["src/models/school/dtovalidation.pipe.ts:13",{"_index":939,"title":{},"body":{"injectables/DtoValidationPipe.html":{}}}],["src/models/school/school.controller.ts",{"_index":2038,"title":{},"body":{"controllers/SchoolController.html":{},"coverage.html":{}}}],["src/models/school/school.controller.ts:22",{"_index":2048,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/models/school/school.controller.ts:34",{"_index":2051,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/models/school/school.controller.ts:46",{"_index":2046,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/models/school/school.controller.ts:53",{"_index":2043,"title":{},"body":{"controllers/SchoolController.html":{}}}],["src/models/school/school.module.ts",{"_index":2081,"title":{},"body":{"modules/SchoolModule.html":{}}}],["src/models/school/school.service.ts",{"_index":2083,"title":{},"body":{"injectables/SchoolService.html":{},"coverage.html":{}}}],["src/models/school/school.service.ts:11",{"_index":2086,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/models/school/school.service.ts:115",{"_index":2089,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/models/school/school.service.ts:124",{"_index":2088,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/models/school/school.service.ts:15",{"_index":2090,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/models/school/school.service.ts:41",{"_index":2092,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/models/school/school.service.ts:68",{"_index":2091,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/models/school/school.service.ts:90",{"_index":2094,"title":{},"body":{"injectables/SchoolService.html":{}}}],["src/models/user/dto/createuser.dto.ts",{"_index":836,"title":{},"body":{"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"coverage.html":{}}}],["src/models/user/dto/createuser.dto.ts:13",{"_index":866,"title":{},"body":{"classes/CreateUserForRdDto.html":{}}}],["src/models/user/dto/createuser.dto.ts:17",{"_index":858,"title":{},"body":{"classes/CreateUserForRdDto.html":{}}}],["src/models/user/dto/createuser.dto.ts:21",{"_index":857,"title":{},"body":{"classes/CreateUserForRdDto.html":{}}}],["src/models/user/dto/createuser.dto.ts:25",{"_index":861,"title":{},"body":{"classes/CreateUserForRdDto.html":{}}}],["src/models/user/dto/createuser.dto.ts:29",{"_index":862,"title":{},"body":{"classes/CreateUserForRdDto.html":{}}}],["src/models/user/dto/createuser.dto.ts:32",{"_index":856,"title":{},"body":{"classes/CreateUserForRdDto.html":{}}}],["src/models/user/dto/createuser.dto.ts:37",{"_index":864,"title":{},"body":{"classes/CreateUserForRdDto.html":{}}}],["src/models/user/dto/createuser.dto.ts:42",{"_index":844,"title":{},"body":{"classes/CreateUserForMGTMTDto.html":{}}}],["src/models/user/dto/createuser.dto.ts:46",{"_index":849,"title":{},"body":{"classes/CreateUserForMGTMTDto.html":{}}}],["src/models/user/dto/createuser.dto.ts:50",{"_index":843,"title":{},"body":{"classes/CreateUserForMGTMTDto.html":{}}}],["src/models/user/dto/createuser.dto.ts:54",{"_index":841,"title":{},"body":{"classes/CreateUserForMGTMTDto.html":{}}}],["src/models/user/dto/createuser.dto.ts:58",{"_index":845,"title":{},"body":{"classes/CreateUserForMGTMTDto.html":{}}}],["src/models/user/dto/createuser.dto.ts:61",{"_index":846,"title":{},"body":{"classes/CreateUserForMGTMTDto.html":{}}}],["src/models/user/dto/createuser.dto.ts:64",{"_index":839,"title":{},"body":{"classes/CreateUserForMGTMTDto.html":{}}}],["src/models/user/dto/createuser.dto.ts:68",{"_index":848,"title":{},"body":{"classes/CreateUserForMGTMTDto.html":{}}}],["src/models/user/dto/createuser.dto.ts:9",{"_index":860,"title":{},"body":{"classes/CreateUserForRdDto.html":{}}}],["src/models/user/dto/edituser.dto.ts",{"_index":1048,"title":{},"body":{"classes/EditSelfDto.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"coverage.html":{}}}],["src/models/user/dto/edituser.dto.ts:11",{"_index":1076,"title":{},"body":{"classes/EditUserForRdDto.html":{}}}],["src/models/user/dto/edituser.dto.ts:15",{"_index":1070,"title":{},"body":{"classes/EditUserForRdDto.html":{}}}],["src/models/user/dto/edituser.dto.ts:19",{"_index":1073,"title":{},"body":{"classes/EditUserForRdDto.html":{}}}],["src/models/user/dto/edituser.dto.ts:23",{"_index":1068,"title":{},"body":{"classes/EditUserForRdDto.html":{}}}],["src/models/user/dto/edituser.dto.ts:26",{"_index":1069,"title":{},"body":{"classes/EditUserForRdDto.html":{}}}],["src/models/user/dto/edituser.dto.ts:29",{"_index":1072,"title":{},"body":{"classes/EditUserForRdDto.html":{}}}],["src/models/user/dto/edituser.dto.ts:32",{"_index":1067,"title":{},"body":{"classes/EditUserForRdDto.html":{}}}],["src/models/user/dto/edituser.dto.ts:37",{"_index":1075,"title":{},"body":{"classes/EditUserForRdDto.html":{}}}],["src/models/user/dto/edituser.dto.ts:42",{"_index":1060,"title":{},"body":{"classes/EditUserForMGTMTDto.html":{}}}],["src/models/user/dto/edituser.dto.ts:46",{"_index":1066,"title":{},"body":{"classes/EditUserForMGTMTDto.html":{}}}],["src/models/user/dto/edituser.dto.ts:50",{"_index":1059,"title":{},"body":{"classes/EditUserForMGTMTDto.html":{}}}],["src/models/user/dto/edituser.dto.ts:54",{"_index":1062,"title":{},"body":{"classes/EditUserForMGTMTDto.html":{}}}],["src/models/user/dto/edituser.dto.ts:58",{"_index":1056,"title":{},"body":{"classes/EditUserForMGTMTDto.html":{}}}],["src/models/user/dto/edituser.dto.ts:61",{"_index":1057,"title":{},"body":{"classes/EditUserForMGTMTDto.html":{}}}],["src/models/user/dto/edituser.dto.ts:64",{"_index":1063,"title":{},"body":{"classes/EditUserForMGTMTDto.html":{}}}],["src/models/user/dto/edituser.dto.ts:67",{"_index":1055,"title":{},"body":{"classes/EditUserForMGTMTDto.html":{}}}],["src/models/user/dto/edituser.dto.ts:7",{"_index":1071,"title":{},"body":{"classes/EditUserForRdDto.html":{}}}],["src/models/user/dto/edituser.dto.ts:70",{"_index":1061,"title":{},"body":{"classes/EditUserForMGTMTDto.html":{}}}],["src/models/user/dto/edituser.dto.ts:74",{"_index":1065,"title":{},"body":{"classes/EditUserForMGTMTDto.html":{}}}],["src/models/user/dto/edituser.dto.ts:80",{"_index":1052,"title":{},"body":{"classes/EditSelfDto.html":{}}}],["src/models/user/dto/edituser.dto.ts:84",{"_index":1050,"title":{},"body":{"classes/EditSelfDto.html":{}}}],["src/models/user/dto/edituser.dto.ts:87",{"_index":1051,"title":{},"body":{"classes/EditSelfDto.html":{}}}],["src/models/user/dto/getgraphdate.dto.ts",{"_index":2359,"title":{},"body":{"coverage.html":{},"classes/getGraphDateDto.html":{}}}],["src/models/user/dto/getgraphdate.dto.ts:11",{"_index":2405,"title":{},"body":{"classes/getGraphDateDto.html":{}}}],["src/models/user/dto/getgraphdate.dto.ts:7",{"_index":2406,"title":{},"body":{"classes/getGraphDateDto.html":{}}}],["src/models/user/dto/getuser.dto",{"_index":240,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["src/models/user/dto/getuser.dto.ts",{"_index":1336,"title":{},"body":{"classes/GetUserDto.html":{},"coverage.html":{}}}],["src/models/user/dto/getuser.dto.ts:12",{"_index":1346,"title":{},"body":{"classes/GetUserDto.html":{}}}],["src/models/user/dto/getuser.dto.ts:16",{"_index":1341,"title":{},"body":{"classes/GetUserDto.html":{}}}],["src/models/user/dto/getuser.dto.ts:20",{"_index":1339,"title":{},"body":{"classes/GetUserDto.html":{}}}],["src/models/user/dto/getuser.dto.ts:24",{"_index":1347,"title":{},"body":{"classes/GetUserDto.html":{}}}],["src/models/user/dto/getuser.dto.ts:27",{"_index":1343,"title":{},"body":{"classes/GetUserDto.html":{}}}],["src/models/user/dto/getuser.dto.ts:30",{"_index":1340,"title":{},"body":{"classes/GetUserDto.html":{}}}],["src/models/user/dto/getuser.dto.ts:33",{"_index":1338,"title":{},"body":{"classes/GetUserDto.html":{}}}],["src/models/user/dto/getuser.dto.ts:37",{"_index":1345,"title":{},"body":{"classes/GetUserDto.html":{}}}],["src/models/user/dto/getuser.dto.ts:8",{"_index":1342,"title":{},"body":{"classes/GetUserDto.html":{}}}],["src/models/user/dto/graphdate.dto.ts",{"_index":1356,"title":{},"body":{"classes/GraphDateDto.html":{},"coverage.html":{}}}],["src/models/user/dto/graphdate.dto.ts:11",{"_index":1359,"title":{},"body":{"classes/GraphDateDto.html":{}}}],["src/models/user/dto/graphdate.dto.ts:7",{"_index":1360,"title":{},"body":{"classes/GraphDateDto.html":{}}}],["src/models/user/dto/validation.dto.ts",{"_index":2322,"title":{},"body":{"classes/ValidationdDto.html":{},"coverage.html":{}}}],["src/models/user/dto/validation.dto.ts:11",{"_index":2324,"title":{},"body":{"classes/ValidationdDto.html":{}}}],["src/models/user/dto/validation.dto.ts:7",{"_index":2323,"title":{},"body":{"classes/ValidationdDto.html":{}}}],["src/models/user/dtovalidator.pipe.ts",{"_index":957,"title":{},"body":{"injectables/DtoValidatorPipe.html":{},"coverage.html":{}}}],["src/models/user/dtovalidator.pipe.ts:12",{"_index":958,"title":{},"body":{"injectables/DtoValidatorPipe.html":{}}}],["src/models/user/dtovalidator.pipe.ts:16",{"_index":959,"title":{},"body":{"injectables/DtoValidatorPipe.html":{}}}],["src/models/user/dtovalidatorself.pipe.ts",{"_index":969,"title":{},"body":{"injectables/DtoValidatorSelfPipe.html":{},"coverage.html":{}}}],["src/models/user/dtovalidatorself.pipe.ts:13",{"_index":971,"title":{},"body":{"injectables/DtoValidatorSelfPipe.html":{}}}],["src/models/user/dtovalidatorself.pipe.ts:9",{"_index":970,"title":{},"body":{"injectables/DtoValidatorSelfPipe.html":{}}}],["src/models/user/uppercasepipe.pipe.ts",{"_index":2111,"title":{},"body":{"injectables/UpperCasePipe.html":{},"coverage.html":{}}}],["src/models/user/uppercasepipe.pipe.ts:12",{"_index":2113,"title":{},"body":{"injectables/UpperCasePipe.html":{}}}],["src/models/user/uppercasepipe.pipe.ts:8",{"_index":2112,"title":{},"body":{"injectables/UpperCasePipe.html":{}}}],["src/models/user/user.controller.ts",{"_index":2127,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/models/user/user.controller.ts:102",{"_index":2153,"title":{},"body":{"controllers/UserController.html":{}}}],["src/models/user/user.controller.ts:114",{"_index":2156,"title":{},"body":{"controllers/UserController.html":{}}}],["src/models/user/user.controller.ts:121",{"_index":2159,"title":{},"body":{"controllers/UserController.html":{}}}],["src/models/user/user.controller.ts:26",{"_index":2169,"title":{},"body":{"controllers/UserController.html":{}}}],["src/models/user/user.controller.ts:33",{"_index":2144,"title":{},"body":{"controllers/UserController.html":{}}}],["src/models/user/user.controller.ts:44",{"_index":2147,"title":{},"body":{"controllers/UserController.html":{}}}],["src/models/user/user.controller.ts:51",{"_index":2150,"title":{},"body":{"controllers/UserController.html":{}}}],["src/models/user/user.controller.ts:63",{"_index":2162,"title":{},"body":{"controllers/UserController.html":{}}}],["src/models/user/user.controller.ts:71",{"_index":2138,"title":{},"body":{"controllers/UserController.html":{}}}],["src/models/user/user.controller.ts:83",{"_index":2143,"title":{},"body":{"controllers/UserController.html":{}}}],["src/models/user/user.controller.ts:94",{"_index":2165,"title":{},"body":{"controllers/UserController.html":{}}}],["src/models/user/user.module",{"_index":332,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/models/user/user.module.ts",{"_index":2241,"title":{},"body":{"modules/UserModule.html":{}}}],["src/models/user/user.service.ts",{"_index":2243,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/models/user/user.service.ts:113",{"_index":2274,"title":{},"body":{"injectables/UserService.html":{}}}],["src/models/user/user.service.ts:126",{"_index":2268,"title":{},"body":{"injectables/UserService.html":{}}}],["src/models/user/user.service.ts:156",{"_index":2270,"title":{},"body":{"injectables/UserService.html":{}}}],["src/models/user/user.service.ts:16",{"_index":2251,"title":{},"body":{"injectables/UserService.html":{}}}],["src/models/user/user.service.ts:185",{"_index":2272,"title":{},"body":{"injectables/UserService.html":{}}}],["src/models/user/user.service.ts:19",{"_index":2262,"title":{},"body":{"injectables/UserService.html":{}}}],["src/models/user/user.service.ts:217",{"_index":2253,"title":{},"body":{"injectables/UserService.html":{}}}],["src/models/user/user.service.ts:235",{"_index":2261,"title":{},"body":{"injectables/UserService.html":{}}}],["src/models/user/user.service.ts:255",{"_index":2259,"title":{},"body":{"injectables/UserService.html":{}}}],["src/models/user/user.service.ts:264",{"_index":2257,"title":{},"body":{"injectables/UserService.html":{}}}],["src/models/user/user.service.ts:273",{"_index":2275,"title":{},"body":{"injectables/UserService.html":{}}}],["src/models/user/user.service.ts:38",{"_index":2266,"title":{},"body":{"injectables/UserService.html":{}}}],["src/models/user/user.service.ts:66",{"_index":2263,"title":{},"body":{"injectables/UserService.html":{}}}],["src/models/user/user.service.ts:96",{"_index":2255,"title":{},"body":{"injectables/UserService.html":{}}}],["stare",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{}}}],["start",{"_index":2431,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":2434,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":2436,"title":{},"body":{"index.html":{}}}],["startdate",{"_index":1358,"title":{},"body":{"classes/GraphDateDto.html":{}}}],["startdate:date",{"_index":1361,"title":{},"body":{"classes/GraphDateDto.html":{}}}],["started",{"_index":2410,"title":{"index.html":{}},"body":{}}],["starter",{"_index":2423,"title":{},"body":{"index.html":{}}}],["starym",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{}}}],["statements",{"_index":2328,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":793,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/EditSchoolDto.html":{},"classes/GetSchoolDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"injectables/SchoolService.html":{}}}],["status(400",{"_index":1813,"title":{},"body":{"classes/PrismaOtherFilter.html":{}}}],["status(404",{"_index":1698,"title":{},"body":{"classes/NotFoundErrorFilter.html":{},"classes/PrismaValidationFilter.html":{}}}],["status(409",{"_index":1837,"title":{},"body":{"classes/PrismaValidationFilter.html":{}}}],["status(status",{"_index":1443,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/NotFoundExceptionFilter.html":{}}}],["status,type",{"_index":821,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/EditSchoolDto.html":{}}}],["status:status",{"_index":825,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/EditSchoolDto.html":{}}}],["statuscode",{"_index":113,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotFoundExceptionFilter.html":{}}}],["statuscode:request.statuscode",{"_index":1700,"title":{},"body":{"classes/NotFoundErrorFilter.html":{}}}],["stay",{"_index":2456,"title":{},"body":{"index.html":{}}}],["street",{"_index":794,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/EditSchoolDto.html":{},"classes/GetSchoolDto.html":{},"injectables/SchoolService.html":{}}}],["string",{"_index":12,"title":{},"body":{"classes/AccessTokenDto.html":{},"classes/AddUserInterViewDto.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CallUserHistoryController.html":{},"injectables/CallUserHistoryService.html":{},"classes/ChangePasswordDto.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"classes/CreateCallUserDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateInterViewDto.html":{},"classes/CreateScheduleDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/DecodeDto.html":{},"controllers/DirectorController.html":{},"injectables/DirectorService.html":{},"classes/EditContactDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditGroupDto.html":{},"classes/EditScheduleDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSelfDto.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{},"classes/GetCallUserHistoryDto.html":{},"classes/GetContactDto.html":{},"classes/GetContactPersontDto.html":{},"classes/GetDirectorDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetGroupDto.html":{},"classes/GetInterViewsDto.html":{},"classes/GetScheduleDto.html":{},"classes/GetSchoolDto.html":{},"classes/GetUserDto.html":{},"classes/GetUserInterViewDto.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{},"classes/LoginUserDto.html":{},"classes/MatchConstraint.html":{},"controllers/PredicteController.html":{},"injectables/PredicteService.html":{},"classes/RemoveUserInterViewDto.html":{},"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{},"interfaces/ReqUserInfo.html":{},"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"injectables/ScheduleDaysService.html":{},"injectables/ScheduleService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/SendFiszkiDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/ValidationdDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["string):promise",{"_index":637,"title":{},"body":{"injectables/ContactPersonService.html":{}}}],["string,@param('idfiszki",{"_index":1180,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["string,@reqinfo",{"_index":1155,"title":{},"body":{"controllers/FiszkaController.html":{},"controllers/RentalCostController.html":{}}}],["subject",{"_index":727,"title":{},"body":{"classes/CreateGroupDto.html":{},"classes/EditGroupDto.html":{},"classes/GetGroupDto.html":{},"injectables/GroupService.html":{}}}],["subject:string",{"_index":741,"title":{},"body":{"classes/CreateGroupDto.html":{},"classes/EditGroupDto.html":{},"classes/GetGroupDto.html":{}}}],["suitenumber",{"_index":795,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/EditSchoolDto.html":{},"classes/GetSchoolDto.html":{},"injectables/SchoolService.html":{}}}],["suitenumber:string",{"_index":831,"title":{},"body":{"classes/CreateSchoolDto.html":{},"classes/EditSchoolDto.html":{}}}],["sum",{"_index":2312,"title":{},"body":{"injectables/UserService.html":{}}}],["support",{"_index":2449,"title":{},"body":{"index.html":{},"modules.html":{}}}],["surname",{"_index":622,"title":{},"body":{"injectables/ContactPersonService.html":{},"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"injectables/DirectorService.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditSelfDto.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"injectables/FiszkaService.html":{},"classes/GetContactPersontDto.html":{},"classes/GetDirectorDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetUserDto.html":{},"injectables/InterviewsService.html":{},"injectables/UserService.html":{}}}],["surname:string",{"_index":713,"title":{},"body":{"classes/CreateFiszkaDto.html":{}}}],["svg",{"_index":2467,"title":{},"body":{"modules.html":{}}}],["swoich",{"_index":1202,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["sytuacja",{"_index":1759,"title":{},"body":{"controllers/PredicteController.html":{}}}],["szkole",{"_index":2231,"title":{},"body":{"controllers/UserController.html":{}}}],["szkoła",{"_index":2230,"title":{},"body":{"controllers/UserController.html":{}}}],["szkoły",{"_index":1188,"title":{},"body":{"controllers/FiszkaController.html":{},"controllers/GroupController.html":{},"controllers/PredicteController.html":{},"controllers/ScheduleController.html":{}}}],["table",{"_index":2361,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2360,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":1678,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["tej",{"_index":1736,"title":{},"body":{"controllers/PredicteController.html":{}}}],["telefon",{"_index":1822,"title":{},"body":{"classes/PrismaValidationFilter.html":{}}}],["termsnumber",{"_index":749,"title":{},"body":{"classes/CreateInterViewDto.html":{},"classes/EditInterViewDto.html":{},"classes/GetInterViewsDto.html":{},"classes/GetUserInterViewDto.html":{},"injectables/InterviewsService.html":{}}}],["test",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["test:covsupport",{"_index":2441,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":2440,"title":{},"body":{"index.html":{}}}],["test:exception.message",{"_index":1851,"title":{},"body":{"classes/PrismaValidationFilter.html":{}}}],["testponowymtokenie",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{}}}],["tests",{"_index":2438,"title":{},"body":{"index.html":{}}}],["testu",{"_index":1173,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["tesu",{"_index":2317,"title":{},"body":{"injectables/UserService.html":{}}}],["text",{"_index":2399,"title":{},"body":{"miscellaneous/functions.html":{}}}],["thanks",{"_index":2447,"title":{},"body":{"index.html":{}}}],["this.authservice.changepassword(data",{"_index":264,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.logout",{"_index":270,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.profile(reqinfo.email",{"_index":274,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.refreshtoken(oldtoken",{"_index":268,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signin(signindto.email",{"_index":255,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.calluserservice.addusercall(idfiszka",{"_index":478,"title":{},"body":{"controllers/CallUserHistoryController.html":{}}}],["this.calluserservice.deleteusercall(idphonecalls",{"_index":481,"title":{},"body":{"controllers/CallUserHistoryController.html":{}}}],["this.calluserservice.getallhistory(idfiszka",{"_index":475,"title":{},"body":{"controllers/CallUserHistoryController.html":{}}}],["this.contactpersonservice.create(idschool",{"_index":597,"title":{},"body":{"controllers/ContactPersonController.html":{}}}],["this.contactpersonservice.delete(idcontactperson",{"_index":604,"title":{},"body":{"controllers/ContactPersonController.html":{}}}],["this.contactpersonservice.edit(idcontactperson",{"_index":601,"title":{},"body":{"controllers/ContactPersonController.html":{}}}],["this.contactpersonservice.getbyidformgtmt(idschool",{"_index":595,"title":{},"body":{"controllers/ContactPersonController.html":{}}}],["this.contactpersonservice.getbyidforrd(idschool",{"_index":596,"title":{},"body":{"controllers/ContactPersonController.html":{}}}],["this.contactservice.create(idschool",{"_index":562,"title":{},"body":{"controllers/ContactController.html":{}}}],["this.contactservice.edit(idschool",{"_index":566,"title":{},"body":{"controllers/ContactController.html":{}}}],["this.contactservice.getbyidformgtmt(idschool",{"_index":557,"title":{},"body":{"controllers/ContactController.html":{}}}],["this.contactservice.getbyidforrd(idschool",{"_index":558,"title":{},"body":{"controllers/ContactController.html":{}}}],["this.directorservice.create(idschool",{"_index":900,"title":{},"body":{"controllers/DirectorController.html":{}}}],["this.directorservice.edit(idschool",{"_index":902,"title":{},"body":{"controllers/DirectorController.html":{}}}],["this.directorservice.getbyidformgtmt(idschool",{"_index":898,"title":{},"body":{"controllers/DirectorController.html":{}}}],["this.directorservice.getbyidforrd(idschool",{"_index":899,"title":{},"body":{"controllers/DirectorController.html":{}}}],["this.extracttokenfromheader(request",{"_index":306,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.fiszkaservice.addfiszki(idinterview",{"_index":1167,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["this.fiszkaservice.addgroup(idgroup",{"_index":1177,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["this.fiszkaservice.deletefiszka(idfiszka",{"_index":1170,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["this.fiszkaservice.deletefiszkabymy(idfiszka",{"_index":1172,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["this.fiszkaservice.deletefiszkafromgroup(idgroup",{"_index":1181,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["this.fiszkaservice.editfiszkard(idfiszka",{"_index":1159,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["this.fiszkaservice.editfiszkauser(idfiszka",{"_index":1164,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["this.fiszkaservice.findallbyinterview(idinterview",{"_index":1146,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["this.fiszkaservice.findallbyuser(idinterview",{"_index":1145,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["this.fiszkaservice.findallforgroup(idgroup,reqinfo.region",{"_index":1156,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["this.fiszkaservice.findallforregion(reqinfo.region",{"_index":1152,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["this.fiszkaservice.findallforuser(userid",{"_index":1149,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["this.groupservice.create(idschool",{"_index":1397,"title":{},"body":{"controllers/GroupController.html":{}}}],["this.groupservice.edit(idschool",{"_index":1400,"title":{},"body":{"controllers/GroupController.html":{}}}],["this.groupservice.getbyidformgtmt(idschool",{"_index":1389,"title":{},"body":{"controllers/GroupController.html":{}}}],["this.groupservice.getbyidforrd(idschool",{"_index":1390,"title":{},"body":{"controllers/GroupController.html":{}}}],["this.groupservice.getbyidgroupformgtmt(idgroup",{"_index":1394,"title":{},"body":{"controllers/GroupController.html":{}}}],["this.groupservice.getbyidgroupforrd(idgroup",{"_index":1395,"title":{},"body":{"controllers/GroupController.html":{}}}],["this.httpadapterhost",{"_index":78,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["this.interviewsservice.addusertointerview(idinterview",{"_index":1523,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["this.interviewsservice.createinterview(createinterviewdto",{"_index":1529,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["this.interviewsservice.editinterview(idinterview",{"_index":1520,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["this.interviewsservice.findallbyregion(reqinfo.region",{"_index":1506,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["this.interviewsservice.findallbyschool(idschool",{"_index":1512,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["this.interviewsservice.findallbyuser(reqinfo.id",{"_index":1503,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["this.interviewsservice.findbyid(reqinfo.region",{"_index":1509,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["this.interviewsservice.findbyuser(iduser",{"_index":1517,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["this.interviewsservice.findmybyschool(idschool",{"_index":1514,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["this.interviewsservice.removeuserfrominterview(idinterview",{"_index":1526,"title":{},"body":{"controllers/InterviewsController.html":{}}}],["this.jwtservice.decode(refreshtoken.access_token",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.decode(req.headers.authorization.slice(7",{"_index":1636,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["this.jwtservice.signasync",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.signasync(payload",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(refreshtoken.access_token",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(test",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verifyasync(token",{"_index":312,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.loggerservice.getlog",{"_index":1625,"title":{},"body":{"controllers/LoggerController.html":{}}}],["this.predicteservice.predicte(region",{"_index":1768,"title":{},"body":{"controllers/PredicteController.html":{}}}],["this.prisma.contact.create",{"_index":650,"title":{},"body":{"injectables/ContactService.html":{}}}],["this.prisma.contact.findmany",{"_index":648,"title":{},"body":{"injectables/ContactService.html":{}}}],["this.prisma.contactperson.create",{"_index":625,"title":{},"body":{"injectables/ContactPersonService.html":{}}}],["this.prisma.contactperson.delete",{"_index":639,"title":{},"body":{"injectables/ContactPersonService.html":{}}}],["this.prisma.contactperson.findmany",{"_index":621,"title":{},"body":{"injectables/ContactPersonService.html":{}}}],["this.prisma.director.create",{"_index":928,"title":{},"body":{"injectables/DirectorService.html":{}}}],["this.prisma.director.finduniqueorthrow",{"_index":924,"title":{},"body":{"injectables/DirectorService.html":{}}}],["this.prisma.fiszka.create",{"_index":1240,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["this.prisma.fiszka.delete",{"_index":1247,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["this.prisma.fiszka.findmany",{"_index":1229,"title":{},"body":{"injectables/FiszkaService.html":{},"injectables/PredicteService.html":{}}}],["this.prisma.fiszka.finduniqueorthrow",{"_index":1233,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["this.prisma.fiszka.update",{"_index":1237,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["this.prisma.group.create",{"_index":1428,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.prisma.group.findmany",{"_index":1423,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.prisma.group.finduniqueorthrow",{"_index":1424,"title":{},"body":{"injectables/GroupService.html":{}}}],["this.prisma.group.update",{"_index":1249,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["this.prisma.interviews.create",{"_index":1611,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["this.prisma.interviews.findmany",{"_index":1561,"title":{},"body":{"injectables/InterviewsService.html":{},"injectables/UserService.html":{}}}],["this.prisma.interviews.findunique",{"_index":1562,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["this.prisma.interviews.update",{"_index":1243,"title":{},"body":{"injectables/FiszkaService.html":{},"injectables/InterviewsService.html":{}}}],["this.prisma.interviewuser.createmany",{"_index":1572,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["this.prisma.interviewuser.deletemany",{"_index":1600,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["this.prisma.logger.create",{"_index":1637,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["this.prisma.logger.findmany",{"_index":1657,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.prisma.phonecalls.create",{"_index":499,"title":{},"body":{"injectables/CallUserHistoryService.html":{}}}],["this.prisma.phonecalls.delete",{"_index":505,"title":{},"body":{"injectables/CallUserHistoryService.html":{}}}],["this.prisma.phonecalls.findmany",{"_index":494,"title":{},"body":{"injectables/CallUserHistoryService.html":{}}}],["this.prisma.rentalcost.create",{"_index":1891,"title":{},"body":{"injectables/RentalCostService.html":{}}}],["this.prisma.rentalcost.finduniqueorthrow",{"_index":1889,"title":{},"body":{"injectables/RentalCostService.html":{}}}],["this.prisma.schedule.create",{"_index":2024,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["this.prisma.schedule.findmany",{"_index":2031,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["this.prisma.schedule.findunique",{"_index":1999,"title":{},"body":{"injectables/ScheduleDaysService.html":{}}}],["this.prisma.schedule.update",{"_index":2026,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["this.prisma.scheduledays.createmany",{"_index":2003,"title":{},"body":{"injectables/ScheduleDaysService.html":{}}}],["this.prisma.scheduledays.findmany",{"_index":1994,"title":{},"body":{"injectables/ScheduleDaysService.html":{}}}],["this.prisma.scheduledays.updatemany",{"_index":2008,"title":{},"body":{"injectables/ScheduleDaysService.html":{}}}],["this.prisma.school.create",{"_index":2097,"title":{},"body":{"injectables/SchoolService.html":{}}}],["this.prisma.school.findfirst",{"_index":2036,"title":{},"body":{"injectables/ScheduleService.html":{}}}],["this.prisma.school.findmany",{"_index":2095,"title":{},"body":{"injectables/SchoolService.html":{},"injectables/UserService.html":{}}}],["this.prisma.school.finduniqueorthrow",{"_index":926,"title":{},"body":{"injectables/DirectorService.html":{},"injectables/RentalCostService.html":{},"injectables/SchoolService.html":{}}}],["this.prisma.school.update",{"_index":633,"title":{},"body":{"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"injectables/DirectorService.html":{},"injectables/GroupService.html":{},"injectables/RentalCostService.html":{},"injectables/SchoolService.html":{}}}],["this.prisma.user.create",{"_index":2285,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findmany",{"_index":2279,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findunique",{"_index":2319,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.finduniqueorthrow",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{},"injectables/InterviewsService.html":{},"injectables/UserService.html":{}}}],["this.prisma.user.update",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":299,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.reflector.getallandoverride(roles_key",{"_index":1910,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.rentalcost.create(idschool",{"_index":1872,"title":{},"body":{"controllers/RentalCostController.html":{}}}],["this.rentalcost.getbyidformgtmt(idschool",{"_index":1870,"title":{},"body":{"controllers/RentalCostController.html":{}}}],["this.rentalcost.getbyidforrd(idschool",{"_index":1871,"title":{},"body":{"controllers/RentalCostController.html":{}}}],["this.rentalcost.patch(idschool",{"_index":1874,"title":{},"body":{"controllers/RentalCostController.html":{}}}],["this.req.method",{"_index":954,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/DtoValidatorPipe.html":{}}}],["this.req['user'].role",{"_index":966,"title":{},"body":{"injectables/DtoValidatorPipe.html":{}}}],["this.scheduledaysservice.create(idschedule",{"_index":1980,"title":{},"body":{"controllers/ScheduleDaysController.html":{}}}],["this.scheduledaysservice.edit(idschedule",{"_index":1981,"title":{},"body":{"controllers/ScheduleDaysController.html":{}}}],["this.scheduledaysservice.findall(idschedule",{"_index":1978,"title":{},"body":{"controllers/ScheduleDaysController.html":{}}}],["this.scheduleservice.create(createscheduledto",{"_index":1955,"title":{},"body":{"controllers/ScheduleController.html":{}}}],["this.scheduleservice.edit(editscheduledto",{"_index":1953,"title":{},"body":{"controllers/ScheduleController.html":{}}}],["this.scheduleservice.findall(reqinfo.region,idschool",{"_index":1946,"title":{},"body":{"controllers/ScheduleController.html":{}}}],["this.scheduleservice.findbyid(reqinfo.region",{"_index":1950,"title":{},"body":{"controllers/ScheduleController.html":{}}}],["this.schoolservice.createschool(reqinfo.region",{"_index":2069,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.editschool(schoolid",{"_index":2067,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.findall(reqinfo.region",{"_index":2059,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.findallformgtm",{"_index":2058,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.findbyid(schoolid",{"_index":2063,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.schoolservice.findbyidformgtm(schoolid",{"_index":2062,"title":{},"body":{"controllers/SchoolController.html":{}}}],["this.userservice.createuserformgtmt(createuser",{"_index":2199,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.createuserforrd(createuser",{"_index":2200,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.editself(edituserdto",{"_index":2208,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.edituserformgtmt(edituserdto",{"_index":2204,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.edituserforrd(edituserdto",{"_index":2205,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findall",{"_index":2187,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findbyid(id",{"_index":2194,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findbyregion(region",{"_index":2193,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findbyregion(reqinfo.region",{"_index":2189,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findfiszkifordatebyuser(effectiveiduser",{"_index":2212,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findfiszkifordateininterview(idschool",{"_index":2216,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findfiszkifordateinregion(reqinfo.region",{"_index":2219,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findtotalbyid(reqinfo.id",{"_index":2197,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.validation(validationuserdto",{"_index":2186,"title":{},"body":{"controllers/UserController.html":{}}}],["throw",{"_index":308,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/DtoValidatorPipe.html":{},"injectables/DtoValidatorSelfPipe.html":{},"injectables/ScheduleService.html":{}}}],["thursday",{"_index":1801,"title":{},"body":{"injectables/PredicteService.html":{}}}],["time",{"_index":1447,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["timestamp",{"_index":114,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{}}}],["title",{"_index":728,"title":{},"body":{"classes/CreateGroupDto.html":{},"classes/EditGroupDto.html":{},"classes/GetGroupDto.html":{},"injectables/GroupService.html":{}}}],["title:string",{"_index":740,"title":{},"body":{"classes/CreateGroupDto.html":{},"classes/EditGroupDto.html":{},"classes/GetGroupDto.html":{}}}],["todo",{"_index":1191,"title":{},"body":{"controllers/FiszkaController.html":{},"controllers/ScheduleController.html":{}}}],["token",{"_index":305,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["tokena\",testponowymtokenie",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokenie",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{}}}],["total",{"_index":1607,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["totalfiszki",{"_index":1337,"title":{},"body":{"classes/GetUserDto.html":{},"injectables/UserService.html":{}}}],["touch",{"_index":2457,"title":{},"body":{"index.html":{}}}],["transform",{"_index":932,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/DtoValidatorPipe.html":{},"injectables/DtoValidatorSelfPipe.html":{},"injectables/OptionsPipe.html":{},"injectables/UpperCasePipe.html":{}}}],["transform(value",{"_index":936,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/DtoValidatorPipe.html":{},"injectables/DtoValidatorSelfPipe.html":{},"injectables/OptionsPipe.html":{},"injectables/UpperCasePipe.html":{}}}],["transformer",{"_index":2374,"title":{},"body":{"dependencies.html":{}}}],["translatedfields",{"_index":1831,"title":{},"body":{"classes/PrismaValidationFilter.html":{}}}],["translateerrormessages",{"_index":1437,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["translateerrormessages(errorobj",{"_index":1446,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["translateerrormessages(errorobject",{"_index":2403,"title":{},"body":{"miscellaneous/functions.html":{}}}],["translations",{"_index":1821,"title":{},"body":{"classes/PrismaValidationFilter.html":{}}}],["translations[key",{"_index":1833,"title":{},"body":{"classes/PrismaValidationFilter.html":{}}}],["trial",{"_index":729,"title":{},"body":{"classes/CreateGroupDto.html":{},"classes/EditGroupDto.html":{},"classes/GetGroupDto.html":{},"injectables/GroupService.html":{}}}],["trial:boolean",{"_index":745,"title":{},"body":{"classes/CreateGroupDto.html":{},"classes/EditGroupDto.html":{},"classes/GetGroupDto.html":{}}}],["true",{"_index":260,"title":{},"body":{"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/CallUserHistoryService.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"injectables/DirectorService.html":{},"injectables/FiszkaService.html":{},"injectables/GroupService.html":{},"injectables/InterviewsService.html":{},"injectables/PredicteService.html":{},"injectables/RentalCostService.html":{},"guards/RolesGuard.html":{},"injectables/ScheduleDaysService.html":{},"injectables/ScheduleService.html":{},"injectables/SchoolService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":309,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["tuesday",{"_index":1799,"title":{},"body":{"injectables/PredicteService.html":{}}}],["twitter",{"_index":2463,"title":{},"body":{"index.html":{}}}],["tworzenie",{"_index":1192,"title":{},"body":{"controllers/FiszkaController.html":{},"controllers/SchoolController.html":{}}}],["tylko",{"_index":2077,"title":{},"body":{"controllers/SchoolController.html":{}}}],["type",{"_index":10,"title":{},"body":{"classes/AccessTokenDto.html":{},"classes/AddUserInterViewDto.html":{},"classes/AddgroupDto.html":{},"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"controllers/CallUserHistoryController.html":{},"injectables/CallUserHistoryService.html":{},"classes/ChangePasswordDto.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"classes/CreateCallUserDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateInterViewDto.html":{},"classes/CreateRentalCostDto.html":{},"classes/CreateScheduleDaysDto.html":{},"classes/CreateScheduleDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/DecodeDto.html":{},"controllers/DirectorController.html":{},"injectables/DirectorService.html":{},"injectables/DtoValidationPipe.html":{},"injectables/DtoValidatorPipe.html":{},"injectables/DtoValidatorSelfPipe.html":{},"classes/EditContactDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditGroupDto.html":{},"classes/EditInterViewDto.html":{},"classes/EditRentalCostDto.html":{},"classes/EditScheduleDaysDto.html":{},"classes/EditScheduleDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSelfDto.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{},"classes/GetCallUserHistoryDto.html":{},"classes/GetContactDto.html":{},"classes/GetContactPersontDto.html":{},"classes/GetDirectorDto.html":{},"classes/GetFindByIdDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetGroupDto.html":{},"classes/GetInterViewsDto.html":{},"classes/GetRentalCostDto.html":{},"classes/GetScheduleDto.html":{},"classes/GetSchoolDto.html":{},"classes/GetUserDto.html":{},"classes/GetUserInterViewDto.html":{},"classes/GraphDateDto.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"classes/LoginUserDto.html":{},"classes/MatchConstraint.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"injectables/OptionsPipe.html":{},"controllers/PredicteController.html":{},"injectables/PredicteService.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{},"classes/RemoveUserInterViewDto.html":{},"controllers/RentalCostController.html":{},"injectables/RentalCostService.html":{},"interfaces/ReqUserInfo.html":{},"guards/RolesGuard.html":{},"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"injectables/ScheduleDaysService.html":{},"injectables/ScheduleService.html":{},"controllers/SchoolController.html":{},"injectables/SchoolService.html":{},"classes/SendFiszkiDto.html":{},"injectables/UpperCasePipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/ValidationdDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"classes/getGraphDateDto.html":{},"miscellaneous/variables.html":{}}}],["type:\"notfounderror",{"_index":1699,"title":{},"body":{"classes/NotFoundErrorFilter.html":{}}}],["type:\"notfoundexception",{"_index":1705,"title":{},"body":{"classes/NotFoundExceptionFilter.html":{}}}],["typeof",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{}}}],["types/bcrypt",{"_index":2371,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":2422,"title":{},"body":{"index.html":{}}}],["ui.id",{"_index":1589,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["ui.userid",{"_index":1580,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["układanie",{"_index":1720,"title":{},"body":{"controllers/PredicteController.html":{}}}],["unauthorizedexception",{"_index":292,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["unauthorizedexception(\"not",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception('błąd",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception('invalid",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception('niepoprawne",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":291,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/UpperCasePipe.html":{},"injectables/UserService.html":{}}}],["unique_fiszka_user_id",{"_index":1234,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["unique_id_region",{"_index":2284,"title":{},"body":{"injectables/UserService.html":{}}}],["unique_school_region_id",{"_index":630,"title":{},"body":{"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"injectables/DirectorService.html":{},"injectables/GroupService.html":{},"injectables/RentalCostService.html":{},"injectables/ScheduleService.html":{},"injectables/SchoolService.html":{}}}],["unit",{"_index":2437,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":75,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/DtoValidationPipe.html":{},"injectables/DtoValidatorPipe.html":{},"injectables/DtoValidatorSelfPipe.html":{},"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{},"controllers/GroupController.html":{},"injectables/GroupService.html":{},"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{},"controllers/LoggerController.html":{},"injectables/LoggerService.html":{},"controllers/PredicteController.html":{},"injectables/PredicteService.html":{},"interfaces/ReqUserInfo.html":{},"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"injectables/ScheduleDaysService.html":{},"injectables/ScheduleService.html":{},"injectables/UpperCasePipe.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["unlicensed",{"_index":2475,"title":{},"body":{"properties.html":{}}}],["update",{"_index":634,"title":{},"body":{"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"injectables/DirectorService.html":{},"injectables/GroupService.html":{},"injectables/RentalCostService.html":{}}}],["updatedgroup",{"_index":1248,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["updateinschool",{"_index":632,"title":{},"body":{"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"injectables/DirectorService.html":{},"injectables/GroupService.html":{},"injectables/RentalCostService.html":{}}}],["updateinschool.contact()).find((x",{"_index":653,"title":{},"body":{"injectables/ContactService.html":{},"injectables/GroupService.html":{}}}],["updateinschool.contactperson()).find((x",{"_index":635,"title":{},"body":{"injectables/ContactPersonService.html":{}}}],["updateinschool.director",{"_index":929,"title":{},"body":{"injectables/DirectorService.html":{}}}],["updateinschool.rentalcost",{"_index":1894,"title":{},"body":{"injectables/RentalCostService.html":{}}}],["updatemany",{"_index":2316,"title":{},"body":{"injectables/UserService.html":{}}}],["updatepromises",{"_index":1602,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["uppercasepipe",{"_index":2110,"title":{"injectables/UpperCasePipe.html":{}},"body":{"injectables/UpperCasePipe.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["uppercasepipe.pipe",{"_index":2175,"title":{},"body":{"controllers/UserController.html":{}}}],["url",{"_index":1638,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["use",{"_index":1627,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["use(req",{"_index":1629,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["useclass",{"_index":341,"title":{},"body":{"modules/AuthModule.html":{},"modules/UserModule.html":{}}}],["usefilters",{"_index":226,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CallUserHistoryController.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/FiszkaController.html":{},"controllers/GroupController.html":{},"controllers/InterviewsController.html":{},"controllers/LoggerController.html":{},"controllers/PredicteController.html":{},"controllers/RentalCostController.html":{},"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"controllers/SchoolController.html":{},"controllers/UserController.html":{}}}],["usefilters(new",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CallUserHistoryController.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/FiszkaController.html":{},"controllers/GroupController.html":{},"controllers/InterviewsController.html":{},"controllers/LoggerController.html":{},"controllers/PredicteController.html":{},"controllers/RentalCostController.html":{},"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"controllers/SchoolController.html":{},"controllers/UserController.html":{}}}],["useguards",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CallUserHistoryController.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/FiszkaController.html":{},"controllers/GroupController.html":{},"controllers/InterviewsController.html":{},"controllers/PredicteController.html":{},"controllers/RentalCostController.html":{},"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"controllers/SchoolController.html":{},"controllers/UserController.html":{}}}],["useguards(authguard",{"_index":271,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(authguard)@usefilters(new",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(rolesguard",{"_index":250,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CallUserHistoryController.html":{},"controllers/ContactController.html":{},"controllers/ContactPersonController.html":{},"controllers/DirectorController.html":{},"controllers/FiszkaController.html":{},"controllers/GroupController.html":{},"controllers/InterviewsController.html":{},"controllers/PredicteController.html":{},"controllers/RentalCostController.html":{},"controllers/ScheduleController.html":{},"controllers/ScheduleDaysController.html":{},"controllers/SchoolController.html":{},"controllers/UserController.html":{}}}],["usepipes",{"_index":229,"title":{},"body":{"controllers/AuthController.html":{}}}],["usepipes(new",{"_index":258,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CallUserHistoryService.html":{},"classes/CreateInterViewDto.html":{},"injectables/FiszkaService.html":{},"injectables/InterviewsService.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/enumerations.html":{}}}],["user.controller",{"_index":2242,"title":{},"body":{"modules/UserModule.html":{}}}],["user.email",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["user.fiszka.length",{"_index":2291,"title":{},"body":{"injectables/UserService.html":{}}}],["user.id",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.job",{"_index":2290,"title":{},"body":{"injectables/UserService.html":{}}}],["user.name",{"_index":2286,"title":{},"body":{"injectables/UserService.html":{}}}],["user.password",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.phone",{"_index":2289,"title":{},"body":{"injectables/UserService.html":{}}}],["user.region",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.region.touppercase",{"_index":2314,"title":{},"body":{"injectables/UserService.html":{}}}],["user.role",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["user.role?.includes(role",{"_index":1915,"title":{},"body":{"guards/RolesGuard.html":{}}}],["user.service",{"_index":2171,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.surname",{"_index":2288,"title":{},"body":{"injectables/UserService.html":{}}}],["user/user.service",{"_index":1534,"title":{},"body":{"modules/InterviewsModule.html":{}}}],["user:true",{"_index":1426,"title":{},"body":{"injectables/GroupService.html":{}}}],["user:user",{"_index":1911,"title":{},"body":{"guards/RolesGuard.html":{}}}],["useragent",{"_index":107,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/NotFoundExceptionFilter.html":{}}}],["usercontroller",{"_index":2126,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userdata.id",{"_index":1570,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["userexisting",{"_index":1576,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["userid",{"_index":1129,"title":{},"body":{"controllers/FiszkaController.html":{},"injectables/FiszkaService.html":{},"controllers/InterviewsController.html":{},"injectables/InterviewsService.html":{},"injectables/UserService.html":{}}}],["userids",{"_index":1586,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["userids.filter((id",{"_index":1591,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["userinterviewids",{"_index":1588,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["userinterviewids.filter((id",{"_index":1594,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["userinterviews",{"_index":1008,"title":{},"body":{"classes/EditInterViewDto.html":{},"injectables/InterviewsService.html":{},"injectables/UserService.html":{}}}],["userinterviews:interviewuser",{"_index":1015,"title":{},"body":{"classes/EditInterViewDto.html":{}}}],["usermodule",{"_index":147,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["users",{"_index":750,"title":{},"body":{"classes/CreateInterViewDto.html":{},"injectables/InterviewsService.html":{}}}],["users.map(userid",{"_index":1610,"title":{},"body":{"injectables/InterviewsService.html":{}}}],["userservice",{"_index":1532,"title":{"injectables/UserService.html":{}},"body":{"modules/InterviewsModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["userservice,interviewsservice",{"_index":1536,"title":{},"body":{"modules/InterviewsModule.html":{}}}],["usunięcia.(błędny",{"_index":1849,"title":{},"body":{"classes/PrismaValidationFilter.html":{}}}],["uwzględnienia",{"_index":1756,"title":{},"body":{"controllers/PredicteController.html":{}}}],["użytkopwnik",{"_index":1200,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["użytkownika",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{},"controllers/SchoolController.html":{}}}],["użytkownikid",{"_index":2233,"title":{},"body":{"controllers/UserController.html":{}}}],["używany",{"_index":1841,"title":{},"body":{"classes/PrismaValidationFilter.html":{}}}],["validate",{"_index":1665,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["validate(value",{"_index":1670,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["validateif",{"_index":711,"title":{},"body":{"classes/CreateFiszkaDto.html":{},"classes/EditFiszkaDto.html":{}}}],["validateif((obj",{"_index":700,"title":{},"body":{"classes/CreateFiszkaDto.html":{},"classes/EditFiszkaDto.html":{}}}],["validation",{"_index":2135,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["validation(@body",{"_index":2185,"title":{},"body":{"controllers/UserController.html":{}}}],["validation(validationuserdto",{"_index":2166,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["validationarguments",{"_index":1667,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["validationddto",{"_index":2167,"title":{"classes/ValidationdDto.html":{}},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{},"classes/ValidationdDto.html":{},"coverage.html":{}}}],["validationoptions",{"_index":1673,"title":{},"body":{"classes/MatchConstraint.html":{},"miscellaneous/functions.html":{}}}],["validationpipe",{"_index":230,"title":{},"body":{"controllers/AuthController.html":{}}}],["validationpipe())@post('changepassword",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{}}}],["validationresult",{"_index":953,"title":{},"body":{"injectables/DtoValidationPipe.html":{},"injectables/DtoValidatorPipe.html":{},"injectables/DtoValidatorSelfPipe.html":{}}}],["validationuserdto",{"_index":2170,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["validationuserdto.email",{"_index":2318,"title":{},"body":{"injectables/UserService.html":{}}}],["validationuserdto.phone",{"_index":2321,"title":{},"body":{"injectables/UserService.html":{}}}],["validator",{"_index":18,"title":{},"body":{"classes/AccessTokenDto.html":{},"classes/AddUserInterViewDto.html":{},"classes/AddgroupDto.html":{},"classes/ChangePasswordDto.html":{},"classes/CreateCallUserDto.html":{},"classes/CreateContactDto.html":{},"classes/CreateContactPersontDto.html":{},"classes/CreateDirectorDto.html":{},"classes/CreateFiszkaDto.html":{},"classes/CreateGroupDto.html":{},"classes/CreateInterViewDto.html":{},"classes/CreateRentalCostDto.html":{},"classes/CreateScheduleDaysDto.html":{},"classes/CreateScheduleDto.html":{},"classes/CreateSchoolDto.html":{},"classes/CreateUserForMGTMTDto.html":{},"classes/CreateUserForRdDto.html":{},"classes/EditContactDto.html":{},"classes/EditContactPersontDto.html":{},"classes/EditDirectorDto.html":{},"classes/EditFiszkaDto.html":{},"classes/EditGroupDto.html":{},"classes/EditInterViewDto.html":{},"classes/EditRentalCostDto.html":{},"classes/EditScheduleDaysDto.html":{},"classes/EditScheduleDto.html":{},"classes/EditSchoolDto.html":{},"classes/EditSelfDto.html":{},"classes/EditUserForMGTMTDto.html":{},"classes/EditUserForRdDto.html":{},"classes/GetCallUserHistoryDto.html":{},"classes/GetContactDto.html":{},"classes/GetContactPersontDto.html":{},"classes/GetDirectorDto.html":{},"classes/GetFiszkaDto.html":{},"classes/GetGroupDto.html":{},"classes/GetInterViewsDto.html":{},"classes/GetRentalCostDto.html":{},"classes/GetScheduleDto.html":{},"classes/GetSchoolDto.html":{},"classes/GetUserDto.html":{},"classes/GetUserInterViewDto.html":{},"classes/GraphDateDto.html":{},"classes/LoginUserDto.html":{},"classes/MatchConstraint.html":{},"classes/RemoveUserInterViewDto.html":{},"classes/SendFiszkiDto.html":{},"classes/ValidationdDto.html":{},"dependencies.html":{},"classes/getGraphDateDto.html":{}}}],["validatorconstraint",{"_index":1674,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["validatorconstraint({name",{"_index":1683,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["validatorconstraintinterface",{"_index":1663,"title":{},"body":{"classes/MatchConstraint.html":{}}}],["value",{"_index":701,"title":{},"body":{"classes/CreateFiszkaDto.html":{},"injectables/DtoValidationPipe.html":{},"injectables/DtoValidatorPipe.html":{},"injectables/DtoValidatorSelfPipe.html":{},"classes/EditFiszkaDto.html":{},"classes/MatchConstraint.html":{},"injectables/OptionsPipe.html":{},"injectables/UpperCasePipe.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.job",{"_index":2118,"title":{},"body":{"injectables/UpperCasePipe.html":{}}}],["value.job.touppercase",{"_index":2119,"title":{},"body":{"injectables/UpperCasePipe.html":{}}}],["value.name",{"_index":2120,"title":{},"body":{"injectables/UpperCasePipe.html":{}}}],["value.name.charat(0).touppercase",{"_index":2121,"title":{},"body":{"injectables/UpperCasePipe.html":{}}}],["value.name.slice(1",{"_index":2122,"title":{},"body":{"injectables/UpperCasePipe.html":{}}}],["value.region",{"_index":2114,"title":{},"body":{"injectables/UpperCasePipe.html":{}}}],["value.region.touppercase",{"_index":2115,"title":{},"body":{"injectables/UpperCasePipe.html":{}}}],["value.role",{"_index":2116,"title":{},"body":{"injectables/UpperCasePipe.html":{}}}],["value.role.touppercase",{"_index":2117,"title":{},"body":{"injectables/UpperCasePipe.html":{}}}],["value.surname",{"_index":2123,"title":{},"body":{"injectables/UpperCasePipe.html":{}}}],["value.surname.charat(0).touppercase",{"_index":2124,"title":{},"body":{"injectables/UpperCasePipe.html":{}}}],["value.surname.slice(1",{"_index":2125,"title":{},"body":{"injectables/UpperCasePipe.html":{}}}],["variable",{"_index":2331,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2476,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":2473,"title":{},"body":{"properties.html":{}}}],["void",{"_index":51,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"classes/HttpExceptionFilter.html":{},"classes/NotFoundErrorFilter.html":{},"classes/NotFoundExceptionFilter.html":{},"classes/PrismaOtherFilter.html":{},"classes/PrismaValidationFilter.html":{}}}],["w",{"_index":908,"title":{},"body":{"controllers/DirectorController.html":{},"controllers/PredicteController.html":{},"controllers/UserController.html":{}}}],["watch",{"_index":2432,"title":{},"body":{"index.html":{}}}],["we're",{"_index":314,"title":{},"body":{"guards/AuthGuard.html":{}}}],["website",{"_index":2461,"title":{},"body":{"index.html":{}}}],["wednesday",{"_index":1800,"title":{},"body":{"injectables/PredicteService.html":{}}}],["whitelist",{"_index":259,"title":{},"body":{"controllers/AuthController.html":{}}}],["wiadomo",{"_index":1940,"title":{},"body":{"controllers/ScheduleController.html":{}}}],["wietlicy",{"_index":1744,"title":{},"body":{"controllers/PredicteController.html":{}}}],["wprowadzanie",{"_index":1956,"title":{},"body":{"controllers/ScheduleController.html":{}}}],["wszystkich",{"_index":1404,"title":{},"body":{"controllers/GroupController.html":{},"controllers/ScheduleController.html":{},"controllers/SchoolController.html":{}}}],["wszystkie",{"_index":1182,"title":{},"body":{"controllers/FiszkaController.html":{},"controllers/PredicteController.html":{}}}],["wyszukany",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{}}}],["wywiadówka",{"_index":2226,"title":{},"body":{"controllers/UserController.html":{}}}],["wywiadówki",{"_index":1195,"title":{},"body":{"controllers/FiszkaController.html":{}}}],["wyświetla",{"_index":1943,"title":{},"body":{"controllers/ScheduleController.html":{}}}],["wyświetlanie",{"_index":1403,"title":{},"body":{"controllers/GroupController.html":{},"controllers/ScheduleController.html":{}}}],["wyświetlenie",{"_index":903,"title":{},"body":{"controllers/DirectorController.html":{}}}],["x.id",{"_index":636,"title":{},"body":{"injectables/ContactPersonService.html":{},"injectables/ContactService.html":{},"injectables/GroupService.html":{}}}],["yes",{"_index":2264,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["you'd",{"_index":2452,"title":{},"body":{"index.html":{}}}],["yourrole",{"_index":2402,"title":{},"body":{"miscellaneous/functions.html":{}}}],["yours",{"_index":1236,"title":{},"body":{"injectables/FiszkaService.html":{}}}],["z",{"_index":1184,"title":{},"body":{"controllers/FiszkaController.html":{},"controllers/ScheduleController.html":{},"controllers/SchoolController.html":{},"injectables/UserService.html":{}}}],["zaj",{"_index":1755,"title":{},"body":{"controllers/PredicteController.html":{}}}],["zajęc",{"_index":1961,"title":{},"body":{"controllers/ScheduleController.html":{}}}],["zajęcia",{"_index":1743,"title":{},"body":{"controllers/PredicteController.html":{}}}],["zawsze",{"_index":2234,"title":{},"body":{"controllers/UserController.html":{}}}],["założenia",{"_index":461,"title":{},"body":{"controllers/CallUserHistoryController.html":{}}}],["zebranych",{"_index":2236,"title":{},"body":{"controllers/UserController.html":{}}}],["zgadza",{"_index":1788,"title":{},"body":{"injectables/PredicteService.html":{}}}],["zgłoszone",{"_index":1730,"title":{},"body":{"controllers/PredicteController.html":{}}}],["zmienione",{"_index":2315,"title":{},"body":{"injectables/UserService.html":{}}}],["zmienna",{"_index":1739,"title":{},"body":{"controllers/PredicteController.html":{}}}],["znaleziono",{"_index":1844,"title":{},"body":{"classes/PrismaValidationFilter.html":{}}}],["zoom",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CallUserHistoryModule.html":{},"modules/ContactModule.html":{},"modules/ContactPersonModule.html":{},"modules/DirectorModule.html":{},"modules/FiszkaModule.html":{},"modules/GroupModule.html":{},"modules/InterviewsModule.html":{},"modules/LoggerModule.html":{},"modules/PredicteModule.html":{},"modules/RentalCostModule.html":{},"modules/ScheduleDaysModule.html":{},"modules/ScheduleModule.html":{},"modules/SchoolModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["zrobi",{"_index":1937,"title":{},"body":{"controllers/ScheduleController.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AccessTokenDto.html":{"url":"classes/AccessTokenDto.html","title":"class - AccessTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccessTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Auth/dto/authRefreshToken.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                access_token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        access_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Auth/dto/authRefreshToken.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from \"class-validator\";\n\nexport class AccessTokenDto {\n\n    @IsNotEmpty()\n    access_token: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddUserInterViewDto.html":{"url":"classes/AddUserInterViewDto.html","title":"class - AddUserInterViewDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddUserInterViewDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/interviews/dto/addUserInterView.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                idUser\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        idUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/interviews/dto/addUserInterView.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty} from \"class-validator\"\n\nexport class AddUserInterViewDto {\n\n    @IsNotEmpty()\n    idUser: string\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddgroupDto.html":{"url":"classes/AddgroupDto.html","title":"class - AddgroupDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddgroupDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/fiszka/dto/addGroup.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                fiszka\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fiszka\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GetFiszkaDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/fiszka/dto/addGroup.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from \"class-validator\";\nimport { GetFiszkaDto } from \"./GetFiszka.dto\";\n\n\nexport class AddgroupDto {\n    @IsNotEmpty()\n    fiszka: GetFiszkaDto\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AllExceptionsFilter.html":{"url":"classes/AllExceptionsFilter.html","title":"class - AllExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/validation/AllExceptionsFilter.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpAdapterHost: HttpAdapterHost)\n                    \n                \n                        \n                            \n                                Defined in src/common/validation/AllExceptionsFilter.filter.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpAdapterHost\n                                                  \n                                                        \n                                                                    HttpAdapterHost\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/common/validation/AllExceptionsFilter.filter.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    ExceptionFilter,\n    Catch,\n    ArgumentsHost,\n    HttpException,\n    HttpStatus,\n    NotFoundException,\n} from '@nestjs/common';\nimport { HttpAdapterHost } from '@nestjs/core';\nimport { NotFoundError } from 'rxjs';\nimport { NotFoundErrorFilter } from './NotFoundErrorFilter.filter';\nimport { NotFoundExceptionFilter } from './NotFoundException.filter';\nimport { PrismaValidationFilter } from './PrismaClientValidationError.filter';\nimport { PrismaOtherFilter } from './PrismaOtherError.filter';\nimport { PrismaClientKnownRequestError, PrismaClientUnknownRequestError } from '@prisma/client/runtime/library';\nimport { HttpExceptionFilter } from './http-exception.filter';\n\n\n\n\n@Catch()\nexport class AllExceptionsFilter implements ExceptionFilter {\n\n    constructor(private readonly httpAdapterHost: HttpAdapterHost) { }\n    \n    catch(exception: unknown, host: ArgumentsHost): void {\n     \n        \n        const { httpAdapter } = this.httpAdapterHost;\n        \n\n        const ctx = host.switchToHttp();\n\n        const httpStatus =\n            exception instanceof HttpException\n                ? exception.getStatus()\n                : HttpStatus.INTERNAL_SERVER_ERROR;\n                \n        const nameError = exception.constructor.name;\n        const request = ctx.getRequest();\n        const response = ctx.getResponse();\n        // if(exception instanceof HttpException){\n        //     new HttpExceptionFilter().catch(exception as HttpException, host);\n        //     return;\n        // }\n        if (nameError === \"NotFoundError\") {\n            new NotFoundErrorFilter().catch(exception as NotFoundError, host);\n            return;\n        }\n        if (nameError === \"NotFoundException\") {\n            new NotFoundExceptionFilter().catch(exception as NotFoundException, host);\n            return;\n        }\n        if (nameError === \"PrismaClientKnownRequestError\") {\n            new PrismaValidationFilter().catch(exception as PrismaClientKnownRequestError, host);\n            return;\n        }\n        if (nameError === \"PrismaClientUnknownRequestError\" || nameError === \"PrismaClientValidationError\") {\n            new PrismaOtherFilter().catch(exception as PrismaClientUnknownRequestError, host);\n            return;\n        }\n\n        const data = (exception as any).message\n\n        const responseBody = {\n            type: exception.constructor.name,\n            msg: data,\n            method: request.method,\n            headers: request.headers,\n            userAgent: request.headers['user-agent'],\n            requestId: response.getHeaders()['x-request-id'],\n            statusCode: httpStatus,\n            timestamp: new Date().toISOString(),\n            path: httpAdapter.getRequestUrl(ctx.getRequest()),\n        };\n\n        httpAdapter.reply(ctx.getResponse(), responseBody, httpStatus);\n    }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller()\nexport class AppController {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCallUserHistoryModule\n\nCallUserHistoryModule\n\nAppModule -->\n\nCallUserHistoryModule->AppModule\n\n\n\n\n\nContactModule\n\nContactModule\n\nAppModule -->\n\nContactModule->AppModule\n\n\n\n\n\nContactPersonModule\n\nContactPersonModule\n\nAppModule -->\n\nContactPersonModule->AppModule\n\n\n\n\n\nDirectorModule\n\nDirectorModule\n\nAppModule -->\n\nDirectorModule->AppModule\n\n\n\n\n\nFiszkaModule\n\nFiszkaModule\n\nAppModule -->\n\nFiszkaModule->AppModule\n\n\n\n\n\nGroupModule\n\nGroupModule\n\nAppModule -->\n\nGroupModule->AppModule\n\n\n\n\n\nInterviewsModule\n\nInterviewsModule\n\nAppModule -->\n\nInterviewsModule->AppModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nAppModule -->\n\nLoggerModule->AppModule\n\n\n\n\n\nRentalCostModule\n\nRentalCostModule\n\nAppModule -->\n\nRentalCostModule->AppModule\n\n\n\n\n\nScheduleDaysModule\n\nScheduleDaysModule\n\nAppModule -->\n\nScheduleDaysModule->AppModule\n\n\n\n\n\nScheduleModule\n\nScheduleModule\n\nAppModule -->\n\nScheduleModule->AppModule\n\n\n\n\n\nSchoolModule\n\nSchoolModule\n\nAppModule -->\n\nSchoolModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CallUserHistoryModule\n                        \n                        \n                            ContactModule\n                        \n                        \n                            ContactPersonModule\n                        \n                        \n                            DirectorModule\n                        \n                        \n                            FiszkaModule\n                        \n                        \n                            GroupModule\n                        \n                        \n                            InterviewsModule\n                        \n                        \n                            LoggerModule\n                        \n                        \n                            RentalCostModule\n                        \n                        \n                            ScheduleDaysModule\n                        \n                        \n                            ScheduleModule\n                        \n                        \n                            SchoolModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { LoggerModule } from './models/log/logger.module';\nimport { ContactModule } from './models/contact/contact.module';\nimport { DirectorModule } from './models/director/director.module';\nimport { SchoolModule } from './models/school/school.module';\nimport { FiszkaModule } from './models/fiszka/fiszka.module';\nimport { InterviewsModule } from './models/interviews/interviews.module';\nimport { AuthModule } from './Auth/auth.module';\nimport { UserModule } from './models/user/user.module';\nimport { MiddlewareConsumer, Module, NestModule } from '@nestjs/common';\nimport { ContactPersonModule } from './models/personContact/contactPerson.module';\nimport { RentalCostModule } from './models/rentalCost/rentalcost.module';\nimport { GroupModule } from './models/group/group.module';\nimport { LoggerMiddleware } from './common/logger.middleware';\nimport { ScheduleModule } from './models/schedule/schedule.module';\nimport { ScheduleDaysModule } from './models/scheduleDays/scheduledays.module';\nimport { CallUserHistoryModule } from './models/callUserHistory/calluserhistory.module';\n\n\n@Module({\n  imports: [\n    LoggerModule,\n    ScheduleDaysModule,\n    ScheduleModule,\n    GroupModule,\n    ContactModule,\n    DirectorModule,\n    SchoolModule,\n    CallUserHistoryModule,\n    ContactPersonModule,\n    FiszkaModule,\n    InterviewsModule,\n    AuthModule,\n    UserModule,\n    RentalCostModule,\n  ],\n  controllers: [\n\n\n  ],\n  providers: [\n   \n  ],\n})\nexport class AppModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(LoggerMiddleware)\n      .forRoutes('school', 'rentalcost','callUserHistory');\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                ChangePassword\n                            \n                            \n                                    \n                                    \n                                    \n                                getProfile\n                            \n                            \n                                    \n                                    \n                                    \n                                LogOut\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                refreshToken\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        Async\n                        ChangePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    ChangePassword(Data: ChangePasswordDto, reqInfo: ReqUserInfo)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA, Role.MGTMT, Role.USER)@UsePipes(new ValidationPipe())@Post('changePassword')\n                \n            \n\n            \n                \n                    Defined in src/Auth/auth.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    Data\n                                    \n                                                ChangePasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reqInfo\n                                    \n                                                ReqUserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        getProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfile(reqInfo: ReqUserInfo)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(AuthGuard)@UseFilters(new HttpExceptionFilter())@Get('profile')\n                \n            \n\n            \n                \n                    Defined in src/Auth/auth.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reqInfo\n                                    \n                                                ReqUserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        LogOut\n                        \n                    \n                \n            \n            \n                \n                    \n                    LogOut()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(Role.RD, Role.CA, Role.MGTMT, Role.USER)@UseFilters(new HttpExceptionFilter())@Delete('logOut')\n                \n            \n\n            \n                \n                    Defined in src/Auth/auth.controller.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        refreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    refreshToken(OldToken: AccessTokenDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@HttpCode(HttpStatus.OK)@UseFilters(new HttpExceptionFilter())@Post('refreshToken')\n                \n            \n\n            \n                \n                    Defined in src/Auth/auth.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    OldToken\n                                    \n                                                AccessTokenDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        \n                        Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    signIn(signInDto: LoginUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@HttpCode(HttpStatus.OK)@UseFilters(new HttpExceptionFilter())@Post('login')\n                \n            \n\n            \n                \n                    Defined in src/Auth/auth.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    signInDto\n                                    \n                                                LoginUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n    Body,\n    Controller,\n    Get,\n    HttpCode,\n    HttpStatus,\n    Post,\n    UseGuards,\n    UseFilters,\n    ForbiddenException,\n    Delete,\n    UsePipes,\n    ValidationPipe\n} from '@nestjs/common';\nimport { Public } from './decorators/public.decorator';\nimport { AuthService } from './auth.service';\nimport { AuthGuard } from './auth.guard';\nimport { LoginUserDto } from 'src/Auth/dto/authUser.dto';\nimport { HttpExceptionFilter } from 'src/common/validation/http-exception.filter';\nimport { GetUserDto } from 'src/models/user/dto/GetUser.dto';\nimport { Role } from '@prisma/client';\nimport { Roles } from './decorators/roles.decorator';\nimport { RolesGuard } from './roles.guard';\nimport { ChangePasswordDto } from './dto/changePassword.dto';\nimport { ReqInfo, ReqUserInfo } from './decorators/reqinfo.decorator';\nimport { AccessTokenDto } from './dto/authRefreshToken.dto';\n\n@UseGuards(RolesGuard)\n@Controller('auth')\nexport class AuthController {\n    constructor(private authService: AuthService) { }\n\n    @Public()\n    @HttpCode(HttpStatus.OK)\n    @UseFilters(new HttpExceptionFilter())\n    @Post('login')\n    async signIn(@Body() signInDto: LoginUserDto): Promise {\n        return this.authService.signIn(signInDto.email, signInDto.password);\n    }\n\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.RD, Role.CA, Role.MGTMT, Role.USER)\n    @UsePipes(new ValidationPipe({ whitelist: true }))\n    @Post('changePassword')\n    async ChangePassword(@Body() Data: ChangePasswordDto, @ReqInfo() reqInfo: ReqUserInfo):Promise {\n        return this.authService.ChangePassword(Data, reqInfo.id);\n    }\n\n    @Public()\n    @HttpCode(HttpStatus.OK)\n    @UseFilters(new HttpExceptionFilter())\n    @Post('refreshToken')\n    refreshToken(@Body() OldToken: AccessTokenDto): Promise {\n        return this.authService.refreshToken(OldToken);\n    }\n\n   \n    @Roles(Role.RD, Role.CA, Role.MGTMT, Role.USER)\n    @UseFilters(new HttpExceptionFilter())\n    @Delete('logOut')\n    LogOut(): Promise {\n        return this.authService.LogOut();\n    }\n\n    @UseGuards(AuthGuard)\n    @UseFilters(new HttpExceptionFilter())\n    @Get('profile')\n    getProfile(@ReqInfo() reqInfo: ReqUserInfo): Promise {\n        return this.authService.Profile(reqInfo.email);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/Auth/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                extractTokenFromHeader\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/Auth/auth.guard.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/Auth/auth.guard.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        extractTokenFromHeader\n                        \n                    \n                \n            \n            \n                \n                    \n                    extractTokenFromHeader(request: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/Auth/auth.guard.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n    CanActivate,\n    ExecutionContext,\n    Injectable,\n    UnauthorizedException,\n  } from '@nestjs/common';\n  import { Reflector } from '@nestjs/core';\n  import { JwtService } from '@nestjs/jwt';\n  import { Request } from 'express';\n  import { IS_PUBLIC_KEY } from './decorators/public.decorator';\n  const jwtSecretKey = process.env.JWT_SECRET;\n\n  @Injectable()\n  export class AuthGuard implements CanActivate {\n    constructor(private jwtService: JwtService, private reflector: Reflector) {}\n  \n    async canActivate(context: ExecutionContext): Promise {\n      \n      \n      const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n        context.getHandler(),\n        context.getClass(),\n      ]);\n      if (isPublic) {\n        // 💡 See this condition\n        return true;\n      }\n  \n      const request = context.switchToHttp().getRequest();\n      const token = this.extractTokenFromHeader(request);\n     //console.log(token)\n      if (!token) {\n        throw new UnauthorizedException();\n      }\n      try {\n \n        const payload = await this.jwtService.verifyAsync(token, {\n          secret: jwtSecretKey,\n        });\n        \n        // 💡 We're assigning the payload to the request object here\n        // so that we can access it in our route handlers\n        request['user'] = payload;\n      } catch {\n        \n        throw new UnauthorizedException();\n      }\n      return true;\n    }\n  \n    private extractTokenFromHeader(request: Request): string | undefined {\n      \n      const [type, token] = request.headers.authorization?.split(' ') ?? [];\n      return type === 'Bearer' ? token : undefined;\n    }\n  }\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/Auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { APP_GUARD } from '@nestjs/core';\nimport { JwtModule } from '@nestjs/jwt';\nimport { AuthController } from './auth.controller';\nimport { AuthGuard } from './auth.guard';\nimport { AuthService } from './auth.service';\nimport { UserModule } from 'src/models/user/user.module';\nconst jwtSecretKey = process.env.JWT_SECRET;\n\n@Module({\n  imports: [\n    UserModule,\n    JwtModule.register({\n      global: true,\n      secret:jwtSecretKey,\n      //secret: jwtConstants.secret,\n      signOptions: { expiresIn: '5000s' },\n    }),\n\n  ],\n  providers: [\n    AuthService,\n    {\n      provide: APP_GUARD,\n      useClass: AuthGuard,\n    },\n  ],\n  controllers: [AuthController,],\n  exports: [AuthService,],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ChangePassword\n                            \n                            \n                                    Async\n                                LogOut\n                            \n                            \n                                    Async\n                                Profile\n                            \n                            \n                                    Async\n                                refreshToken\n                            \n                            \n                                    Async\n                                signIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/Auth/auth.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                    PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ChangePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    ChangePassword(DataPass: ChangePasswordDto, id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/Auth/auth.service.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    DataPass\n                                    \n                                                ChangePasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        LogOut\n                        \n                    \n                \n            \n            \n                \n                    \n                    LogOut()\n                \n            \n\n\n            \n                \n                    Defined in src/Auth/auth.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        Profile\n                        \n                    \n                \n            \n            \n                \n                    \n                    Profile(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/Auth/auth.service.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        refreshToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    refreshToken(refreshToken: AccessTokenDto)\n                \n            \n\n\n            \n                \n                    Defined in src/Auth/auth.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    refreshToken\n                                    \n                                                AccessTokenDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    signIn(email: string, pass: string)\n                \n            \n\n\n            \n                \n                    Defined in src/Auth/auth.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable, UnauthorizedException } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { PrismaService } from \"./../../prisma/prisma.service\";\nimport * as bcrypt from 'bcrypt';\nimport * as jwt from 'jsonwebtoken';\nimport { DecodeDto } from './dto/decode.dto';\nimport { GetUserDto } from 'src/models/user/dto/GetUser.dto';\nimport { ChangePasswordDto } from './dto/changePassword.dto';\nimport { HashPassword } from './../../src/common/helpers/hashPass';\nimport { User } from '@prisma/client';\nimport { AccessTokenDto } from './dto/authRefreshToken.dto';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private jwtService: JwtService,\n    private prisma: PrismaService\n  ) { }\n\n  async refreshToken(refreshToken: AccessTokenDto): Promise {\n    try {\n      const decoded = await this.jwtService.verify(refreshToken.access_token);\n      const user = await this.prisma.user.findUniqueOrThrow({\n        where: {\n          email: decoded.email,\n        },\n      });\n      const payload = { email: user.email, role: user.role, region: user.region, id: user.id };\n      console.log(\"Token byl aktywny ale dałem refresh\");\n\n      return {\n        access_token: await this.jwtService.signAsync(payload),\n      };\n    } catch (error) {\n      if (error instanceof jwt.TokenExpiredError) {\n        console.log(\"stary token \", refreshToken.access_token);\n\n        const decoded = this.jwtService.decode(refreshToken.access_token);\n        let decodedData: DecodeDto;\n        console.log(\"before if\", decoded)\n        if (typeof decoded === 'string') {\n          decodedData = JSON.parse(decoded) as DecodeDto;\n        } else {\n          decodedData = decoded as DecodeDto;\n        }\n        console.log(\"stary token \", decodedData);\n\n        const user = await this.prisma.user.findUniqueOrThrow({\n          where: {\n            email: decodedData.email,\n          },\n        });\n        console.log(\"User wyszukany po starym tokenie\", user);\n\n        const payload = { email: user.email, role: user.role, region: user.region, id: user.id };\n        // console.log(\"końcowy payload\",payload);\n        // let test = await this.jwtService.signAsync(payload)\n        // console.log(test)\n        // let testponowymtokenie = await this.jwtService.verify(test)\n        // console.log(\"test nowego tokena\",testponowymtokenie)\n        return {\n          access_token: await this.jwtService.signAsync(payload)\n        };\n      }\n      throw new UnauthorizedException('Invalid or expired refresh token');\n    }\n  }\n  async LogOut(): Promise {\n    const expiresIn = '1s';\n    (await this.jwtService.signAsync({}, { expiresIn }));\n  }\n\n  async signIn(email: string, pass: string): Promise {\n\n    let user: User\n    try {\n      user = await this.prisma.user.findUniqueOrThrow(\n        {\n          where: {\n            email: email\n          }\n        }\n      );\n      const match = await bcrypt.compare(pass, user.password);\n      if (!match) {\n        throw new UnauthorizedException(\"Not correct password\");\n      }\n    } catch {\n      throw new UnauthorizedException(\"Not correct email or password\");\n    }\n\n    console.log(user)\n\n\n    const payload = { email: user.email, role: user.role, region: user.region, id: user.id };\n    return {\n      access_token: await this.jwtService.signAsync(payload),\n    };\n\n  }\n  async Profile(email: string): Promise {\n\n    const user = await this.prisma.user.findUniqueOrThrow(\n      {\n        where: {\n          email: email\n        }\n      }\n    );\n    if (!user) {\n      throw new UnauthorizedException(\"Not correct email\");\n    }\n    return user\n  }\n\n  async ChangePassword(DataPass: ChangePasswordDto, id: string): Promise {\n    \n      const MatchOldPass = await this.prisma.user.findUniqueOrThrow({\n        where: {\n          id: id\n        }\n      })\n      if (!MatchOldPass) {\n        throw new UnauthorizedException('Błąd autoryzacji użytkownika.');\n      }\n      const isMatch = await bcrypt.compare(DataPass.OldPassword, MatchOldPass.password);\n    \n      if (!isMatch) {\n        throw new UnauthorizedException('Niepoprawne stare hasło.');\n      }\n\n    return this.prisma.user.update({\n      where: {\n        id: id,\n      },\n      data: {\n        password: await HashPassword(DataPass.NewPassword),\n        isFirstLogin: false\n      }\n    })\n\n\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CallUserHistoryController.html":{"url":"controllers/CallUserHistoryController.html","title":"controller - CallUserHistoryController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CallUserHistoryController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/callUserHistory/calluserhistory.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                calluserhistory\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                AddUserCall\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                DeleteUserCall\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                GetAllHistory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        AddUserCall\n                        \n                    \n                \n            \n            \n                \n                    \n                    AddUserCall(idFiszka: string, data: CreateCallUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.MGTMT, Role.CA, Role.RD)@Post('addcalluser/:idFiszka')\n                \n            \n\n            \n                \n                    Defined in src/models/callUserHistory/calluserhistory.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idFiszka\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                CreateCallUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        DeleteUserCall\n                        \n                    \n                \n            \n            \n                \n                    \n                    DeleteUserCall(IdPhoneCalls: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.MGTMT, Role.CA, Role.RD)@Delete('delete/:idphonecalls')\n                \n            \n\n            \n                \n                    Defined in src/models/callUserHistory/calluserhistory.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    IdPhoneCalls\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        GetAllHistory\n                        \n                    \n                \n            \n            \n                \n                    \n                    GetAllHistory(idFiszka: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.MGTMT, Role.RD, Role.CA)@Get('getallhistory/:idFiszka')\n                \n            \n\n            \n                \n                    Defined in src/models/callUserHistory/calluserhistory.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idFiszka\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Post, UseFilters, UseGuards } from '@nestjs/common';\nimport { RolesGuard } from 'src/Auth/roles.guard';\nimport { Role } from '@prisma/client';\nimport { Roles } from 'src/Auth/decorators/roles.decorator';\nimport { HttpExceptionFilter } from 'src/common/validation/http-exception.filter';\nimport { CallUserHistoryService } from './calluserhistory.service';\nimport { CreateCallUserDto } from './dto/CreateCallUser.dto';\nimport { GetCallUserHistoryDto } from './dto/GetCallUserHistory.dto';\n\n\n// założenia:\n// DR i AC może dodawać rozmowy ( czyli dzwonić do kandydatów )\n\n@Controller(\"calluserhistory\")\n@UseGuards(RolesGuard)\nexport class CallUserHistoryController {\n    constructor(private callUserService: CallUserHistoryService) { }\n\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.MGTMT, Role.RD, Role.CA)\n    @Get('getallhistory/:idFiszka')\n    async GetAllHistory(@Param('idFiszka') idFiszka: string): Promise {\n        return this.callUserService.GetAllHistory(idFiszka)\n    }\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.MGTMT, Role.CA, Role.RD)\n    @Post('addcalluser/:idFiszka')\n    async AddUserCall(@Param('idFiszka') idFiszka: string, @Body() data: CreateCallUserDto): Promise {\n        return this.callUserService.AddUserCall(idFiszka, data)\n    }\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.MGTMT, Role.CA, Role.RD)\n    @Delete('delete/:idphonecalls')\n    async DeleteUserCall(@Param('idphonecalls') IdPhoneCalls: string): Promise {\n        return this.callUserService.DeleteUserCall(IdPhoneCalls)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CallUserHistoryModule.html":{"url":"modules/CallUserHistoryModule.html","title":"module - CallUserHistoryModule","body":"\n                   \n\n\n\n\n    Modules\n    CallUserHistoryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CallUserHistoryModule\n\n\n\ncluster_CallUserHistoryModule_providers\n\n\n\n\nCallUserHistoryService\n\nCallUserHistoryService\n\n\n\nCallUserHistoryModule\n\nCallUserHistoryModule\n\nCallUserHistoryModule -->\n\nCallUserHistoryService->CallUserHistoryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/callUserHistory/calluserhistory.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CallUserHistoryService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CallUserHistoryController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        \nimport { Module } from '@nestjs/common';\nimport { CallUserHistoryController } from './calluserhistory.controller';\nimport { CallUserHistoryService } from './calluserhistory.service';\nimport { PrismaModule } from 'prisma/prisma.module';\n\n@Module({\n    imports: [],\n    controllers: [CallUserHistoryController],\n    providers: [CallUserHistoryService],\n})\nexport class CallUserHistoryModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CallUserHistoryService.html":{"url":"injectables/CallUserHistoryService.html","title":"injectable - CallUserHistoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CallUserHistoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/callUserHistory/calluserhistory.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                AddUserCall\n                            \n                            \n                                    Async\n                                DeleteUserCall\n                            \n                            \n                                    Async\n                                GetAllHistory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/models/callUserHistory/calluserhistory.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                    PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        AddUserCall\n                        \n                    \n                \n            \n            \n                \n                    \n                    AddUserCall(IdFiszka: string, data: CreateCallUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/models/callUserHistory/calluserhistory.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    IdFiszka\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                CreateCallUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        DeleteUserCall\n                        \n                    \n                \n            \n            \n                \n                    \n                    DeleteUserCall(IdPhoneCalls: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/callUserHistory/calluserhistory.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    IdPhoneCalls\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        GetAllHistory\n                        \n                    \n                \n            \n            \n                \n                    \n                    GetAllHistory(IdFiszka: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/callUserHistory/calluserhistory.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    IdFiszka\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from 'prisma/prisma.service';\nimport { CreateCallUserDto } from './dto/CreateCallUser.dto';\nimport { GetCallUserHistoryDto } from './dto/GetCallUserHistory.dto';\n\n@Injectable()\nexport class CallUserHistoryService {\n    constructor(private prisma: PrismaService) { }\n\n    async GetAllHistory(IdFiszka: string): Promise {\n        return this.prisma.phoneCalls.findMany({\n            where: {\n                fiszka: {\n                    id: IdFiszka\n                }\n            },\n            select: {\n                callDate: true,\n                callNext: true,\n                comments: true\n            }\n        });\n    }\n\n    async AddUserCall(IdFiszka: string, data: CreateCallUserDto): Promise {\n        const user = this.prisma.phoneCalls.create({\n            data: {\n                callDate: data.callDate,\n                callNext: data.callNext,\n                comments: data.comments,\n                fiszka: {\n                    connect: {\n                        id: IdFiszka\n                    }\n                }\n            }\n        })\n        return user\n    }\n    async DeleteUserCall(IdPhoneCalls: string): Promise {\n        console.log(IdPhoneCalls);\n        \n        const user = await this.prisma.phoneCalls.delete({\n            \n            where:{\n                id:IdPhoneCalls\n            }\n        })\n        console.log(user);\n        \n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangePasswordDto.html":{"url":"classes/ChangePasswordDto.html","title":"class - ChangePasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangePasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Auth/dto/changePassword.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                NewPassword\n                            \n                            \n                                    \n                                OldPassword\n                            \n                            \n                                    \n                                    \n                                    \n                                RepeatNewPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        NewPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @MinLength(6)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Auth/dto/changePassword.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        OldPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Auth/dto/changePassword.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        RepeatNewPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @MinLength(6)@IsNotEmpty()@Match('NewPassword', {message: 'Hasła nie są identyczne'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Auth/dto/changePassword.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, MinLength } from \"class-validator\"\nimport { Match } from \"../decorators/match.decorator\"\n\nexport class ChangePasswordDto {\n\n    @IsNotEmpty()\n    OldPassword: string\n\n    @MinLength(6)\n    @IsNotEmpty()\n    NewPassword: string\n\n    @MinLength(6)\n    @IsNotEmpty()\n    @Match('NewPassword',{ message: 'Hasła nie są identyczne' })\n    RepeatNewPassword:string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ContactController.html":{"url":"controllers/ContactController.html","title":"controller - ContactController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ContactController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/contact/contact.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                contact\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                edit\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(idSchool: string, reqInfo: ReqUserInfo, body: CreateContactDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA)@Post('create/:idSchool')\n                \n            \n\n            \n                \n                    Defined in src/models/contact/contact.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reqInfo\n                                    \n                                                ReqUserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                CreateContactDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        edit\n                        \n                    \n                \n            \n            \n                \n                    \n                    edit(idSchool: string, idContact: string, reqInfo: ReqUserInfo, body: EditContactDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA)@Patch('edit/:idSchool/:idContact')\n                \n            \n\n            \n                \n                    Defined in src/models/contact/contact.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    idContact\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reqInfo\n                                    \n                                                ReqUserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                EditContactDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        getById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getById(idSchool: string, reqInfo: ReqUserInfo)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA, Role.MGTMT)@Get('getcontact/:idSchool')\n                \n            \n\n            \n                \n                    Defined in src/models/contact/contact.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reqInfo\n                                    \n                                                ReqUserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Patch, Post, UseFilters, UseGuards } from '@nestjs/common';\nimport { RolesGuard } from 'src/Auth/roles.guard';\nimport { ContactService } from './contact.service';\nimport { Role } from '@prisma/client';\nimport { Roles } from 'src/Auth/decorators/roles.decorator';\nimport { HttpExceptionFilter } from 'src/common/validation/http-exception.filter';\nimport { GetContactDto } from './dto/getContact.dto';\nimport { CreateContactDto } from './dto/createContact.dto';\nimport { EditContactDto } from './dto/editContact.dto';\nimport { ReqInfo, ReqUserInfo } from 'src/Auth/decorators/reqinfo.decorator';\n\n@UseGuards(RolesGuard)\n@Controller('contact')\nexport class ContactController {\n    constructor(private contactService: ContactService) { }\n\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.RD, Role.CA, Role.MGTMT)\n    @Get('getcontact/:idSchool')\n    async getById(@Param('idSchool') idSchool: string, @ReqInfo() reqInfo: ReqUserInfo): Promise {\n        if (reqInfo.role.match(Role.MGTMT)) {\n            return this.contactService.getByIdForMgtmt(idSchool);\n        } else {\n            return this.contactService.getByIdForRd(idSchool, reqInfo.region);\n        }\n    }\n\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.RD, Role.CA)\n    @Post('create/:idSchool')\n    async create(@Param('idSchool') idSchool: string, @ReqInfo() reqInfo: ReqUserInfo, @Body() body: CreateContactDto): Promise {\n        return this.contactService.create(idSchool, body, reqInfo.region);\n    }\n\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.RD, Role.CA)\n    @Patch('edit/:idSchool/:idContact')\n    async edit(@Param('idSchool') idSchool: string, @Param('idContact') idContact: string, @ReqInfo() reqInfo: ReqUserInfo, @Body() body: EditContactDto): Promise {\n        return this.contactService.edit(idSchool, body, reqInfo.region, idContact);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContactModule.html":{"url":"modules/ContactModule.html","title":"module - ContactModule","body":"\n                   \n\n\n\n\n    Modules\n    ContactModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ContactModule\n\n\n\ncluster_ContactModule_providers\n\n\n\n\nContactService\n\nContactService\n\n\n\nContactModule\n\nContactModule\n\nContactModule -->\n\nContactService->ContactModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/contact/contact.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ContactService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ContactController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { PrismaModule } from './../../../prisma/prisma.module';\nimport { ContactService } from './contact.service';\nimport { Module } from '@nestjs/common';\nimport { ContactController } from './contact.controller';\n\n@Module({\n    imports: [PrismaModule],\n    controllers: [ContactController],\n    providers: [\n        ContactService,],\n})\nexport class ContactModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ContactPersonController.html":{"url":"controllers/ContactPersonController.html","title":"controller - ContactPersonController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ContactPersonController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/personContact/contactPerson.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                contactperson\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                delete\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                edit\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(idSchool: string, reqInfo: ReqUserInfo, body: CreateContactPersontDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA)@Post('create/:idSchool')\n                \n            \n\n            \n                \n                    Defined in src/models/personContact/contactPerson.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reqInfo\n                                    \n                                                ReqUserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                CreateContactPersontDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(idContactPerson: string, reqInfo: ReqUserInfo)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA)@Delete('delete/:idContactPerson')\n                \n            \n\n            \n                \n                    Defined in src/models/personContact/contactPerson.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idContactPerson\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reqInfo\n                                    \n                                                ReqUserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        edit\n                        \n                    \n                \n            \n            \n                \n                    \n                    edit(idContactPerson: string, schoolId: string, reqInfo: ReqUserInfo, body: EditContactPersontDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA)@Patch('edit/:schoolId/:idContactPerson')\n                \n            \n\n            \n                \n                    Defined in src/models/personContact/contactPerson.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idContactPerson\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schoolId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reqInfo\n                                    \n                                                ReqUserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                EditContactPersontDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        getById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getById(idSchool: string, reqInfo: ReqUserInfo)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA, Role.MGTMT)@Get('get/:idSchool')\n                \n            \n\n            \n                \n                    Defined in src/models/personContact/contactPerson.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reqInfo\n                                    \n                                                ReqUserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Patch, Post, UseFilters, UseGuards } from '@nestjs/common';\nimport { ContactPersonService } from './contactPerson.service';\nimport { RolesGuard } from 'src/Auth/roles.guard';\nimport { ContactPerson, Role } from '@prisma/client';\nimport { Roles } from 'src/Auth/decorators/roles.decorator';\nimport { HttpExceptionFilter } from 'src/common/validation/http-exception.filter';\nimport { GetContactPersontDto } from './dto/getContactPerson.dto';\nimport { CreateContactPersontDto } from './dto/createContactPerson.dto';\nimport { EditContactPersontDto } from './dto/editContactPerson.dto';\nimport { ReqInfo, ReqUserInfo } from 'src/Auth/decorators/reqinfo.decorator';\n\n@UseGuards(RolesGuard)\n@Controller('contactperson')\nexport class ContactPersonController {\n    constructor(private ContactPersonService: ContactPersonService) { }\n\n\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.RD, Role.CA, Role.MGTMT)\n    @Get('get/:idSchool')\n    async getById(@Param('idSchool') idSchool: string, @ReqInfo() reqInfo: ReqUserInfo): Promise {\n        if (reqInfo.role.match(Role.MGTMT)) {\n            return this.ContactPersonService.getByIdForMgtmt(idSchool);\n        } else {\n            return this.ContactPersonService.getByIdForRd(idSchool, reqInfo.region);\n        }\n    }\n\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.RD, Role.CA)\n    @Post('create/:idSchool')\n    async create(@Param('idSchool') idSchool: string, @ReqInfo() reqInfo: ReqUserInfo, @Body() body: CreateContactPersontDto): Promise {\n        return this.ContactPersonService.create(idSchool, reqInfo.region, body);\n    }\n\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.RD, Role.CA)\n    @Patch('edit/:schoolId/:idContactPerson')\n    async edit(@Param('idContactPerson') idContactPerson: string, @Param('schoolId') schoolId: string, @ReqInfo() reqInfo: ReqUserInfo, @Body() body: EditContactPersontDto): Promise {\n        return this.ContactPersonService.edit(idContactPerson, schoolId, reqInfo.region, body);\n    }\n\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.RD, Role.CA)\n    @Delete('delete/:idContactPerson')\n    async delete(@Param('idContactPerson') idContactPerson: string, @ReqInfo() reqInfo: ReqUserInfo): Promise {\n        return this.ContactPersonService.delete(idContactPerson, reqInfo.region);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ContactPersonModule.html":{"url":"modules/ContactPersonModule.html","title":"module - ContactPersonModule","body":"\n                   \n\n\n\n\n    Modules\n    ContactPersonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ContactPersonModule\n\n\n\ncluster_ContactPersonModule_providers\n\n\n\n\nContactPersonService\n\nContactPersonService\n\n\n\nContactPersonModule\n\nContactPersonModule\n\nContactPersonModule -->\n\nContactPersonService->ContactPersonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/personContact/contactPerson.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ContactPersonService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ContactPersonController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /*\nhttps://docs.nestjs.com/modules\n*/\n\nimport { Module } from '@nestjs/common';\nimport {ContactPersonController } from './contactPerson.controller';\nimport { ContactPersonService } from './contactPerson.service';\nimport { PrismaModule } from 'prisma/prisma.module';\n\n@Module({\n    imports: [PrismaModule],\n    controllers: [ContactPersonController],\n    providers: [ContactPersonService],\n})\nexport class ContactPersonModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContactPersonService.html":{"url":"injectables/ContactPersonService.html","title":"injectable - ContactPersonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ContactPersonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/personContact/contactPerson.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                edit\n                            \n                            \n                                    Async\n                                getByIdForMgtmt\n                            \n                            \n                                    Async\n                                getByIdForRd\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/models/personContact/contactPerson.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                    PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(idSchool: string, region: string, body: CreateContactPersontDto)\n                \n            \n\n\n            \n                \n                    Defined in src/models/personContact/contactPerson.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                CreateContactPersontDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(idContactPerson: string, region: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/personContact/contactPerson.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idContactPerson\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        edit\n                        \n                    \n                \n            \n            \n                \n                    \n                    edit(idContactPerson: string, schoolId: string, region: string, body: EditContactPersontDto)\n                \n            \n\n\n            \n                \n                    Defined in src/models/personContact/contactPerson.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idContactPerson\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schoolId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                EditContactPersontDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getByIdForMgtmt\n                        \n                    \n                \n            \n            \n                \n                    \n                    getByIdForMgtmt(idSchool: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/personContact/contactPerson.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getByIdForRd\n                        \n                    \n                \n            \n            \n                \n                    \n                    getByIdForRd(idSchool: string, region: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/personContact/contactPerson.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from 'prisma/prisma.service';\nimport { CreateContactPersontDto } from './dto/createContactPerson.dto';\nimport { EditContactPersontDto } from './dto/editContactPerson.dto';\nimport { GetContactPersontDto } from './dto/getContactPerson.dto';\nimport { ContactPerson } from '@prisma/client';\n\n@Injectable()\nexport class ContactPersonService {\n    constructor(private prisma: PrismaService) { }\n\n    async getByIdForMgtmt(idSchool: string): Promise {\n        return this.prisma.contactPerson.findMany({\n            where: {\n                schoolId: idSchool\n            },\n            select: {\n                id: true,\n                name: true,\n                surname: true,\n                email: true,\n                phone: true\n            }\n        })\n    }\n\n    async getByIdForRd(idSchool: string, region: string): Promise {\n\n        return this.prisma.contactPerson.findMany({\n            where: {\n                school: {\n                    region: region,\n                    id: idSchool\n                }\n            },\n            select: {\n                id: true,\n                name: true,\n                surname: true,\n                email: true,\n                phone: true\n            }\n        })\n    }\n\n\n    async create(idSchool: string, region: string, body: CreateContactPersontDto): Promise {\n\n        return this.prisma.contactPerson.create({\n            data: {\n                name: body.name,\n                surname: body.surname,\n                email: body.email,\n                phone: body.phone,\n                school: {\n                    connect: {\n                        unique_school_region_id: {\n                            id: idSchool,\n                            region: region\n                        }\n                    }\n                }\n            }\n        })\n\n    }\n\n    async edit(idContactPerson: string, schoolId: string, region: string, body: EditContactPersontDto):Promise {\n\n        const UpdateInSchool = this.prisma.school.update({\n            where: {\n                unique_school_region_id:\n                {\n                    region: region,\n                    id: schoolId\n                }\n            },\n            data: {\n                contactPerson: {\n                    update: {\n                        where: {\n                            id: idContactPerson\n                        },\n                        data: body\n                    }\n                }\n            }\n        })\n\n        return (await UpdateInSchool.contactPerson()).find((x) => x.id === idContactPerson)\n    }\n\n    async delete(idContactPerson: string, region: string):Promise{\n\n        const DeleteContactPerson = this.prisma.contactPerson.delete({\n            where:{\n                id:idContactPerson,\n                school:{\n                    region:region\n                }\n            }\n        })\n\n      return DeleteContactPerson\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContactService.html":{"url":"injectables/ContactService.html","title":"injectable - ContactService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ContactService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/contact/contact.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                edit\n                            \n                            \n                                    Async\n                                getByIdForMgtmt\n                            \n                            \n                                    Async\n                                getByIdForRd\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/models/contact/contact.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                    PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(idSchool: string, body: CreateContactDto, region: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/contact/contact.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                CreateContactDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        edit\n                        \n                    \n                \n            \n            \n                \n                    \n                    edit(idSchool: string, body: EditContactDto, region: string, idContact: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/contact/contact.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                EditContactDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    idContact\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getByIdForMgtmt\n                        \n                    \n                \n            \n            \n                \n                    \n                    getByIdForMgtmt(idSchool: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/contact/contact.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getByIdForRd\n                        \n                    \n                \n            \n            \n                \n                    \n                    getByIdForRd(idSchool: string, region: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/contact/contact.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from 'prisma/prisma.service';\nimport { CreateContactDto } from './dto/createContact.dto';\nimport { EditContactDto } from './dto/editContact.dto';\nimport { GetContactDto } from './dto/getContact.dto';\n\n@Injectable()\nexport class ContactService {\n    constructor(private prisma: PrismaService) { }\n\n    async getByIdForMgtmt(idSchool: string): Promise {\n        return this.prisma.contact.findMany({\n            where: { schoolId: idSchool },\n            select: {\n                id: true,\n                dateOfVisit: true,\n                comments: true\n            }\n        })\n\n    }\n\n    async getByIdForRd(idSchool: string, region: string): Promise {\n        return this.prisma.contact.findMany({\n            where: {\n                school: {\n                    region: region,\n                    id: idSchool\n                }\n            },\n            select: {\n                id: true,\n                dateOfVisit: true,\n                comments: true\n            }\n\n        })\n\n    }\n    async create(idSchool: string, body: CreateContactDto, region: string): Promise {\n        return this.prisma.contact.create({\n            data: {\n                dateOfVisit: body.dateOfVisit,\n                comments: body.comments,\n                school: {\n                    connect: {\n                        unique_school_region_id: {\n                            id: idSchool,\n                            region: region\n                        }\n                    }\n                }\n            }\n\n        })\n    }\n    async edit(idSchool: string, body: EditContactDto, region: string, idContact: string): Promise {\n        const UpdateInSchool = this.prisma.school.update({\n            where: {\n                unique_school_region_id:\n                {\n                    region: region\n                    , id: idSchool\n                }\n            },\n            data: {\n                contact: {\n                    update: {\n                        where: {\n                            id: idContact\n                        },\n                        data: body\n                    }\n                }\n            }\n        })\n\n        return (await UpdateInSchool.contact()).find((x) => x.id === idContact)\n\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCallUserDto.html":{"url":"classes/CreateCallUserDto.html","title":"class - CreateCallUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCallUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/callUserHistory/dto/CreateCallUser.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                callDate\n                            \n                            \n                                    \n                                callNext\n                            \n                            \n                                    \n                                    \n                                comments\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        callDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/callUserHistory/dto/CreateCallUser.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        callNext\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/callUserHistory/dto/CreateCallUser.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsAscii()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/callUserHistory/dto/CreateCallUser.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsAlphanumeric, IsAscii, IsDate, IsNotEmpty, IsOptional, IsString } from \"class-validator\"\n\nexport class CreateCallUserDto {\n\n \n    @IsNotEmpty()\n    callDate: Date\n\n \n    @IsOptional()\n    callNext: Date\n\n    @IsOptional()\n    @IsAscii()\n    comments: string\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateContactDto.html":{"url":"classes/CreateContactDto.html","title":"class - CreateContactDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateContactDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/contact/dto/createContact.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                comments\n                            \n                            \n                                    \n                                    \n                                dateOfVisit\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAscii()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/contact/dto/createContact.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        dateOfVisit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/contact/dto/createContact.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsAlpha, IsOptional, IsDate, IsNotEmpty, IsAscii } from \"class-validator\"\n\nexport class CreateContactDto {\n    @IsDate()\n    @IsNotEmpty()\n    dateOfVisit: Date\n\n    @IsAscii()\n    @IsOptional()\n    comments: string\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateContactPersontDto.html":{"url":"classes/CreateContactPersontDto.html","title":"class - CreateContactPersontDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateContactPersontDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/personContact/dto/createContactPerson.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                surname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/personContact/dto/createContactPerson.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/personContact/dto/createContactPerson.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPhoneNumber('PL')@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/personContact/dto/createContactPerson.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/personContact/dto/createContactPerson.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsAlpha, IsEmail, IsNotEmpty, IsOptional, IsPhoneNumber } from \"class-validator\"\n\nexport class CreateContactPersontDto {\n\n    @IsAlpha(\"pl-PL\")\n    @IsNotEmpty()\n    name: string\n\n    @IsAlpha(\"pl-PL\")\n    @IsNotEmpty()\n    surname: string\n\n    @IsEmail()\n    @IsOptional()\n    email: string\n\n    @IsPhoneNumber(\"PL\")\n    @IsOptional()\n    phone: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDirectorDto.html":{"url":"classes/CreateDirectorDto.html","title":"class - CreateDirectorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDirectorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/director/dto/createDirector.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                surname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/director/dto/createDirector.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/director/dto/createDirector.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPhoneNumber('PL')@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/director/dto/createDirector.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/director/dto/createDirector.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsAlpha, IsEmail, IsNotEmpty, IsOptional, IsPhoneNumber } from \"class-validator\"\n\nexport class CreateDirectorDto {\n\n    @IsAlpha(\"pl-PL\")\n    @IsNotEmpty()\n    name: string\n\n    @IsAlpha(\"pl-PL\")\n    @IsNotEmpty()\n    surname: string\n\n    @IsEmail()\n    @IsOptional()\n    email: string\n\n    @IsPhoneNumber(\"PL\")\n    @IsOptional()\n    phone: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateFiszkaDto.html":{"url":"classes/CreateFiszkaDto.html","title":"class - CreateFiszkaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateFiszkaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/fiszka/dto/CreateFiszka.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                classDigit\n                            \n                            \n                                    \n                                    \n                                classLetter\n                            \n                            \n                                    \n                                    \n                                    \n                                comments\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                surname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        classDigit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Min(0)@Max(8)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/fiszka/dto/CreateFiszka.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        classLetter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/fiszka/dto/CreateFiszka.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateIf((obj, value) => )@IsAscii()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/fiszka/dto/CreateFiszka.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/fiszka/dto/CreateFiszka.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/fiszka/dto/CreateFiszka.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPhoneNumber('PL')@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/fiszka/dto/CreateFiszka.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/fiszka/dto/CreateFiszka.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsAlpha, IsAscii, IsEmail, IsNotEmpty, IsNumber, IsOptional, IsPhoneNumber, Max, Min, ValidateIf } from \"class-validator\"\n\nexport class CreateFiszkaDto {\n    @IsAlpha(\"pl-PL\")\n    @IsNotEmpty()\n    name:string\n\n    @IsAlpha(\"pl-PL\")\n    @IsNotEmpty()\n    surname:string\n\n    @IsAlpha(\"pl-PL\")\n    @IsOptional()\n    classLetter:string\n\n    @IsNumber()\n    @Min(0)\n    @Max(8)\n    @IsOptional()\n    classDigit:number\n\n    @ValidateIf((obj, value) => value !== \"\" )\n    @IsAscii()\n    @IsOptional()\n    comments:string\n\n    @IsPhoneNumber('PL')\n    @IsNotEmpty()\n    phone:string\n\n    @IsEmail()\n    @IsOptional()\n    email:string\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateGroupDto.html":{"url":"classes/CreateGroupDto.html","title":"class - CreateGroupDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateGroupDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/group/dto/createGroup.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                codeGroup\n                            \n                            \n                                    \n                                    \n                                dayOfTheWeek\n                            \n                            \n                                    \n                                hour\n                            \n                            \n                                    \n                                subject\n                            \n                            \n                                    \n                                title\n                            \n                            \n                                    \n                                trial\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        codeGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/group/dto/createGroup.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        dayOfTheWeek\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DaysOfTheWeek\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEnum(DaysOfTheWeek)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/group/dto/createGroup.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        hour\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/group/dto/createGroup.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        subject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/group/dto/createGroup.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/group/dto/createGroup.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        trial\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/group/dto/createGroup.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DaysOfTheWeek } from \"@prisma/client\"\nimport { IsEnum, IsNotEmpty, IsOptional} from \"class-validator\"\n\nexport class CreateGroupDto {\n\n    @IsNotEmpty()\n    codeGroup: string\n\n    @IsNotEmpty()\n    title:string\n\n    @IsNotEmpty()\n    subject:string\n\n    @IsOptional()\n    @IsEnum(DaysOfTheWeek)\n    dayOfTheWeek:DaysOfTheWeek\n\n    @IsOptional()\n    hour:string\n\n    @IsOptional()\n    trial:boolean\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateInterViewDto.html":{"url":"classes/CreateInterViewDto.html","title":"class - CreateInterViewDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateInterViewDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/interviews/dto/createInterView.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                classNumber\n                            \n                            \n                                    \n                                date\n                            \n                            \n                                    \n                                schoolId\n                            \n                            \n                                    \n                                    \n                                termsNumber\n                            \n                            \n                                    \n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        classNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Min(0)@Max(8)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/interviews/dto/createInterView.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/interviews/dto/createInterView.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        schoolId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/interviews/dto/createInterView.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        termsNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Min(0)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/interviews/dto/createInterView.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :     User[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/interviews/dto/createInterView.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from \"@prisma/client\"\nimport { IsNotEmpty, IsOptional, Min, Max } from \"class-validator\"\n\nexport class CreateInterViewDto {\n\n    @Min(0)\n    @Max(8)\n    @IsNotEmpty()\n    classNumber: number\n    \n    @Min(0)\n    @IsNotEmpty()\n    termsNumber: number\n\n    @IsNotEmpty()\n    schoolId: string\n\n    @IsOptional()\n    users: User[]\n\n    @IsOptional()\n    date: Date\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRentalCostDto.html":{"url":"classes/CreateRentalCostDto.html","title":"class - CreateRentalCostDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRentalCostDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/rentalCost/dto/createRentalCost.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                classroomHour\n                            \n                            \n                                    \n                                    \n                                clockHour\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        classroomHour\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Decimal\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDecimal()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/rentalCost/dto/createRentalCost.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        clockHour\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Decimal\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDecimal()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/rentalCost/dto/createRentalCost.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Decimal } from \"@prisma/client/runtime/library\";\nimport { IsDecimal, IsNotEmpty, IsOptional } from \"class-validator\";\n\nexport class CreateRentalCostDto {\n\n    @IsDecimal()\n    @IsOptional()\n    classroomHour:Decimal\n\n    @IsDecimal()\n    @IsOptional()\n    clockHour:Decimal\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateScheduleDaysDto.html":{"url":"classes/CreateScheduleDaysDto.html","title":"class - CreateScheduleDaysDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateScheduleDaysDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/scheduleDays/dto/createSheduleDays.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                day\n                            \n                            \n                                    \n                                numberLesson\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        day\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DaysOfTheWeek\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEnum(DaysOfTheWeek)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/scheduleDays/dto/createSheduleDays.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        numberLesson\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/scheduleDays/dto/createSheduleDays.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DaysOfTheWeek } from \"@prisma/client\"\nimport { IsEnum, IsNotEmpty } from \"class-validator\"\n\nexport class CreateScheduleDaysDto {\n\n   @IsNotEmpty()\n   @IsEnum(DaysOfTheWeek)\n   day: DaysOfTheWeek\n\n   @IsNotEmpty()\n   numberLesson: number\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateScheduleDto.html":{"url":"classes/CreateScheduleDto.html","title":"class - CreateScheduleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateScheduleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/schedule/dto/createSchedule.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                classDigit\n                            \n                            \n                                    \n                                    \n                                classLetter\n                            \n                            \n                                    \n                                date\n                            \n                            \n                                    \n                                scheduleDays\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        classDigit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Max(8)@Min(0)@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/schedule/dto/createSchedule.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        classLetter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/schedule/dto/createSchedule.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/schedule/dto/createSchedule.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        scheduleDays\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ScheduleDays\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/schedule/dto/createSchedule.dto.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ScheduleDays } from \"@prisma/client\"\nimport { IsOptional, IsAlpha, IsNumber, Max, Min } from \"class-validator\"\n\nexport class CreateScheduleDto {\n\n    @IsAlpha()\n    @IsOptional()\n    classLetter: string\n\n    @Max(8)\n    @Min(0)\n    @IsNumber()\n    @IsOptional()\n    classDigit: number\n\n    @IsOptional()\n    date: Date\n\n    @IsOptional()\n    scheduleDays:ScheduleDays\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSchoolDto.html":{"url":"classes/CreateSchoolDto.html","title":"class - CreateSchoolDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSchoolDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/school/dto/createSchool.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                city\n                            \n                            \n                                    \n                                    \n                                    \n                                comments\n                            \n                            \n                                    \n                                cooperation\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                numberOfClasses\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                postCode\n                            \n                            \n                                    \n                                    \n                                province\n                            \n                            \n                                    \n                                region\n                            \n                            \n                                    \n                                    \n                                status\n                            \n                            \n                                    \n                                    \n                                street\n                            \n                            \n                                    \n                                    \n                                    \n                                suiteNumber\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/createSchool.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @MinLength(1)@IsAscii()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/createSchool.dto.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        cooperation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/createSchool.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/createSchool.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAscii()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/createSchool.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        numberOfClasses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Min(0)@Max(50)@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/createSchool.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPhoneNumber('PL')@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/createSchool.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        postCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPostalCode('PL')@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/createSchool.dto.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        province\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Province\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEnum(Province)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/createSchool.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        region\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/createSchool.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Status\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEnum(Status)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/createSchool.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        street\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/createSchool.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        suiteNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Length(1, 5)@IsAlphanumeric('pl-PL')@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/createSchool.dto.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEnum(Type)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/createSchool.dto.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Province, Status,Type} from \"@prisma/client\"\nimport { IsAlpha, IsAlphanumeric, IsAscii, IsEmail, IsEmpty, IsEnum, IsNotEmpty, IsNumber, IsOptional, IsPhoneNumber, IsPostalCode, IsString, Length, Max, Min, MinLength } from \"class-validator\"\n\nexport class CreateSchoolDto {\n    \n    @IsAscii()\n    @IsNotEmpty()\n    name: string\n\n    @IsAlpha(\"pl-PL\")\n    @IsNotEmpty()\n    city: string\n\n    @IsNotEmpty()\n    @IsEnum(Status)\n    status:Status\n\n    @IsNotEmpty()\n    @IsEnum(Type)\n    type: Type\n\n    @IsNotEmpty()\n    cooperation:boolean\n\n    @IsPhoneNumber(\"PL\")\n    @IsNotEmpty()\n    phone: string\n\n   \n    @IsNotEmpty()\n    @IsEnum(Province)\n    province: Province\n\n    @IsEmail()\n    @IsOptional()\n    email: string\n\n    @IsEmpty()\n    region: string\n\n    @IsString()\n    @IsNotEmpty()\n    street: string\n\n    @Length(1,5)\n    @IsAlphanumeric(\"pl-PL\")\n    @IsNotEmpty()\n    suiteNumber:string\n\n    @IsPostalCode(\"PL\")\n    @IsNotEmpty()\n    postCode: string\n\n    @Min(0)\n    @Max(50)\n    @IsNumber()\n    @IsOptional()\n    numberOfClasses: number\n\n    @MinLength(1)\n    @IsAscii()\n    @IsOptional()\n    comments: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserForMGTMTDto.html":{"url":"classes/CreateUserForMGTMTDto.html","title":"class - CreateUserForMGTMTDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserForMGTMTDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/user/dto/createUser.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                active\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                job\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                region\n                            \n                            \n                                    \n                                    \n                                role\n                            \n                            \n                                    \n                                    \n                                surname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/createUser.dto.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/createUser.dto.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        job\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Job\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEnum(Job)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/createUser.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/createUser.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPhoneNumber('PL')@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/createUser.dto.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        region\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/createUser.dto.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@NotContains('MGTMT')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/createUser.dto.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/createUser.dto.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Job, Role } from \"@prisma/client\"\nimport { IsAlpha, IsEmail, IsEmpty, IsEnum, IsNotEmpty, IsOptional, IsPhoneNumber, Min, MinLength, NotContains } from \"class-validator\"\n\n\nexport class CreateUserForRdDto {\n    @IsAlpha()\n    @MinLength(3)\n    @IsNotEmpty()\n    name: string\n\n    @IsAlpha()\n    @IsNotEmpty()\n    surname: string\n\n    @IsNotEmpty()\n    @IsEnum(Job)\n    job: Job\n\n    @IsNotEmpty()\n    @IsEmail()\n    email: string\n\n    @IsPhoneNumber(\"PL\")\n    @IsNotEmpty()\n    phone: string\n\n\n    @IsEmpty()\n    region: string\n\n    @IsOptional()\n    active: boolean\n\n    @IsNotEmpty()\n    @NotContains(\"MGTMT\")\n    @NotContains(\"RD\")\n    role: Role\n}\nexport class CreateUserForMGTMTDto {\n    @IsAlpha(\"pl-PL\")\n    @IsNotEmpty()\n    name: string\n\n    @IsAlpha(\"pl-PL\")\n    @IsNotEmpty()\n    surname: string\n\n    @IsNotEmpty()\n    @IsEnum(Job)\n    job: Job\n\n    @IsNotEmpty()\n    @IsEmail()\n    email: string\n\n    @IsPhoneNumber(\"PL\")\n    @IsNotEmpty()\n    phone: string\n\n    @IsNotEmpty()\n    region: string\n\n    @IsOptional()\n    active: boolean\n\n    @IsNotEmpty()\n    @NotContains(\"MGTMT\")\n    role: Role\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserForRdDto.html":{"url":"classes/CreateUserForRdDto.html","title":"class - CreateUserForRdDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserForRdDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/user/dto/createUser.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                active\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                job\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                region\n                            \n                            \n                                    \n                                    \n                                    \n                                role\n                            \n                            \n                                    \n                                    \n                                surname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/createUser.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/createUser.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        job\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Job\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEnum(Job)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/createUser.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha()@MinLength(3)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/createUser.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPhoneNumber('PL')@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/createUser.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        region\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/createUser.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@NotContains('MGTMT')@NotContains('RD')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/createUser.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/createUser.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Job, Role } from \"@prisma/client\"\nimport { IsAlpha, IsEmail, IsEmpty, IsEnum, IsNotEmpty, IsOptional, IsPhoneNumber, Min, MinLength, NotContains } from \"class-validator\"\n\n\nexport class CreateUserForRdDto {\n    @IsAlpha()\n    @MinLength(3)\n    @IsNotEmpty()\n    name: string\n\n    @IsAlpha()\n    @IsNotEmpty()\n    surname: string\n\n    @IsNotEmpty()\n    @IsEnum(Job)\n    job: Job\n\n    @IsNotEmpty()\n    @IsEmail()\n    email: string\n\n    @IsPhoneNumber(\"PL\")\n    @IsNotEmpty()\n    phone: string\n\n\n    @IsEmpty()\n    region: string\n\n    @IsOptional()\n    active: boolean\n\n    @IsNotEmpty()\n    @NotContains(\"MGTMT\")\n    @NotContains(\"RD\")\n    role: Role\n}\nexport class CreateUserForMGTMTDto {\n    @IsAlpha(\"pl-PL\")\n    @IsNotEmpty()\n    name: string\n\n    @IsAlpha(\"pl-PL\")\n    @IsNotEmpty()\n    surname: string\n\n    @IsNotEmpty()\n    @IsEnum(Job)\n    job: Job\n\n    @IsNotEmpty()\n    @IsEmail()\n    email: string\n\n    @IsPhoneNumber(\"PL\")\n    @IsNotEmpty()\n    phone: string\n\n    @IsNotEmpty()\n    region: string\n\n    @IsOptional()\n    active: boolean\n\n    @IsNotEmpty()\n    @NotContains(\"MGTMT\")\n    role: Role\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DecodeDto.html":{"url":"classes/DecodeDto.html","title":"class - DecodeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DecodeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Auth/dto/decode.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                exp\n                            \n                            \n                                iat\n                            \n                            \n                                id\n                            \n                            \n                                region\n                            \n                            \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/Auth/dto/decode.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/Auth/dto/decode.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/Auth/dto/decode.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/Auth/dto/decode.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        region\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/Auth/dto/decode.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Role\n\n                    \n                \n                    \n                        \n                                Defined in src/Auth/dto/decode.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Role } from \"@prisma/client\"\n\nexport class DecodeDto {\n\n    email:string\n\n    role:Role\n\n    region:string\n\n    id:number\n\n    iat:number\n\n    exp:number\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DirectorController.html":{"url":"controllers/DirectorController.html","title":"controller - DirectorController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DirectorController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/director/director.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                director\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                edit\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(idSchool: string, reqInfo: ReqUserInfo, body: CreateDirectorDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA)@Post('create/:idSchool')\n                \n            \n\n            \n                \n                    Defined in src/models/director/director.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reqInfo\n                                    \n                                                ReqUserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                CreateDirectorDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        edit\n                        \n                    \n                \n            \n            \n                \n                    \n                    edit(idSchool: string, reqInfo: ReqUserInfo, body: EditDirectorDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA)@Patch('edit/:idSchool')\n                \n            \n\n            \n                \n                    Defined in src/models/director/director.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reqInfo\n                                    \n                                                ReqUserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                EditDirectorDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        getById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getById(idSchool: string, reqInfo: ReqUserInfo)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA, Role.MGTMT)@Get('getdirector/:idSchool')\n                \n            \n\n            \n                \n                    Defined in src/models/director/director.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reqInfo\n                                    \n                                                ReqUserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Patch, Post, UseFilters, UseGuards } from '@nestjs/common';\nimport { DirectorService } from './director.service';\nimport { Role } from '@prisma/client';\nimport { Roles } from 'src/Auth/decorators/roles.decorator';\nimport { HttpExceptionFilter } from 'src/common/validation/http-exception.filter';\nimport { EditDirectorDto } from './dto/editDirector.dto';\nimport { CreateDirectorDto } from './dto/createDirector.dto';\nimport { RolesGuard } from 'src/Auth/roles.guard';\nimport { GetDirectorDto } from './dto/getDirector.dto';\nimport { ReqInfo, ReqUserInfo } from 'src/Auth/decorators/reqinfo.decorator';\n\n@UseGuards(RolesGuard)\n@Controller('director')\nexport class DirectorController {\n    constructor(private directorService: DirectorService) { }\n\n\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.RD, Role.CA, Role.MGTMT)\n    @Get('getdirector/:idSchool')\n    async getById(@Param('idSchool') idSchool: string, @ReqInfo() reqInfo: ReqUserInfo): Promise {\n        if (reqInfo.role.match(Role.MGTMT)) {\n            return this.directorService.getByIdForMgtmt(idSchool);\n        } else {\n            return this.directorService.getByIdForRd(idSchool, reqInfo.region);\n        }\n\n    }\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.RD, Role.CA)\n    @Post('create/:idSchool')\n    async create(@Param('idSchool') idSchool: string, @ReqInfo() reqInfo: ReqUserInfo, @Body() body: CreateDirectorDto): Promise {\n        return this.directorService.create(idSchool, reqInfo.region, body);\n    }\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.RD, Role.CA)\n    @Patch('edit/:idSchool')\n    async edit(@Param('idSchool') idSchool: string, @ReqInfo() reqInfo: ReqUserInfo, @Body() body: EditDirectorDto): Promise {\n        return this.directorService.edit(idSchool, reqInfo.region, body);\n    }\n    //wyświetlenie dyrektora placówki po id placówki dla Mngmt\n    //wyświetlenie dyrektora placówki po id placówki w danym regionie dla Rd\n    // dodanie dyrektora placówki dla Dr w danym regionie\n    // edycja dyrektora placówki dla Dr w danym regionie\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DirectorModule.html":{"url":"modules/DirectorModule.html","title":"module - DirectorModule","body":"\n                   \n\n\n\n\n    Modules\n    DirectorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DirectorModule\n\n\n\ncluster_DirectorModule_providers\n\n\n\n\nDirectorService\n\nDirectorService\n\n\n\nDirectorModule\n\nDirectorModule\n\nDirectorModule -->\n\nDirectorService->DirectorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/director/director.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DirectorService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DirectorController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { PrismaModule } from 'prisma/prisma.module';\nimport { DirectorController } from './director.controller';\nimport { DirectorService } from './director.service';\nimport { Module } from '@nestjs/common';\n\n@Module({\n    imports: [PrismaModule],\n    controllers: [DirectorController],\n    providers: [\n        DirectorService ],\n})\nexport class DirectorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DirectorService.html":{"url":"injectables/DirectorService.html","title":"injectable - DirectorService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DirectorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/director/director.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                edit\n                            \n                            \n                                    Async\n                                getByIdForMgtmt\n                            \n                            \n                                    Async\n                                getByIdForRd\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/models/director/director.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                    PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(idSchool: string, region: string, body: CreateDirectorDto)\n                \n            \n\n\n            \n                \n                    Defined in src/models/director/director.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                CreateDirectorDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        edit\n                        \n                    \n                \n            \n            \n                \n                    \n                    edit(idSchool: string, region: string, body: EditDirectorDto)\n                \n            \n\n\n            \n                \n                    Defined in src/models/director/director.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                EditDirectorDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getByIdForMgtmt\n                        \n                    \n                \n            \n            \n                \n                    \n                    getByIdForMgtmt(idSchool: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/director/director.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getByIdForRd\n                        \n                    \n                \n            \n            \n                \n                    \n                    getByIdForRd(idSchool: string, region: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/director/director.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from 'prisma/prisma.service';\nimport { CreateDirectorDto } from './dto/createDirector.dto';\nimport { EditDirectorDto } from './dto/editDirector.dto';\nimport { GetDirectorDto } from './dto/getDirector.dto';\n\n@Injectable()\nexport class DirectorService {\n    constructor(private prisma: PrismaService) { }\n\n    async getByIdForMgtmt(idSchool: string): Promise {\n        return this.prisma.director.findUniqueOrThrow({\n            where: {\n                schoolId: idSchool\n            },\n            select: {\n                id: true,\n                name: true,\n                surname: true,\n                email: true,\n                phone: true\n            }\n        })\n    }\n\n    async getByIdForRd(idSchool: string, region: string): Promise {\n\n        const Find = this.prisma.school.findUniqueOrThrow({\n            where: {\n                unique_school_region_id: {\n                    id: idSchool,\n                    region: region\n                }\n            },\n\n            select: {\n                director: {\n                    select: {\n                        id: true,\n                        name: true,\n                        surname: true,\n                        email: true,\n                        phone: true\n                    }\n                }\n            }\n        })\n        return Find.director()\n    }\n\n\n    async create(idSchool: string, region: string, body: CreateDirectorDto): Promise {\n\n        return this.prisma.director.create({\n            data: {\n                name: body.name,\n                surname: body.surname,\n                email: body.email,\n                phone: body.phone,\n                school: {\n                    connect: {\n                        unique_school_region_id: {\n                            id: idSchool,\n                            region: region\n                        }\n                    }\n                }\n            }\n        })\n\n    }\n\n    async edit(idSchool: string, region: string, body: EditDirectorDto): Promise {\n\n        const UpdateInSchool = this.prisma.school.update({\n            where: {\n                unique_school_region_id: {\n                    id: idSchool,\n                    region: region\n                }\n            },\n            data: {\n                director: {\n                    update: {\n                        name: body.name,\n                        surname: body.surname,\n                        email: body.email,\n                        phone: body.phone\n                    }\n                }\n            }\n        })\n        return UpdateInSchool.director()\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DtoValidationPipe.html":{"url":"injectables/DtoValidationPipe.html","title":"injectable - DtoValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DtoValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/school/dtoValidation.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(req: Request)\n                    \n                \n                        \n                            \n                                Defined in src/models/school/dtoValidation.pipe.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        transform\n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: any, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/models/school/dtoValidation.pipe.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Injectable, ArgumentMetadata, BadRequestException, Inject, Scope } from '@nestjs/common';\nimport { ClassValidator } from 'src/common/helpers/ClassValidator';\nimport { CreateSchoolDto } from './dto/createSchool.dto';\nimport { REQUEST } from '@nestjs/core/router';\nimport { Request } from 'express';\nimport { EditSchoolDto } from './dto/editSchool.dto';\n\n@Injectable({ scope: Scope.REQUEST })\nexport class DtoValidationPipe implements PipeTransform {\n\n  constructor(@Inject(REQUEST) protected readonly req: Request) { }\n  async transform(value: any, metadata: ArgumentMetadata) {\n\n    let validationResult: number | BadRequestException\n    if (this.req.method == \"POST\") {\n      validationResult = await ClassValidator(value, CreateSchoolDto);\n    } else if (this.req.method == \"PATCH\") {\n\n      validationResult = await ClassValidator(value, EditSchoolDto);\n\n    }\n    if (validationResult instanceof BadRequestException) {\n\n      throw validationResult;\n    }\n    return value ;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DtoValidatorPipe.html":{"url":"injectables/DtoValidatorPipe.html","title":"injectable - DtoValidatorPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DtoValidatorPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/user/dtoValidator.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(req: Request)\n                    \n                \n                        \n                            \n                                Defined in src/models/user/dtoValidator.pipe.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        transform\n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: any, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/models/user/dtoValidator.pipe.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Injectable, ArgumentMetadata, BadRequestException, Inject, Scope } from '@nestjs/common';\nimport { Role } from '@prisma/client';\nimport { ClassValidator } from './../../common/helpers/ClassValidator';\nimport { CreateUserForMGTMTDto, CreateUserForRdDto } from './dto/createUser.dto';\nimport { REQUEST } from '@nestjs/core/router';\nimport { Request } from 'express';\nimport { EditUserForMGTMTDto, EditUserForRdDto } from './dto/editUser.dto';\n\n\n@Injectable({ scope: Scope.REQUEST })\nexport class DtoValidatorPipe implements PipeTransform {\n\n  constructor(@Inject(REQUEST) protected readonly req: Request) { }\n\n  async transform(value: any, metadata: ArgumentMetadata) {\n    let validationResult: number | BadRequestException;\n   const RoleUser:Role = this.req['user'].role;\n\n    if (this.req.method == \"POST\") {\n\n      if (RoleUser.match(Role.MGTMT)) {\n        validationResult = await ClassValidator(value, CreateUserForMGTMTDto);\n      } else {\n        validationResult = await ClassValidator(value, CreateUserForRdDto);\n      }\n\n    } else if (this.req.method == \"PATCH\") {\n      \n      if (RoleUser.match(Role.MGTMT)) {\n        validationResult = await ClassValidator(value, EditUserForMGTMTDto);\n      } else {\n        validationResult = await ClassValidator(value, EditUserForRdDto);\n      }\n    }\n    if (validationResult instanceof BadRequestException) {\n      throw validationResult;\n    }\n    return value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DtoValidatorSelfPipe.html":{"url":"injectables/DtoValidatorSelfPipe.html","title":"injectable - DtoValidatorSelfPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DtoValidatorSelfPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/user/dtoValidatorSelf.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(req: Request)\n                    \n                \n                        \n                            \n                                Defined in src/models/user/dtoValidatorSelf.pipe.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        transform\n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: any, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/models/user/dtoValidatorSelf.pipe.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Injectable, ArgumentMetadata, BadRequestException, Inject, Scope } from '@nestjs/common';\nimport { ClassValidator } from './../../common/helpers/ClassValidator';\nimport { REQUEST } from '@nestjs/core/router';\nimport { Request } from 'express';\nimport { EditSelfDto } from './dto/editUser.dto';\n\n\n@Injectable({ scope: Scope.REQUEST })\nexport class DtoValidatorSelfPipe implements PipeTransform {\n\n  constructor(@Inject(REQUEST) protected readonly req: Request) { }\n\n  async transform(value: any, metadata: ArgumentMetadata) {\n    let validationResult: number | BadRequestException;\n    validationResult = await ClassValidator(value, EditSelfDto);\n    if (validationResult instanceof BadRequestException) {\n      throw validationResult;\n    }\n    return value;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditContactDto.html":{"url":"classes/EditContactDto.html","title":"class - EditContactDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditContactDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/contact/dto/editContact.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                comments\n                            \n                            \n                                    \n                                    \n                                dateOfVisit\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAscii()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/contact/dto/editContact.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        dateOfVisit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/contact/dto/editContact.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsAlpha, IsOptional, IsDate, IsNotEmpty, IsAscii } from \"class-validator\"\n\nexport class EditContactDto {\n    @IsDate()\n    @IsOptional()\n    dateOfVisit: Date\n\n    @IsAscii()\n    @IsOptional()\n    comments: string\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditContactPersontDto.html":{"url":"classes/EditContactPersontDto.html","title":"class - EditContactPersontDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditContactPersontDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/personContact/dto/editContactPerson.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                surname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/personContact/dto/editContactPerson.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/personContact/dto/editContactPerson.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPhoneNumber('PL')@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/personContact/dto/editContactPerson.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/personContact/dto/editContactPerson.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsAlpha, IsEmail, IsOptional, IsPhoneNumber } from \"class-validator\"\n\nexport class EditContactPersontDto {\n\n    @IsAlpha(\"pl-PL\")\n    @IsOptional()\n    name: string\n\n    @IsAlpha(\"pl-PL\")\n    @IsOptional()\n    surname: string\n\n    @IsEmail()\n    @IsOptional()\n    email: string\n\n    @IsPhoneNumber(\"PL\")\n    @IsOptional()\n    phone: string\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditDirectorDto.html":{"url":"classes/EditDirectorDto.html","title":"class - EditDirectorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditDirectorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/director/dto/editDirector.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                surname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/director/dto/editDirector.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/director/dto/editDirector.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPhoneNumber('PL')@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/director/dto/editDirector.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/director/dto/editDirector.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsAlpha, IsNotEmpty, IsEmail, IsOptional, IsPhoneNumber } from \"class-validator\"\n\n\nexport class EditDirectorDto {\n    @IsAlpha(\"pl-PL\")\n    @IsOptional()\n    name: string\n\n    @IsAlpha(\"pl-PL\")\n    @IsOptional()\n    surname: string\n\n    @IsEmail()\n    @IsOptional()\n    email: string\n\n    @IsPhoneNumber(\"PL\")\n    @IsOptional()\n    phone: string\n    \n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditFiszkaDto.html":{"url":"classes/EditFiszkaDto.html","title":"class - EditFiszkaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditFiszkaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/fiszka/dto/EditFiszka.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                classDigit\n                            \n                            \n                                    \n                                    \n                                classLetter\n                            \n                            \n                                    \n                                    \n                                    \n                                comments\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                resignation\n                            \n                            \n                                    \n                                    \n                                surname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        classDigit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Min(0)@Max(8)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/fiszka/dto/EditFiszka.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        classLetter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/fiszka/dto/EditFiszka.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateIf((obj, value) => )@IsAscii()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/fiszka/dto/EditFiszka.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/fiszka/dto/EditFiszka.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/fiszka/dto/EditFiszka.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPhoneNumber('PL')@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/fiszka/dto/EditFiszka.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        resignation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/fiszka/dto/EditFiszka.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/fiszka/dto/EditFiszka.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsAlpha, IsAscii, IsEmail, IsNumber, IsOptional, IsPhoneNumber, Max, Min, ValidateIf } from \"class-validator\"\n\nexport class EditFiszkaDto {\n    @IsAlpha(\"pl-PL\")\n    @IsOptional()\n    name: string\n\n    @IsAlpha(\"pl-PL\")\n    @IsOptional()\n    surname: string\n\n    @IsAlpha(\"pl-PL\")\n    @IsOptional()\n    classLetter: string\n\n    @IsNumber()\n    @Min(0)\n    @Max(8)\n    @IsOptional()\n    classDigit: number\n\n    @ValidateIf((obj, value) => value !== \"\" )\n    @IsAscii()\n    @IsOptional()\n    comments: string\n\n    @IsPhoneNumber('PL')\n    @IsOptional()\n    phone: string\n\n    @IsEmail()\n    @IsOptional()\n    email: string\n\n    @IsOptional()\n    resignation: boolean\n\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditGroupDto.html":{"url":"classes/EditGroupDto.html","title":"class - EditGroupDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditGroupDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/group/dto/editGroup.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                codeGroup\n                            \n                            \n                                    \n                                    \n                                dayOfTheWeek\n                            \n                            \n                                    \n                                hour\n                            \n                            \n                                    \n                                subject\n                            \n                            \n                                    \n                                title\n                            \n                            \n                                    \n                                trial\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        codeGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/group/dto/editGroup.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        dayOfTheWeek\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DaysOfTheWeek\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEnum(DaysOfTheWeek)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/group/dto/editGroup.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        hour\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/group/dto/editGroup.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        subject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/group/dto/editGroup.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/group/dto/editGroup.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        trial\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/group/dto/editGroup.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DaysOfTheWeek } from \"@prisma/client\"\nimport { IsEnum, IsNotEmpty, IsOptional} from \"class-validator\"\n\nexport class EditGroupDto {\n\n    @IsOptional()\n    codeGroup: string\n\n    @IsOptional()\n    title:string\n\n    @IsOptional()\n    subject:string\n\n    @IsOptional()\n    @IsEnum(DaysOfTheWeek)\n    dayOfTheWeek:DaysOfTheWeek\n\n    @IsOptional()\n    hour:string\n\n    @IsOptional()\n    trial:boolean\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditInterViewDto.html":{"url":"classes/EditInterViewDto.html","title":"class - EditInterViewDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditInterViewDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/interviews/dto/editInterView.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                classNumber\n                            \n                            \n                                    \n                                date\n                            \n                            \n                                    \n                                    \n                                termsNumber\n                            \n                            \n                                    \n                                userInterviews\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        classNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Min(0)@Max(8)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/interviews/dto/editInterView.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/interviews/dto/editInterView.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        termsNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Min(0)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/interviews/dto/editInterView.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userInterviews\n                        \n                    \n                \n            \n                \n                    \n                        Type :     InterviewUser[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/interviews/dto/editInterView.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InterviewUser} from \"@prisma/client\"\nimport { IsOptional, Min, Max, IsNumber } from \"class-validator\"\n\nexport class EditInterViewDto {\n\n    @IsNumber()\n    @Min(0)\n    @Max(8)\n    @IsOptional()\n    classNumber: number\n\n    @Min(0)\n    @IsOptional()\n    termsNumber: number\n\n    @IsOptional()\n    date: Date\n\n    @IsOptional()\n    userInterviews:InterviewUser[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditRentalCostDto.html":{"url":"classes/EditRentalCostDto.html","title":"class - EditRentalCostDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditRentalCostDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/rentalCost/dto/editRentalCost.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                classroomHour\n                            \n                            \n                                    \n                                    \n                                clockHour\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        classroomHour\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Decimal\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDecimal()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/rentalCost/dto/editRentalCost.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        clockHour\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Decimal\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDecimal()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/rentalCost/dto/editRentalCost.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Decimal } from \"@prisma/client/runtime/library\";\nimport { IsDecimal, IsNotEmpty, IsOptional } from \"class-validator\";\n\nexport class EditRentalCostDto {\n\n    @IsDecimal()\n    @IsOptional()\n    classroomHour:Decimal\n\n    @IsDecimal()\n    @IsOptional()\n    clockHour:Decimal\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditScheduleDaysDto.html":{"url":"classes/EditScheduleDaysDto.html","title":"class - EditScheduleDaysDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditScheduleDaysDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/scheduleDays/dto/editSheduleDays.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                day\n                            \n                            \n                                    \n                                numberLesson\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        day\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DaysOfTheWeek\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEnum(DaysOfTheWeek)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/scheduleDays/dto/editSheduleDays.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        numberLesson\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/scheduleDays/dto/editSheduleDays.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DaysOfTheWeek } from \"@prisma/client\"\nimport { IsEnum, IsNotEmpty } from \"class-validator\"\n\nexport class EditScheduleDaysDto {\n\n   @IsNotEmpty()\n   @IsEnum(DaysOfTheWeek)\n   day: DaysOfTheWeek\n\n   @IsNotEmpty()\n   numberLesson: number\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditScheduleDto.html":{"url":"classes/EditScheduleDto.html","title":"class - EditScheduleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditScheduleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/schedule/dto/editSchedule.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                classDigit\n                            \n                            \n                                    \n                                    \n                                classLetter\n                            \n                            \n                                    \n                                date\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        classDigit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Max(8)@Min(0)@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/schedule/dto/editSchedule.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        classLetter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/schedule/dto/editSchedule.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/schedule/dto/editSchedule.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsAlpha, IsOptional, Max, Min, IsNumber } from \"class-validator\"\n\nexport class EditScheduleDto {\n\n    @IsAlpha()\n    @IsOptional()\n    classLetter: string\n\n    @Max(8)\n    @Min(0)\n    @IsNumber()\n    @IsOptional()\n    classDigit: number\n\n    @IsOptional()\n    date: Date\n\n \n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditSchoolDto.html":{"url":"classes/EditSchoolDto.html","title":"class - EditSchoolDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditSchoolDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/school/dto/editSchool.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                city\n                            \n                            \n                                    \n                                    \n                                    \n                                comments\n                            \n                            \n                                    \n                                cooperation\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                numberOfClasses\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                postCode\n                            \n                            \n                                    \n                                    \n                                province\n                            \n                            \n                                    \n                                    \n                                status\n                            \n                            \n                                    \n                                    \n                                street\n                            \n                            \n                                    \n                                    \n                                    \n                                suiteNumber\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/editSchool.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @MinLength(1)@IsAscii()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/editSchool.dto.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        cooperation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/editSchool.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/editSchool.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAscii()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/editSchool.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        numberOfClasses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Min(0)@Max(50)@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/editSchool.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPhoneNumber('PL')@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/editSchool.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        postCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPostalCode('PL')@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/editSchool.dto.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        province\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Province\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEnum(Province)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/editSchool.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Status\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEnum(Status)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/editSchool.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        street\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/editSchool.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        suiteNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Length(1, 5)@IsAlphanumeric('pl-PL')@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/editSchool.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEnum(Type)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/editSchool.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Province, Status,Type} from \"@prisma/client\"\nimport { IsAlpha, IsAlphanumeric, IsAscii, IsEmail, IsEnum, IsNumber, IsOptional, IsPhoneNumber, IsPostalCode, IsString, Length, Max, Min, MinLength } from \"class-validator\"\n\nexport class EditSchoolDto {\n    \n    @IsAscii()\n    @IsOptional()\n    name: string\n\n    @IsOptional()\n    city: string\n\n    @IsOptional()\n    @IsEnum(Status)\n    status:Status\n\n    @IsOptional()\n    @IsEnum(Type)\n    type: Type\n\n    @IsOptional()\n    cooperation:boolean\n\n    @IsPhoneNumber(\"PL\")\n    @IsOptional()\n    phone: string\n\n\n    @IsOptional()\n    @IsEnum(Province)\n    province: Province\n\n    @IsEmail()\n    @IsOptional()\n    email: string\n\n    @IsString()\n    @IsOptional()\n    street: string\n\n    @Length(1,5)\n    @IsAlphanumeric(\"pl-PL\")\n    @IsOptional()\n    suiteNumber:string\n\n    @IsPostalCode(\"PL\")\n    @IsOptional()\n    postCode: string\n\n    @Min(0)\n    @Max(50)\n    @IsNumber()\n    @IsOptional()\n    numberOfClasses: number\n\n    @MinLength(1)\n    @IsAscii()\n    @IsOptional()\n    comments: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditSelfDto.html":{"url":"classes/EditSelfDto.html","title":"class - EditSelfDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditSelfDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/user/dto/editUser.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/editUser.dto.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/editUser.dto.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPhoneNumber('PL')@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/editUser.dto.ts:80\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Job, Role } from \"@prisma/client\"\nimport { IsAlpha, IsEmail, IsEnum, IsOptional, IsPhoneNumber, NotContains } from \"class-validator\"\n\nexport class EditUserForRdDto {\n    @IsAlpha(\"pl-PL\")\n    @IsOptional()\n    name: string\n\n    @IsAlpha(\"pl-PL\")\n    @IsOptional()\n    surname: string\n\n    @IsOptional()\n    @IsEnum(Job)\n    job: Job\n\n    @IsPhoneNumber(\"PL\")\n    @IsOptional()\n    phone: string\n\n    @IsOptional()\n    @IsEmail()\n    email: string\n\n    @IsOptional()\n    isFirstLogin:boolean\n\n    @IsOptional()\n    password: string\n\n    @IsOptional()\n    active: boolean\n\n    @IsOptional()\n    @NotContains(\"MGTMT\")\n    @NotContains(\"RD\")\n    role: Role\n}\nexport class EditUserForMGTMTDto {\n    @IsAlpha(\"pl-PL\")\n    @IsOptional()\n    name: string\n\n    @IsAlpha(\"pl-PL\")\n    @IsOptional()\n    surname: string\n\n    @IsOptional()\n    @IsEnum(Job)\n    job: Job\n\n    @IsPhoneNumber(\"PL\")\n    @IsOptional()\n    phone: string\n\n    @IsOptional()\n    @IsEmail()\n    email: string\n    \n    @IsOptional()\n    isFirstLogin:boolean\n\n    @IsOptional()\n    region: string\n\n    @IsOptional()\n    active: boolean\n\n    @IsOptional()\n    password: string\n\n    @IsOptional()\n    @NotContains(\"MGTMT\")\n    role: Role\n}\nexport class EditSelfDto {\n   \n    @IsPhoneNumber(\"PL\")\n    @IsOptional()\n    phone: string\n\n    @IsOptional()\n    @IsEmail()\n    email: string\n\n    @IsOptional()\n    password: string\n\n}\n// export class EditUser {\n\n\n//     name: string\n\n//     surname: string\n\n//     job: Job\n\n//     email: string\n\n//     phone: string\n    \n//     region: string\n    \n//     active: boolean\n\n//     password: string\n\n//     role: Role\n// }\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditUserForMGTMTDto.html":{"url":"classes/EditUserForMGTMTDto.html","title":"class - EditUserForMGTMTDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditUserForMGTMTDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/user/dto/editUser.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                active\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                isFirstLogin\n                            \n                            \n                                    \n                                    \n                                job\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                region\n                            \n                            \n                                    \n                                    \n                                role\n                            \n                            \n                                    \n                                    \n                                surname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/editUser.dto.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/editUser.dto.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isFirstLogin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/editUser.dto.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        job\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Job\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEnum(Job)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/editUser.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/editUser.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/editUser.dto.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPhoneNumber('PL')@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/editUser.dto.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        region\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/editUser.dto.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@NotContains('MGTMT')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/editUser.dto.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/editUser.dto.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Job, Role } from \"@prisma/client\"\nimport { IsAlpha, IsEmail, IsEnum, IsOptional, IsPhoneNumber, NotContains } from \"class-validator\"\n\nexport class EditUserForRdDto {\n    @IsAlpha(\"pl-PL\")\n    @IsOptional()\n    name: string\n\n    @IsAlpha(\"pl-PL\")\n    @IsOptional()\n    surname: string\n\n    @IsOptional()\n    @IsEnum(Job)\n    job: Job\n\n    @IsPhoneNumber(\"PL\")\n    @IsOptional()\n    phone: string\n\n    @IsOptional()\n    @IsEmail()\n    email: string\n\n    @IsOptional()\n    isFirstLogin:boolean\n\n    @IsOptional()\n    password: string\n\n    @IsOptional()\n    active: boolean\n\n    @IsOptional()\n    @NotContains(\"MGTMT\")\n    @NotContains(\"RD\")\n    role: Role\n}\nexport class EditUserForMGTMTDto {\n    @IsAlpha(\"pl-PL\")\n    @IsOptional()\n    name: string\n\n    @IsAlpha(\"pl-PL\")\n    @IsOptional()\n    surname: string\n\n    @IsOptional()\n    @IsEnum(Job)\n    job: Job\n\n    @IsPhoneNumber(\"PL\")\n    @IsOptional()\n    phone: string\n\n    @IsOptional()\n    @IsEmail()\n    email: string\n    \n    @IsOptional()\n    isFirstLogin:boolean\n\n    @IsOptional()\n    region: string\n\n    @IsOptional()\n    active: boolean\n\n    @IsOptional()\n    password: string\n\n    @IsOptional()\n    @NotContains(\"MGTMT\")\n    role: Role\n}\nexport class EditSelfDto {\n   \n    @IsPhoneNumber(\"PL\")\n    @IsOptional()\n    phone: string\n\n    @IsOptional()\n    @IsEmail()\n    email: string\n\n    @IsOptional()\n    password: string\n\n}\n// export class EditUser {\n\n\n//     name: string\n\n//     surname: string\n\n//     job: Job\n\n//     email: string\n\n//     phone: string\n    \n//     region: string\n    \n//     active: boolean\n\n//     password: string\n\n//     role: Role\n// }\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EditUserForRdDto.html":{"url":"classes/EditUserForRdDto.html","title":"class - EditUserForRdDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EditUserForRdDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/user/dto/editUser.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                active\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                isFirstLogin\n                            \n                            \n                                    \n                                    \n                                job\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                    \n                                role\n                            \n                            \n                                    \n                                    \n                                surname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/editUser.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/editUser.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isFirstLogin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/editUser.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        job\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Job\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEnum(Job)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/editUser.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/editUser.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/editUser.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPhoneNumber('PL')@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/editUser.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@NotContains('MGTMT')@NotContains('RD')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/editUser.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/editUser.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Job, Role } from \"@prisma/client\"\nimport { IsAlpha, IsEmail, IsEnum, IsOptional, IsPhoneNumber, NotContains } from \"class-validator\"\n\nexport class EditUserForRdDto {\n    @IsAlpha(\"pl-PL\")\n    @IsOptional()\n    name: string\n\n    @IsAlpha(\"pl-PL\")\n    @IsOptional()\n    surname: string\n\n    @IsOptional()\n    @IsEnum(Job)\n    job: Job\n\n    @IsPhoneNumber(\"PL\")\n    @IsOptional()\n    phone: string\n\n    @IsOptional()\n    @IsEmail()\n    email: string\n\n    @IsOptional()\n    isFirstLogin:boolean\n\n    @IsOptional()\n    password: string\n\n    @IsOptional()\n    active: boolean\n\n    @IsOptional()\n    @NotContains(\"MGTMT\")\n    @NotContains(\"RD\")\n    role: Role\n}\nexport class EditUserForMGTMTDto {\n    @IsAlpha(\"pl-PL\")\n    @IsOptional()\n    name: string\n\n    @IsAlpha(\"pl-PL\")\n    @IsOptional()\n    surname: string\n\n    @IsOptional()\n    @IsEnum(Job)\n    job: Job\n\n    @IsPhoneNumber(\"PL\")\n    @IsOptional()\n    phone: string\n\n    @IsOptional()\n    @IsEmail()\n    email: string\n    \n    @IsOptional()\n    isFirstLogin:boolean\n\n    @IsOptional()\n    region: string\n\n    @IsOptional()\n    active: boolean\n\n    @IsOptional()\n    password: string\n\n    @IsOptional()\n    @NotContains(\"MGTMT\")\n    role: Role\n}\nexport class EditSelfDto {\n   \n    @IsPhoneNumber(\"PL\")\n    @IsOptional()\n    phone: string\n\n    @IsOptional()\n    @IsEmail()\n    email: string\n\n    @IsOptional()\n    password: string\n\n}\n// export class EditUser {\n\n\n//     name: string\n\n//     surname: string\n\n//     job: Job\n\n//     email: string\n\n//     phone: string\n    \n//     region: string\n    \n//     active: boolean\n\n//     password: string\n\n//     role: Role\n// }\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FiszkaController.html":{"url":"controllers/FiszkaController.html","title":"controller - FiszkaController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FiszkaController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/fiszka/fiszka.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                fiszka\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                addFiszki\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                addGroup\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                deleteFiszka\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                deleteFiszkaByUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                deleteFiszkaFromGroup\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                editFiszkaRd\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                editFiszkaUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findAllByInterview\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findAllForGroup\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findAllForRegion\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findAllForUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        addFiszki\n                        \n                    \n                \n            \n            \n                \n                    \n                    addFiszki(idInterview: string, reqInfo: ReqUserInfo, body: CreateFiszkaDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.USER, Role.MGTMT, Role.CA, Role.RD)@Post('addfiszki/:idInterview')\n                \n            \n\n            \n                \n                    Defined in src/models/fiszka/fiszka.controller.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idInterview\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reqInfo\n                                    \n                                                ReqUserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                CreateFiszkaDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        addGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    addGroup(idGroup: string, body: AddgroupDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.CA, Role.RD)@Patch('addgroup/:idgroup')\n                \n            \n\n            \n                \n                    Defined in src/models/fiszka/fiszka.controller.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idGroup\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                AddgroupDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        deleteFiszka\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteFiszka(idFiszka: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.MGTMT, Role.CA, Role.RD)@Delete('deletefiszka/:idFiszki')\n                \n            \n\n            \n                \n                    Defined in src/models/fiszka/fiszka.controller.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idFiszka\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        deleteFiszkaByUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteFiszkaByUser(idFiszka: string, reqInfo: ReqUserInfo)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.USER)@Delete('deletefiszka/:idFiszki')\n                \n            \n\n            \n                \n                    Defined in src/models/fiszka/fiszka.controller.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idFiszka\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reqInfo\n                                    \n                                                ReqUserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        deleteFiszkaFromGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteFiszkaFromGroup(idGroup: string, idFiszki: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.CA, Role.RD)@Delete('deletefiszka/:idfiszki/fromgroup/:idgroup')\n                \n            \n\n            \n                \n                    Defined in src/models/fiszka/fiszka.controller.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idGroup\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    idFiszki\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        editFiszkaRd\n                        \n                    \n                \n            \n            \n                \n                    \n                    editFiszkaRd(idFiszka: string, reqInfo: ReqUserInfo, body: EditFiszkaDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.MGTMT, Role.CA, Role.RD)@Patch('editfiszka/:idFiszka')\n                \n            \n\n            \n                \n                    Defined in src/models/fiszka/fiszka.controller.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idFiszka\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reqInfo\n                                    \n                                                ReqUserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                EditFiszkaDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        editFiszkaUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    editFiszkaUser(idFiszka: string, idInterview: string, reqInfo: ReqUserInfo, body: EditFiszkaDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.USER)@Patch('editfiszka/:idFiszka/:idInterview')\n                \n            \n\n            \n                \n                    Defined in src/models/fiszka/fiszka.controller.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idFiszka\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    idInterview\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reqInfo\n                                    \n                                                ReqUserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                EditFiszkaDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        findAllByInterview\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByInterview(idInterview: string, self: number, reqInfo: ReqUserInfo)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.MGTMT, Role.RD, Role.CA, Role.USER)@Get('findall/:idInterview')\n                \n            \n\n            \n                \n                    Defined in src/models/fiszka/fiszka.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idInterview\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    self\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reqInfo\n                                    \n                                                ReqUserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        findAllForGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForGroup(idGroup: string, reqInfo: ReqUserInfo)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA)@Get('findallforgroup/:idGroup')\n                \n            \n\n            \n                \n                    Defined in src/models/fiszka/fiszka.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idGroup\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reqInfo\n                                    \n                                                ReqUserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        findAllForRegion\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForRegion(reqInfo: ReqUserInfo)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA)@Get('findallforregion')\n                \n            \n\n            \n                \n                    Defined in src/models/fiszka/fiszka.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reqInfo\n                                    \n                                                ReqUserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        findAllForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForUser(userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.MGTMT, Role.RD, Role.CA)@Get('findallforuser/:idEmployee')\n                \n            \n\n            \n                \n                    Defined in src/models/fiszka/fiszka.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, ForbiddenException, Get, Param, Patch, Post, UseFilters, UseGuards, Delete, Query } from '@nestjs/common';\nimport { RolesGuard } from 'src/Auth/roles.guard';\nimport { FiszkaService } from './fiszka.service';\nimport { Role } from '@prisma/client';\nimport { Roles } from 'src/Auth/decorators/roles.decorator';\nimport { HttpExceptionFilter } from 'src/common/validation/http-exception.filter';\nimport { GetFiszkaDto } from './dto/GetFiszka.dto';\nimport { EditFiszkaDto } from './dto/EditFiszka.dto';\nimport { CreateFiszkaDto } from './dto/CreateFiszka.dto';\nimport { AddgroupDto } from './dto/addGroup.dto';\nimport { ReqInfo, ReqUserInfo } from 'src/Auth/decorators/reqinfo.decorator';\nimport { OptionsPipe } from './options.pipe';\n\n@Controller('fiszka')\n@UseGuards(RolesGuard)\nexport class FiszkaController {\n  constructor(private fiszkaService: FiszkaService) { }\n\n  @UseFilters(new HttpExceptionFilter())\n  @Roles(Role.MGTMT, Role.RD, Role.CA,Role.USER)\n  @Get('findall/:idInterview')\n  async findAllByInterview(@Param('idInterview') idInterview: string, @Query('self', OptionsPipe) self: number, @ReqInfo() reqInfo: ReqUserInfo): Promise {\n\n    if (reqInfo.role.match(Role.USER)) {\n      return this.fiszkaService.findAllByUser(idInterview, reqInfo.id)\n    } else {\n      if (self) {\n        return this.fiszkaService.findAllByUser(idInterview, reqInfo.id)\n      } else {\n        return this.fiszkaService.findAllByInterview(idInterview)\n      }\n    }\n  }\n\n  @UseFilters(new HttpExceptionFilter())\n  @Roles(Role.MGTMT, Role.RD, Role.CA)\n  @Get('findallforuser/:idEmployee')\n  async findAllForUser(@Param('idEmployee') userId: string): Promise {\n    return this.fiszkaService.findAllForUser(userId)\n  }\n\n  @UseFilters(new HttpExceptionFilter())\n  @Roles(Role.RD, Role.CA)\n  @Get('findallforregion')\n  async findAllForRegion(@ReqInfo() reqInfo: ReqUserInfo): Promise {\n    return this.fiszkaService.findAllForRegion(reqInfo.region)\n  }\n  @UseFilters(new HttpExceptionFilter())\n  @Roles(Role.RD, Role.CA)\n  @Get('findallforgroup/:idGroup')\n  async findAllForGroup(@Param('idGroup') idGroup: string,@ReqInfo() reqInfo: ReqUserInfo): Promise {\n    return this.fiszkaService.findAllForGroup(idGroup,reqInfo.region)\n  }\n\n  @UseFilters(new HttpExceptionFilter())\n  @Roles(Role.MGTMT, Role.CA, Role.RD)\n  @Patch('editfiszka/:idFiszka')\n  async editFiszkaRd(@Param('idFiszka') idFiszka: string, @ReqInfo() reqInfo: ReqUserInfo, @Body() body: EditFiszkaDto): Promise {\n    return this.fiszkaService.editFiszkaRd(idFiszka, reqInfo.id, body)\n  }\n  @UseFilters(new HttpExceptionFilter())\n  @Roles(Role.USER)\n  @Patch('editfiszka/:idFiszka/:idInterview')\n  async editFiszkaUser(@Param('idFiszka') idFiszka: string, @Param('idInterview') idInterview: string, @ReqInfo() reqInfo: ReqUserInfo, @Body() body: EditFiszkaDto): Promise {\n    return this.fiszkaService.editFiszkaUser(idFiszka, reqInfo.id, idInterview, body)\n  }\n  @UseFilters(new HttpExceptionFilter())\n  @Roles(Role.USER, Role.MGTMT, Role.CA, Role.RD)\n  @Post('addfiszki/:idInterview')\n  async addFiszki(@Param('idInterview') idInterview: string, @ReqInfo() reqInfo: ReqUserInfo, @Body() body: CreateFiszkaDto) {\n    return this.fiszkaService.addFiszki(idInterview, reqInfo.id, body)\n  }\n\n  @UseFilters(new HttpExceptionFilter())\n  @Roles(Role.MGTMT, Role.CA, Role.RD)\n  @Delete('deletefiszka/:idFiszki')\n  async deleteFiszka(@Param('idFiszki') idFiszka: string) {\n    return this.fiszkaService.deleteFiszka(idFiszka)\n  }\n  @UseFilters(new HttpExceptionFilter())\n  @Roles(Role.USER)\n  @Delete('deletefiszka/:idFiszki')\n  async deleteFiszkaByUser(@Param('idFiszki') idFiszka: string, @ReqInfo() reqInfo: ReqUserInfo) {\n    return this.fiszkaService.deleteFiszkaByMy(idFiszka, reqInfo.id)\n  }\n  //do testu\n  @UseFilters(new HttpExceptionFilter())\n  @Roles(Role.CA, Role.RD)\n  @Patch('addgroup/:idgroup')\n  async addGroup(@Param('idgroup') idGroup: string, @Body() body: AddgroupDto) {\n    return this.fiszkaService.addGroup(idGroup, body)\n  }\n\n  @UseFilters(new HttpExceptionFilter())\n  @Roles(Role.CA, Role.RD)\n  @Delete('deletefiszka/:idfiszki/fromgroup/:idgroup')\n  async deleteFiszkaFromGroup(@Param('idgroup') idGroup: string,@Param('idfiszki') idFiszki: string ):Promise {\n    return this.fiszkaService.deleteFiszkaFromGroup(idGroup, idFiszki)\n  }\n  // wszystkie fiszki z regionu\n  // wszystkie grupy z regionu (nazwa szkoły i grupa)\n  // dodanie fiszki do danej grupy\n\n  //#TODO: Tworzenie fiszek PR, AC, DR  |id wywiadówki \n  //#TODO: Edycja fiszki PR, AC, DR | Id pracownika i id wywiadówki \n  //#TODO: Lista fiszek z danej wywiadówki DR ,AC,MGTN | Id wywiadówki i id pracownika\n  //#TODO: Lista fiszek z danej wywiadówki per użytkopwnik PR | Id wywiadówki\n  //#TODO: Lista fiszek danego pracownika  AC, DR | Id pracownika \n  //#TODO: Lista swoich fiszek  PR | Id wywiadówki\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FiszkaModule.html":{"url":"modules/FiszkaModule.html","title":"module - FiszkaModule","body":"\n                   \n\n\n\n\n    Modules\n    FiszkaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FiszkaModule\n\n\n\ncluster_FiszkaModule_providers\n\n\n\n\nFiszkaService\n\nFiszkaService\n\n\n\nFiszkaModule\n\nFiszkaModule\n\nFiszkaModule -->\n\nFiszkaService->FiszkaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/fiszka/fiszka.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FiszkaService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FiszkaController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        \nimport { FiszkaController } from './fiszka.controller';\nimport { FiszkaService } from './fiszka.service';\n\nimport { Module } from '@nestjs/common';\n\n@Module({\n    imports: [],\n    controllers: [FiszkaController],\n    providers: [\n        FiszkaService, ],\n})\nexport class FiszkaModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FiszkaService.html":{"url":"injectables/FiszkaService.html","title":"injectable - FiszkaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FiszkaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/fiszka/fiszka.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addFiszki\n                            \n                            \n                                    Async\n                                addGroup\n                            \n                            \n                                    Async\n                                deleteFiszka\n                            \n                            \n                                    Async\n                                deleteFiszkaByMy\n                            \n                            \n                                    Async\n                                deleteFiszkaFromGroup\n                            \n                            \n                                    Async\n                                editFiszkaRd\n                            \n                            \n                                    Async\n                                editFiszkaUser\n                            \n                            \n                                    Async\n                                findAllByInterview\n                            \n                            \n                                    Async\n                                findAllByUser\n                            \n                            \n                                    Async\n                                findAllForGroup\n                            \n                            \n                                    Async\n                                findAllForRegion\n                            \n                            \n                                    Async\n                                findAllForUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/models/fiszka/fiszka.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                    PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addFiszki\n                        \n                    \n                \n            \n            \n                \n                    \n                    addFiszki(idInterview: string, userId: string, body: CreateFiszkaDto)\n                \n            \n\n\n            \n                \n                    Defined in src/models/fiszka/fiszka.service.ts:190\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idInterview\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                CreateFiszkaDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    addGroup(IdGroup: string, body: AddgroupDto)\n                \n            \n\n\n            \n                \n                    Defined in src/models/fiszka/fiszka.service.ts:246\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    IdGroup\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                AddgroupDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteFiszka\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteFiszka(IdFiszki: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/fiszka/fiszka.service.ts:229\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    IdFiszki\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteFiszkaByMy\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteFiszkaByMy(IdFiszki: string, IdUser: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/fiszka/fiszka.service.ts:237\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    IdFiszki\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    IdUser\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteFiszkaFromGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteFiszkaFromGroup(idGroup: string, idFiszki: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/fiszka/fiszka.service.ts:266\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idGroup\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    idFiszki\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        editFiszkaRd\n                        \n                    \n                \n            \n            \n                \n                    \n                    editFiszkaRd(idFiszka: string, UserID: string, body: EditFiszkaDto)\n                \n            \n\n\n            \n                \n                    Defined in src/models/fiszka/fiszka.service.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idFiszka\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    UserID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                EditFiszkaDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        editFiszkaUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    editFiszkaUser(idFiszka: string, UserID: string, idInterview: string, body: EditFiszkaDto)\n                \n            \n\n\n            \n                \n                    Defined in src/models/fiszka/fiszka.service.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idFiszka\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    UserID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    idInterview\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                EditFiszkaDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByInterview\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByInterview(idInterview: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/fiszka/fiszka.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idInterview\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByUser(idInterview: string, UserID: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/fiszka/fiszka.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idInterview\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    UserID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllForGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForGroup(idGroup: string, region: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/fiszka/fiszka.service.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idGroup\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllForRegion\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForRegion(region: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/fiszka/fiszka.service.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllForUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForUser(idEmployee: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/fiszka/fiszka.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idEmployee\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable } from '@nestjs/common';\nimport { PrismaService } from 'prisma/prisma.service';\nimport { EditFiszkaDto } from './dto/EditFiszka.dto';\nimport { CreateFiszkaDto } from './dto/CreateFiszka.dto';\nimport { AddgroupDto } from './dto/addGroup.dto';\nimport { GetFiszkaDto } from './dto/GetFiszka.dto';\n\n\n@Injectable()\nexport class FiszkaService {\n    constructor(private prisma: PrismaService) { }\n\n    async findAllByInterview(idInterview: string): Promise {\n        const fiszka = this.prisma.fiszka.findMany({\n            where: {\n                interviews: {\n                    id: idInterview\n                }\n            },\n            select: {\n                id: true,\n                name: true,\n                surname: true,\n                classLetter: true,\n                classDigit: true,\n                comments: true,\n                phone: true,\n                email: true,\n                resignation: true,\n                phoneCalls: true,\n                group: true,\n                user: {\n                    select: {\n                        name: true,\n                        surname: true\n                    }\n                }\n            }\n        });\n        return fiszka;\n    }\n    async findAllByUser(idInterview: string, UserID: string): Promise {\n        return this.prisma.fiszka.findMany({\n            where: {\n                interviews: {\n                    id: idInterview\n                },\n                user: {\n                    id: UserID\n                }\n            },\n            select: {\n                id: true,\n                name: true,\n                surname: true,\n                classLetter: true,\n                classDigit: true,\n                comments: true,\n                phone: true,\n                email: true,\n                resignation: true,\n                phoneCalls: true,\n                group: true\n            }\n        });\n\n    }\n    async findAllForUser(idEmployee: string): Promise {\n        return this.prisma.fiszka.findMany({\n            where: {\n                user: {\n                    id: idEmployee\n                }\n            },\n            select: {\n                id: true,\n                name: true,\n                surname: true,\n                classLetter: true,\n                classDigit: true,\n                comments: true,\n                phone: true,\n                email: true,\n                resignation: true,\n                phoneCalls: true,\n                group: true\n            }\n        });\n    }\n    async findAllForRegion(region: string): Promise {\n        return this.prisma.fiszka.findMany({\n            where: {\n                user: {\n                    region: region\n                }\n            },\n            select: {\n                id: true,\n                name: true,\n                surname: true,\n                classLetter: true,\n                classDigit: true,\n                comments: true,\n                phone: true,\n                email: true,\n                resignation: true,\n                phoneCalls: true,\n                group: true,\n                user: {\n                    select: {\n                        name: true,\n                        surname: true\n                    }\n                }\n            }\n        });\n    }\n    async findAllForGroup(idGroup: string, region: string): Promise {\n        return this.prisma.fiszka.findMany({\n            where: {\n                user: {\n                    region: region\n                },\n                group: {\n                    id: idGroup\n                }\n            },\n            select: {\n                id: true,\n                name: true,\n                surname: true,\n                classLetter: true,\n                classDigit: true,\n                comments: true,\n                phone: true,\n                email: true,\n                resignation: true,\n                phoneCalls: true,\n                group: true,\n                user: {\n                    select: {\n                        name: true,\n                        surname: true\n                    }\n                }\n            }\n        });\n    }\n\n    async editFiszkaRd(idFiszka: string, UserID: string, body: EditFiszkaDto): Promise {\n        const fiszka = await this.prisma.fiszka.findUniqueOrThrow({\n            where: {\n                unique_fiszka_user_id: {\n                    id: idFiszka,\n                    userId: UserID\n                }\n            },\n        });\n        if (!fiszka) {\n            return new ForbiddenException(`This fiszka its not yours!`)\n        }\n        return this.prisma.fiszka.update({\n            where: {\n                id: idFiszka\n            },\n            data: body\n        })\n    }\n    async editFiszkaUser(idFiszka: string, UserID: string, idInterview: string, body: EditFiszkaDto): Promise {\n        const fiszka = await this.prisma.fiszka.findUniqueOrThrow({\n            where: {\n                unique_fiszka_user_id: {\n                    id: idFiszka,\n                    userId: UserID\n                },\n                interviewsId: idInterview\n            },\n        });\n\n        if (!fiszka) {\n            return new ForbiddenException(`This fiszka its not yours!`)\n        }\n        return this.prisma.fiszka.update({\n            where: {\n                id: idFiszka\n            },\n            data: body\n        })\n    }\n    async addFiszki(idInterview: string, userId: string, body: CreateFiszkaDto) {\n\n        const createdFiszka = await this.prisma.fiszka.create({\n            data: {\n                name: body.name,\n                surname: body.surname,\n                classLetter: body.classLetter,\n                classDigit: body.classDigit,\n                comments: body.comments,\n                phone: body.phone,\n                email: body.email,\n                userId: userId,\n                interviewsId: idInterview\n            },\n            select: {\n                id: true,\n                name: true,\n                surname: true,\n                interviewsId: true,\n                user: {\n                    select: {\n                        name: true,\n                        surname: true\n                    }\n                }\n            }\n        });\n\n        await this.prisma.interviews.update({\n            where: { id: idInterview },\n            data: {\n                interviewTotalFiszki: {\n                    increment: 1\n                }\n            }\n        })\n\n        return createdFiszka;\n    }\n    async deleteFiszka(IdFiszki: string) {\n        return await this.prisma.fiszka.delete({\n            where: {\n                id: IdFiszki\n            },\n        })\n\n    }\n    async deleteFiszkaByMy(IdFiszki: string, IdUser: string) {\n        return await this.prisma.fiszka.delete({\n            where: {\n                id: IdFiszki,\n                userId: IdUser\n            },\n        })\n\n    }\n    async addGroup(IdGroup: string, body: AddgroupDto) {\n        const updatedGroup = await this.prisma.group.update({\n            where: {\n                id: IdGroup\n            },\n            data: {\n                fiszki: {\n                    connect: {\n                        id: body.fiszka.id\n                    }\n                }\n            },\n            include: {\n                fiszki: true\n            }\n        });\n\n        return updatedGroup;\n    }\n\n    async deleteFiszkaFromGroup(idGroup: string, idFiszki: string): Promise {\n        const deleteFiszkaFromGroup = await this.prisma.group.update({\n            where: {\n                id: idGroup\n            },\n            data: {\n                fiszki: {\n                    disconnect: {\n                        id: idFiszki\n                    }\n                }\n            }\n\n        })\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetCallUserHistoryDto.html":{"url":"classes/GetCallUserHistoryDto.html","title":"class - GetCallUserHistoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetCallUserHistoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/callUserHistory/dto/GetCallUserHistory.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                callDate\n                            \n                            \n                                    \n                                    \n                                callNext\n                            \n                            \n                                    \n                                    \n                                comments\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        callDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/callUserHistory/dto/GetCallUserHistory.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        callNext\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/callUserHistory/dto/GetCallUserHistory.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAscii()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/callUserHistory/dto/GetCallUserHistory.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsAscii, IsDate, IsNotEmpty, IsOptional } from \"class-validator\"\n\nexport class GetCallUserHistoryDto {\n\n    @IsDate()\n    @IsNotEmpty()\n    callDate: Date\n\n    @IsDate()\n    @IsOptional()\n    callNext: Date\n\n    @IsAscii()\n    @IsOptional()\n    comments: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetContactDto.html":{"url":"classes/GetContactDto.html","title":"class - GetContactDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetContactDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/contact/dto/getContact.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                comments\n                            \n                            \n                                    \n                                    \n                                dateOfVisit\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAscii()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/contact/dto/getContact.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        dateOfVisit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDate()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/contact/dto/getContact.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsAlpha, IsOptional, IsDate, IsNotEmpty, IsAscii } from \"class-validator\"\n\nexport class GetContactDto {\n    @IsDate()\n    @IsNotEmpty()\n    dateOfVisit: Date\n\n    @IsAscii()\n    @IsOptional()\n    comments: string\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetContactPersontDto.html":{"url":"classes/GetContactPersontDto.html","title":"class - GetContactPersontDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetContactPersontDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/personContact/dto/getContactPerson.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                phone\n                            \n                            \n                                    \n                                surname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/personContact/dto/getContactPerson.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/personContact/dto/getContactPerson.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/personContact/dto/getContactPerson.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/personContact/dto/getContactPerson.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/personContact/dto/getContactPerson.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsOptional } from \"class-validator\"\n\nexport class GetContactPersontDto {\n\n    @IsNotEmpty()\n    id:string\n\n    @IsNotEmpty()\n    name: string\n\n    @IsNotEmpty()\n    surname: string\n\n    @IsOptional()\n    email: string\n\n    @IsOptional()\n    phone: string\n\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetDirectorDto.html":{"url":"classes/GetDirectorDto.html","title":"class - GetDirectorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetDirectorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/director/dto/getDirector.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                phone\n                            \n                            \n                                    \n                                surname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/director/dto/getDirector.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/director/dto/getDirector.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/director/dto/getDirector.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/director/dto/getDirector.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/director/dto/getDirector.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsOptional } from \"class-validator\"\n\nexport class GetDirectorDto {\n\n    @IsNotEmpty()\n    id:string\n\n    @IsNotEmpty()\n    name: string\n\n    @IsNotEmpty()\n    surname: string\n\n    @IsOptional()\n    email: string\n\n    @IsOptional()\n    phone: string\n\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetFindByIdDto.html":{"url":"classes/GetFindByIdDto.html","title":"class - GetFindByIdDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetFindByIdDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/interviews/dto/getFindById.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fiszki\n                            \n                            \n                                school\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        fiszki\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Fiszka[]\n\n                    \n                \n                    \n                        \n                                Defined in src/models/interviews/dto/getFindById.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :     School\n\n                    \n                \n                    \n                        \n                                Defined in src/models/interviews/dto/getFindById.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Fiszka, School } from \"@prisma/client\";\n\nexport class GetFindByIdDto {\n    fiszki: Fiszka[];\n    school: School;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetFiszkaDto.html":{"url":"classes/GetFiszkaDto.html","title":"class - GetFiszkaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetFiszkaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/fiszka/dto/GetFiszka.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                classDigit\n                            \n                            \n                                    \n                                    \n                                classLetter\n                            \n                            \n                                    \n                                comments\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                group\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                phoneCalls\n                            \n                            \n                                    \n                                resignation\n                            \n                            \n                                    \n                                    \n                                surname\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        classDigit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Min(0)@Max(8)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/fiszka/dto/GetFiszka.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        classLetter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/fiszka/dto/GetFiszka.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/fiszka/dto/GetFiszka.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/fiszka/dto/GetFiszka.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        group\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Group\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/fiszka/dto/GetFiszka.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/fiszka/dto/GetFiszka.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/fiszka/dto/GetFiszka.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPhoneNumber('PL')@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/fiszka/dto/GetFiszka.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phoneCalls\n                        \n                    \n                \n            \n                \n                    \n                        Type :     PhoneCalls[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/fiszka/dto/GetFiszka.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        resignation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/fiszka/dto/GetFiszka.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/fiszka/dto/GetFiszka.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Group, PhoneCalls } from \"@prisma/client\"\nimport { IsAlpha, IsEmail, IsNotEmpty, IsNumber, IsOptional, IsPhoneNumber, Max, Min } from \"class-validator\"\n\nexport class GetFiszkaDto {\n    \n    @IsOptional()\n    id:string\n\n    @IsAlpha(\"pl-PL\")\n    @IsNotEmpty()\n    name: String\n\n    @IsAlpha(\"pl-PL\")\n    @IsNotEmpty()\n    surname: string\n\n    @IsAlpha(\"pl-PL\")\n    @IsOptional()\n    classLetter: string\n    \n    @IsNumber()\n    @Min(0)\n    @Max(8)\n    @IsOptional()\n    classDigit: number\n\n    @IsOptional()\n    comments: string\n\n    @IsPhoneNumber('PL')\n    @IsNotEmpty()\n    phone: string\n\n    @IsEmail()\n    @IsOptional()\n    email: string\n\n    @IsNotEmpty()\n    resignation: boolean\n\n    @IsOptional()\n    phoneCalls: PhoneCalls[]\n\n    @IsOptional()\n    group:Group\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetGroupDto.html":{"url":"classes/GetGroupDto.html","title":"class - GetGroupDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetGroupDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/group/dto/getGroup.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                codeGroup\n                            \n                            \n                                    \n                                    \n                                dayOfTheWeek\n                            \n                            \n                                    \n                                fiszki\n                            \n                            \n                                    \n                                hour\n                            \n                            \n                                    \n                                subject\n                            \n                            \n                                    \n                                title\n                            \n                            \n                                    \n                                trial\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        codeGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/group/dto/getGroup.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        dayOfTheWeek\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DaysOfTheWeek\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEnum(DaysOfTheWeek)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/group/dto/getGroup.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fiszki\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Fiszka[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/group/dto/getGroup.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        hour\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/group/dto/getGroup.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        subject\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/group/dto/getGroup.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/group/dto/getGroup.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        trial\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/group/dto/getGroup.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { DaysOfTheWeek, Fiszka, PhoneCalls } from \"@prisma/client\"\nimport { IsEnum, IsNotEmpty, IsOptional} from \"class-validator\"\n\nexport class GetGroupDto {\n\n    @IsNotEmpty()\n    codeGroup: string\n\n    @IsNotEmpty()\n    title:string\n\n    @IsNotEmpty()\n    subject:string\n\n    @IsOptional()\n    @IsEnum(DaysOfTheWeek)\n    dayOfTheWeek:DaysOfTheWeek\n\n    @IsOptional()\n    hour:string\n\n    @IsNotEmpty()\n    trial:boolean\n\n    @IsOptional()\n    fiszki:Fiszka[]\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetInterViewsDto.html":{"url":"classes/GetInterViewsDto.html","title":"class - GetInterViewsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetInterViewsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/interviews/dto/GetInterViews.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                classNumber\n                            \n                            \n                                    \n                                date\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                interviewTotalFiszki\n                            \n                            \n                                    \n                                school\n                            \n                            \n                                    \n                                termsNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        classNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@Min(0)@Max(8)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/interviews/dto/GetInterViews.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/interviews/dto/GetInterViews.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/interviews/dto/GetInterViews.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        interviewTotalFiszki\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Min(0)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/interviews/dto/GetInterViews.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        school\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/interviews/dto/GetInterViews.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        termsNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/interviews/dto/GetInterViews.dto.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptional, Min, Max, IsNumber, IsNotEmpty } from \"class-validator\"\n\nexport class GetInterViewsDto {\n\n    @IsNotEmpty()\n    id: string\n\n    @IsNotEmpty()\n    school: {\n        name: string\n    }\n\n    @Min(0)\n    @IsOptional()\n    interviewTotalFiszki: number\n\n    @IsNumber()\n    @Min(0)\n    @Max(8)\n    @IsOptional()\n    classNumber: number\n\n    @IsOptional()\n    termsNumber: number\n\n    @IsOptional()\n    date: Date\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetRentalCostDto.html":{"url":"classes/GetRentalCostDto.html","title":"class - GetRentalCostDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetRentalCostDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/rentalCost/dto/getRentalCost.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                classroomHour\n                            \n                            \n                                    \n                                    \n                                clockHour\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        classroomHour\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Decimal\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDecimal()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/rentalCost/dto/getRentalCost.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        clockHour\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Decimal\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDecimal()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/rentalCost/dto/getRentalCost.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Decimal } from \"@prisma/client/runtime/library\";\nimport { IsDecimal, IsNotEmpty, IsOptional } from \"class-validator\";\n\nexport class GetRentalCostDto {\n\n    @IsDecimal()\n    @IsOptional()\n    classroomHour:Decimal\n\n    @IsDecimal()\n    @IsOptional()\n    clockHour:Decimal\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetScheduleDto.html":{"url":"classes/GetScheduleDto.html","title":"class - GetScheduleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetScheduleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/schedule/dto/getSchedule.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                classDigit\n                            \n                            \n                                    \n                                classLetter\n                            \n                            \n                                    \n                                date\n                            \n                            \n                                    \n                                scheduleDays\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        classDigit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/schedule/dto/getSchedule.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        classLetter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/schedule/dto/getSchedule.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/schedule/dto/getSchedule.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        scheduleDays\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ScheduleDays\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/schedule/dto/getSchedule.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ScheduleDays } from \"@prisma/client\"\nimport { IsNotEmpty, IsOptional } from \"class-validator\"\n\nexport class GetScheduleDto {\n\n    @IsOptional()\n    classLetter: string\n\n    @IsOptional()\n    classDigit: string\n\n    @IsNotEmpty()\n    date: Date\n\n    @IsOptional()\n    scheduleDays:ScheduleDays\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetSchoolDto.html":{"url":"classes/GetSchoolDto.html","title":"class - GetSchoolDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetSchoolDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/school/dto/getSchool.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                city\n                            \n                            \n                                    \n                                comments\n                            \n                            \n                                    \n                                cooperation\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                numberOfClasses\n                            \n                            \n                                    \n                                phone\n                            \n                            \n                                    \n                                postCode\n                            \n                            \n                                    \n                                    \n                                province\n                            \n                            \n                                    \n                                region\n                            \n                            \n                                    \n                                    \n                                status\n                            \n                            \n                                    \n                                street\n                            \n                            \n                                    \n                                suiteNumber\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/getSchool.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        comments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/getSchool.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        cooperation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/getSchool.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/getSchool.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/getSchool.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/getSchool.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        numberOfClasses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/getSchool.dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/getSchool.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        postCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/getSchool.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        province\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Province\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEnum(Province)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/getSchool.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        region\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/getSchool.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Status\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEnum(Status)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/getSchool.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        street\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/getSchool.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        suiteNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/getSchool.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEnum(Type)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/school/dto/getSchool.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Province, Status, Type } from \"@prisma/client\"\nimport { IsEnum, IsNotEmpty, IsOptional } from \"class-validator\"\n\nexport class GetSchoolDto {\n    @IsNotEmpty()\n    id: string\n\n    @IsNotEmpty()\n    name: string\n\n    @IsNotEmpty()\n    region: string\n\n    @IsNotEmpty()\n    @IsEnum(Status)\n    status: Status\n\n    @IsNotEmpty()\n    city: string\n\n    @IsNotEmpty()\n    @IsEnum(Type)\n    type: Type\n\n    @IsNotEmpty()\n    cooperation: boolean\n\n    @IsNotEmpty()\n    phone: string\n\n    @IsNotEmpty()\n    @IsEnum(Province)\n    province: Province\n\n    @IsOptional()\n    email: string\n\n    @IsNotEmpty()\n    street: string\n\n    @IsNotEmpty()\n    suiteNumber: string\n\n    @IsNotEmpty()\n    postCode: string\n\n    @IsOptional()\n    numberOfClasses: number\n\n    @IsOptional()\n    comments: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserDto.html":{"url":"classes/GetUserDto.html","title":"class - GetUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/user/dto/GetUser.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                active\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                isFirstLogin\n                            \n                            \n                                    \n                                    \n                                job\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                region\n                            \n                            \n                                    \n                                    \n                                role\n                            \n                            \n                                    \n                                    \n                                surname\n                            \n                            \n                                    \n                                    \n                                totalFiszki\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/GetUser.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/GetUser.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isFirstLogin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/GetUser.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        job\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Job\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEnum(Job)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/GetUser.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/GetUser.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        region\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/GetUser.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEnum(Role)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/GetUser.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        surname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsAlpha('pl-PL')@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/GetUser.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        totalFiszki\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Min(0)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/GetUser.dto.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Job, Role } from \"@prisma/client\"\nimport { IsNotEmpty, IsEmail, Min, IsAlpha, IsEnum } from \"class-validator\"\n\nexport class GetUserDto {\n    \n    @IsAlpha(\"pl-PL\")\n    @IsNotEmpty()\n    name: string\n    \n    @IsAlpha(\"pl-PL\")\n    @IsNotEmpty()\n    surname: string\n\n    @IsNotEmpty()\n    @IsEnum(Job)\n    job: Job\n\n    @IsNotEmpty()\n    @IsEmail()\n    email: string\n\n    @Min(0)\n    @IsNotEmpty()\n    totalFiszki: number\n\n    @IsNotEmpty()\n    region: string\n\n    @IsNotEmpty()\n    isFirstLogin:boolean\n\n    @IsNotEmpty()\n    active: boolean\n\n    @IsNotEmpty()\n    @IsEnum(Role)\n    role: Role\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUserInterViewDto.html":{"url":"classes/GetUserInterViewDto.html","title":"class - GetUserInterViewDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUserInterViewDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/interviews/dto/getUserInterView.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                classNumber\n                            \n                            \n                                    \n                                date\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                termsNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        classNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/interviews/dto/getUserInterView.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/interviews/dto/getUserInterView.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/interviews/dto/getUserInterView.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        termsNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/interviews/dto/getUserInterView.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty} from \"class-validator\"\n\nexport class GetUserInterViewDto {\n\n    @IsNotEmpty()\n    id: string\n\n    @IsNotEmpty()\n    classNumber: number\n    \n    @IsNotEmpty()\n    termsNumber: number\n\n    @IsNotEmpty()\n    date: Date\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GraphDateDto.html":{"url":"classes/GraphDateDto.html","title":"class - GraphDateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GraphDateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/user/dto/GraphDate.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                endDate\n                            \n                            \n                                    \n                                startDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/GraphDate.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/GraphDate.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsDate, IsNotEmpty } from \"class-validator\"\n\nexport class GraphDateDto {\n\n    \n    @IsNotEmpty()\n    startDate:Date\n\n    \n    @IsNotEmpty()\n    endDate:Date\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GroupController.html":{"url":"controllers/GroupController.html","title":"controller - GroupController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GroupController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/group/group.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                group\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                edit\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getById\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getByIdGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(reqInfo: ReqUserInfo, IdSchool: string, body: CreateGroupDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(Role.CA, Role.RD)@UseFilters(new HttpExceptionFilter())@Post('create/:idschool')\n                \n            \n\n            \n                \n                    Defined in src/models/group/group.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reqInfo\n                                    \n                                                ReqUserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    IdSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                CreateGroupDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        edit\n                        \n                    \n                \n            \n            \n                \n                    \n                    edit(reqInfo: ReqUserInfo, IdSchool: string, IdGroup: string, body: EditGroupDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(Role.CA, Role.RD)@UseFilters(new HttpExceptionFilter())@Patch('edit/:idschool/:idgroup')\n                \n            \n\n            \n                \n                    Defined in src/models/group/group.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reqInfo\n                                    \n                                                ReqUserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    IdSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    IdGroup\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                EditGroupDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        getById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getById(reqInfo: ReqUserInfo, IdSchool: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(Role.CA, Role.RD, Role.MGTMT)@UseFilters(new HttpExceptionFilter())@Get('groups/:idschool')\n                \n            \n\n            \n                \n                    Defined in src/models/group/group.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reqInfo\n                                    \n                                                ReqUserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    IdSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        getByIdGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    getByIdGroup(reqInfo: ReqUserInfo, idgroup: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(Role.CA, Role.RD, Role.MGTMT)@UseFilters(new HttpExceptionFilter())@Get('group/:idgroup')\n                \n            \n\n            \n                \n                    Defined in src/models/group/group.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reqInfo\n                                    \n                                                ReqUserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    idgroup\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Patch, Post, UseFilters, UseGuards } from '@nestjs/common';\nimport { RolesGuard } from 'src/Auth/roles.guard';\nimport { GroupService } from './group.service';\nimport { Role } from '@prisma/client';\nimport { Roles } from 'src/Auth/decorators/roles.decorator';\nimport { HttpExceptionFilter } from 'src/common/validation/http-exception.filter';\nimport { GetGroupDto } from './dto/getGroup.dto';\nimport { CreateGroupDto } from './dto/createGroup.dto';\nimport { EditGroupDto } from './dto/editGroup.dto';\nimport { ReqInfo, ReqUserInfo } from 'src/Auth/decorators/reqinfo.decorator';\n\n\n@UseGuards(RolesGuard)\n@Controller('group')\nexport class GroupController {\n    constructor(private groupService: GroupService) { }\n\n    @Roles(Role.CA, Role.RD, Role.MGTMT)\n    @UseFilters(new HttpExceptionFilter())\n    @Get('groups/:idschool')\n    async getById(@ReqInfo() reqInfo: ReqUserInfo, @Param('idschool') IdSchool: string): Promise {\n        if (reqInfo.role.match(Role.MGTMT)) {\n            return this.groupService.getByIdForMGTMT(IdSchool)\n        } else {\n            return this.groupService.getByIdForRD(IdSchool, reqInfo.region)\n        }\n    }\n    @Roles(Role.CA, Role.RD, Role.MGTMT)\n    @UseFilters(new HttpExceptionFilter())\n    @Get('group/:idgroup')\n    async getByIdGroup(@ReqInfo() reqInfo: ReqUserInfo, @Param('idgroup') idgroup: string): Promise {\n        if (reqInfo.role.match(Role.MGTMT)) {\n            return this.groupService.getByIdGroupForMGTMT(idgroup)\n        } else {\n            return this.groupService.getByIdGroupForRD(idgroup, reqInfo.region)\n        }\n    }\n    @Roles(Role.CA, Role.RD)\n    @UseFilters(new HttpExceptionFilter())\n    @Post('create/:idschool')\n    async create(@ReqInfo() reqInfo: ReqUserInfo, @Param('idschool') IdSchool: string, @Body() body: CreateGroupDto): Promise {\n        return this.groupService.create(IdSchool, reqInfo.region, body)\n    }\n    @Roles(Role.CA, Role.RD)\n    @UseFilters(new HttpExceptionFilter())\n    @Patch('edit/:idschool/:idgroup')\n    async edit(@ReqInfo() reqInfo: ReqUserInfo, @Param('idschool') IdSchool: string, @Param('idgroup') IdGroup: string, @Body() body: EditGroupDto) {\n        return this.groupService.edit(IdSchool, IdGroup, reqInfo.region, body)\n    }\n    //dodawanie grup do danej szkoły dla rd\n    //wyświetlanie grup wszystkich dla szkoły Rd  (region)\n    //wyświetlanie grup wszystkich dla szkoły mgtm \n    //edycja grupy dla rd\n    //dodanie grupy do szkoły\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GroupModule.html":{"url":"modules/GroupModule.html","title":"module - GroupModule","body":"\n                   \n\n\n\n\n    Modules\n    GroupModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GroupModule\n\n\n\ncluster_GroupModule_imports\n\n\n\ncluster_GroupModule_providers\n\n\n\n\nGroupModule\n\nGroupModule\n\nGroupModule -->\n\nGroupModule->GroupModule\n\n\n\n\n\nGroupService\n\nGroupService\n\nGroupModule -->\n\nGroupService->GroupModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/group/group.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GroupService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GroupController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GroupModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { GroupController } from './group.controller';\nimport { GroupService } from './group.service';\nimport { Module } from '@nestjs/common';\n\n@Module({\n    imports: [GroupModule],\n    controllers: [GroupController],\n    providers: [\n        GroupService,],\n})\nexport class GroupModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GroupService.html":{"url":"injectables/GroupService.html","title":"injectable - GroupService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GroupService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/group/group.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                edit\n                            \n                            \n                                    Async\n                                getByIdForMGTMT\n                            \n                            \n                                    Async\n                                getByIdForRD\n                            \n                            \n                                    Async\n                                getByIdGroupForMGTMT\n                            \n                            \n                                    Async\n                                getByIdGroupForRD\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/models/group/group.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                    PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(idSchool: string, region: string, body: CreateGroupDto)\n                \n            \n\n\n            \n                \n                    Defined in src/models/group/group.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                CreateGroupDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        edit\n                        \n                    \n                \n            \n            \n                \n                    \n                    edit(idSchool: string, idgroup: string, region: string, body: EditGroupDto)\n                \n            \n\n\n            \n                \n                    Defined in src/models/group/group.service.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    idgroup\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                EditGroupDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getByIdForMGTMT\n                        \n                    \n                \n            \n            \n                \n                    \n                    getByIdForMGTMT(idSchool: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/group/group.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getByIdForRD\n                        \n                    \n                \n            \n            \n                \n                    \n                    getByIdForRD(idSchool: string, region: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/group/group.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getByIdGroupForMGTMT\n                        \n                    \n                \n            \n            \n                \n                    \n                    getByIdGroupForMGTMT(idGroup: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/group/group.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idGroup\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getByIdGroupForRD\n                        \n                    \n                \n            \n            \n                \n                    \n                    getByIdGroupForRD(idGroup: string, region: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/group/group.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idGroup\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from 'prisma/prisma.service';\nimport { CreateGroupDto } from './dto/createGroup.dto';\nimport { EditGroupDto } from './dto/editGroup.dto';\nimport { GetGroupDto } from './dto/getGroup.dto';\n\n@Injectable()\nexport class GroupService {\n    constructor(private prisma: PrismaService) { }\n\n    async getByIdForRD(idSchool: string, region: string): Promise {\n        return this.prisma.group.findMany({\n            where: {\n                school: {\n                    region: region,\n                    id: idSchool\n                }\n            },\n            select: {\n                id: true,\n                codeGroup: true,\n                title: true,\n                subject: true,\n                dayOfTheWeek: true,\n                hour: true,\n                trial: true,\n                fiszki: true\n            }\n        })\n    }\n    async getByIdGroupForRD(idGroup: string, region: string): Promise {\n        return this.prisma.group.findUniqueOrThrow({\n            where: {\n               id:idGroup,\n               school:{\n                region:region\n               }\n            },\n            select: {\n                id: true,\n                codeGroup: true,\n                title: true,\n                subject: true,\n                dayOfTheWeek: true,\n                hour: true,\n                trial: true,\n                fiszki: {\n                    include:{\n                        user:true,\n                        phoneCalls:true\n                    }\n                },\n\n            }\n        })\n    }\n    async getByIdForMGTMT(idSchool: string): Promise {\n        return this.prisma.group.findMany({\n            where: {\n                school: {\n                    id: idSchool\n                }\n            },\n            select: {\n                id: true,\n                codeGroup: true,\n                title: true,\n                subject: true,\n                dayOfTheWeek: true,\n                hour: true,\n                trial: true,\n                fiszki: true\n            }\n        })\n    }\n    async getByIdGroupForMGTMT(idGroup: string): Promise {\n        return this.prisma.group.findUniqueOrThrow({\n            where: {\n               id:idGroup\n            },\n            select: {\n                id: true,\n                codeGroup: true,\n                title: true,\n                subject: true,\n                dayOfTheWeek: true,\n                hour: true,\n                trial: true,\n                fiszki: true\n            }\n        })\n    }\n    async create(idSchool: string, region: string, body: CreateGroupDto): Promise {\n        return this.prisma.group.create({\n            data: {\n                codeGroup: body.codeGroup,\n                title: body.title,\n                subject: body.subject,\n                dayOfTheWeek: body.dayOfTheWeek,\n                hour: body.hour,\n                trial: body.trial,\n                school: {\n                    connect: {\n                        unique_school_region_id: {\n                            id: idSchool,\n                            region: region\n                        }\n                    }\n                }\n            }\n        })\n    }\n    async edit(idSchool: string, idgroup: string, region: string, body: EditGroupDto) {\n        const UpdateInSchool = this.prisma.school.update({\n            where: {\n                unique_school_region_id:\n                {\n                    region: region\n                    , id: idSchool\n                }\n            },\n            data: {\n                group: {\n                    update: {\n                        where: {\n                            id: idgroup\n                        },\n                        data: body\n                    }\n                }\n            }\n        })\n\n        return (await UpdateInSchool.contact()).find((x) => x.id === idgroup)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/validation/http-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/common/validation/http-exception.filter.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            HttpException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExceptionFilter, Catch, ArgumentsHost, HttpException } from '@nestjs/common';\nimport { Request, Response } from 'express';\nimport { translateErrorMessages } from '../helpers/translateError';\n\n\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n  catch(exception: HttpException, host: ArgumentsHost) {\n\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    const status = exception.getStatus();\n\n    const error: object | string = exception.getResponse();\n    //console.log(error)\n    if (error as object) {\n      const errorObj: any = error as object  \n      response\n        .status(status)\n        .json({\n          type: exception.message,\n          error: translateErrorMessages(errorObj),\n          statusCode: status,\n          headers: request.headers,\n          timestamp: { time: new Date().toLocaleTimeString(), date: new Date().toDateString() },\n          path: request.url,\n        });\n    } else {\n      response\n        .status(status)\n        .json({\n          type: exception.message,\n          error: error,\n          statusCode: status,\n          timestamp: new Date().toISOString(),\n          path: request.url,\n        });\n    }\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/InterviewsController.html":{"url":"controllers/InterviewsController.html","title":"controller - InterviewsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  InterviewsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/interviews/interviews.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                interviews\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                addUserToInterview\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                createInterview\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                editInterview\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findAllByRegion\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findAllByUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findById\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findByUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findMyBySchool\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                removeUserToInterview\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        addUserToInterview\n                        \n                    \n                \n            \n            \n                \n                    \n                    addUserToInterview(idInterView: string, addUserInterViewDto: AddUserInterViewDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(Role.CA, Role.RD)@UseFilters(new HttpExceptionFilter())@Patch('adduser/:idinterview')\n                \n            \n\n            \n                \n                    Defined in src/models/interviews/interviews.controller.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idInterView\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    addUserInterViewDto\n                                    \n                                                AddUserInterViewDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        createInterview\n                        \n                    \n                \n            \n            \n                \n                    \n                    createInterview(createInterViewDto: CreateInterViewDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(Role.CA, Role.RD)@UseFilters(new HttpExceptionFilter())@Post('create')\n                \n            \n\n            \n                \n                    Defined in src/models/interviews/interviews.controller.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createInterViewDto\n                                    \n                                                CreateInterViewDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        editInterview\n                        \n                    \n                \n            \n            \n                \n                    \n                    editInterview(idInterView: string, editInterViewDto: EditInterViewDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(Role.CA, Role.RD)@UseFilters(new HttpExceptionFilter())@Patch('edit/:idinterview')\n                \n            \n\n            \n                \n                    Defined in src/models/interviews/interviews.controller.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idInterView\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    editInterViewDto\n                                    \n                                                EditInterViewDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        findAllByRegion\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByRegion(reqInfo: ReqUserInfo)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(Role.CA, Role.RD)@UseFilters(new HttpExceptionFilter())@Get('findallbyregion')\n                \n            \n\n            \n                \n                    Defined in src/models/interviews/interviews.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reqInfo\n                                    \n                                                ReqUserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        findAllByUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByUser(reqInfo: ReqUserInfo)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(Role.CA, Role.USER, Role.RD)@UseFilters(new HttpExceptionFilter())@Get('findallbyuser')\n                \n            \n\n            \n                \n                    Defined in src/models/interviews/interviews.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reqInfo\n                                    \n                                                ReqUserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(IdInterviews: string, reqInfo: ReqUserInfo)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(Role.CA, Role.RD)@UseFilters(new HttpExceptionFilter())@Get('findbyid/:idinterview')\n                \n            \n\n            \n                \n                    Defined in src/models/interviews/interviews.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    IdInterviews\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reqInfo\n                                    \n                                                ReqUserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        findByUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByUser(idUser: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(Role.CA, Role.RD)@UseFilters(new HttpExceptionFilter())@Get('findallbyuser/:iduser')\n                \n            \n\n            \n                \n                    Defined in src/models/interviews/interviews.controller.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idUser\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        findMyBySchool\n                        \n                    \n                \n            \n            \n                \n                    \n                    findMyBySchool(idSchool: string, reqInfo: ReqUserInfo, self: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(Role.RD, Role.CA, Role.USER)@UseFilters(new HttpExceptionFilter())@Get('findallbyschool/:idschool')\n                \n            \n\n            \n                \n                    Defined in src/models/interviews/interviews.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reqInfo\n                                    \n                                                ReqUserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    self\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        removeUserToInterview\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeUserToInterview(idInterView: string, removeUserInterViewDto: RemoveUserInterViewDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(Role.CA, Role.RD)@UseFilters(new HttpExceptionFilter())@Patch('removeuser/:idinterview')\n                \n            \n\n            \n                \n                    Defined in src/models/interviews/interviews.controller.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idInterView\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    removeUserInterViewDto\n                                    \n                                                RemoveUserInterViewDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, ForbiddenException, Get, Param, Patch, Post, Query, UseFilters, UseGuards } from '@nestjs/common';\nimport { InterviewsService } from './interviews.service';\nimport { RolesGuard } from 'src/Auth/roles.guard';\nimport { Role } from '@prisma/client';\nimport { Roles } from 'src/Auth/decorators/roles.decorator';\nimport { CreateInterViewDto } from './dto/createInterView.dto';\nimport { AddUserInterViewDto } from './dto/addUserInterView.dto';\nimport { EditInterViewDto } from './dto/editInterView.dto';\nimport { HttpExceptionFilter } from 'src/common/validation/http-exception.filter';\nimport { RemoveUserInterViewDto } from './dto/removeUserInterview.dto';\nimport { GetUserInterViewDto } from './dto/getUserInterView.dto';\nimport { ReqInfo, ReqUserInfo } from 'src/Auth/decorators/reqinfo.decorator';\nimport { GetInterViewsDto } from './dto/GetInterViews.dto';\nimport { OptionsPipe } from '../fiszka/options.pipe';\nimport { GetFindByIdDto } from './dto/getFindById.dto';\n\n@UseGuards(RolesGuard)\n@Controller('interviews')\nexport class InterviewsController {\n    constructor(private interviewsService: InterviewsService) { }\n\n\n    @Roles(Role.CA, Role.USER, Role.RD)\n    @UseFilters(new HttpExceptionFilter())\n    @Get('findallbyuser')\n    async findAllByUser(@ReqInfo() reqInfo: ReqUserInfo): Promise {\n        return this.interviewsService.findAllByUser(reqInfo.id)\n    }\n\n\n    @Roles(Role.CA, Role.RD)\n    @UseFilters(new HttpExceptionFilter())\n    @Get('findallbyregion')\n    async findAllByRegion(@ReqInfo() reqInfo: ReqUserInfo): Promise {\n        return this.interviewsService.findAllByRegion(reqInfo.region)\n    }\n\n    @Roles(Role.CA, Role.RD)\n    @UseFilters(new HttpExceptionFilter())\n    @Get('findbyid/:idinterview')\n    async findById(@Param('idinterview') IdInterviews: string, @ReqInfo() reqInfo: ReqUserInfo): Promise {\n        return this.interviewsService.findById(reqInfo.region, IdInterviews)\n    }\n\n\n    @Roles(Role.RD, Role.CA, Role.USER)\n    @UseFilters(new HttpExceptionFilter())\n    @Get('findallbyschool/:idschool')\n    async findMyBySchool(\n        @Param('idschool') idSchool: string,\n        @ReqInfo() reqInfo: ReqUserInfo,\n        @Query('self', OptionsPipe) self: number\n    ): Promise {\n        if (reqInfo.role.match(Role.RD)) {\n            return this.interviewsService.findAllBySchool(idSchool);\n        }\n        const userId = reqInfo.id;\n        const result = self ? this.interviewsService.findMyBySchool(idSchool, userId) : this.interviewsService.findAllBySchool(idSchool);\n        return result;\n\n    }\n\n    @Roles(Role.CA, Role.RD)\n    @UseFilters(new HttpExceptionFilter())\n    @Get('findallbyuser/:iduser')\n    async findByUser(@Param('iduser') idUser: string): Promise {\n        return this.interviewsService.findByUser(idUser)\n    }\n\n    @Roles(Role.CA, Role.RD)\n    @UseFilters(new HttpExceptionFilter())\n    @Patch('edit/:idinterview')\n    async editInterview(@Param('idinterview') idInterView: string, @Body() editInterViewDto: EditInterViewDto): Promise {\n        return this.interviewsService.editInterview(idInterView, editInterViewDto)\n    }\n    @Roles(Role.CA, Role.RD)\n    @UseFilters(new HttpExceptionFilter())\n    @Patch('adduser/:idinterview')\n    async addUserToInterview(@Param('idinterview') idInterView: string, @Body() addUserInterViewDto: AddUserInterViewDto): Promise {\n        return this.interviewsService.addUserToInterview(idInterView, addUserInterViewDto)\n    }\n    @Roles(Role.CA, Role.RD)\n    @UseFilters(new HttpExceptionFilter())\n    @Patch('removeuser/:idinterview')\n    async removeUserToInterview(@Param('idinterview') idInterView: string, @Body() removeUserInterViewDto: RemoveUserInterViewDto): Promise {\n        return this.interviewsService.removeUserFromInterview(idInterView, removeUserInterViewDto)\n    }\n    @Roles(Role.CA, Role.RD)\n    @UseFilters(new HttpExceptionFilter())\n    @Post('create')\n    async createInterview(@Body() createInterViewDto: CreateInterViewDto) {\n        return this.interviewsService.CreateInterview(createInterViewDto)\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InterviewsModule.html":{"url":"modules/InterviewsModule.html","title":"module - InterviewsModule","body":"\n                   \n\n\n\n\n    Modules\n    InterviewsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_InterviewsModule\n\n\n\ncluster_InterviewsModule_providers\n\n\n\n\nInterviewsService\n\nInterviewsService\n\n\n\nInterviewsModule\n\nInterviewsModule\n\nInterviewsModule -->\n\nInterviewsService->InterviewsModule\n\n\n\n\n\nUserService\n\nUserService\n\nInterviewsModule -->\n\nUserService->InterviewsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/interviews/interviews.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            InterviewsService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            InterviewsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { PrismaModule } from 'prisma/prisma.module';\nimport { InterviewsService } from './interviews.service';\nimport { Module } from '@nestjs/common';\nimport { UserService } from '../user/user.service';\nimport { InterviewsController } from './interviews.controller';\n\n\n@Module({\n    imports: [PrismaModule],\n    controllers: [ InterviewsController],\n    providers: [\n        UserService,InterviewsService],\n})\nexport class InterviewsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InterviewsService.html":{"url":"injectables/InterviewsService.html","title":"injectable - InterviewsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InterviewsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/interviews/interviews.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addUserToInterview\n                            \n                            \n                                    Async\n                                CreateInterview\n                            \n                            \n                                    Async\n                                editInterview\n                            \n                            \n                                    Async\n                                findAllByRegion\n                            \n                            \n                                    Async\n                                findAllBySchool\n                            \n                            \n                                    Async\n                                findAllByUser\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByUser\n                            \n                            \n                                    Async\n                                findMyBySchool\n                            \n                            \n                                    Async\n                                RefreshTotalFiszki\n                            \n                            \n                                    Async\n                                removeUserFromInterview\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/models/interviews/interviews.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                    PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addUserToInterview\n                        \n                    \n                \n            \n            \n                \n                    \n                    addUserToInterview(interviewId: string, data: AddUserInterViewDto)\n                \n            \n\n\n            \n                \n                    Defined in src/models/interviews/interviews.service.ts:198\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    interviewId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                AddUserInterViewDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        CreateInterview\n                        \n                    \n                \n            \n            \n                \n                    \n                    CreateInterview(Data: CreateInterViewDto)\n                \n            \n\n\n            \n                \n                    Defined in src/models/interviews/interviews.service.ts:285\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    Data\n                                    \n                                                CreateInterViewDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        editInterview\n                        \n                    \n                \n            \n            \n                \n                    \n                    editInterview(IdInterView: string, Data: EditInterViewDto)\n                \n            \n\n\n            \n                \n                    Defined in src/models/interviews/interviews.service.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    IdInterView\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    Data\n                                    \n                                                EditInterViewDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByRegion\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByRegion(region: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/interviews/interviews.service.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllBySchool\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllBySchool(IdSchool: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/interviews/interviews.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    IdSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllByUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllByUser(idUser: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/interviews/interviews.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idUser\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(region: string, IdInterview: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/interviews/interviews.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    IdInterview\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByUser(IdUser: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/interviews/interviews.service.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    IdUser\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findMyBySchool\n                        \n                    \n                \n            \n            \n                \n                    \n                    findMyBySchool(IdSchool: string, idUser: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/interviews/interviews.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    IdSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    idUser\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        RefreshTotalFiszki\n                        \n                    \n                \n            \n            \n                \n                    \n                    RefreshTotalFiszki()\n                \n            \n\n\n            \n                \n                    Defined in src/models/interviews/interviews.service.ts:263\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeUserFromInterview\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeUserFromInterview(interviewId: string, data: RemoveUserInterViewDto)\n                \n            \n\n\n            \n                \n                    Defined in src/models/interviews/interviews.service.ts:236\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    interviewId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                RemoveUserInterViewDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable } from '@nestjs/common';\nimport { PrismaService } from 'prisma/prisma.service';\nimport { EditInterViewDto } from './dto/editInterView.dto';\nimport { AddUserInterViewDto } from './dto/addUserInterView.dto';\nimport { CreateInterViewDto } from './dto/createInterView.dto';\nimport { RemoveUserInterViewDto } from './dto/removeUserInterview.dto';\nimport { GetUserInterViewDto } from './dto/getUserInterView.dto';\nimport { GetInterViewsDto } from './dto/GetInterViews.dto';\nimport { GetFindByIdDto } from './dto/getFindById.dto';\n\n\n@Injectable()\nexport class InterviewsService {\n    constructor(private prisma: PrismaService) { }\n\n\n    async findAllByUser(idUser: string): Promise {\n        return this.prisma.interviews.findMany({\n\n            where: {\n                userInterviews: {\n                    some: {\n                        userId: idUser\n                    }\n                }\n            },\n\n            select: {\n                userInterviews: true,\n                id: true,\n                classNumber: true,\n                termsNumber: true,\n                date: true\n\n            }\n        })\n    }\n\n\n\n    async findMyBySchool(IdSchool: string, idUser: string): Promise {\n\n        const interviews = this.prisma.interviews.findMany({\n            where: {\n                school: {\n                    id: IdSchool\n                },\n                userInterviews: {\n                    some: {\n                        userId: idUser\n                    }\n                }\n            },\n            select: {\n                id: true,\n                classNumber: true,\n                termsNumber: true,\n                date: true\n            }\n        });\n\n        return interviews;\n\n    }\n\n    async findById(region: string, IdInterview: string): Promise {\n        return this.prisma.interviews.findUnique({\n            where: {\n                id: IdInterview,\n                school: {\n                    region: region\n                }\n            },\n            include: {\n                fiszki: true,\n                school: true\n            },\n\n        })\n    }\n\n    async findAllBySchool(IdSchool: string): Promise {\n        return this.prisma.interviews.findMany({\n            where: {\n                school: {\n                    id: IdSchool\n                }\n            },\n            select: {\n                id: true,\n                interviewTotalFiszki: true,\n                classNumber: true,\n                termsNumber: true,\n                date: true,\n\n                fiszki: {\n                    select: {\n                        id: true,\n                        name: true,\n                        surname: true,\n                        classDigit: true,\n                        classLetter: true,\n                        phone: true,\n                        email: true\n                    }\n                }\n            }\n        })\n    }\n    async findAllByRegion(region: string): Promise {\n        const interviews = this.prisma.interviews.findMany({\n            where: {\n                school: {\n                    region: region\n                }\n            },\n            include: {\n                school: {\n                    select: {\n                        id: true,\n                        name: true\n                    }\n                },\n                userInterviews: {\n                    select: {\n                        user: {\n                            select: {\n                                id: true,\n                                name: true,\n                                surname: true\n                            }\n                        }\n                    }\n                }\n            }\n        })\n\n\n        return interviews\n    }\n    async findByUser(IdUser: string): Promise {\n        return this.prisma.interviews.findMany({\n            where: {\n                userInterviews: {\n                    some: {\n                        userId: IdUser\n                    }\n                }\n            },\n            select: {\n                id: true,\n                interviewTotalFiszki: true,\n                classNumber: true,\n                termsNumber: true,\n                date: true\n            }\n        })\n    }\n\n    async editInterview(IdInterView: string, Data: EditInterViewDto): Promise {\n\n        const InterView = await this.prisma.interviews.update(\n            {\n                where: {\n                    id: IdInterView\n                },\n\n                data: {\n                    classNumber: Data.classNumber,\n                    termsNumber: Data.termsNumber,\n                    date: Data.date,\n                    userInterviews: {\n                        deleteMany: {}\n                    }\n                },\n                include: {\n                    userInterviews: true\n                }\n            }\n        );\n\n        const interviewUserCreateData = Data.userInterviews.map(userData => ({\n            userId: userData.id,\n            interviewId: IdInterView,\n        }));\n\n        const createdInterviewUsers = await this.prisma.interviewUser.createMany({\n            data: interviewUserCreateData,\n            skipDuplicates: true\n        });\n\n        return createdInterviewUsers\n\n\n    }\n\n\n    async addUserToInterview(interviewId: string, data: AddUserInterViewDto): Promise {\n\n        const interview = await this.prisma.interviews.findUnique({\n            where: { id: interviewId },\n            include: { userInterviews: true },\n        });\n\n        if (!interview) {\n            return new ForbiddenException(`Interview(id:${interviewId}) not found`)\n        }\n        const userExisting = await this.prisma.user.findUniqueOrThrow({\n            where: {\n                id: data.idUser\n            }\n        })\n\n        const existingUserIds = interview.userInterviews.map((ui) => ui.userId);\n        const isUserIdInArray = existingUserIds.includes(data.idUser);\n        if (!isUserIdInArray) {\n            return this.prisma.interviews.update({\n                where: {\n                    id: interviewId\n                },\n                data: {\n                    userInterviews: {\n                        create: {\n                            userId: data.idUser,\n\n                        }\n                    }\n                }\n            });\n        } else {\n            return new ForbiddenException(`UserId(id:${data.idUser}) it's already in `)\n        }\n\n    }\n\n    async removeUserFromInterview(interviewId: string, data: RemoveUserInterViewDto): Promise {\n        const userIds = data.idUserList;\n\n        const interview = await this.prisma.interviews.findUnique({\n            where: { id: interviewId },\n            include: { userInterviews: true },\n        });\n\n        if (!interview) {\n            return new ForbiddenException(`Interview(id:${interviewId}) not found`)\n        }\n\n        const existingUserIds = interview.userInterviews.map((ui) => ui.userId);\n        const userInterviewIds = interview.userInterviews.map((ui) => ui.id);\n        const removedUserIds = userIds.filter((id) => existingUserIds.includes(id));\n        const removedUserInterviewIds = userInterviewIds.filter((id, index) =>\n            existingUserIds.includes(userInterviewIds[index]));\n\n        if (removedUserIds.length === 0) {\n            return new ForbiddenException(`One or more Id not found`)\n\n        }\n\n        return this.prisma.interviewUser.deleteMany({\n            where: { id: { in: removedUserInterviewIds } },\n        });\n    }\n    async RefreshTotalFiszki() {\n        const interviews = await this.prisma.interviews.findMany({\n            select: {\n                id: true,\n                _count: {\n                    select: {\n                        fiszki: true\n                    }\n                }\n            }\n        })\n        const updatePromises = interviews.map((interview) => {\n            return this.prisma.interviews.update({\n                where: { id: interview.id },\n                data: { interviewTotalFiszki: interview._count.fiszki }\n            });\n        });\n        await Promise.all(updatePromises);\n\n        return 'Total Fiszki Refreshed';\n    }\n\n    async CreateInterview(Data: CreateInterViewDto) {\n        const { classNumber, termsNumber, schoolId, users, date } = Data;\n        let interviewUsers = [];\n        if (users) {\n            interviewUsers = users.map(userId => ({\n                userId: userId\n            }));\n        }\n        return this.prisma.interviews.create({\n            data: {\n                classNumber: classNumber,\n                termsNumber: termsNumber,\n                userInterviews: {\n                    create: interviewUsers\n                },\n                date: date ? date : new Date(), // Nie sprawdzałem czy działa\n                school: { connect: { id: schoolId } },\n            }\n        })\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LoggerController.html":{"url":"controllers/LoggerController.html","title":"controller - LoggerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LoggerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/log/logger.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                log\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                log\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        log\n                        \n                    \n                \n            \n            \n                \n                    \n                    log()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Get()\n                \n            \n\n            \n                \n                    Defined in src/models/log/logger.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        \nimport { Controller,Get, UseFilters } from '@nestjs/common';\nimport { LoggerService } from './logger.service';\nimport { HttpExceptionFilter } from '../../common/validation/http-exception.filter';\n\n\n\n@Controller('log')\nexport class LoggerController {\n    constructor(private loggerService: LoggerService) { }\n\n    @UseFilters(new HttpExceptionFilter())\n    @Get()\n    async log() {\n        return this.loggerService.GetLog();\n    }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerMiddleware.html":{"url":"injectables/LoggerMiddleware.html","title":"injectable - LoggerMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggerMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/logger.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/common/logger.middleware.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                    PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                    \n                    use(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/common/logger.middleware.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { Request, Response, NextFunction } from 'express';\nimport { PrismaService } from 'prisma/prisma.service';\nimport { DecodeDto } from 'src/Auth/dto/decode.dto';\n\n\n@Injectable()\nexport class LoggerMiddleware implements NestMiddleware {\n    constructor(\n        private jwtService: JwtService, private prisma: PrismaService\n    ) { }\n\n    async use(req: Request, res: Response, next: NextFunction) {\n\n        \n        const decoded = this.jwtService.decode(req.headers.authorization.slice(7));\n     \n        // const log = await this.prisma.logger.create({\n        //     data: {\n        //         url: req.url,\n        //         originUrl: req.originalUrl,\n        //         method: req.method,\n        //         host: req.headers.host,\n        //         idUser: decoded.id,\n        //         email: decoded.email,\n        //         role: decoded.role,\n        //         region: decoded.region\n        //     }}\n        // )\n\n        const log = {\n            data: {\n                url: req.url,\n                originUrl: req.originalUrl,\n                method: req.method,\n                host: req.headers.host,\n                decode:decoded\n            }\n        }\n\n         console.log(log);\n\n        next();\n    }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoggerModule.html":{"url":"modules/LoggerModule.html","title":"module - LoggerModule","body":"\n                   \n\n\n\n\n    Modules\n    LoggerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_providers\n\n\n\n\nLoggerService\n\nLoggerService\n\n\n\nLoggerModule\n\nLoggerModule\n\nLoggerModule -->\n\nLoggerService->LoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/log/logger.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LoggerService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LoggerController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { PrismaModule } from './../../../prisma/prisma.module';\nimport { LoggerController } from './logger.controller';\nimport { LoggerService } from './logger.service';\nimport { Module } from '@nestjs/common';\n\n@Module({\n    imports: [PrismaModule],\n    controllers: [LoggerController],\n    providers: [\n        LoggerService ],\n})\nexport class LoggerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerService.html":{"url":"injectables/LoggerService.html","title":"injectable - LoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/log/logger.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                GetLog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/models/log/logger.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                    PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        GetLog\n                        \n                    \n                \n            \n            \n                \n                    \n                    GetLog()\n                \n            \n\n\n            \n                \n                    Defined in src/models/log/logger.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from './../../../prisma/prisma.service';\n\n@Injectable()\nexport class LoggerService {\n  constructor(private prisma: PrismaService) { }\n\n\n  async GetLog() {\n    const log = await this.prisma.logger.findMany()\n    return log\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginUserDto.html":{"url":"classes/LoginUserDto.html","title":"class - LoginUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Auth/dto/authUser.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Auth/dto/authUser.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Auth/dto/authUser.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty } from \"class-validator\"\n\nexport class LoginUserDto {\n\n    @IsNotEmpty()\n    @IsEmail()\n    email: string\n\n    @IsNotEmpty()\n    password: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MatchConstraint.html":{"url":"classes/MatchConstraint.html","title":"class - MatchConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MatchConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Auth/decorators/match.decorator.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ValidatorConstraintInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultMessage\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultMessage\n                        \n                    \n                \n            \n            \n                \ndefaultMessage(args: ValidationArguments)\n                \n            \n\n\n            \n                \n                    Defined in src/Auth/decorators/match.decorator.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            ValidationArguments\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(value: any, args: ValidationArguments)\n                \n            \n\n\n            \n                \n                    Defined in src/Auth/decorators/match.decorator.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            ValidationArguments\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {registerDecorator, ValidationArguments, ValidationOptions, ValidatorConstraint, ValidatorConstraintInterface} from 'class-validator';\n\n\n\nexport function Match(property: string, validationOptions?: ValidationOptions) {\n    return (object: any, propertyName: string) => {\n        registerDecorator({\n            target: object.constructor,\n            propertyName: propertyName,\n            constraints: [property],\n            options: validationOptions,\n            validator: MatchConstraint,\n        });\n    };\n}\n@ValidatorConstraint({name: 'Match'})\nexport class MatchConstraint implements ValidatorConstraintInterface {\n\n    validate(value: any, args: ValidationArguments) {\n        const [relatedPropertyName] = args.constraints;\n        const relatedValue = (args.object as any)[relatedPropertyName];\n        return value === relatedValue;\n    }\n    defaultMessage(args: ValidationArguments) {\n        const [relatedPropertyName] = args.constraints;\n        return `Pole ${args.property} musi pasować do pola ${relatedPropertyName}`;\n      }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotFoundErrorFilter.html":{"url":"classes/NotFoundErrorFilter.html","title":"class - NotFoundErrorFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotFoundErrorFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/validation/NotFoundErrorFilter.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: NotFoundError, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/common/validation/NotFoundErrorFilter.filter.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            NotFoundError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExceptionFilter, Catch, ArgumentsHost} from '@nestjs/common';\nimport { Request, Response } from 'express';\nimport { NotFoundError } from \"rxjs\";\n\n@Catch(NotFoundError)\nexport class NotFoundErrorFilter implements ExceptionFilter {\n  catch(exception: NotFoundError, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n\n    const err = exception.message;\n\n    response\n     .status(404)\n      .json({\n        type:\"NotFoundError\",\n        statusCode:request.statusCode ,\n        error:err,\n        timestamp: new Date().toISOString(),\n        path: request.url,\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NotFoundExceptionFilter.html":{"url":"classes/NotFoundExceptionFilter.html","title":"class - NotFoundExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NotFoundExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/validation/NotFoundException.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: NotFoundException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/common/validation/NotFoundException.filter.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            NotFoundException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExceptionFilter, Catch, ArgumentsHost, NotFoundException} from '@nestjs/common';\nimport { Request, Response } from 'express';\n\n\n@Catch(NotFoundException)\nexport class NotFoundExceptionFilter implements ExceptionFilter {\n  catch(exception: NotFoundException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    const status = exception.getStatus();\n\n    response\n      .status(status)\n      .json({\n        type:\"NotFoundException\",\n        name:exception.name,\n        msg: exception.message,\n        method: request.method,\n        headers: request.headers,\n        userAgent: request.headers['user-agent'],\n        requestId: response.getHeaders()['x-request-id'],\n        statusCode: status,\n        timestamp: new Date().toISOString(),\n        path: request.url,\n      });\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OptionsPipe.html":{"url":"injectables/OptionsPipe.html","title":"injectable - OptionsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OptionsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/fiszka/options.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: number, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/models/fiszka/options.pipe.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Injectable, ArgumentMetadata } from '@nestjs/common';\n\n@Injectable()\nexport class OptionsPipe implements PipeTransform {\n  transform(value: number, metadata: ArgumentMetadata) {\n    if (value == 1 ) {\n      return +value\n    }\n   return 0\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PredicteController.html":{"url":"controllers/PredicteController.html","title":"controller - PredicteController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PredicteController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/predicte/predicte.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                predicte\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                Predicte\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        Predicte\n                        \n                    \n                \n            \n            \n                \n                    \n                    Predicte(req: Request, IdSchool: string, body: SendFiszkiDto[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA)@Get('group/:IdSchool')\n                \n            \n\n            \n                \n                    Defined in src/models/predicte/predicte.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    IdSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                SendFiszkiDto[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Req, UseFilters, UseGuards } from '@nestjs/common';\nimport { Role } from '@prisma/client';\nimport { Roles } from 'src/Auth/decorators/roles.decorator';\nimport { HttpExceptionFilter } from 'src/common/validation/http-exception.filter';\nimport { PredicteService } from './predicte.service';\nimport { RolesGuard } from 'src/Auth/roles.guard';\nimport { SendFiszkiDto } from './dto/GetClassFromfiszki.dto';\n\n@Controller('predicte')\n@UseGuards(RolesGuard)\nexport class PredicteController {\n    constructor(private predicteService: PredicteService) { }\n    // układanie dzieci do konkretnych grup\n    // minnimum dzieci w grupie 7 \n    // max w grupie 9\n    // pokazać wszystkie dni kiedy zgłoszone dzieci (na podstawie klasy) kończą o tej samej godzinie + zmienna czy dzieci mogą czekać np.1 zajęcia na świetlicy\n    // czy ilość dzieci w grupach jest aktualna, czy dzieci mogą czekać, czy łączenie dzieci może być między klasami, czy przyjmujemy indywidualne plany zajęć dzieci do uwzględnienia, co jeśli jest sytuacja że dzieci chętnych jest 13 (1 grupa=9 a druga = ?)\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.RD, Role.CA)\n    @Get('group/:IdSchool')\n    async Predicte(@Req() req: Request, @Param('IdSchool') IdSchool: string, @Body() body: SendFiszkiDto[]) {\n        const region: string = req['user'].region;\n        return this.predicteService.Predicte(region, body)\n\n    }\n    // Potrzebne dane do pierwszego etapu\n    // -Id szkoły\n    // -Lista dzieci chętnych \n    // -plany zajęć dzieci które są chętne \n    // Otrzymujemy \n    // Podział \n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PredicteModule.html":{"url":"modules/PredicteModule.html","title":"module - PredicteModule","body":"\n                   \n\n\n\n\n    Modules\n    PredicteModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PredicteModule\n\n\n\ncluster_PredicteModule_providers\n\n\n\n\nPredicteService\n\nPredicteService\n\n\n\nPredicteModule\n\nPredicteModule\n\nPredicteModule -->\n\nPredicteService->PredicteModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/predicte/predicte.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PredicteService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PredicteController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { PrismaModule } from 'prisma/prisma.module';\nimport { PredicteController } from './predicte.controller';\nimport { PredicteService } from './predicte.service';\n/*\nhttps://docs.nestjs.com/modules\n*/\n\nimport { Module } from '@nestjs/common';\n\n@Module({\n    imports: [PrismaModule],\n    controllers: [PredicteController],\n    providers: [\n        PredicteService,],\n})\nexport class PredicteModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PredicteService.html":{"url":"injectables/PredicteService.html","title":"injectable - PredicteService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PredicteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/predicte/predicte.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                Predicte\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/models/predicte/predicte.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                    PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        Predicte\n                        \n                    \n                \n            \n            \n                \n                    \n                    Predicte(region: string, Fiszki: SendFiszkiDto[])\n                \n            \n\n\n            \n                \n                    Defined in src/models/predicte/predicte.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    Fiszki\n                                    \n                                                SendFiszkiDto[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from 'prisma/prisma.service';\nimport { SendFiszkiDto } from './dto/GetClassFromfiszki.dto';\n\n@Injectable()\nexport class PredicteService {\n    constructor(private prisma: PrismaService) { }\n\n    async Predicte(region: string, Fiszki: SendFiszkiDto[]) {\n        //sprawdzenie czy region się zgadza \n        const availableEmployee = {\n            monday: {\n                1: [null],\n                2: [null],\n                3: [\"1\"],\n                4: [\"1\"],\n                5: [\"1\"],\n                6: [\"1\", \"2\"],\n                7: [\"1\", \"2\", \"3\"],\n                8: [\"2\", \"3\"],\n                9: [\"2\", \"3\"],\n                10: [\"2\"],\n            },\n            tuesday: {\n                1: [null],\n                2: [null],\n                3: [null],\n                4: [\"1\"],\n                5: [\"1\", \"2\"],\n                6: [\"1\", \"4\", \"2\"],\n                7: [\"1\", \"4\", \"3\", \"2\"],\n                8: [\"2\", \"3\"],\n                9: [\"2\", \"3\"],\n                10: [\"2\", \"3\"],\n            },\n            wednesday: {\n                1: [null],\n                2: [null],\n                3: [\"2\"],\n                4: [\"2\"],\n                5: [\"3\"],\n                6: [\"3\", \"2\"],\n                7: [\"1\", \"2\", \"3\"],\n                8: [\"2\", \"3\"],\n                9: [\"2\", \"3\"],\n                10: [null],\n            },\n            thursday: {\n                1: [null],\n                2: [null],\n                3: [\"1\"],\n                4: [\"1\"],\n                5: [\"1\"],\n                6: [\"1\", \"2\"],\n                7: [\"1\", \"2\", \"3\"],\n                8: [\"2\", \"3\"],\n                9: [\"2\", \"3\"],\n                10: [\"2\"],\n            },\n            friday: {\n                1: [null],\n                2: [null],\n                3: [\"1\"],\n                4: [\"1\"],\n                5: [\"1\"],\n                6: [\"1\", \"2\"],\n                7: [\"1\", \"2\", \"3\"],\n                8: [\"2\", \"3\"],\n                9: [\"2\", \"3\"],\n                10: [null],\n            },\n        }\n        const fiszkiIds = Fiszki.map((fiszka) => fiszka.id);\n\n        const result = await this.prisma.fiszka.findMany({\n            where: {\n                id: {\n                    in: fiszkiIds,\n                },\n                interviews: {\n                    school: {\n                        region: region\n                    }\n                }\n            },\n            select: {\n                id: true,\n                interviews: {\n                    select: {\n                        schoolId: true,\n                    },\n                },\n            },\n        });\n\n        const fiszkiSchoolData: [string, string][] = result.map((fiszka) => [fiszka.id, fiszka.interviews?.schoolId || \"\"]);\n\n        return fiszkiSchoolData;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PrismaOtherFilter.html":{"url":"classes/PrismaOtherFilter.html","title":"class - PrismaOtherFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PrismaOtherFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/validation/PrismaOtherError.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: PrismaClientUnknownRequestError, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/common/validation/PrismaOtherError.filter.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            PrismaClientUnknownRequestError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExceptionFilter, Catch, ArgumentsHost, HttpException } from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport { PrismaClientUnknownRequestError } from '@prisma/client/runtime/library';\nimport { Request, Response } from 'express';\n\n\n\n@Catch(HttpException)\nexport class PrismaOtherFilter implements ExceptionFilter {\n    catch(exception: PrismaClientUnknownRequestError, host: ArgumentsHost) {\n        if (exception instanceof Prisma.PrismaClientKnownRequestError) {\n            console.log(exception)\n        }\n        const ctx = host.switchToHttp();\n        const response = ctx.getResponse();\n        const request = ctx.getRequest();\n\n\n        response\n        .status(400)\n            .json({\n                type: \"PrismaOtherError\",\n                error: exception.message,\n                code: exception.clientVersion,\n                timestamp: new Date().toISOString(),\n                path: request.url,\n            });\n    }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PrismaValidationFilter.html":{"url":"classes/PrismaValidationFilter.html","title":"class - PrismaValidationFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PrismaValidationFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/validation/PrismaClientValidationError.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: PrismaClientKnownRequestError, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/common/validation/PrismaClientValidationError.filter.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            PrismaClientKnownRequestError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExceptionFilter, Catch, ArgumentsHost, HttpException } from '@nestjs/common';\nimport { Request, Response } from 'express';\nimport { cutTextFromUnique } from '../helpers/CutErrorMsg';\nimport { PrismaClientKnownRequestError } from '@prisma/client/runtime/library';\n\n\n@Catch(HttpException)\nexport class PrismaValidationFilter implements ExceptionFilter {\n    catch(exception: PrismaClientKnownRequestError, host: ArgumentsHost) {\n        const TRANSLATIONS = {\n            email: \"email\",\n            phone: \"telefon\",\n            codeGroup: \"Kod grupy\",\n            name:\"Imie\",\n            'name,phone':\"imie i telefon\"\n        };\n        const ctx = host.switchToHttp();\n        const response = ctx.getResponse();\n        const request = ctx.getRequest();\n        const fieldKeys = exception.message.match(/\\(`(.*?)`\\)/)?.[1]?.split('_') ?? [\"pole\"];\n        const cleanedFieldKeys = fieldKeys.map(key => key.replace(/`/g, ''));\n        const translatedFields = cleanedFieldKeys.map(key => TRANSLATIONS[key] ?? key).join(' i ');\n        if (exception.code == 'P2002') {\n            response\n                .status(409)\n                .json({\n                    type: \"PrismaError\",\n                    error: `Podane/y ${translatedFields} jest już używany`,\n                    field: cleanedFieldKeys,\n                    code: exception.code,\n                    timestamp: new Date().toISOString(),\n                    path: request.url,\n                });\n        } else if (exception.code === 'P2025') {\n            response\n                .status(404)  \n                .json({\n                    type: \"PrismaError\",\n                    error: \"Nie znaleziono odpowiedniego rekordu do aktualizacji lub usunięcia.(Błędny region, id lub rola\",\n                    test:exception.message,\n                    code: exception.code,\n                    timestamp: new Date().toISOString(),\n                    path: request.url,\n                });\n        } else {\n            response\n                .status(409)\n                .json({\n                    type: \"PrismaError\",\n                    error: cutTextFromUnique(exception.message),\n                    code: exception.code,\n                    timestamp: new Date().toISOString(),\n                    path: request.url,\n                });\n        }\n\n    }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RemoveUserInterViewDto.html":{"url":"classes/RemoveUserInterViewDto.html","title":"class - RemoveUserInterViewDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RemoveUserInterViewDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/interviews/dto/removeUserInterview.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                idUserList\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        idUserList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/interviews/dto/removeUserInterview.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty} from \"class-validator\"\n\nexport class RemoveUserInterViewDto {\n\n    @IsNotEmpty()\n    idUserList: string[]\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RentalCostController.html":{"url":"controllers/RentalCostController.html","title":"controller - RentalCostController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RentalCostController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/rentalCost/rentalcost.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                rentalcost\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getById\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                patch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(idSchool: string, reqInfo: ReqUserInfo, body: EditRentalCostDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA)@Post('create/:idSchool')\n                \n            \n\n            \n                \n                    Defined in src/models/rentalCost/rentalcost.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reqInfo\n                                    \n                                                ReqUserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                EditRentalCostDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        getById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getById(idSchool: string, reqInfo: ReqUserInfo)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA, Role.MGTMT)@Get('get/:idSchool')\n                \n            \n\n            \n                \n                    Defined in src/models/rentalCost/rentalcost.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reqInfo\n                                    \n                                                ReqUserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        patch\n                        \n                    \n                \n            \n            \n                \n                    \n                    patch(idSchool: string, reqInfo: ReqUserInfo, body: CreateRentalCostDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA)@Patch('edit/:idSchool')\n                \n            \n\n            \n                \n                    Defined in src/models/rentalCost/rentalcost.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reqInfo\n                                    \n                                                ReqUserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                CreateRentalCostDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Patch, Post, UseFilters, UseGuards } from '@nestjs/common';\nimport { RolesGuard } from 'src/Auth/roles.guard';\nimport { RentalCostService } from './rentalcost.service';\nimport { Role } from '@prisma/client';\nimport { Roles } from 'src/Auth/decorators/roles.decorator';\nimport { HttpExceptionFilter } from 'src/common/validation/http-exception.filter';\nimport { CreateRentalCostDto } from './dto/createRentalCost.dto';\nimport { GetRentalCostDto } from './dto/getRentalCost.dto';\nimport { EditRentalCostDto } from './dto/editRentalCost.dto';\nimport { ReqInfo, ReqUserInfo } from 'src/Auth/decorators/reqinfo.decorator';\n\n\n@UseGuards(RolesGuard)\n@Controller('rentalcost')\nexport class RentalCostController {\n    constructor(private rentalCost: RentalCostService) { }\n\n\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.RD, Role.CA,Role.MGTMT)\n    @Get('get/:idSchool')\n    async getById(@Param('idSchool') idSchool: string, @ReqInfo() reqInfo: ReqUserInfo): Promise {\n        if (reqInfo.role.match(Role.MGTMT)) {\n            return this.rentalCost.getByIdForMgtmt(idSchool)\n          } else {\n            return this.rentalCost.getByIdForRd(idSchool, reqInfo.region)\n          }\n       \n    }\n\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.RD, Role.CA)\n    @Post('create/:idSchool')\n    async create(@Param('idSchool') idSchool: string,@ReqInfo() reqInfo: ReqUserInfo, @Body() body: EditRentalCostDto): Promise {\n        return this.rentalCost.create(idSchool, body, reqInfo.region)\n    }\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.RD, Role.CA)\n    @Patch('edit/:idSchool')\n    async patch(@Param('idSchool') idSchool: string, @ReqInfo() reqInfo: ReqUserInfo, @Body() body: CreateRentalCostDto): Promise {\n        return this.rentalCost.patch(idSchool, body, reqInfo.region)\n    }\n    //koszty najmu dla mgtmt\n    //koszty najmu dla rd\n    //dodanie kosztów najmu dla rd\n    //edycja kosztów najmu dla rd\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RentalCostModule.html":{"url":"modules/RentalCostModule.html","title":"module - RentalCostModule","body":"\n                   \n\n\n\n\n    Modules\n    RentalCostModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RentalCostModule\n\n\n\ncluster_RentalCostModule_providers\n\n\n\n\nRentalCostService\n\nRentalCostService\n\n\n\nRentalCostModule\n\nRentalCostModule\n\nRentalCostModule -->\n\nRentalCostService->RentalCostModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/rentalCost/rentalcost.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RentalCostService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RentalCostController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        \nimport { Module } from '@nestjs/common';\nimport { PrismaModule } from 'prisma/prisma.module';\nimport { RentalCostController } from './rentalcost.controller';\nimport { RentalCostService } from './rentalcost.service';\n\n@Module({\n    imports: [PrismaModule],\n    controllers: [RentalCostController],\n    providers: [RentalCostService],\n})\nexport class RentalCostModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RentalCostService.html":{"url":"injectables/RentalCostService.html","title":"injectable - RentalCostService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RentalCostService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/rentalCost/rentalcost.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                getByIdForMgtmt\n                            \n                            \n                                    Async\n                                getByIdForRd\n                            \n                            \n                                    Async\n                                patch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/models/rentalCost/rentalcost.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                    PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(idSchool: string, body: CreateRentalCostDto, region: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/rentalCost/rentalcost.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                CreateRentalCostDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getByIdForMgtmt\n                        \n                    \n                \n            \n            \n                \n                    \n                    getByIdForMgtmt(idSchool: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/rentalCost/rentalcost.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getByIdForRd\n                        \n                    \n                \n            \n            \n                \n                    \n                    getByIdForRd(idSchool: string, region: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/rentalCost/rentalcost.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        patch\n                        \n                    \n                \n            \n            \n                \n                    \n                    patch(idSchool: string, body: EditRentalCostDto, region: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/rentalCost/rentalcost.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                EditRentalCostDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from 'prisma/prisma.service';\nimport { CreateRentalCostDto } from './dto/createRentalCost.dto';\nimport { EditRentalCostDto } from './dto/editRentalCost.dto';\nimport { GetRentalCostDto } from './dto/getRentalCost.dto';\n\n@Injectable()\nexport class RentalCostService {\n    constructor(private prisma: PrismaService) { }\n\n    async getByIdForMgtmt(idSchool: string): Promise {\n        return this.prisma.rentalCost.findUniqueOrThrow({\n            where: { schoolId: idSchool },\n            select: {\n                classroomHour: true,\n                clockHour: true\n            }\n        })\n\n    }\n\n    async getByIdForRd(idSchool: string, region: string): Promise {\n        const Find = this.prisma.school.findUniqueOrThrow({\n            where: {\n                unique_school_region_id: {\n                    id: idSchool,\n                    region: region\n                }\n            },\n\n            select: {\n                rentalCost: {\n                    select: {\n                        id: true,\n                        classroomHour: true,\n                        clockHour: true\n                    }\n                }\n            }\n        })\n        return Find.rentalCost()\n    }\n    async create(idSchool: string, body: CreateRentalCostDto, region: string): Promise {\n        return this.prisma.rentalCost.create({\n            data: {\n                classroomHour: body.classroomHour,\n                clockHour: body.clockHour,\n                school: {\n                    connect: {\n                        unique_school_region_id: {\n                            id: idSchool,\n                            region: region\n                        }\n                    }\n                }\n            }\n\n        })\n    }\n    async patch(idSchool: string, body: EditRentalCostDto, region: string): Promise {\n        const UpdateInSchool = this.prisma.school.update({\n            where: {\n                unique_school_region_id: {\n                    id: idSchool,\n                    region: region\n                }\n            },\n            data: {\n                rentalCost: {\n                    update: {\n                        classroomHour: body.classroomHour,\n                        clockHour: body.clockHour\n                    }\n                }\n            }\n        })\n        return UpdateInSchool.rentalCost()\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReqUserInfo.html":{"url":"interfaces/ReqUserInfo.html","title":"interface - ReqUserInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ReqUserInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Auth/decorators/reqinfo.decorator.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            region\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        region\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        region:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     Role\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Role\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createParamDecorator, ExecutionContext } from '@nestjs/common';\nimport { Role } from '@prisma/client';\n\n\nexport interface ReqUserInfo {\n  id: string;\n  role: Role;\n  region: string;\n  email:string;\n}\n\n\nexport const ReqInfo = createParamDecorator(\n  (data: unknown, ctx: ExecutionContext): ReqUserInfo => {\n    const request = ctx.switchToHttp().getRequest();\n    return {\n      id: request.user.id,\n      role: request.user.role,\n      region: request.user.region,\n      email:request.user.email\n    };\n  },\n);\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/Auth/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/Auth/roles.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/Auth/roles.guard.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Role } from '@prisma/client';\nimport { ROLES_KEY } from './decorators/roles.decorator';\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(private reflector: Reflector) {}\n\n  canActivate(context: ExecutionContext): boolean {\n    const requiredRoles = this.reflector.getAllAndOverride(ROLES_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    if (!requiredRoles) {\n      return true;\n    }\n  //   const { user }:{user:User} = context.switchToHttp().getRequest();\n\n  //  return requiredRoles.some((role)=>user.role.includes(role))\n   const { user } = context.switchToHttp().getRequest();\n  //console.log(user.role)\n\n   return requiredRoles.some((role) => user.role?.includes(role));\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ScheduleController.html":{"url":"controllers/ScheduleController.html","title":"controller - ScheduleController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ScheduleController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/schedule/schedule.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                schedule\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                edit\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createScheduleDto: CreateScheduleDto, reqInfo: ReqUserInfo, IdSchool: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA)@Post('create/:IdSchool')\n                \n            \n\n            \n                \n                    Defined in src/models/schedule/schedule.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createScheduleDto\n                                    \n                                                CreateScheduleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reqInfo\n                                    \n                                                ReqUserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    IdSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        edit\n                        \n                    \n                \n            \n            \n                \n                    \n                    edit(EditScheduleDto: EditScheduleDto, IdSchedule: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA)@Patch('edit/:IdSchedule')\n                \n            \n\n            \n                \n                    Defined in src/models/schedule/schedule.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    EditScheduleDto\n                                    \n                                                EditScheduleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    IdSchedule\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(reqInfo: ReqUserInfo, IdSchool: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA)@Get('findall/:IdSchool')\n                \n            \n\n            \n                \n                    Defined in src/models/schedule/schedule.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reqInfo\n                                    \n                                                ReqUserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    IdSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(reqInfo: ReqUserInfo, IdSchedule: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA)@Get('find/:IdSchedule')\n                \n            \n\n            \n                \n                    Defined in src/models/schedule/schedule.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reqInfo\n                                    \n                                                ReqUserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    IdSchedule\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Patch, Post, UseFilters, UseGuards } from '@nestjs/common';\nimport { RolesGuard } from 'src/Auth/roles.guard';\nimport { Role } from '@prisma/client';\nimport { Roles } from 'src/Auth/decorators/roles.decorator';\nimport { HttpExceptionFilter } from 'src/common/validation/http-exception.filter';\nimport { ReqInfo, ReqUserInfo } from 'src/Auth/decorators/reqinfo.decorator';\nimport { CreateScheduleDto } from './dto/createSchedule.dto';\nimport { EditScheduleDto } from './dto/editSchedule.dto';\nimport { ScheduleService } from './schedule.service';\n@Controller('schedule')\n@UseGuards(RolesGuard)\nexport class ScheduleController {\n    constructor(private scheduleService: ScheduleService) { }\n\n    //#TODO Zrobić jeszcze dla mgtmt ale narazie nie wiadomo jak ma się to wyświetlać :)\n\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.RD, Role.CA)\n    @Get('findall/:IdSchool')\n    async findAll(@ReqInfo() reqInfo: ReqUserInfo, @Param('IdSchool') IdSchool: string) {\n        return this.scheduleService.findAll(reqInfo.region,IdSchool);\n    }\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.RD, Role.CA)\n    @Get('find/:IdSchedule')\n    async findById(@ReqInfo() reqInfo: ReqUserInfo, @Param('IdSchedule') IdSchedule: string) {\n        return this.scheduleService.findById(reqInfo.region, IdSchedule)\n    }\n\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.RD, Role.CA)\n    @Patch('edit/:IdSchedule')\n    async edit(@Body() EditScheduleDto: EditScheduleDto, @Param('IdSchedule') IdSchedule: string) {\n        return this.scheduleService.edit(EditScheduleDto, IdSchedule)\n    }\n\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.RD, Role.CA)\n    @Post('create/:IdSchool')\n    async create(@Body() createScheduleDto: CreateScheduleDto, @ReqInfo() reqInfo: ReqUserInfo, @Param('IdSchool') IdSchool: string) {\n        return this.scheduleService.create(createScheduleDto, IdSchool, reqInfo.region)\n    }\n\n\n    //wprowadzanie danych przez dr - dany region\n    //wyświetlanie wszystkich planów zajęc z danej szkoły - i region\n    // modyfikacja danego planu zajęc\n}\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ScheduleDaysController.html":{"url":"controllers/ScheduleDaysController.html","title":"controller - ScheduleDaysController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ScheduleDaysController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/scheduleDays/scheduledays.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                scheduleday\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                edit\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(reqInfo: ReqUserInfo, IdSchedule: string, data: CreateScheduleDaysDto[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA)@Post('create/:IdSchedule')\n                \n            \n\n            \n                \n                    Defined in src/models/scheduleDays/scheduledays.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reqInfo\n                                    \n                                                ReqUserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    IdSchedule\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                CreateScheduleDaysDto[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        edit\n                        \n                    \n                \n            \n            \n                \n                    \n                    edit(reqInfo: ReqUserInfo, IdSchedule: string, data: EditScheduleDaysDto[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA)@Patch('edit/:IdSchedule')\n                \n            \n\n            \n                \n                    Defined in src/models/scheduleDays/scheduledays.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reqInfo\n                                    \n                                                ReqUserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    IdSchedule\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                EditScheduleDaysDto[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(reqInfo: ReqUserInfo, IdSchedule: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA)@Post('findall/:IdSchedule')\n                \n            \n\n            \n                \n                    Defined in src/models/scheduleDays/scheduledays.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reqInfo\n                                    \n                                                ReqUserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    IdSchedule\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Param, Patch, Post, UseFilters, UseGuards } from '@nestjs/common';\nimport { RolesGuard } from 'src/Auth/roles.guard';\nimport { Role } from '@prisma/client';\nimport { Roles } from 'src/Auth/decorators/roles.decorator';\nimport { HttpExceptionFilter } from 'src/common/validation/http-exception.filter';\nimport { ReqInfo, ReqUserInfo } from 'src/Auth/decorators/reqinfo.decorator';\nimport { CreateScheduleDaysDto } from './dto/createSheduleDays.dto';\nimport { EditScheduleDaysDto } from './dto/editSheduleDays.dto';\nimport { ScheduleDaysService } from './scheduledays.service';\n\n@Controller('scheduleday')\n@UseGuards(RolesGuard)\nexport class ScheduleDaysController {\n    constructor(private scheduleDaysService: ScheduleDaysService) { }\n\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.RD, Role.CA)\n    @Post('findall/:IdSchedule')\n    async findAll(@ReqInfo() reqInfo: ReqUserInfo, @Param('IdSchedule') IdSchedule: string) {\n        return this.scheduleDaysService.findAll(IdSchedule, reqInfo.region)\n    }\n\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.RD, Role.CA)\n    @Post('create/:IdSchedule')\n    async create(@ReqInfo() reqInfo: ReqUserInfo, @Param('IdSchedule') IdSchedule: string, @Body() data: CreateScheduleDaysDto[]) {\n        return this.scheduleDaysService.create(IdSchedule, reqInfo.region, data)\n    }\n\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.RD, Role.CA)\n    @Patch('edit/:IdSchedule')\n    async edit(@ReqInfo() reqInfo: ReqUserInfo, @Param('IdSchedule') IdSchedule: string, @Body() data: EditScheduleDaysDto[]) {\n        return this.scheduleDaysService.edit(IdSchedule, reqInfo.region, data)\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ScheduleDaysModule.html":{"url":"modules/ScheduleDaysModule.html","title":"module - ScheduleDaysModule","body":"\n                   \n\n\n\n\n    Modules\n    ScheduleDaysModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ScheduleDaysModule\n\n\n\ncluster_ScheduleDaysModule_providers\n\n\n\n\nScheduleDaysService\n\nScheduleDaysService\n\n\n\nScheduleDaysModule\n\nScheduleDaysModule\n\nScheduleDaysModule -->\n\nScheduleDaysService->ScheduleDaysModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/scheduleDays/scheduledays.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ScheduleDaysService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ScheduleDaysController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaModule } from 'prisma/prisma.module';\nimport { ScheduleDaysController } from './scheduledays.controller';\nimport { ScheduleDaysService } from './scheduledays.service';\n\n\n\n@Module({\n    imports: [PrismaModule],\n    controllers: [ScheduleDaysController],\n    providers: [ScheduleDaysService],\n})\nexport class ScheduleDaysModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScheduleDaysService.html":{"url":"injectables/ScheduleDaysService.html","title":"injectable - ScheduleDaysService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ScheduleDaysService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/scheduleDays/scheduledays.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                edit\n                            \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/models/scheduleDays/scheduledays.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                    PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(IdSchedule: string, region: string, data: CreateScheduleDaysDto[])\n                \n            \n\n\n            \n                \n                    Defined in src/models/scheduleDays/scheduledays.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    IdSchedule\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                CreateScheduleDaysDto[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        edit\n                        \n                    \n                \n            \n            \n                \n                    \n                    edit(IdSchedule: string, region: string, data: EditScheduleDaysDto[])\n                \n            \n\n\n            \n                \n                    Defined in src/models/scheduleDays/scheduledays.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    IdSchedule\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                EditScheduleDaysDto[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(IdSchedule: string, region: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/scheduleDays/scheduledays.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    IdSchedule\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable } from '@nestjs/common';\nimport { PrismaService } from 'prisma/prisma.service';\nimport { CreateScheduleDaysDto } from './dto/createSheduleDays.dto';\nimport { EditScheduleDaysDto } from './dto/editSheduleDays.dto';\n\n\n\n@Injectable()\nexport class ScheduleDaysService {\n    constructor(private prisma: PrismaService) { }\n\n    async findAll(IdSchedule: string, region: string) {\n        return this.prisma.scheduleDays.findMany({\n            where: {\n                scheduleId: IdSchedule,\n                schedule: {\n                    school: {\n                        region: region\n                    }\n                }\n            },\n            select:{\n                day:true,\n                numberLesson:true,\n                id:true\n            }\n\n        })\n    }\n    async create(IdSchedule: string, region: string, data: CreateScheduleDaysDto[]) {\n        const schedule = await this.prisma.schedule.findUnique({\n            where: { id: IdSchedule },\n            include: { school: true }\n        });\n\n        if (!schedule) {\n            return new ForbiddenException(`One or more Id not found`)\n        }\n        const schoolRegion = schedule.school?.region;\n\n        if (schoolRegion !== region) {\n            return new ForbiddenException(`Bad region`)\n        }\n        return this.prisma.scheduleDays.createMany({\n            data: data.map(item => ({\n                day: item.day,\n                numberLesson: item.numberLesson,\n                scheduleId: schedule.id,\n            })),\n        });\n    }\n    async edit(IdSchedule: string, region: string, data: EditScheduleDaysDto[]) {\n        const schedule = await this.prisma.schedule.findUnique({\n            where: { id: IdSchedule },\n            include: { school: true }\n        });\n\n        if (!schedule) {\n            return new ForbiddenException(`One or more Id not found`)\n        }\n        const schoolRegion = schedule.school?.region;\n\n        if (schoolRegion !== region) {\n            return new ForbiddenException(`Bad region`)\n        }\n        return this.prisma.scheduleDays.updateMany({\n            data: data.map(item => ({\n                day: item.day,\n                numberLesson: item.numberLesson,\n                sheduleId: schedule.id,\n            })),\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ScheduleModule.html":{"url":"modules/ScheduleModule.html","title":"module - ScheduleModule","body":"\n                   \n\n\n\n\n    Modules\n    ScheduleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ScheduleModule\n\n\n\ncluster_ScheduleModule_providers\n\n\n\n\nScheduleService\n\nScheduleService\n\n\n\nScheduleModule\n\nScheduleModule\n\nScheduleModule -->\n\nScheduleService->ScheduleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/schedule/schedule.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ScheduleService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ScheduleController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        \nimport { Module } from '@nestjs/common';\nimport { PrismaModule } from 'prisma/prisma.module';\nimport { ScheduleController } from './schedule.controller';\nimport { ScheduleService } from './schedule.service';\n\n\n@Module({\n    imports: [PrismaModule],\n    controllers: [ScheduleController],\n    providers: [ScheduleService],\n})\nexport class ScheduleModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ScheduleService.html":{"url":"injectables/ScheduleService.html","title":"injectable - ScheduleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ScheduleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/schedule/schedule.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                edit\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/models/schedule/schedule.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                    PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(body: CreateScheduleDto, IdSchool: string, region: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/schedule/schedule.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                CreateScheduleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    IdSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        edit\n                        \n                    \n                \n            \n            \n                \n                    \n                    edit(body: EditScheduleDto, IdSchedule: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/schedule/schedule.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                EditScheduleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    IdSchedule\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(region: string, IdSchool: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/schedule/schedule.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    IdSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(region: string, IdShedule: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/schedule/schedule.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    IdShedule\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { PrismaService } from 'prisma/prisma.service';\nimport { EditScheduleDto } from './dto/editSchedule.dto';\nimport { CreateScheduleDto } from './dto/createSchedule.dto';\n\n\n@Injectable()\nexport class ScheduleService {\n    constructor(private prisma: PrismaService) { }\n\n    async create(body: CreateScheduleDto, IdSchool: string, region: string) {\n        return this.prisma.schedule.create({\n            data: {\n                classDigit: body.classDigit,\n                classLetter: body.classLetter,\n                date: body.date,\n               \n\n                school: {\n                    connect: {\n                        unique_school_region_id: {\n                            id: IdSchool,\n                            region: region\n                        }\n                    }\n                }\n            }\n\n        })\n    }\n\n    async edit(body: EditScheduleDto, IdSchedule: string) {\n        return this.prisma.schedule.update({\n            where: {\n               id:IdSchedule,\n               \n            },\n            data:{\n                classDigit:body.classDigit,\n                classLetter:body.classLetter,\n                date:body.date,\n            }\n            }\n        )\n    }\n\n    async findAll(region: string, IdSchool: string) {\n        const schedule = this.prisma.schedule.findMany({\n            where: {\n                school: {\n                    region: region,\n                    id: IdSchool\n                }\n            },\n            select: {\n                id: true,\n                scheduleDays: true,\n                classDigit: true,\n                classLetter: true,\n                date: true\n            }\n        })\n        if((await schedule).length===0){\n            throw new HttpException(\"Not found data with this ID\",HttpStatus.NOT_FOUND)\n        }\n        return schedule\n    }\n    async findById(region: string, IdShedule: string){\n        return this.prisma.school.findFirst({\n            where: {\n                region: region,\n                schedule: {\n                    some: {\n                        id: IdShedule\n                    }\n                }\n            },\n            select: {\n                schedule: {\n                    select: {\n                        id: true,\n                        scheduleDays: true,\n                        classDigit: true,\n                        classLetter: true,\n                        date: true\n                    }\n                }\n            }\n        });\n    }\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SchoolController.html":{"url":"controllers/SchoolController.html","title":"controller - SchoolController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SchoolController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/school/school.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                school\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                createSchool\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                editSchool\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        createSchool\n                        \n                    \n                \n            \n            \n                \n                    \n                    createSchool(body: CreateSchoolDto, reqInfo: ReqUserInfo)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA)@Post('create')\n                \n            \n\n            \n                \n                    Defined in src/models/school/school.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                CreateSchoolDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reqInfo\n                                    \n                                                ReqUserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        editSchool\n                        \n                    \n                \n            \n            \n                \n                    \n                    editSchool(SchoolId: string, reqInfo: ReqUserInfo, editSchoolDto: EditSchoolDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA)@Patch('edit/:id')\n                \n            \n\n            \n                \n                    Defined in src/models/school/school.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    SchoolId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reqInfo\n                                    \n                                                ReqUserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    editSchoolDto\n                                    \n                                                EditSchoolDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(reqInfo: ReqUserInfo)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA, Role.MGTMT)@Get('findall')\n                \n            \n\n            \n                \n                    Defined in src/models/school/school.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reqInfo\n                                    \n                                                ReqUserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(SchoolId: string, reqInfo: ReqUserInfo)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA)@Get('findbyid/:id')\n                \n            \n\n            \n                \n                    Defined in src/models/school/school.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    SchoolId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reqInfo\n                                    \n                                                ReqUserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Patch, Post, UseFilters, UseGuards } from '@nestjs/common';\nimport { RolesGuard } from 'src/Auth/roles.guard';\nimport { SchoolService } from './school.service';\nimport { Role } from '@prisma/client';\nimport { Roles } from 'src/Auth/decorators/roles.decorator';\nimport { HttpExceptionFilter } from 'src/common/validation/http-exception.filter';\nimport { EditSchoolDto } from './dto/editSchool.dto';\nimport { CreateSchoolDto } from './dto/createSchool.dto';\nimport { GetSchoolDto } from './dto/getSchool.dto';\nimport { DtoValidationPipe } from './dtoValidation.pipe';\nimport { ReqInfo, ReqUserInfo } from 'src/Auth/decorators/reqinfo.decorator';\n\n\n@Controller('school')\n@UseGuards(RolesGuard)\nexport class SchoolController {\n    constructor(private schoolService: SchoolService) { }\n\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.RD, Role.CA, Role.MGTMT)\n    @Get('findall')\n    async findAll(@ReqInfo() reqInfo: ReqUserInfo): Promise {\n\n        if (reqInfo.role.match(Role.MGTMT)) {\n            return this.schoolService.findAllForMGTM();\n        } else {\n            return this.schoolService.findAll(reqInfo.region);\n        }\n    }\n\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.RD, Role.CA)\n    @Get('findbyid/:id')\n    async findById(@Param('id') SchoolId: string, @ReqInfo() reqInfo: ReqUserInfo): Promise {\n        if (reqInfo.role.match(Role.MGTMT)) {\n            return this.schoolService.findByIdForMGTM(SchoolId);\n        } else {\n            return this.schoolService.findById(SchoolId, reqInfo.region);\n        }\n\n    }\n\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.RD, Role.CA)\n    @Patch('edit/:id')\n    async editSchool(@Param('id') SchoolId: string, @ReqInfo() reqInfo: ReqUserInfo, @Body(DtoValidationPipe) editSchoolDto: EditSchoolDto): Promise {\n        return this.schoolService.editSchool(SchoolId, reqInfo.region, editSchoolDto );\n    }\n\n    @UseFilters(new HttpExceptionFilter())\n    @Roles(Role.RD, Role.CA)\n    @Post('create')\n    async createSchool(@Body(DtoValidationPipe) body: CreateSchoolDto, @ReqInfo() reqInfo: ReqUserInfo): Promise {\n        return this.schoolService.createSchool(reqInfo.region, body);\n    }\n    // Lista wszystkich placówek z danego regionu dla użytkownika z rolą RD lub CA\n    // Konkretna placówka po podaniu jej id (tylko z danego regionu) dla użytkownika z rolą RD lub CA\n    // Lista wszystkich placówek dla użytkownika z rolą MGTMT\n    // Konkretna placówka po podaniu jej id dla użytkownika z rolą MGTMT\n    // edycja placówki dla rd i ca (tylko z danego regionu)\n    // Tworzenie nowej placówki dla rd i ca (tylko z danego regionu)\n}\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SchoolModule.html":{"url":"modules/SchoolModule.html","title":"module - SchoolModule","body":"\n                   \n\n\n\n\n    Modules\n    SchoolModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SchoolModule\n\n\n\ncluster_SchoolModule_providers\n\n\n\n\nSchoolService\n\nSchoolService\n\n\n\nSchoolModule\n\nSchoolModule\n\nSchoolModule -->\n\nSchoolService->SchoolModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/school/school.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SchoolService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SchoolController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        \nimport { Module } from '@nestjs/common';\nimport { SchoolController } from './school.controller';\nimport { SchoolService } from './school.service';\nimport { PrismaModule } from 'prisma/prisma.module';\n\n@Module({\n    imports: [PrismaModule],\n    controllers: [SchoolController],\n    providers: [SchoolService],\n})\nexport class SchoolModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SchoolService.html":{"url":"injectables/SchoolService.html","title":"injectable - SchoolService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SchoolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/school/school.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createSchool\n                            \n                            \n                                    Async\n                                editSchool\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findAllForMGTM\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByIdForMGTM\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/models/school/school.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                    PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createSchool\n                        \n                    \n                \n            \n            \n                \n                    \n                    createSchool(region: string, body: CreateSchoolDto)\n                \n            \n\n\n            \n                \n                    Defined in src/models/school/school.service.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                CreateSchoolDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        editSchool\n                        \n                    \n                \n            \n            \n                \n                    \n                    editSchool(schoolId: string, region: string, body: EditSchoolDto)\n                \n            \n\n\n            \n                \n                    Defined in src/models/school/school.service.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    schoolId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n                                    \n                                                EditSchoolDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(region: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/school/school.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAllForMGTM\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllForMGTM()\n                \n            \n\n\n            \n                \n                    Defined in src/models/school/school.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(schoolId: string, region: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/school/school.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    schoolId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByIdForMGTM\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByIdForMGTM(schoolId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/school/school.service.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    schoolId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from 'prisma/prisma.service';\nimport { EditSchoolDto } from './dto/editSchool.dto';\nimport { CreateSchoolDto } from './dto/createSchool.dto';\nimport { GetSchoolDto } from './dto/getSchool.dto';\n\n\n\n@Injectable()\nexport class SchoolService {\n    constructor(private prisma: PrismaService) { }\n\n\n    async findAll(region: string): Promise {\n\n        return this.prisma.school.findMany({\n            where: {\n                region: region\n            },\n            select: {\n                id: true,\n                name: true,\n                region: true,\n                status: true,\n                city: true,\n                type: true,\n                cooperation: true,\n                phone: true,\n                province: true,\n                email: true,\n                street: true,\n                suiteNumber: true,\n                postCode: true,\n                numberOfClasses: true,\n                comments: true\n            }\n        })\n    }\n\n    async findById(schoolId: string, region: string): Promise {\n\n        return this.prisma.school.findUniqueOrThrow({\n            where: {\n                unique_school_region_id: { region: region, id: schoolId }\n            },\n            select: {\n                id: true,\n                name: true,\n                region: true,\n                status: true,\n                city: true,\n                type: true,\n                cooperation: true,\n                phone: true,\n                province: true,\n                email: true,\n                street: true,\n                suiteNumber: true,\n                postCode: true,\n                numberOfClasses: true,\n                comments: true\n            }\n        })\n\n    }\n\n    async findAllForMGTM(): Promise {\n        return this.prisma.school.findMany({\n            select: {\n                id: true,\n                name: true,\n                region: true,\n                status: true,\n                city: true,\n                type: true,\n                cooperation: true,\n                phone: true,\n                province: true,\n                email: true,\n                street: true,\n                suiteNumber: true,\n                postCode: true,\n                numberOfClasses: true,\n                comments: true\n            }\n        })\n    }\n\n    async findByIdForMGTM(schoolId: string): Promise {\n        return this.prisma.school.findUniqueOrThrow({\n            where: {\n                id: schoolId\n            },\n            select: {\n                id: true,\n                name: true,\n                region: true,\n                status: true,\n                city: true,\n                type: true,\n                cooperation: true,\n                phone: true,\n                province: true,\n                email: true,\n                street: true,\n                suiteNumber: true,\n                postCode: true,\n                numberOfClasses: true,\n                comments: true\n            }\n        })\n    }\n\n    async editSchool(schoolId: string, region: string, body: EditSchoolDto): Promise {\n        return this.prisma.school.update({\n            where: {\n                unique_school_region_id: { region: region, id: schoolId }\n            },\n            data: body\n        })\n    }\n\n    async createSchool(region: string, body: CreateSchoolDto):Promise{\n        let school = this.prisma.school.create({\n            data: {\n                name: body.name,\n                region: region,\n                status: body.status,\n                city: body.city,\n                type: body.type,\n                cooperation: body.cooperation,\n                phone: body.phone,\n                province: body.province,\n                email: body.email,\n                street: body.street,\n                suiteNumber: body.suiteNumber,\n                postCode: body.postCode,\n                numberOfClasses: body.numberOfClasses,\n                comments: body.comments\n            }\n        })\n        return school\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SendFiszkiDto.html":{"url":"classes/SendFiszkiDto.html","title":"class - SendFiszkiDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SendFiszkiDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/predicte/dto/GetClassFromfiszki.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                interviewsId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/predicte/dto/GetClassFromfiszki.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        interviewsId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/predicte/dto/GetClassFromfiszki.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from \"class-validator\"\n\nexport class SendFiszkiDto {\n\n    @IsNotEmpty()\n    id: string\n\n    @IsNotEmpty()\n    interviewsId: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UpperCasePipe.html":{"url":"injectables/UpperCasePipe.html","title":"injectable - UpperCasePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UpperCasePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/user/upperCasePipe.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(req: Request)\n                    \n                \n                        \n                            \n                                Defined in src/models/user/upperCasePipe.pipe.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        transform\n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: any, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/models/user/upperCasePipe.pipe.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Injectable, ArgumentMetadata, Scope, Inject, BadRequestException } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core/router';\nimport { Request } from 'express';\n\n\n\n@Injectable({ scope: Scope.REQUEST })\nexport class UpperCasePipe implements PipeTransform {\n  constructor(@Inject(REQUEST) protected readonly req: Request) {}\n\n  \n  async transform(value: any, metadata: ArgumentMetadata) {\n    \n\n    if (value.region !== undefined) {\n      value.region = value.region.toUpperCase();\n    }\n    if (value.role !== undefined) {\n      value.role = value.role.toUpperCase();\n    }\n    if (value.job !== undefined) {\n      value.job = value.job.toUpperCase();\n    }\n    if (value.name !== undefined) {\n      value.name = value.name.charAt(0).toUpperCase() + value.name.slice(1);\n    }\n    if (value.surname !== undefined) {\n      value.surname = value.surname.charAt(0).toUpperCase() + value.surname.slice(1);\n    }\n    return value;\n\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                createUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                editUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findAllRegion\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findById\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findFiszkiForDate\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findFiszkiForDateInInterview\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findFiszkiForDateInRegion\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                findTotalById\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                selfEdit\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                validation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(createUserDto: CreateUserForMGTMTDto | CreateUserForRdDto, reqInfo: ReqUserInfo)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.MGTMT)@Post()\n                \n            \n\n            \n                \n                    Defined in src/models/user/user.controller.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                            CreateUserForMGTMTDto | CreateUserForRdDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reqInfo\n                                    \n                                                ReqUserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        editUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    editUser(Id: string, editUserDto: EditUserForMGTMTDto | EditUserForRdDto, reqInfo: ReqUserInfo)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA, Role.MGTMT)@Patch('edituser/:id')\n                \n            \n\n            \n                \n                    Defined in src/models/user/user.controller.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    Id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    editUserDto\n                                    \n                                            EditUserForMGTMTDto | EditUserForRdDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reqInfo\n                                    \n                                                ReqUserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(reqInfo: ReqUserInfo)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA, Role.MGTMT)@Get('findall')\n                \n            \n\n            \n                \n                    Defined in src/models/user/user.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reqInfo\n                                    \n                                                ReqUserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        findAllRegion\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAllRegion(Region: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.MGTMT)@Get('region/:region')\n                \n            \n\n            \n                \n                    Defined in src/models/user/user.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    Region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(Id: string, reqInfo: ReqUserInfo)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA, Role.MGTMT)@Get('findbyid/:id')\n                \n            \n\n            \n                \n                    Defined in src/models/user/user.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    Id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reqInfo\n                                    \n                                                ReqUserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        findFiszkiForDate\n                        \n                    \n                \n            \n            \n                \n                    \n                    findFiszkiForDate(idUser: string | null, date: GraphDateDto, reqInfo: ReqUserInfo)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.MGTMT, Role.CA, Role.RD, Role.USER)@Get('fiszkiforday/:IdUser?')\n                \n            \n\n            \n                \n                    Defined in src/models/user/user.controller.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idUser\n                                    \n                                            string | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    date\n                                    \n                                                GraphDateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reqInfo\n                                    \n                                                ReqUserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        findFiszkiForDateInInterview\n                        \n                    \n                \n            \n            \n                \n                    \n                    findFiszkiForDateInInterview(reqInfo: ReqUserInfo, idSchool: string, Date: GraphDateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.MGTMT, Role.CA, Role.RD)@Get('fiszkifordaybyinterview/:IdSchool')\n                \n            \n\n            \n                \n                    Defined in src/models/user/user.controller.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reqInfo\n                                    \n                                                ReqUserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    idSchool\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    Date\n                                    \n                                                GraphDateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        findFiszkiForDateInRegion\n                        \n                    \n                \n            \n            \n                \n                    \n                    findFiszkiForDateInRegion(reqInfo: ReqUserInfo, Date: GraphDateDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.CA, Role.RD)@Get('fiszkifordaybyinterview')\n                \n            \n\n            \n                \n                    Defined in src/models/user/user.controller.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reqInfo\n                                    \n                                                ReqUserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    Date\n                                    \n                                                GraphDateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        findTotalById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findTotalById(reqInfo: ReqUserInfo)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.USER, Role.MGTMT, Role.CA, Role.RD)@Get('total')\n                \n            \n\n            \n                \n                    Defined in src/models/user/user.controller.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reqInfo\n                                    \n                                                ReqUserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        selfEdit\n                        \n                    \n                \n            \n            \n                \n                    \n                    selfEdit(editUserDto: EditSelfDto, reqInfo: ReqUserInfo)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA, Role.MGTMT, Role.USER)@Patch('self')\n                \n            \n\n            \n                \n                    Defined in src/models/user/user.controller.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    editUserDto\n                                    \n                                                EditSelfDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reqInfo\n                                    \n                                                ReqUserInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        validation\n                        \n                    \n                \n            \n            \n                \n                    \n                    validation(ValidationUserDto: ValidationdDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseFilters(new HttpExceptionFilter())@Roles(Role.RD, Role.CA, Role.MGTMT)@Post('validation')\n                \n            \n\n            \n                \n                    Defined in src/models/user/user.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ValidationUserDto\n                                    \n                                                ValidationdDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Patch, Post, Query, UseFilters, UseGuards } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { CreateUserForMGTMTDto, CreateUserForRdDto } from './dto/createUser.dto';\nimport { Role } from '@prisma/client';\nimport { RolesGuard } from './../../Auth/roles.guard';\nimport { EditSelfDto, EditUserForMGTMTDto, EditUserForRdDto } from './dto/editUser.dto';\nimport { GetUserDto } from './dto/GetUser.dto';\nimport { HttpExceptionFilter } from './../../common/validation/http-exception.filter';\nimport { Roles } from './../../Auth/decorators/roles.decorator';\nimport { UpperCasePipe } from './upperCasePipe.pipe';\nimport { ValidationdDto } from './dto/validation.dto';\nimport { DtoValidatorPipe } from './dtoValidator.pipe';\nimport { ReqInfo, ReqUserInfo } from '../../Auth/decorators/reqinfo.decorator';\nimport { DtoValidatorSelfPipe } from './dtoValidatorSelf.pipe';\nimport { GraphDateDto } from './dto/GraphDate.dto';\nimport { getGraphDateDto } from './dto/getGraphDate.dto';\n\n@Controller('user')\n@UseGuards(RolesGuard)\nexport class UserController {\n  constructor(private userService: UserService) { }\n\n  @UseFilters(new HttpExceptionFilter())\n  @Roles(Role.RD, Role.CA, Role.MGTMT)\n  @Post('validation')\n  async validation(@Body() ValidationUserDto: ValidationdDto): Promise {\n    return this.userService.Validation(ValidationUserDto)\n  }\n\n  @UseFilters(new HttpExceptionFilter())\n  @Roles(Role.RD, Role.CA, Role.MGTMT)\n  @Get('findall')\n  async findAll(@ReqInfo() reqInfo: ReqUserInfo): Promise {\n    if (reqInfo.role.match(Role.MGTMT)) {\n      return this.userService.findAll();\n    } else if (reqInfo.role.match(Role.RD) || reqInfo.role.match(Role.CA)) {\n      return this.userService.findByRegion(reqInfo.region, reqInfo.role);\n    }\n  }\n\n  @UseFilters(new HttpExceptionFilter())\n  @Roles(Role.MGTMT)\n  @Get('region/:region')\n  async findAllRegion(@Param('region') Region: string): Promise {\n    return this.userService.findByRegion(Region);\n  }\n\n  @UseFilters(new HttpExceptionFilter())\n  @Roles(Role.RD, Role.CA, Role.MGTMT)\n  @Get('findbyid/:id')\n  async findById(@Param('id') Id: string, @ReqInfo() reqInfo: ReqUserInfo): Promise {\n\n    if (reqInfo.role.match(Role.MGTMT)) {\n      return this.userService.findById(Id);\n    } else {\n      return this.userService.findById(Id, reqInfo.region);\n    }\n  }\n\n  @UseFilters(new HttpExceptionFilter())\n  @Roles(Role.USER, Role.MGTMT, Role.CA, Role.RD)\n  @Get('total')\n  async findTotalById(@ReqInfo() reqInfo: ReqUserInfo): Promise {\n    return this.userService.findTotalById(reqInfo.id);\n  }\n\n\n  @UseFilters(new HttpExceptionFilter())\n  @Roles(Role.RD, Role.MGTMT)\n  @Post()\n  async createUser(@Body(UpperCasePipe, DtoValidatorPipe) createUserDto: CreateUserForMGTMTDto | CreateUserForRdDto, @ReqInfo() reqInfo: ReqUserInfo): Promise {\n    const createUser: CreateUserForMGTMTDto | CreateUserForRdDto = createUserDto;\n    if (reqInfo.role.match(Role.MGTMT)) {\n      return this.userService.CreateUserForMGTMT(createUser as CreateUserForMGTMTDto);\n    } else {\n      return this.userService.CreateUserForRd(createUser as CreateUserForRdDto, reqInfo.region);\n    }\n  }\n\n  @UseFilters(new HttpExceptionFilter())\n  @Roles(Role.RD, Role.CA, Role.MGTMT)\n  @Patch('edituser/:id')\n  async editUser(@Param('id') Id: string, @Body(UpperCasePipe, DtoValidatorPipe) editUserDto: EditUserForMGTMTDto | EditUserForRdDto, @ReqInfo() reqInfo: ReqUserInfo): Promise {\n\n    if (reqInfo.role.match(Role.MGTMT)) {\n      return this.userService.EditUserForMGTMT(editUserDto as EditUserForMGTMTDto, Id)\n    } else {\n      return this.userService.EditUserForRd(editUserDto as EditUserForRdDto, Id, reqInfo.region, reqInfo.role)\n    }\n  }\n  @UseFilters(new HttpExceptionFilter())\n  @Roles(Role.RD, Role.CA, Role.MGTMT, Role.USER)\n  @Patch('self')\n  async selfEdit(@Body(UpperCasePipe, DtoValidatorSelfPipe) editUserDto: EditSelfDto, @ReqInfo() reqInfo: ReqUserInfo): Promise {\n    return this.userService.EditSelf(editUserDto, reqInfo.id)\n  }\n\n  // podział na role ?\n  @UseFilters(new HttpExceptionFilter())\n  @Roles(Role.MGTMT, Role.CA, Role.RD, Role.USER)\n  @Get('fiszkiforday/:IdUser?')\n  async findFiszkiForDate(\n    @Param('IdUser') idUser: string | null,\n    @Query() date: GraphDateDto,\n    @ReqInfo() reqInfo: ReqUserInfo\n  ): Promise {\n    const effectiveIdUser = reqInfo.role.match(Role.USER) || !idUser ? reqInfo.id : idUser;\n    return this.userService.findFiszkiForDateByUser(effectiveIdUser, date);\n  }\n\n  @UseFilters(new HttpExceptionFilter())\n  @Roles(Role.MGTMT, Role.CA, Role.RD)\n  @Get('fiszkifordaybyinterview/:IdSchool')\n  async findFiszkiForDateInInterview(@ReqInfo() reqInfo: ReqUserInfo, @Param('IdSchool') idSchool: string, @Query() Date: GraphDateDto) {\n    console.log(Date);\n    return this.userService.findFiszkiForDateInInterview(idSchool, Date, reqInfo.region);\n  }\n  @UseFilters(new HttpExceptionFilter())\n  @Roles(Role.CA, Role.RD)\n  @Get('fiszkifordaybyinterview')\n  async findFiszkiForDateInRegion(@ReqInfo() reqInfo: ReqUserInfo, @Query() Date: GraphDateDto) {\n   \n    return this.userService.findFiszkiForDateInRegion(reqInfo.region, Date);\n  }\n}\n\n// Dostaje: user i przedział czasowy\n// Daje : ilość fiszek i (dzień)\n\n// Dostaje:Id i przedział czasowy\n// Daje : Wywiadówka i ilość fiszek\n\n// Dostaje:Region  i przedział czasowy(zawsze rok)\n// Daje : Szkoła i ilość fiszek w szkole\n\n\n// Profil  - Dostaje - UżytkownikId zawsze rok przedział czasowy\n// Szkoła i ilośc zebranych fiszek pre user\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserModule_exports\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nUserModule\n\nUserModule\n\nPrismaService  -->\n\nUserModule->PrismaService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { UserService } from './user.service';\nimport { UserController } from './user.controller';\nimport { Global, Module } from '@nestjs/common';\nimport { PrismaService } from './../../../prisma/prisma.service';\nimport { APP_GUARD } from '@nestjs/core';\nimport { RolesGuard } from './../../Auth/roles.guard';\n\n\n@Global()\n@Module({\n    imports: [],\n    controllers: [\n        UserController],\n    providers: [\n     \n       UserService, PrismaService,\n        {\n            provide: APP_GUARD,\n            useClass: RolesGuard\n       \n        },\n        \n    ],\n    exports: [PrismaService],\n})\n\nexport class UserModule { \n }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                CreateUserForMGTMT\n                            \n                            \n                                    Async\n                                CreateUserForRd\n                            \n                            \n                                    Async\n                                EditSelf\n                            \n                            \n                                    Async\n                                EditUserForMGTMT\n                            \n                            \n                                    Async\n                                EditUserForRd\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                findByRegion\n                            \n                            \n                                    Async\n                                findFiszkiForDateByUser\n                            \n                            \n                                    Async\n                                findFiszkiForDateInInterview\n                            \n                            \n                                    Async\n                                findFiszkiForDateInRegion\n                            \n                            \n                                    Async\n                                findTotalById\n                            \n                            \n                                    Async\n                                Validation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/models/user/user.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                    PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        CreateUserForMGTMT\n                        \n                    \n                \n            \n            \n                \n                    \n                    CreateUserForMGTMT(User: CreateUserForMGTMTDto)\n                \n            \n\n\n            \n                \n                    Defined in src/models/user/user.service.ts:217\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    User\n                                    \n                                                CreateUserForMGTMTDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        CreateUserForRd\n                        \n                    \n                \n            \n            \n                \n                    \n                    CreateUserForRd(User: CreateUserForRdDto, region: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/user/user.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    User\n                                    \n                                                CreateUserForRdDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        EditSelf\n                        \n                    \n                \n            \n            \n                \n                    \n                    EditSelf(editSelfDto: EditSelfDto, Id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/user/user.service.ts:264\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    editSelfDto\n                                    \n                                                EditSelfDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    Id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        EditUserForMGTMT\n                        \n                    \n                \n            \n            \n                \n                    \n                    EditUserForMGTMT(editUserForMGTMTDto: EditUserForMGTMTDto, Id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/user/user.service.ts:255\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    editUserForMGTMTDto\n                                    \n                                                EditUserForMGTMTDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    Id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        EditUserForRd\n                        \n                    \n                \n            \n            \n                \n                    \n                    EditUserForRd(editUserForRdDto: EditUserForRdDto, Id: string, region: string, Role: Role)\n                \n            \n\n\n            \n                \n                    Defined in src/models/user/user.service.ts:235\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    editUserForRdDto\n                                    \n                                                EditUserForRdDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    Id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    Role\n                                    \n                                            Role\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/models/user/user.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(Id: string, region?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/user/user.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    Id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByRegion\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByRegion(Region: string, Role?: Role)\n                \n            \n\n\n            \n                \n                    Defined in src/models/user/user.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    Region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    Role\n                                    \n                                            Role\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findFiszkiForDateByUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findFiszkiForDateByUser(userId: string, Date: GraphDateDto)\n                \n            \n\n\n            \n                \n                    Defined in src/models/user/user.service.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    Date\n                                    \n                                                GraphDateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findFiszkiForDateInInterview\n                        \n                    \n                \n            \n            \n                \n                    \n                    findFiszkiForDateInInterview(schoolId: string, Date: GraphDateDto, region: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/user/user.service.ts:156\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    schoolId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    Date\n                                    \n                                                GraphDateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findFiszkiForDateInRegion\n                        \n                    \n                \n            \n            \n                \n                    \n                    findFiszkiForDateInRegion(region: string, Date: GraphDateDto)\n                \n            \n\n\n            \n                \n                    Defined in src/models/user/user.service.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    region\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    Date\n                                    \n                                                GraphDateDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findTotalById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findTotalById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/user/user.service.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        Validation\n                        \n                    \n                \n            \n            \n                \n                    \n                    Validation(ValidationUserDto: ValidationdDto)\n                \n            \n\n\n            \n                \n                    Defined in src/models/user/user.service.ts:273\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ValidationUserDto\n                                    \n                                                ValidationdDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaService } from '../../../prisma/prisma.service'\nimport { CreateUserForMGTMTDto, CreateUserForRdDto } from './dto/createUser.dto';\nimport { EditSelfDto, EditUserForMGTMTDto, EditUserForRdDto } from './dto/editUser.dto';\nimport { HashPassword } from './../../common/helpers/hashPass';\nimport { Role } from '@prisma/client';\nimport { ValidationdDto } from './dto/validation.dto';\nimport { GetUserDto } from './dto/GetUser.dto';\nimport { RoleValue } from './../../common/helpers/roleValue';\nimport { GraphDateDto } from './dto/GraphDate.dto';\nimport { getGraphDateDto } from './dto/getGraphDate.dto';\n\n\n//@Injectable({ scope: Scope.REQUEST })\n@Injectable()\nexport class UserService {\n  constructor(private prisma: PrismaService) { }\n\n  async findAll(): Promise {\n    return this.prisma.user.findMany({\n      select: {\n        name: true,\n        surname: true,\n        email: true,\n        region: true,\n        role: true,\n        phone: true,\n        job: true,\n        active: true,\n        totalFiszki: true,\n        id: true,\n        isFirstLogin: true\n      }\n    });\n\n  }\n\n  async findByRegion(Region: string, Role?: Role): Promise {\n    const role = await RoleValue(Role)\n    const roles = role?.map(role => role.toString() as Role);\n\n    return this.prisma.user.findMany({\n      where: {\n        region: Region.toUpperCase(),\n        role: {\n          in: roles\n        }\n      }, select: {\n        name: true,\n        surname: true,\n        email: true,\n        region: true,\n        phone: true,\n        role: true,\n        job: true,\n        active: true,\n        totalFiszki: true,\n        isFirstLogin: true,\n        id: true\n      }\n    });\n\n\n  }\n\n  async findById(Id: string, region?: string): Promise {\n\n\n    const user = this.prisma.user.findUniqueOrThrow(\n      {\n        where: {\n          unique_id_region: {\n            id: Id,\n            region: region\n          },\n\n        }, select: {\n          name: true,\n          surname: true,\n          email: true,\n          region: true,\n          phone: true,\n          role: true,\n          job: true,\n          active: true,\n          totalFiszki: true,\n          id: true,\n          isFirstLogin: true\n        }\n      }\n    );\n    return user\n  }\n\n\n  async CreateUserForRd(User: CreateUserForRdDto, region: string): Promise {\n\n    const user = this.prisma.user.create({\n      data: {\n        name: User.name,\n        password: await HashPassword(`${User.name[0].toUpperCase()}${User.surname[0].toLowerCase()}${User.phone.substring(0, 8)}`),\n        surname: User.surname,\n        email: User.email,\n        phone: User.phone,\n        region: region.toUpperCase(),\n        role: User.role,\n        job: User.job,\n        active: true,\n      }\n    })\n    return user\n  }\n  async findTotalById(id: string): Promise {\n    const user = await this.prisma.user.findUniqueOrThrow({\n      where: {\n        id: id\n      },\n      select: {\n        fiszka: true\n      }\n\n    })\n    return user.fiszka.length\n  }\n\n  async findFiszkiForDateByUser(userId: string, Date: GraphDateDto):Promise {\n\n\n    const FiszkaPerDay = this.prisma.interviews.findMany({\n      where: {\n        userInterviews: {\n          some: {\n            userId: userId\n          }\n        },\n        date: {\n          gte: Date.startDate,\n          lte: Date.endDate\n        }\n      },\n      select: {\n        date: true,\n        _count: {\n          select: {\n            fiszki: true\n          }\n        }\n      }\n    })\n    const mappedArray = (await FiszkaPerDay).map(item => {\n      return { date: item.date, count: item._count.fiszki };\n  });\n    console.log(mappedArray)\n    return (mappedArray)\n  }\n  async findFiszkiForDateInInterview(schoolId: string, Date: GraphDateDto, region: string) {\n\n\n    const InterviewPerDay = this.prisma.interviews.findMany({\n      where: {\n        school: {\n          id: schoolId,\n          region: region\n        },\n        date: {\n          gte: Date.startDate,\n          lte: Date.endDate\n        }\n      },\n      select: {\n        date: true,\n        _count: {\n          select: {\n            fiszki: true\n          }\n        }\n      }\n    })\n    const mappedArray = (await InterviewPerDay).map(item => {\n      return { date: item.date, count: item._count.fiszki };\n  });\n    console.log(await mappedArray)\n    return (mappedArray)\n  }\n  async findFiszkiForDateInRegion(region: string, Date: GraphDateDto) {\n\n\n    const response = this.prisma.school.findMany({\n      where:{\n        region:region,\n        interviews:{\n          some:{\n            date: {\n              gte: Date.startDate,\n              lte: Date.endDate\n            }\n          }\n        }\n      },\n      select: {\n        name: true,\n        interviews:{\n          select:{\n            interviewTotalFiszki:true\n          }\n        }\n      }\n    });\n    const schoolNameAndTotalFiszki = (await response).map(school => ({\n      name: school.name,\n      totalFiszki: school.interviews.reduce((sum, interview) => sum + interview.interviewTotalFiszki, 0)\n    }));\n  \n    return (schoolNameAndTotalFiszki)\n  }\n \n  async CreateUserForMGTMT(User: CreateUserForMGTMTDto): Promise {\n\n    const user = this.prisma.user.create({\n      data: {\n        name: User.name,\n        password: await HashPassword(`${User.name[0].toUpperCase()}${User.surname[0].toLowerCase()}${User.phone.substring(0, 8)}`),\n        surname: User.surname,\n        email: User.email,\n        phone: User.phone,\n        region: User.region.toUpperCase(),\n        role: User.role,\n        job: User.job,\n        active: true\n      }\n    })\n    return user\n  }\n\n  async EditUserForRd(editUserForRdDto: EditUserForRdDto, Id: string, region: string, Role: Role): Promise {\n    const role = await RoleValue(Role)\n    const roles = role?.map(role => role.toString() as Role);\n    //zmienione z updatemany -do tesu\n    const user = this.prisma.user.update(\n      {\n        where: {\n          id: Id,\n          region: region,\n          role: {\n            in: roles\n          }\n        },\n        data: editUserForRdDto,\n      }\n    );\n    return user\n\n  }\n\n  async EditUserForMGTMT(editUserForMGTMTDto: EditUserForMGTMTDto, Id: string): Promise {\n\n    return this.prisma.user.update({\n      where: {\n        id: Id\n      },\n      data: editUserForMGTMTDto,\n    });\n  }\n  async EditSelf(editSelfDto: EditSelfDto, Id: string): Promise {\n\n    return this.prisma.user.update({\n      where: {\n        id: Id\n      },\n      data: editSelfDto,\n    });\n  }\n  async Validation(ValidationUserDto: ValidationdDto): Promise {\n    if (ValidationUserDto.email !== undefined) {\n      const user = await this.prisma.user.findUnique({\n        where: {\n          email: ValidationUserDto.email\n        },\n        select: {\n          id: true\n        }\n      })\n      if (!user) {\n        return ({ InDatabase: false })\n      } else {\n        return ({ InDatabase: true })\n      }\n    }\n    if (ValidationUserDto.phone !== undefined) {\n      const user = await this.prisma.user.findUnique({\n        where: {\n          phone: ValidationUserDto.phone\n        },\n        select: {\n          id: true\n        }\n      })\n      if (!user) {\n        return ({ InDatabase: false })\n      } else {\n        return ({ InDatabase: true })\n      }\n    }\n\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationdDto.html":{"url":"classes/ValidationdDto.html","title":"class - ValidationdDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationdDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/user/dto/validation.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/validation.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsPhoneNumber('PL')@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/validation.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail,  IsOptional, IsPhoneNumber } from \"class-validator\"\n\nexport class ValidationdDto {\n\n    @IsEmail()\n    @IsOptional()\n    email: string\n\n    @IsPhoneNumber(\"PL\")\n    @IsOptional()\n    phone: string\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/Auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/Auth/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/Auth/auth.guard.ts\n            \n            variable\n            jwtSecretKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/Auth/auth.module.ts\n            \n            variable\n            jwtSecretKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/Auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/Auth/constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/Auth/decorators/match.decorator.ts\n            \n            class\n            MatchConstraint\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/Auth/decorators/match.decorator.ts\n            \n            function\n            Match\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/Auth/decorators/public.decorator.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/Auth/decorators/public.decorator.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/Auth/decorators/reqinfo.decorator.ts\n            \n            interface\n            ReqUserInfo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/Auth/decorators/reqinfo.decorator.ts\n            \n            variable\n            ReqInfo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/Auth/decorators/roles.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/Auth/decorators/roles.decorator.ts\n            \n            variable\n            ROLES_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/Auth/dto/authRefreshToken.dto.ts\n            \n            class\n            AccessTokenDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/Auth/dto/authUser.dto.ts\n            \n            class\n            LoginUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/Auth/dto/changePassword.dto.ts\n            \n            class\n            ChangePasswordDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/Auth/dto/decode.dto.ts\n            \n            class\n            DecodeDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/Auth/roles.guard.ts\n            \n            guard\n            RolesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/helpers/ClassValidator.ts\n            \n            function\n            ClassValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/helpers/CutErrorMsg.ts\n            \n            function\n            cutTextFromUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/helpers/PredicteSheduleInSchool.ts\n            \n            function\n            PredicteSheduleSchool\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/helpers/hashPass.ts\n            \n            function\n            HashPassword\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/helpers/roleValue.ts\n            \n            function\n            RoleValue\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/helpers/roleValue.ts\n            \n            variable\n            AllRole\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/helpers/translateError.ts\n            \n            function\n            translateErrorMessages\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/logger.middleware.ts\n            \n            injectable\n            LoggerMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/validation/AllExceptionsFilter.filter.ts\n            \n            class\n            AllExceptionsFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/validation/NotFoundErrorFilter.filter.ts\n            \n            class\n            NotFoundErrorFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/validation/NotFoundException.filter.ts\n            \n            class\n            NotFoundExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/validation/PrismaClientValidationError.filter.ts\n            \n            class\n            PrismaValidationFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/validation/PrismaOtherError.filter.ts\n            \n            class\n            PrismaOtherFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/validation/http-exception.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/models/callUserHistory/calluserhistory.controller.ts\n            \n            controller\n            CallUserHistoryController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/models/callUserHistory/calluserhistory.service.ts\n            \n            injectable\n            CallUserHistoryService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/models/callUserHistory/dto/CreateCallUser.dto.ts\n            \n            class\n            CreateCallUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/models/callUserHistory/dto/GetCallUserHistory.dto.ts\n            \n            class\n            GetCallUserHistoryDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/models/contact/contact.controller.ts\n            \n            controller\n            ContactController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/models/contact/contact.service.ts\n            \n            injectable\n            ContactService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/models/contact/dto/createContact.dto.ts\n            \n            class\n            CreateContactDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/models/contact/dto/editContact.dto.ts\n            \n            class\n            EditContactDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/models/contact/dto/getContact.dto.ts\n            \n            class\n            GetContactDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/models/director/director.controller.ts\n            \n            controller\n            DirectorController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/models/director/director.service.ts\n            \n            injectable\n            DirectorService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/models/director/dto/createDirector.dto.ts\n            \n            class\n            CreateDirectorDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/models/director/dto/editDirector.dto.ts\n            \n            class\n            EditDirectorDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/models/director/dto/getDirector.dto.ts\n            \n            class\n            GetDirectorDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/models/fiszka/dto/CreateFiszka.dto.ts\n            \n            class\n            CreateFiszkaDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/models/fiszka/dto/EditFiszka.dto.ts\n            \n            class\n            EditFiszkaDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/models/fiszka/dto/GetFiszka.dto.ts\n            \n            class\n            GetFiszkaDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/models/fiszka/dto/addGroup.dto.ts\n            \n            class\n            AddgroupDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/models/fiszka/fiszka.controller.ts\n            \n            controller\n            FiszkaController\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/models/fiszka/fiszka.service.ts\n            \n            injectable\n            FiszkaService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/models/fiszka/options.pipe.ts\n            \n            injectable\n            OptionsPipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/models/group/dto/createGroup.dto.ts\n            \n            class\n            CreateGroupDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/models/group/dto/editGroup.dto.ts\n            \n            class\n            EditGroupDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/models/group/dto/getGroup.dto.ts\n            \n            class\n            GetGroupDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/models/group/group.controller.ts\n            \n            controller\n            GroupController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/models/group/group.service.ts\n            \n            injectable\n            GroupService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/models/interviews/dto/GetInterViews.dto.ts\n            \n            class\n            GetInterViewsDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/models/interviews/dto/addUserInterView.dto.ts\n            \n            class\n            AddUserInterViewDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/models/interviews/dto/createInterView.dto.ts\n            \n            class\n            CreateInterViewDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/models/interviews/dto/editInterView.dto.ts\n            \n            class\n            EditInterViewDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/models/interviews/dto/getFindById.dto.ts\n            \n            class\n            GetFindByIdDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/models/interviews/dto/getUserInterView.dto.ts\n            \n            class\n            GetUserInterViewDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/models/interviews/dto/removeUserInterview.dto.ts\n            \n            class\n            RemoveUserInterViewDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/models/interviews/interviews.controller.ts\n            \n            controller\n            InterviewsController\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/models/interviews/interviews.service.ts\n            \n            injectable\n            InterviewsService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/models/log/logger.controller.ts\n            \n            controller\n            LoggerController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/models/log/logger.service.ts\n            \n            injectable\n            LoggerService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/models/personContact/contactPerson.controller.ts\n            \n            controller\n            ContactPersonController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/models/personContact/contactPerson.service.ts\n            \n            injectable\n            ContactPersonService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/models/personContact/dto/createContactPerson.dto.ts\n            \n            class\n            CreateContactPersontDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/models/personContact/dto/editContactPerson.dto.ts\n            \n            class\n            EditContactPersontDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/models/personContact/dto/getContactPerson.dto.ts\n            \n            class\n            GetContactPersontDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/models/predicte/dto/GetClassFromfiszki.dto.ts\n            \n            class\n            SendFiszkiDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/models/predicte/predicte.controller.ts\n            \n            controller\n            PredicteController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/models/predicte/predicte.service.ts\n            \n            injectable\n            PredicteService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/models/rentalCost/dto/createRentalCost.dto.ts\n            \n            class\n            CreateRentalCostDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/models/rentalCost/dto/editRentalCost.dto.ts\n            \n            class\n            EditRentalCostDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/models/rentalCost/dto/getRentalCost.dto.ts\n            \n            class\n            GetRentalCostDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/models/rentalCost/rentalcost.controller.ts\n            \n            controller\n            RentalCostController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/models/rentalCost/rentalcost.service.ts\n            \n            injectable\n            RentalCostService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/models/schedule/dto/createSchedule.dto.ts\n            \n            class\n            CreateScheduleDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/models/schedule/dto/editSchedule.dto.ts\n            \n            class\n            EditScheduleDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/models/schedule/dto/getSchedule.dto.ts\n            \n            class\n            GetScheduleDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/models/schedule/schedule.controller.ts\n            \n            controller\n            ScheduleController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/models/schedule/schedule.service.ts\n            \n            injectable\n            ScheduleService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/models/scheduleDays/dto/createSheduleDays.dto.ts\n            \n            class\n            CreateScheduleDaysDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/models/scheduleDays/dto/editSheduleDays.dto.ts\n            \n            class\n            EditScheduleDaysDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/models/scheduleDays/scheduledays.controller.ts\n            \n            controller\n            ScheduleDaysController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/models/scheduleDays/scheduledays.service.ts\n            \n            injectable\n            ScheduleDaysService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/models/school/dto/createSchool.dto.ts\n            \n            class\n            CreateSchoolDto\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/models/school/dto/editSchool.dto.ts\n            \n            class\n            EditSchoolDto\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/models/school/dto/getSchool.dto.ts\n            \n            class\n            GetSchoolDto\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/models/school/dtoValidation.pipe.ts\n            \n            injectable\n            DtoValidationPipe\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/models/school/school.controller.ts\n            \n            controller\n            SchoolController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/models/school/school.service.ts\n            \n            injectable\n            SchoolService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/models/user/dto/GetUser.dto.ts\n            \n            class\n            GetUserDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/models/user/dto/GraphDate.dto.ts\n            \n            class\n            GraphDateDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/models/user/dto/createUser.dto.ts\n            \n            class\n            CreateUserForMGTMTDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/models/user/dto/createUser.dto.ts\n            \n            class\n            CreateUserForRdDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/models/user/dto/editUser.dto.ts\n            \n            class\n            EditSelfDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/models/user/dto/editUser.dto.ts\n            \n            class\n            EditUserForMGTMTDto\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/models/user/dto/editUser.dto.ts\n            \n            class\n            EditUserForRdDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/models/user/dto/getGraphDate.dto.ts\n            \n            class\n            getGraphDateDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/models/user/dto/validation.dto.ts\n            \n            class\n            ValidationdDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/models/user/dtoValidator.pipe.ts\n            \n            injectable\n            DtoValidatorPipe\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/models/user/dtoValidatorSelf.pipe.ts\n            \n            injectable\n            DtoValidatorSelfPipe\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/models/user/upperCasePipe.pipe.ts\n            \n            injectable\n            UpperCasePipe\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/models/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/models/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/15)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.2.6\n        \n            @nestjs/config : ^3.1.1\n        \n            @nestjs/core : ^10.2.6\n        \n            @nestjs/jwt : ^10.1.1\n        \n            @nestjs/platform-express : ^10.2.6\n        \n            @nestjs/schedule : ^4.0.0\n        \n            @prisma/client : ^5.6.0\n        \n            @types/bcrypt : ^5.0.0\n        \n            bcrypt : ^5.1.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            express : ^4.18.2\n        \n            prisma-dbml-generator : ^0.9.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            roleValue   (src/.../roleValue.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/helpers/roleValue.ts\n    \n        \n            \n                \n                    \n                        \n                        roleValue\n                    \n                \n                        \n                            \n                                 MGTMT\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 RD\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 CA\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            ClassValidator   (src/.../ClassValidator.ts)\n                        \n                        \n                            cutTextFromUnique   (src/.../CutErrorMsg.ts)\n                        \n                        \n                            HashPassword   (src/.../hashPass.ts)\n                        \n                        \n                            Match   (src/.../match.decorator.ts)\n                        \n                        \n                            PredicteSheduleSchool   (src/.../PredicteSheduleInSchool.ts)\n                        \n                        \n                            RoleValue   (src/.../roleValue.ts)\n                        \n                        \n                            translateErrorMessages   (src/.../translateError.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/common/helpers/ClassValidator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ClassValidator\n                        \n                    \n                \n            \n            \n                \nClassValidator(obj: any, dto: any)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/common/helpers/CutErrorMsg.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        cutTextFromUnique\n                        \n                    \n                \n            \n            \n                \ncutTextFromUnique(text: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/common/helpers/hashPass.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        HashPassword\n                        \n                    \n                \n            \n            \n                \nHashPassword(pass: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/Auth/decorators/match.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Match\n                        \n                    \n                \n            \n            \n                \nMatch(property: string, validationOptions?: ValidationOptions)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    property\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    validationOptions\n                                    \n                                            ValidationOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/common/helpers/PredicteSheduleInSchool.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PredicteSheduleSchool\n                        \n                    \n                \n            \n            \n                \nPredicteSheduleSchool()\n                \n            \n\n\n\n\n        \n    \n    src/common/helpers/roleValue.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RoleValue\n                        \n                    \n                \n            \n            \n                \nRoleValue(YourRole: Role)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    YourRole\n                                    \n                                            Role\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/common/helpers/translateError.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        translateErrorMessages\n                        \n                    \n                \n            \n            \n                \ntranslateErrorMessages(errorObject)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorObject\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/getGraphDateDto.html":{"url":"classes/getGraphDateDto.html","title":"class - getGraphDateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  getGraphDateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/user/dto/getGraphDate.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                count\n                            \n                            \n                                    \n                                date\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/getGraphDate.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/models/user/dto/getGraphDate.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from \"class-validator\"\n\nexport class getGraphDateDto {\n\n    \n    @IsNotEmpty()\n    date:Date\n\n    \n    @IsNotEmpty()\n    count:number\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CallUserHistoryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContactModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ContactPersonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DirectorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FiszkaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GroupModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InterviewsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoggerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PredicteModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RentalCostModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ScheduleDaysModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ScheduleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SchoolModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CallUserHistoryModule\n\n\n\ncluster_CallUserHistoryModule_providers\n\n\n\ncluster_ContactModule\n\n\n\ncluster_ContactModule_providers\n\n\n\ncluster_ContactPersonModule\n\n\n\ncluster_ContactPersonModule_providers\n\n\n\ncluster_DirectorModule\n\n\n\ncluster_DirectorModule_providers\n\n\n\ncluster_FiszkaModule\n\n\n\ncluster_FiszkaModule_providers\n\n\n\ncluster_GroupModule\n\n\n\ncluster_GroupModule_providers\n\n\n\ncluster_InterviewsModule\n\n\n\ncluster_InterviewsModule_providers\n\n\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_providers\n\n\n\ncluster_PredicteModule\n\n\n\ncluster_PredicteModule_providers\n\n\n\ncluster_RentalCostModule\n\n\n\ncluster_RentalCostModule_providers\n\n\n\ncluster_ScheduleDaysModule\n\n\n\ncluster_ScheduleDaysModule_providers\n\n\n\ncluster_ScheduleModule\n\n\n\ncluster_ScheduleModule_providers\n\n\n\ncluster_SchoolModule\n\n\n\ncluster_SchoolModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCallUserHistoryModule\n\nCallUserHistoryModule\n\nAppModule -->\n\nCallUserHistoryModule->AppModule\n\n\n\n\n\nContactModule\n\nContactModule\n\nAppModule -->\n\nContactModule->AppModule\n\n\n\n\n\nContactPersonModule\n\nContactPersonModule\n\nAppModule -->\n\nContactPersonModule->AppModule\n\n\n\n\n\nDirectorModule\n\nDirectorModule\n\nAppModule -->\n\nDirectorModule->AppModule\n\n\n\n\n\nFiszkaModule\n\nFiszkaModule\n\nAppModule -->\n\nFiszkaModule->AppModule\n\n\n\n\n\nGroupModule\n\nGroupModule\n\nGroupModule -->\n\nGroupModule->GroupModule\n\n\n\nAppModule -->\n\nGroupModule->AppModule\n\n\n\n\n\nInterviewsModule\n\nInterviewsModule\n\nAppModule -->\n\nInterviewsModule->AppModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nAppModule -->\n\nLoggerModule->AppModule\n\n\n\n\n\nRentalCostModule\n\nRentalCostModule\n\nAppModule -->\n\nRentalCostModule->AppModule\n\n\n\n\n\nScheduleDaysModule\n\nScheduleDaysModule\n\nAppModule -->\n\nScheduleDaysModule->AppModule\n\n\n\n\n\nScheduleModule\n\nScheduleModule\n\nAppModule -->\n\nScheduleModule->AppModule\n\n\n\n\n\nSchoolModule\n\nSchoolModule\n\nAppModule -->\n\nSchoolModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAuthModule -->\n\nUserModule->AuthModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nUserModule->PrismaService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nCallUserHistoryService\n\nCallUserHistoryService\n\nCallUserHistoryModule -->\n\nCallUserHistoryService->CallUserHistoryModule\n\n\n\n\n\nContactService\n\nContactService\n\nContactModule -->\n\nContactService->ContactModule\n\n\n\n\n\nContactPersonService\n\nContactPersonService\n\nContactPersonModule -->\n\nContactPersonService->ContactPersonModule\n\n\n\n\n\nDirectorService\n\nDirectorService\n\nDirectorModule -->\n\nDirectorService->DirectorModule\n\n\n\n\n\nFiszkaService\n\nFiszkaService\n\nFiszkaModule -->\n\nFiszkaService->FiszkaModule\n\n\n\n\n\nGroupService\n\nGroupService\n\nGroupModule -->\n\nGroupService->GroupModule\n\n\n\n\n\nInterviewsService\n\nInterviewsService\n\nInterviewsModule -->\n\nInterviewsService->InterviewsModule\n\n\n\n\n\nUserService\n\nUserService\n\nInterviewsModule -->\n\nUserService->InterviewsModule\n\n\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\nLoggerService\n\nLoggerService\n\nLoggerModule -->\n\nLoggerService->LoggerModule\n\n\n\n\n\nPredicteService\n\nPredicteService\n\n\n\nPredicteModule\n\nPredicteModule\n\nPredicteModule -->\n\nPredicteService->PredicteModule\n\n\n\n\n\nRentalCostService\n\nRentalCostService\n\nRentalCostModule -->\n\nRentalCostService->RentalCostModule\n\n\n\n\n\nScheduleDaysService\n\nScheduleDaysService\n\nScheduleDaysModule -->\n\nScheduleDaysService->ScheduleDaysModule\n\n\n\n\n\nScheduleService\n\nScheduleService\n\nScheduleModule -->\n\nScheduleService->ScheduleModule\n\n\n\n\n\nSchoolService\n\nSchoolService\n\nSchoolModule -->\n\nSchoolService->SchoolModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        16 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    16 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    22 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    57 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AllRole   (src/.../roleValue.ts)\n                        \n                        \n                            IS_PUBLIC_KEY   (src/.../public.decorator.ts)\n                        \n                        \n                            jwtConstants   (src/.../constants.ts)\n                        \n                        \n                            jwtSecretKey   (src/.../auth.guard.ts)\n                        \n                        \n                            jwtSecretKey   (src/.../auth.module.ts)\n                        \n                        \n                            Public   (src/.../public.decorator.ts)\n                        \n                        \n                            ReqInfo   (src/.../reqinfo.decorator.ts)\n                        \n                        \n                            Roles   (src/.../roles.decorator.ts)\n                        \n                        \n                            ROLES_KEY   (src/.../roles.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/helpers/roleValue.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AllRole\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.keys(roleValue) as Role[]\n                    \n                \n\n\n        \n    \n\n    src/Auth/decorators/public.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n\n    src/Auth/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    secret:\n      'secret',\n  }\n                    \n                \n\n\n        \n    \n\n    src/Auth/auth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtSecretKey\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.JWT_SECRET\n                    \n                \n\n\n        \n    \n\n    src/Auth/auth.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtSecretKey\n                        \n                    \n                \n            \n                \n                    \n                        Default value : process.env.JWT_SECRET\n                    \n                \n\n\n        \n    \n\n    src/Auth/decorators/reqinfo.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ReqInfo\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: unknown, ctx: ExecutionContext): ReqUserInfo => {\n    const request = ctx.switchToHttp().getRequest();\n    return {\n      id: request.user.id,\n      role: request.user.role,\n      region: request.user.region,\n      email:request.user.email\n    };\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/Auth/decorators/roles.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...roles: Role[]) => SetMetadata(ROLES_KEY, roles)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROLES_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'role'\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
